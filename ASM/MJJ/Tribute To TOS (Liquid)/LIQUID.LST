' =====================================================
' LIQUID : Tobe 2004
' =====================================================
'
INLINE old_pal%,32
mem%=FRE()
res|=XBIOS(4)
xb%=XBIOS(2)
super%=0
old_vbl%=0
my_vbl%=0
'
INLINE zik%,30458
INLINE logo%,32066
INLINE font%,32066
INLINE base%,9600
INLINE bow%,3600
INLINE txt%,2414
INLINE table%,32
'
RESERVE FRE()-200000
'
ecr1%=xb%
becr2%=MALLOC(ADD(MUL(250,160),256))
ecr2%=AND(ADD(becr2%,256),&HFFFFFF00)
one%=xb%
two%=MALLOC(19200)
three%=MALLOC(19200)
'
play%=ADD(zik%,8)
stop%=ADD(zik%,4)
'
src_s%=OR(&H20000,MUL(32,198))
src%=ADD(logo%,34)
'
pos%=0
upd%=0
scroll%=0
'
psetup
'
pinit
'
int1%=LONG{&HFFFA06}
int2%=LONG{&HFFFA0A}
int3%=LONG{&HFFFA0E}
int4%=LONG{&HFFFA12}
'
oc&=7
nichon&=0
flip%=0
'
nich%=ADD(&HFF8240,20)
zyeu%=ADD(&HFF8240,30)
'
DO
  pupdate
  LONG{&H200}=ecr2%
  pvblwait
  '
  LONG{&HFFFA06}=AND(LONG{&HFFFA06},&HFFDEFF8F)
  LONG{&HFFFA0A}=AND(LONG{&HFFFA0A},&HFFDEFF8F)
  LONG{&HFFFA0E}=AND(LONG{&HFFFA0E},&HFFDEFF8F)
  LONG{&HFFFA12}=AND(LONG{&HFFFA12},&HFFDEFF8F)
  '
  pscrolltext
  pinidraw
  '
  IF nichon&
    BYTE{&HFF8800}=8
    c0&=SUB(7,SHR(AND(BYTE{&HFF8800},7),1))
    ca&=MIN(c0&,oc&)
    oc&=ca&
    cb&=OR(SHL(ca&,4),ca&)
    IF oc&<7
      INC oc&
    ENDIF
    CARD{nich%}=OR(&HF00,cb&)
  ELSE
    CARD{nich%}=&H777
  ENDIF
  '
  INC flip%
  IF AND(flip%,1)
    CARD{zyeu%}=ADD(CARD{zyeu%},&H88)
  ELSE
    CARD{zyeu%}=SUB(CARD{zyeu%},&H88)
  ENDIF
  '
  pvblsync
  pdraw
  '
LOOP UNTIL BYTE{&HFFFFC02}=57
'
LONG{&HFFFA06}=int1%
LONG{&HFFFA0A}=int2%
LONG{&HFFFA0E}=int3%
LONG{&HFFFA12}=int4%
'
prestore
'
VSYNC
~MFREE(two%)
~MFREE(three%)
~MFREE(becr2%)
RESERVE mem%
QUIT
'
> PROCEDURE pinit
  '
  BMOVE ADD(logo%,34),ecr2%,32000
  BMOVE ADD(ADD(font%,34),MUL(150,160)),ADD(ecr2%,32000),MUL(50,160)
  '
  CARD{table%}=&H0
  CARD{ADD(table%,2)}=&H8
  CARD{ADD(table%,4)}=&H1
  CARD{ADD(table%,6)}=&H9
  CARD{ADD(table%,8)}=&H2
  CARD{ADD(table%,10)}=&HA
  CARD{ADD(table%,12)}=&H3
  CARD{ADD(table%,14)}=&HB
  CARD{ADD(table%,16)}=&H4
  CARD{ADD(table%,18)}=&HC
  CARD{ADD(table%,20)}=&H5
  CARD{ADD(table%,22)}=&HD
  CARD{ADD(table%,24)}=&H6
  CARD{ADD(table%,26)}=&HE
  CARD{ADD(table%,28)}=&H7
  CARD{ADD(table%,30)}=&HF
  '
  pone%=one%
  ptwo%=two%
  pthree%=three%
  pix%=base%
  FOR pixy&=0 TO 99
    FOR pixx&=0 TO 95
      i&=BYTE{pix%}
      ah&=ADD(DIV(i&,24),20)
      bh&=ADD(DIV(i&,24),10)
      IF AND(XOR(pixx&,pixy&),1)
        IF AND(ah&,1)
          ADD ah&,2
        ENDIF
        IF AND(bh&,1)
          ADD bh&,2
        ENDIF
      ENDIF
      a&=CARD{ADD(table%,AND(ah&,&HFFFE))}
      b&=CARD{ADD(table%,AND(bh&,&HFFFE))}
      ' vert
      CARD{pone%}=OR(OR(SHL(b&,8),SHL(a&,4)),b&)
      ' jaune
      CARD{ptwo%}=OR(OR(SHL(a&,8),SHL(a&,4)),b&)
      ' rouge
      CARD{pthree%}=OR(OR(SHL(a&,8),SHL(b&,4)),b&)
      '
      INC pix%
      ADD pone%,2
      ADD ptwo%,2
      ADD pthree%,2
    NEXT pixx&
  NEXT pixy&
  '
  inp%=bow%
  out%=bow%
  FOR pixy&=0 TO 2
    FOR pixx&=0 TO 399
      rh&=SHR(BYTE{inp%},3)
      gh&=SHR(BYTE{SUCC(inp%)},3)
      bh&=SHR(BYTE{ADD(inp%,2)},3)
      r&=CARD{ADD(table%,AND(rh&,&HFFFE))}
      g&=CARD{ADD(table%,AND(gh&,&HFFFE))}
      b&=CARD{ADD(table%,AND(bh&,&HFFFE))}
      CARD{out%}=OR(OR(SHL(r&,8),SHL(g&,4)),b&)
      ADD inp%,3
      ADD out%,2
    NEXT pixx&
  NEXT pixy&
  '
RETURN
'
> PROCEDURE pscrolltext
  '
  ptr%=ADD(ecr2%,32000)
  LONG{&HFF8A20}=&H80008
  LONG{&HFF8A24}=ADD(ptr%,14)
  CARD{&HFF8A28}=&HFFFF
  CARD{&HFF8A2A}=&HFFFF
  CARD{&HFF8A2C}=&HFFF0
  LONG{&HFF8A2E}=&H80008
  LONG{&HFF8A32}=ADD(ptr%,6)
  LONG{&HFF8A36}=&H140032
  CARD{&HFF8A3C}=&HC00C
  '
  CARD{ADD(ptr%,6)}=0
  '
  ADD ptr%,MUL(5,160)
  h%=AND(SHR(scroll%,2),&HFFFFFFFE)
  i%=ADD(ADD(font%,CARD{ADD(txt%,h%)}),40)
  l%=AND(scroll%,&H7)
  IF l%>3
    ADD i%,8
    SUB l%,4
  ENDIF
  LONG{&HFF8A20}=160
  LONG{&HFF8A24}=i%
  CARD{&HFF8A28}=&HF
  CARD{&HFF8A2A}=&HF
  CARD{&HFF8A2C}=&HF
  LONG{&HFF8A2E}=160
  LONG{&HFF8A32}=ADD(ptr%,158)
  LONG{&HFF8A36}=&H1001E
  BYTE{&HFF8A3D}=SUB(12,SHL(l%,2))
  BYTE{&HFF8A3C}=&HC0
  '
  CARD{&HFF8A28}=&HFFFF
  CARD{&HFF8A2A}=&HFFFF
  CARD{&HFF8A2C}=&HFFFF
  '
  INC scroll%
  IF scroll%>=9656
    nichon&=1
    scroll%=0
  ENDIF
  '
RETURN
'
> PROCEDURE pinidraw
  LONG{&HFF8240}=LONG{ADD(logo%,2)}
  LONG{&HFF8244}=LONG{ADD(logo%,6)}
  LONG{&HFF8248}=LONG{ADD(logo%,10)}
  LONG{&HFF824C}=LONG{ADD(logo%,14)}
  LONG{&HFF8250}=LONG{ADD(logo%,18)}
  LONG{&HFF8254}=LONG{ADD(logo%,22)}
  LONG{&HFF8258}=LONG{ADD(logo%,26)}
  LONG{&HFF825C}=LONG{ADD(logo%,30)}
  '
  LONG{&HFF8A28}=&HFFFFFFFF
  CARD{&HFF8A2C}=&HFFFF
  CARD{&HFF8A3A}=&H203              ! mode
  ' src
  LONG{&HFF8A20}=&H20002            ! src incr
  LONG{&HFF8A2E}=&H2FFFE            ! dst incr
  LONG{&HFF8A24}=src%               ! source
  LONG{&HFF8A32}=&HFFFF8242         ! destination
  LONG{&HFF8A36}=src_s%             ! size
RETURN
'
> PROCEDURE pdraw
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  ~0
  CARD{&HFF8A3C}=&HC000             ! go
  ~0
  LONG{&HFF8240}=LONG{ADD(font%,2)}
  LONG{&HFF8244}=LONG{ADD(font%,6)}
  LONG{&HFF8248}=LONG{ADD(font%,10)}
  LONG{&HFF824C}=LONG{ADD(font%,14)}
  LONG{&HFF8250}=LONG{ADD(font%,18)}
  LONG{&HFF8254}=LONG{ADD(font%,22)}
  LONG{&HFF8258}=LONG{ADD(font%,26)}
  LONG{&HFF825C}=LONG{ADD(font%,30)}
  '
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  BYTE{&HFF820A}=0
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  ~2
  BYTE{&HFF820A}=2
RETURN
'
PROCEDURE pupdate
  CARD{&HFF8A3A}=&H203                       ! mode
  SELECT upd%
  CASE 0
    inp%=ADD(one%,MOD(pos%,128))
    out%=ADD(src%,34)
    LONG{&HFF8A20}=&H400B4                   ! 192 - 4*4 + 4
    LONG{&HFF8A24}=inp%
    LONG{&HFF8A2E}=&H40074
    LONG{&HFF8A32}=out%
    LONG{&HFF8A36}=&H40064                   ! 4 * 100
    CARD{&HFF8A3C}=&HC000
    LONG{&HFF8A20}=&H4FF34                   ! -192 - 4*4 + 4
    LONG{&HFF8A24}=ADD(inp%,19008)
    LONG{&HFF8A32}=ADD(out%,12800)
    LONG{&HFF8A36}=&H40062                   ! 4 * 98
    BYTE{&HFF8A3C}=&HC0
    '
    inp%=ADD(bow%,MUL(MOD(pos%,400),3))
    out%=ADD(src%,100)
    LONG{&HFF8A20}=&H20002
    LONG{&HFF8A24}=inp%
    LONG{&HFF8A2E}=&H40078
    LONG{&HFF8A32}=out%
    LONG{&HFF8A36}=&H300C7
    BYTE{&HFF8A3C}=&HC0
    '
    upd%=1
  CASE 1
    inp%=ADD(ADD(two%,MOD(pos%,128)),32)
    out%=ADD(src%,60)
    LONG{&HFF8A20}=&H400A0                   ! 192 - 9*4 + 4
    LONG{&HFF8A24}=inp%
    LONG{&HFF8A2E}=&H40060
    LONG{&HFF8A32}=out%
    LONG{&HFF8A36}=&H90064                   ! 9 * 100
    CARD{&HFF8A3C}=&HC000
    LONG{&HFF8A20}=&H4FF20                   ! -192 - 9*4 + 4
    LONG{&HFF8A24}=ADD(inp%,19008)
    LONG{&HFF8A32}=ADD(out%,12800)
    LONG{&HFF8A36}=&H90062                   ! 9 * 98
    BYTE{&HFF8A3C}=&HC0
    upd%=2
  CASE 2
    inp%=ADD(ADD(three%,MOD(pos%,128)),16)
    out%=ADD(src%,90)
    LONG{&HFF8A20}=&H400AC                   ! 192 - 6*4 + 4
    LONG{&HFF8A24}=inp%
    LONG{&HFF8A2E}=&H4006C
    LONG{&HFF8A32}=out%
    LONG{&HFF8A36}=&H60064                   ! 6 * 100
    CARD{&HFF8A3C}=&HC000
    LONG{&HFF8A20}=&H4FF2C                   ! -192 - 6*4 + 4
    LONG{&HFF8A24}=ADD(inp%,19008)
    LONG{&HFF8A32}=ADD(out%,12800)
    LONG{&HFF8A36}=&H60062                   ! 6 * 98
    BYTE{&HFF8A3C}=&HC0
    upd%=0
    '
    ADD pos%,2
    '
  ENDSELECT
RETURN
'
' =====================================================
'
> PROCEDURE pvbl
  ~8
  ~8
  BYTE{&H204}=1
  IF LONG{&H200}
    ' LONG{&H44E}=LONG{&H200}
    BYTE{&HFFFF8205}=BYTE{&H201}
    BYTE{&HFFFF8207}=BYTE{&H202}
    BYTE{&HFFFF8209}=BYTE{&H203}
    LONG{&H200}=0
  ENDIF
  ~9
  ~9
  ~9
  ~9
  ~9
RETURN
'
' =====================================================
'
> PROCEDURE psetup
  '
  CLS
  HIDEM
  '
  VSYNC
  super%=GEMDOS(&H20,L:0)
  '
  dep%=LONG{BASEPAGE+8}
  REPEAT
    ADD dep%,2
  UNTIL CARD{dep%}=&H7008 AND CARD{ADD(dep%,2)}=&H7008
  my_vbl%=dep%
  LONG{dep%}=&H48E7FFFE
  REPEAT
    ADD dep%,2
  UNTIL CARD{dep%}=&H7009 AND CARD{ADD(dep%,2)}=&H7009
  CARD{dep%}=&H4EB9
  LONG{dep%+2}=play%
  LONG{dep%+6}=&H4CDF7FFF
  CARD{dep%+10}=&H4E73
  '
  VSYNC
  ps%=&HFFFF8240
  pd%=old_pal%
  FOR col%=0 TO 15
    CARD{pd%}=CARD{ps%}
    CARD{ps%}=0
    ADD pd%,2
    ADD ps%,2
  NEXT col%
  '
  IF res|<>0
    ~XBIOS(5,L:-1,L:-1,0)
  ENDIF
  '
  VSYNC
  '
  ~C:zik%(1)
  LONG{&H200}=xb%
  BYTE{&H40C}=0
  old_vbl%=LONG{&H70}
  LONG{&H70}=my_vbl%
  pvblwait
  '
RETURN
'
> PROCEDURE prestore
  ps%=&HFFFF8240
  FOR col%=0 TO 15
    CARD{ps%}=0
    ADD ps%,2
  NEXT col%
  '
  pvblwait
  LONG{&H70}=old_vbl%
  VSYNC
  ~C:stop%()
  LONG{&HFF8800}=&H707FFFF
  LONG{&HFF8800}=&H8080000
  LONG{&HFF8800}=&H9090000
  LONG{&HFF8800}=&HA0A0000
  '
  VSYNC
  ~XBIOS(5,L:-1,L:-1,res|)
  CLS
  '
  VSYNC
  ps%=old_pal%
  pd%=&HFFFF8240
  FOR col%=0 TO 15
    CARD{pd%}=CARD{ps%}
    ADD pd%,2
    ADD ps%,2
  NEXT col%
  '
  VSYNC
  ~GEMDOS(32,L:super%)
  SHOWM
RETURN
'
' =====================================================
'
> PROCEDURE pvblwait
  BYTE{&H204}=0
  REPEAT
  UNTIL BYTE{&H204}
RETURN
'
> PROCEDURE pvblsync
  REPEAT
    b|=BYTE{&HFFFF8209}
  UNTIL b|
  VOID SHL(13,-b|)
RETURN
'
' =====================================================
'
