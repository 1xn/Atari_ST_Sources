
               PPP   OOO  L     Y    Y  GGG   OOO  N    N  EEEE
               P  P O   O L     Y    Y G     O   O NN   N E
               P  P O   O L      YYYYY G GG  O   O N N  N EEE
               PPP  O   O L          Y G   G O   O N  N N E
               P    O   O L          Y G   G O   O N   NN E
               P     OOO  LLLLL YYYYY   GGG   OOO  N    N  EEEE
               ________________________________________________
               


 Et vi!!! Tel est le sujet du jour...Les polygones.
 
 Alors,d'abord,a quoi ca sert.En general, les polygones servent dans
les routines de 3D ou de 2D leur fonction et de tracer les differentes 
faces d'un objet.
  Nous alons donc etudier aujourd'hui une des methodes les plus 
efficace pour tracer un polygone .Je tiens d'abord a preciser
que cet article est conseille a des codeurs ayant deja une petite
experience en programmation 68000.Le listing accompagnant cet article
est de niveau moyen...Il ne comporte aucun gruges violent a fin
d'etre plus comprehensible.


  DES POLYGONES, MAIS PAS N'IMPORTES QUELS POLYGONES !!!!
 En effet, la methode la plus simple ( surtout la plus rapide ) de
tracer de polygone ne peut tracer que des polygones CONVEX.Un
polygone CONVEX, est un polygone constitue de tel facon, que si
vous joignez deux points appartenant a celui-ci, le segment
ainsi cree sera obligatoirement a l'interieur du polygone.

  
  COMMENT ON FAIT !!!
  -------------------  

 La methode que j'utilise peut se separe en deux grandes parties.

LA PREMIERE : LE TRACER VIRTUEL DU CONTOUR.
En effet, comme le 68000 est assez rapide pour tracer des lignes
horizontales, on va proceder de la sorte : On va decomposer
notre polygone en lignes horizontales...Je m'explique, nous allons
delimiter, pour chaques lignes horizontales du polygone, la 
coordonnee X de depart, et la coordonnee X d'arrivee en scannant
les contours du polygone.C'est pour cela que je parlais plus haut
de TRACER VIRTUEL DU CONTOUR.

Pour deux sommets donnes du polygones, nous allons determiner tout
les points intermediaires du segment.Pour stocker les coordonnees
des ces points, nous allons utiliser deux tableaux.Il y aura
un tableau pour chaques X de depart du polygone et un autres pour
les X d'arrives.
  
Dans ces tableaux nous inscriveront la coordonnee X en fonction
de la coordonnee Y.Les coordonnees X sont exprimees en word et
il y a une coordonnee X pour chaque coordonnees Y.
ARF!!!C'est pas tres claire, donc je donne un exemple qui je 
l'espere vous facilitera les choses.Bon, vous avez un point de
coordonnees X:10 Y:16. vous insciverez la coordonne X (10) , 
16 words apres le debut du tableau.

Donc, pour chaque polygones, nous allons determiner la coordonnee
Y minimun et la Y maximun.En scannant toutes les droites qui forment
le contour du polygone, nous allons determiner le X de depart
( appelons-le XMIN ) et le X d'arrive ( XMAX ) en fonction de
chaques Y compris entre YMIN et YMAX...

LA DEUXIEME : LE REMPLISSAGE DU POLYGONE.

Bon, maintenant que nous avons pour chaques Y du polygone la
coordonnee XMIN et XMAX de celui-ci.Nous allons scanner les 
tableaux a partir de YMIN et obtenir ainsi les coordonnees
de chaques lignes horizontales du polygone.Alors il nous reste
plus qu'a tracer les lignes horizontales qui composent le polygones.



  NOW !!! ZE LISTING.
  ------------------
  
Avec cet article, je vous donne un listing de 15 jours de travails
acharne...HUM....kwakeu...

Je vais vous detailler assez rapidemment ( car le listing est bourre
de commentaires ) le fonctionnement des principales routines du source. 

 En premier lieu, vous avez les inits banales qui sont quand meme
pratiques quand vous voulez revenir correctement ( c'est pas toujours
le cas ) sous GENST.

 Ensuite, a partir du label SPE_INITS, nous avons les inits speciales
et precalcules ( si ont peux appeler ca precalc.) de la routine de
polygone.Je vais vous detailler juste le gros morceau qui se charge
d' auto-genere les routine de remplissage.

 Alors, la  routine  MK_ROUT  va se charger d'auto-generer les 21
routines de remplissage.Pourquoi tant de routines ? 
Ben, parceque le but du jeu est de tracer tres vite le polygone.  
Une ligne horizontale est composee d'un mask de depart affiche en OR ,
d'un certain nombres de bloc afficher normalement (suivant la longueur
de la ligne) et d'un mask d'arrive afficher en OR . 
La premiere routine est un peu differente des autres.Elle se charge
d'afficher une ligne ayant un DX entre 0 et 15.Elle est differente
car il n'y a qu'un mask et pas de blocs intermediaires.
Les autres routines afficheront chacunes une ligne ayant un DX fixe
compris entre 0 et 19 , un mask de depart et d'arrive.
 Pour ceux qui ne le savent pas, une routine auto-genere 
est une routine qui a ete cree a partir d'une autre routine.
Dans le cas present, c'est plus commode d'auto-generer les 21 
routines car se sont des routines sensiblement pareilles.
En plus c'est moins chiant et ca prend moins de place dans le source.

Voila pour les petits precalcules, j'insite sur le 'petit' car certains
coders n'hesitent pas a faire 500ko de precalc.

Passons maintenant a la routine POLYGONE.Je ne vais pas la detailler
car je commentante chaque lignes du listing.Mais sachez toute fois
que cette routine attend le nombre de points-1 du polygone dans le
label NB_POINT. Et les coordonnees des ces points dans CO_POINTS.
Attention, les points du polygone devront etre donnes dans le 
sens des aiguilles d'une montre ( ou d'une horloge...).

LINE est une sous-routine de POLYGONE.C'est elle qui se charge de
tracer virtuellement le contour du polygone afin d'obtenir les
cordonnees XMIN et XMAX pour chaques Y du polygone.
Cette routine calcule le DX et le DY de la droite afin d'obtenir la
pente de celle-ci.En divisant le DX par le DY on obtient l'offset
que l'on additionne a une cordonnee X pour obtenir la coordonne X
de la ligne suivante.
 Je tiens a preciser que cette routine ne clippe pas les polygones,
le clipping sera peut-etre le sujet d'un prochain article.

Je tiens a preciser ( encore !!! ) que l'on peut optimiser encore
pas mal de choses...Eviter les DBF et JSR par exemples...Et gagner
quelques cycles par-ci par-la...

Bon, aller je m'en arrete la car j'ai deja fait assez de fautes
d'orthographe.Et puis de toutes facon le listing est assez commente
( je l'espere...) Toutes fois, si vous avez un petit probleme ( ou un
gros ), vous pouvez me contacter sur 3614 RTEL1 bal SKYNET/AST .


SKYNET-ABSTRACT
---------------


PS: PUB ! PUB ! Pour ceux qui veulent la derniere trackmo de ABSTRACT
nomme CRASH IN HELL et qui tourne du stf au falcon, et ben envoyer
un disc a :
						ABSTRACT
						72, Rue du dauphine
						69003 LYON


