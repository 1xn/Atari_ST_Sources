 BROBECKER Alain
 rte de Dardagny
  01630 CHALLEX
     FRANCE
    

          This text explain how to use the fastline.s routine.
      
    At first I would like to say that I optimised this routine a lot,
  it's the result of a hard work, and it's now quite fast. ( 17,5 diags
  (0,0,199,199) per Vbl!)
    So if you use it in one of your program, ( I call back that using
  it in a commercial program is prohibited! ) it would be nice to
  send your production to me!
  
    How to use fastline.s:
    ----------------------
    
    This is quite simple to use in fact:
    At first you have to define the routine as an included routine:
  
{ Section TEXT
{fastpoly:
{  include	'path\fastpoly.s'
{
{ Section XXX

  Where XXX is the kind of stuff you want to have behind the routine.
  ( BSS,DATA or TEXT!)
  
  Then anywhere in the program, call the routine with the following
  parameters:  d0.w = x1.
               d1.w = y1.
               d2.w = x2.
               d3.w = y2.
               a0.l = adress of the ramvideo.
  ( a0 should be a multiple of 2.)
  So a call looks like this:
                     
{  move.w	#$0,d0
{  move.w	#$0,d1
{  move.w	#$2a,d2
{  move.w	#$2a,d3
{  move.l	#$78000,a0
{  jsr	fastline

    In this example, the line (0,0,42,42) is drawn on the ram at the
  adress $78000, and if you have a colour monitor, if the ramvideo
  is located on $78000 a nice (?) line should appears.
   
    I think this should be enough for you to use it.But I also
  include a little source so that you could see by yourselve.
  
                                   Have fun!
                                   
                                   Dracula.
                                   
    PS: I forgot to say that it is an unclipped line routine,
        this mean that when you call the function with a x value
        which is not between 0-319 or an y value not between 0-199,
        ( The line is not in the screen! ) an error may occur!
