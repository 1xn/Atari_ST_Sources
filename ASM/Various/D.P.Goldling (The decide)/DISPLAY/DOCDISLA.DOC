                  ************************************
                  * DOC-DISPLAYER, WRITTEN BY D.P.G. *
                  ************************************

    This text file is to explain  how  the doc displayer, in the Assembly
folder works. Firstly, I must  say  that  the  code  is based on routines
written by the P.M. now of TTK,  but  is  totally original, as I have re-
written it, using my own faster and better routines.

    I was asked by a friend to  code  a doc displayer, and he didn't mind
how it looked, so I decided to go for  a simple one. The one I wrote lets
you view a page at a  time,  by  pressing  the  +  or  - keys. I have now
written a displayer that scrolls the  text  up and down the screen, using
the arrow keys, but that's a different story.

   Firstly, we need to set up the  Supervisor mode, as this will allow us
to access more memory,  and  more  routines.  The  keyboard click and the
mouse are now  removed  as  they  are  both  annoying.  We  now check the
resolution, and see if it's a high rez monitor. If it is, we quit because
there is a low  res  switch  later  on  in  the  code.  We now change the
resolution to medium,and install a few screen colours, to make the screen
visible. After storing the rez, we  save  the physical and logical screen
addresses as they will be used to return to current set up if the low res
switch is operated. Next, we put  the  amount  of  pages we have, in this
case 7, into register d4. We  then  install 'pages' in a1, which contains
the order of the pages,  and  the  first  page  is installed. The pointer
which will enable us to see what page we are up to is now cleared.

   Now here's the main code : the instructions are now put into a0, which
will print the top two lines. The  current  page is put into a1, and that
also will be printed. As we  set  it  up  earlier, the first page will be
printed. From here, the keys  are  tested,  and  any  changes are made as
follows :

   If the + key is pressed, then we  print the next page in the following
way :

We put the current page  into  d4,  and  test  this against the number of
pages to see if we are on  the  last  page.  So if the current page is 7,
then we are on the last  page,  so  we  go back to checking the keyboard.
Otherwise we put the  next  page  in  a1,  and  increase the 'page_shown'
pointer by 1. We now go back  to  the label 'RETURN' which prints the top
two lines, and the new, current page.

   If the - key is pressed  then  the  current  page is also put into d4.
This is tested (TST) against 0, to see  if  it's the first page. If it is
then we go back to checking keys.  Otherwise, we put the previous page in
a1, subtract one from  the  'page_shown'  pointer,  and  go  to the label
'RETURN', which will print  the  new,  current  page,  and then check for
keys.

   If the Q key is  pressed,  then  we  go  to  the label 'CHECK', which,
firstly clears the screen, then prints the  "ARE YOU SURE ?" message, and
wait for a key to be pressed. If the 'Y' key is pressed, then we exit, by
going to the label 'quit', and restoring anything we have changed. If the
'N' key is pressed, then  we  print  the  page  we were just reading, and
carry on as normal.

   If the P key is  pressed,  the  displayer  will  show  a low res Degas
picture. This is done in the following  way  : Firstly, we have to set up
the actual low res screen, by passing parameters to the XBIOS. We have to
define our new PHYS  and  LOGICAL  screens  within these parameters. Once
this is done, we then read the new palette and install it into the normal
registers, i.e. $fff8240. Once this has been done, we go about displaying
the picture in the normal way, using  our new physical screen address for
the actual display.  We  now  wait  for  ANY  key  to  be pressed, before
resetting the old resolution,  and  the  old  physical and logical screen
addresses. We then install four colours  into the $fff8240 register, this
is to prevent our displayer using the  same palette as the picture. After
the medium res switch has returned, and the colours have been reset, it's
back to the normal waiting for key  routine,  as the page we were reading
before we carried out the res  change  is installed back into the display
page.

   The following keys  all  carry  out  the  same  instruction,  but will
display a different text message : 1 -  info screen, 2 - some coding tips
and 3 - coding tips part 2.

   Firstly, when any  of  the  above  keys  are  pressed,  the  screen is
cleared, and the current page  we  were  reading  is stored. Then the new
text message is now installed and  'printed'  to the screen using the Gem
routine number #9. After this has  been  installed,  we then wait for any
key, to return us to the main menu  screen, viewing the page that we were
reading before we pressed the key.

