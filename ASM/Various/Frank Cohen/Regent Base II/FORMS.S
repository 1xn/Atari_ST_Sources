******************************************************
*                                                    *
*                  REGENT BASE 2.0                   *
* --- A 4GL SQL Database System for the Atari ST --- *
*                                                    *
*                   FORMS EDITOR                     *
*                                                    *
*       (c) 1988 Frank Cohen, Regent Software        *
*                                                    *
******************************************************

* Started June 25, 1987

* Revision List:
* 120187 Beta Testing Version
* 021188 Fine tuning for second 'beta' release

*-------------EQUATES------------

MAXOB EQU 200    ;Maximum number of objects
MAXEDIT EQU 125  ;Maximum number of edit fields
EDITSZ EQU 540   ;Size of each edit fields HTEXT() buffer
OBJSZ EQU 80     ;Size of each object contents buffer

MAXICONS EQU 20  ;Maximum number of icons
ICONBUFSZ EQU 8000 ;Size of each icon buffer
MAXLINE EQU 800  ;Max # of lines in editor

START MOVE.L A7,A5
 MOVE.L #USTK,A7

 MOVE.L 4(A5),A5
 MOVE.L $C(A5),D0
 ADD.L $14(A5),D0
 ADD.L $1C(A5),D0
 ADD.L #$100,D0
 MOVE.L D0,-(A7)
 MOVE.L A5,-(A7)
 MOVE D0,-(A7)
 MOVE #$4A,-(A7)
 TRAP #1
 ADD.L #12,A7

 MOVE #GEMEND-GEMSTART,D0
 LEA GEMSTART,A0
CLRGEM CLR.B (A0)+
 DBF D0,CLRGEM

*--------------INIT GEM VARIABLES-------------

 CLR.L AP1RESV   ;APPL_INIT
 CLR.L AP2RESV
 CLR.L AP3RESV
 CLR.L AP4RESV
 CLR.L APPTREE
 MOVE #10,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES

 MOVE #77,CONTRL  ;GRAF_HANDLE
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES
 MOVE INTOUT,DRHANDLE

 MOVE #100,CONTRL ;OPEN_VWORK
 CLR CONTRL+2
 MOVE #11,CONTRL+6
 MOVE DRHANDLE,CONTRL+12
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 MOVE #1,INTIN+6
 MOVE #1,INTIN+8
 MOVE #1,INTIN+10
 MOVE #1,INTIN+12
 MOVE #1,INTIN+14
 MOVE #1,INTIN+16
 MOVE #1,INTIN+18
 MOVE #2,INTIN+20
 JSR VDI

 MOVE CONTRL+12,GRHANDLE

 MOVE #104,OPCODE     ;DETERMINE WORK STORAGE
 MOVE #2,SINTIN       ;OF THE DESKTOP WINDOW
 MOVE #5,SINTOUT
 CLR SADDRIN
 CLR SADDROUT
 CLR INTIN
 MOVE #4,INTIN+2
 JSR AES
 MOVE INTOUT+2,GEMXPOS
 MOVE INTOUT+4,GEMYPOS
 MOVE INTOUT+6,GEMWIDTH
 MOVE INTOUT+8,GEMHOEHE

 MOVE #2,D0
 JSR SHWMOUSE
 JSR GETPATH

*------------------FIND COMMAND TAIL-------------------

 MOVE #120,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE.L #COMDBUFF,ADDRIN
 MOVE.L #COMTAIL,ADDRIN+4
 JSR AES

 CLR TAILFLAG
 LEA FILENAME,A1
 LEA COMTAIL,A0
 CLR.L D1
 MOVE.B (A0)+,D1
 TST.B D1
 BEQ TAIL2

TAIL1 MOVE.B (A0)+,D0
 TST.B D0
 BEQ TAIL2
 CMP.B #13,D0
 BEQ TAIL2
 CMP.B #' ',D0
 BEQ TAIL2
 MOVE.B D0,(A1)+
 MOVE #1,TAILFLAG
 DBF D1,TAIL1
TAIL2 CLR.B (A1)+

 CLR.B FORMFILE
 LEA FILENAME,A0
 JSR ADDPATH
 LEA FORMFILE,A1
 TST.B FILENAME
 BEQ TAIL4
TAIL3 TST.B (A0)
 BEQ TAIL4
 MOVE.B (A0)+,(A1)+
 JMP TAIL3
TAIL4 CLR.B (A1)+

 MOVE #11,D0
 LEA FILENAME,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
TAIL10 MOVE.B (A0)+,(A1)+
 DBF D0,TAIL10

*----------------LOAD RESOURCE FILE------------------

 MOVE #110,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE.L #RSCNAME,ADDRIN
 JSR AES

*----------GET RESOURCE ADDRESSES-------------

 MOVE #ABOUTDLG,D0
 JSR GADDR
 MOVE.L A0,ABOUTDI

 MOVE #PALETTE,D0
 JSR GADDR
 MOVE.L A0,PALSTOR

 MOVE #NAMEFLD,D0
 JSR GADDR
 MOVE.L A0,NAMETREE

 MOVE #COUNTRY,D0
 JSR GADDR
 MOVE.L A0,LANDTREE

 MOVE #DISKERR,D0
 JSR GADDR
 MOVE.L A0,ERRDLG

 MOVE #SAVEDLG,D0
 JSR GADDR
 MOVE.L A0,SAVEADR

 MOVE #PSTATUS,D0
 JSR GADDR
 MOVE.L A0,PRINTREE

 MOVE #PAGER,D0
 JSR GADDR
 MOVE.L A0,PAGEADR

 MOVE #SUREDLG,D0
 JSR GADDR
 MOVE.L A0,SUREADR

 MOVE #SAVEFRM,D0
 JSR GADDR
 MOVE.L A0,FORMADR

 MOVE #BADFORM,D0
 JSR GADDR
 MOVE.L A0,BADADR

 MOVE #CONVERT,D0
 JSR GADDR
 MOVE.L A0,CONVADR

 MOVE #SEQUENCE,D0
 JSR GADDR
 MOVE.L A0,SEQADR

 MOVE #MONO,D0
 JSR GADDR
 MOVE.L A0,MONOADR

 MOVE #IOERRS,D0
 JSR GADDR
 MOVE.L A0,IOERRADR

 MOVE #STRINGS,D0
 JSR GADDR
 MOVE.L A0,STRINGADR

*--------------Check graphic mode------------------

 MOVE #4,-(A7)
 TRAP #14
 ADD #2,A7
 MOVE D0,GRMODE
 TST D0
 BNE GOODMD
 JMP BADMODE

*----------------DISPLAY MENU BAR---------------------

GOODMD MOVE #MENUBAR,D0
 JSR GADDR
 MOVE.L A0,MENUADR

 CLR OB_X(A0)
 CLR OB_Y(A0)

 MOVE #30,CONTRL   ;SHOW MENU BAR
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE.L MENUADR,ADDRIN
 JSR AES

*-----------GET SOME MEMORY-------------

 MOVE.L #-1,-(A7)  ;MALLOC
 MOVE #$48,-(A7)
 TRAP #1
 ADD.L #6,A7

 SUB.L #32000,D0
 CMP.L #570000,D0
 BCC GETMEM1
 JMP NOMEM

GETMEM1 MOVE.L D0,-(A7)  ;MALLOC
 MOVE #$48,-(A7)
 TRAP #1
 ADD #6,A7

 MOVE.L D0,SCROLL  ;TEdit Scroll buffer
 ADD.L #MAXLINE*2,D0

 MOVE.L D0,NAMEBUFF ;Object name buffer
 ADD.L #MAXOB*16,D0

 MOVE.L D0,OBJMEM  ;Object buffers
 ADD.L #MAXOB*OBJSZ,D0

 MOVE.L D0,SCRAP   ;TextEdit Scrap Buffer
 MOVE #1000,SCRAPSZ
 ADD.L #1000,D0

 MOVE.L D0,TEMEM   ;TextEdit buffers
 ADD.L #MAXEDIT*EDITSZ,D0

 MOVE.L D0,EDMEM   ;Procedure editor memory
 ADD.L #48000,D0
 MOVE #48000,EDSIZE
 MOVE.L D0,EDMEM2
 ADD.L #48000,D0

 MOVE.L D0,LOADBUFF  ;Icon parsing buffer
 ADD.L #ICONBUFSZ*2,D0
 MOVE.L #ICONBUFSZ*2,LOADSIZE

 MOVE.L D0,OBJICN  ;Icon storage
 ADD.L #MAXICONS*ICONBUFSZ,D0

 MOVE.L D0,CUTBUFF ;Cut/Copy/Paste Buffer
 ADD.L #50000,D0

 MOVE.L D0,CUTBUFF2 ;Cut Buffer
 ADD.L #50000,D0

*----------LOAD CLIPBOARD---------

INITCLIP JSR CLRSCRAP ;Clear TextEdit Scrap buffer
 CLR CLIPFLAG

 LEA SCRAPNAME,A0
 JSR ADDPATH
 JSR F_OPEN
 TST D0
 BMI INITFORM
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L #4,D0
 JSR F_READ

 MOVE.L SCRAP,A0
 CMP.L #'TEXT',(A0)
 BEQ GOODSCRAP
 CLR.L (A0)
 JMP BADSCRAP

GOODSCRAP MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L #1000,D0
 JSR F_READ

BADSCRAP MOVE FHANDLE,A0
 JSR F_CLOSE

*-----------MONOCHROME----------

 CMP #2,GRMODE
 BNE INITFORM

 MOVE.L MONOADR,A0
 ADD.L #MOBBOX2*OBSIZE,A0
 MOVE.L PALSTOR,A1
 ADD.L #OBBOX2*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)
 ADD #4,OB_X(A1)
 ADD #2,OB_Y(A1)

 MOVE.L MONOADR,A0
 ADD.L #MCIRCLE*OBSIZE,A0
 MOVE.L PALSTOR,A1
 ADD.L #OBCIRCL2*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)
 ADD #5,OB_X(A1)
 ADD #3,OB_Y(A1)

 MOVE.L MONOADR,A0
 ADD.L #MOBICON2*OBSIZE,A0
 MOVE.L PALSTOR,A1
 ADD.L #OBICON2*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)
 ADD #2,OB_Y(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON1*OBSIZE,A0
 MOVE.L NAMETREE,A1
 ADD.L #ICON1*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)
 ADD #3,OB_X(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON2*OBSIZE,A0
 MOVE.L ERRDLG,A1
 ADD.L #ICON2*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON3*OBSIZE,A0
 MOVE.L PRINTREE,A1
 ADD.L #ICON3*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON46*OBSIZE,A0
 MOVE.L BADADR,A1
 ADD.L #ICON4*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L CONVADR,A1
 ADD.L #ICON6*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON7*OBSIZE,A0
 MOVE.L SEQADR,A1
 ADD.L #ICON7*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON5*OBSIZE,A0
 MOVE.L FORMADR,A1
 ADD.L #ICON5*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L PAGEADR,A0
 ADD.L #PGONE*OBSIZE,A0
 MOVE OB_HGHT(A0),D0
 LSL #1,D0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)

 MOVE.L PALSTOR,A0
 ADD.L #OBEDIT*OBSIZE,A0
 ADD #3,OB_HGHT(A0)

*------------INIT A FORM----------

INITFORM CLR INTLCODE
 CLR.L TIMEOUT
 CLR OBJTER
 CLR ICONUM
 CLR OBJCNT
 CLR.B SAVEFILE
 CLR SAVEFLAG
 JSR CLRNAMES

 JSR OPENWIND  ;Open GEM Window
 JSR CLREDMEM
 JSR INITPED  ;Init procedural editor

 JSR RSHRINK
 JSR MENUSET1

WARMSTRT JSR INITSELS

 CLR DESFLAG  ;Set flags
 CLR TEYLOC
 CLR LINENUM
 CLR PAGENUM
 CLR LDFLAG
 CLR SQNCTYPE
 MOVE #1,PALSFLAG

 MOVE.L STRINGADR,A0
 ADD #TOGMES2*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L MENUADR,A1
 ADD #MHIDE*24,A1
 MOVE.L A0,OB_SPEC(A1)

 MOVE.L PALSTOR,A0   ;Set palette location
 MOVE WINDX,D0
 ADD WINDW,D0
 SUB OB_WDTH(A0),D0
 SUB #10,D0
 MOVE D0,OB_X(A0)
 MOVE WINDY,D0
 ADD WINDH,D0
 SUB OB_HGHT(A0),D0
 SUB #8,D0
 MOVE D0,OB_Y(A0)

 MOVE.L PAGEADR,A0  ;Set page token location
 MOVE WINDX,D0
 ADD #1,D0
 MOVE D0,OB_X(A0)
 MOVE WINDY,D0
 ADD WINDH,D0
 SUB OB_HGHT(A0),D0
 ADD #1,D0
 MOVE D0,OB_Y(A0)

 TST TAILFLAG
 BNE DOLFRM10

*----------MAIN EVENT LOOP-----------

MAINLOOP CLR D0
 JSR SHWMOUSE

 JSR NOCLIP
 JSR TEXTINIT
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$FFFF,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

 TST SQNCFLAG
 BEQ MAINSTRT
 JSR TRANSOFF

 MOVE.L STRINGADR,A0
 ADD #SQNCMES*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES
 DC $A009

MAINSTRT JSR TRANSRV

 TST EVWHICH
 BNE WARP

GTAGN JSR GT_EVENT

 MOVE INTOUT+8,SHIFTED
 MOVE INTOUT+2,CLICK2
 MOVE INTOUT+4,CLICK4
 MOVE INTOUT+12,CLICK12

WARP MOVE EVWHICH,D0
 AND #$10,D0
 BEQ EVENT2

 MOVE EVWHICH,D0
 AND #$EF,D0
 MOVE D0,EVWHICH
 JMP MESEVENT

EVENT2 JSR VALIDATE
 TST D0
 BEQ EVENT4
 CLR EVWHICH
 JMP MAINSTRT

EVENT4 MOVE EVWHICH,D0
 AND #1,D0
 BEQ EVENT3

 MOVE EVWHICH,D0
 AND #$FE,D0
 MOVE D0,EVWHICH
 JMP KEYEVENT

EVENT3 MOVE EVWHICH,D0
 AND #2,D0
 BEQ DOIDLE

 MOVE EVWHICH,D0
 AND #$FD,D0
 MOVE D0,EVWHICH
 JMP BUTEVENT

*------------IDLING--------

DOIDLE CLR EVWHICH

 TST SQNCFLAG
 BNE MAINSTRT

 CMP #2,WINDFLAG
 BEQ EDBL3
 TST WINDFLAG
 BEQ MAINLOOP

 TST OBJCNT
 BEQ MAINSTRT
 TST OBJTER
 BEQ MAINSTRT

 CLR COUNT
EDBL1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE EDBL2
 TST OB_SEL(A4)
 BEQ EDBL2
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE EDBL2
 MOVE.L OB_TEREC(A4),A0
 JSR TEIDLE
 JMP MAINLOOP
EDBL2 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE EDBL1
 JMP MAINLOOP

EDBL3 LEA TEREC2,A0
 JSR TEIDLE
 JMP MAINLOOP

*--------DROP-DOWN MENU SELECTED------

VALIDATE MOVE.L MENUADR,A0
 ADD.L #MDESK*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MFILE*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MEDIT*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MOPTIONS*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MSTYLE*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MGRAPHIC*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MICONS*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 MOVE.L MENUADR,A0
 ADD.L #MTRANSFR*OBSIZE,A0
 TST OB_STATE(A0)
 BNE VALIDNO
 CLR D0
 RTS

VALIDNO MOVE #1,D0
 RTS

*-----------MESSAGE EVENT---------

MESEVENT MOVE EVMESG,D0
 CMP #10,D0
 BEQ W_MENU

 MOVE EVMESG+6,D1
 CMP WIHANDLE,D1
 BNE MAINLOOP

 TST SQNCFLG2
 BEQ MESEV2
 LEA OKMES,A0
 JSR SETMES
 CLR SQNCFLG2

MESEV2 CMP #20,D0
 BEQ W_REDRAW
 CMP #21,D0
 BEQ W_TOPPED
 CMP #29,D0
 BEQ W_NEWTOP
 CMP #22,D0
 BEQ W_CLOSE
 CMP #24,D0
 BEQ W_ARROW
 CMP #25,D0
 BEQ W_HSLIDE
 CMP #26,D0
 BEQ W_VSLIDE
 CMP #27,D0
 BEQ W_SIZED
 CMP #28,D0
 BEQ W_MOVED
 JMP MAINLOOP

W_CLOSE TST SQNCFLAG
 BNE MAINLOOP
 JMP DOCLOSE

W_TOPPED TST D0
W_HSLIDE TST D0
W_SIZED TST D0
W_NEWTOP TST D0
W_MOVED JMP MAINLOOP

*------------ARROW-------------

W_ARROW MOVE EVMESG+6,D0
 CMP WIHANDLE,D0
 BNE MAINLOOP

 CMP #2,WINDFLAG
 BNE MAINLOOP

DOARROW LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ ARROW2
 BMI ARROW2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 LEA TEREC2,A0
 MOVE SELSTART(A0),SELEND(A0)
 JMP ARROW3
ARROW2 JSR TEDNOCAR

ARROW3 CMP #0,EVMESG+8
 BEQ EDPGUP
 CMP #1,EVMESG+8
 BEQ EDPGDN
 CMP #2,EVMESG+8
 BEQ EDLNUP
 CMP #3,EVMESG+8
 BEQ EDLNDN
 JMP MAINLOOP

*----------SCROLL ONE LINE DOWN------------

EDLNDN JSR LINEDOWN
 JMP EDLNDONE

LINEDOWN JSR TECALC

 ADD #1,D1

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0
 TST (A0)
 BPL LNDN10
 SUB.L #2,A0
 SUB #1,D1

LNDN10 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 MOVE VIEWNUM,D0
 ADD #17,D0
 CMP D1,D0
 BGT LNDN41

 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM
LNDN41 RTS

*-----------SCROLL ONE LINE UP------------

EDLNUP JSR LINEUP
 JMP EDLNDONE

LINEUP JSR TECALC

 TST D1
 BEQ LNDN20

 SUB #1,D1

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0
 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 MOVE (A0),D0
 CMP TEYLOC,D0
 BGE LNDN21

 MOVE D1,VIEWNUM
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 RTS

LNDN20 CLR TEYLOC
 CLR TESTART
 LEA TEREC2,A1
 CLR SELSTART(A1)
 CLR SELEND(A1)
 CLR LINENUM
 CLR VIEWNUM
LNDN21 RTS

*-----------SCROLL ONE PAGE UP------------

EDPGUP JSR TECALC

 TST D1
 BEQ EDLNDONE

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 MOVE #17,D0
LNDN25 TST (A0)
 BEQ LNDN26
 SUB #2,A0
 SUB #1,D1
 DBF D0,LNDN25

LNDN26 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 CLR TEYLOC
 CLR TESTART
 CMP #17,D1
 BLT EDLNDONE
 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM
 JMP EDLNDONE

*----------SCROLL ONE PAGE DOWN-----------

EDPGDN JSR TECALC

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 MOVE #17,D0
LNDN22 TST (A0)
 BMI LNDN23
 ADD #2,A0
 ADD #1,D1
 DBF D0,LNDN22

LNDN23 SUB #2,A0
 SUB #1,D1

 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM
 MOVE D1,VIEWNUM

 CLR TEYLOC
 CLR TESTART
 CMP #17,D1
 BLT EDLNDONE
 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM

EDLNDONE MOVE #1,WORDBRK
 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 CLR WORDBRK
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR TEIDLE
 JSR SHOWSLID

EDLCLR MOVE #11,-(A7) ;C_conis
 TRAP #1
 ADD.L #2,A7
 TST.L D0
 BEQ MAINLOOP

 MOVE #7,-(A7) ;C_rawcin
 TRAP #1
 ADD.L #2,A7
 JMP EDLCLR

*-------------DRAG THUMB---------------

W_VSLIDE MOVE EVMESG+6,D0
 CMP WIHANDLE,D0
 BNE MAINLOOP

 CMP #2,WINDFLAG
 BNE MAINLOOP

 LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ THUMB2
 BMI THUMB2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 LEA TEREC2,A0
 MOVE SELSTART(A0),SELEND(A0)
 JMP THUMB3
THUMB2 JSR TEDNOCAR

THUMB3 JSR TECALC

 CLR.L D1
 MOVE BOTNUM,D1
 SUB #1,D1
 CLR.L D0
 MOVE EVMESG+8,D0
 MULU D1,D0
 DIVU #1000,D0
 AND.L #$FFFF,D0
 MOVE D0,D1

 MULU #2,D1
 ADD.L SCROLL,D1
 MOVE.L D1,A1
 LEA TEREC2,A0
 MOVE (A1),SELSTART(A0)
 MOVE (A1),SELEND(A0)

 MOVE D0,LINENUM
 MOVE D0,VIEWNUM
 CLR TEYLOC
 CLR TESTART
 CMP #9,D0
 BCS THUMB4
 SUB.L #9*2,A1
 SUB #9,VIEWNUM
 MOVE (A1),TEYLOC
 MOVE (A1),TESTART

THUMB4 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR TEIDLE
 JSR SHOWSLID
 JMP MAINLOOP

*--------SET THUMB POSITION-------

SHOWSLID CMP #2,WINDFLAG
 BNE NOPOS

 MOVE #105,CONTRL  ;POSITION V SLIDER
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #9,INTIN+2

 MOVE BOTNUM,D0
 BEQ SSLID2

 CLR.L D0
 MOVE LINENUM,D0
 MULU #1000,D0
 DIVU BOTNUM,D0
SSLID2 MOVE D0,INTIN+4

 CMP OLDSLID,D0
 BEQ NOPOS
 MOVE D0,OLDSLID
 JMP AES
NOPOS RTS

*----------FILL SCROLL BUFFER-----------

TECALC MOVE.L SCROLL,A0
 MOVE #MAXLINE-1,D0
TELX01 MOVE #-1,(A0)+
 DBF D0,TELX01

 LEA TEREC2,A0
 CLR.L D0
 MOVE TEXOFF(A0),D0
 MULU #4,D0
 ADD VIEWRECT+4(A0),D0
 SUB #2,D0
 DIVU TEXSIZE(A0),D0
 AND.L #255,D0
 SUB #1,D0
 MOVE D0,TEMPHOLD

 MOVE.L HTEXT(A0),A2
 TST.B (A2)
 BEQ TELX30

 MOVE.L SCROLL,A3

 CLR.L D1
 CLR TECOUNT

TELX9 MOVE D1,(A3)+
 MOVE.L A2,A4
 MOVE TECOUNT,BOTNUM

 CMP #1,WORDWRAP(A0)
 BNE TELX16

 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE TEMPHOLD,D4

TELX10 MOVE.B (A4),D0
 BEQ TELX30
 CMP.B #' ',D0
 BEQ TELX20
 CMP.B #13,D0
 BEQ TELX18
 ADD #1,A4
 ADD #1,D2
 SUB #1,D4
 BNE TELX10

TELX19 ADD D3,D1
 TST D3
 BNE TELX13
 ADD TEMPHOLD,D1
 CLR.L D0
 MOVE TEMPHOLD,D0
 ADD.L D0,A2
 JMP TELX13

TELX18 MOVE #1,D4

TELX20 ADD #1,D2
 ADD.L #1,A4
 MOVE D2,D3
 MOVE.L A4,A2
 SUB #1,D4
 BNE TELX10
 JMP TELX19

TELX16 MOVE.L A2,D0
 SUB.L HTEXT(A0),D0
 CMP TETXTEND(A0),D0
 BCC TELX30

TELX14 ADD TEMPHOLD,D1

TELX13 ADD #1,TECOUNT
 CMP #MAXLINE,TECOUNT
 BCS TELX9

TELX30 LEA TEREC2,A1
 MOVE SELSTART(A1),D0
 MOVE.L SCROLL,A0
 CLR.L D1

TELX33 TST (A0)
 BMI TELX31
 CMP (A0),D0
 BEQ TELX32
 BLT TELX31
 ADD #2,A0
 ADD #1,D1
 CMP #MAXLINE,D1
 BNE TELX33
TELX31 SUB #1,D1
TELX32 ADD #1,BOTNUM
 RTS

*----------------MENU SELECTED-------------------

W_MENU MOVE #33,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE EVMESG+6,INTIN
 MOVE #1,INTIN+2
 MOVE.L MENUADR,ADDRIN
 JSR AES

 MOVE EVMESG+6,D0
 MOVE EVMESG+8,D1

 CMP #MDESK,D0
 BEQ DODESK
 CMP #MFILE,D0
 BEQ DOFILE
 CMP #MEDIT,D0
 BEQ DOEDIT
 CMP #MOPTIONS,D0
 BEQ DOOPTION
 CMP #MSTYLE,D0
 BEQ DOSTYLE
 CMP #MGRAPHIC,D0
 BEQ DOGRAPH
 CMP #MICONS,D0
 BEQ DOICON
 CMP #MTRANSFR,D0
 BEQ DOTRANS
 JMP MAINLOOP

*---------FILE DROP-DOWN MENU---------

DOFILE CMP #MNEW,D1
 BEQ DONEW
 CMP #MSAVE,D1
 BEQ DOSAVE
 CMP #MSAVEAS,D1
 BEQ DOSAVEAS
 CMP #MOPEN,D1
 BEQ DOOPEN
 CMP #MCLOSE,D1
 BEQ DOCLOSE
 CMP #MQUIT,D1
 BEQ DOQUIT
 CMP #MRUN,D1
 BEQ DORUN
 JMP MAINLOOP

*-------NEW-------

DONEW CLR.B FORMFILE
 CLR.B FORMNAME
 CLR.B FORMNAME+1
 CLR SAVEFLAG
 CLR.B SAVEFILE
 CLR.B PRNTFILE
 CLR OBJTER
 CLR ICONUM
 CLR OBJCNT
 JSR OPENWIND
 CLR PAGENUM
 JSR SETPAGE
 JSR MENUSET1
 JSR CLREDMEM
 JSR WADE
 JMP WARMSTRT

WADE MOVE.L TEMEM,A0
 MOVE.L #MAXEDIT*EDITSZ,D0
 SUB #1,D0
WADLES CLR.B (A0)+
 DBF D0,WADLES
 RTS

CLREDMEM MOVE EDSIZE,D0
 MOVE.L EDMEM,A0
 MOVE.L EDMEM2,A1
NEW1 CLR.B (A0)+
 CLR.B (A1)+
 SUB #1,D0
 TST D0
 BNE NEW1
 RTS

*----------OPEN FORM---------

DOOPEN CLR.B FORMFILE
 CLR.B FORMNAME+1

 LEA FSELMES3,A0
 JSR ADDPATH
 LEA FORMFILE,A4
 JSR F_SEL
 TST D0
 BMI MAINLOOP

 MOVE #11,D0
 LEA INFILE,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
DOLFRM12 MOVE.B (A0)+,(A1)+
 DBF D0,DOLFRM12

DOLFRM10 JSR CLOSEW
 JSR INITSELS
 JSR MENUSET3

 CLR TAILFLAG
 CLR SAVEFLAG
 CLR OBJCNT
 CLR ICONUM
 CLR OBJTER
 CLR PAGENUM
 CLR SQNCTYPE
 JSR SETPAGE
 JSR WADE

 MOVE.L STRINGADR,A0
 ADD #PROCMES1*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L MENUADR,A1
 ADD.L #MPROCED*24,A1
 MOVE.L A0,OB_SPEC(A1)

 MOVE #2,D0
 JSR SHWMOUSE

 LEA FORMFILE,A0
 JSR F_OPEN
 TST D0
 BPL DOLFRM11
 LEA FORMFILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOLFRM10
 JMP MAINLOOP

DOLFRM11 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L #FTEST,A1
 MOVE.L #4,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 CMP.L #'FRM2',FTEST
 BNE DOLFRM80

 MOVE FHANDLE,A0
 MOVE.L #SAVELEN,A1
 MOVE.L #4,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #SQNCTYPE,A1
 MOVE.L #2,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #CUTCOUNT,A1
 MOVE.L #2,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 TST CUTCOUNT
 BEQ DOLFRM20

 MOVE FHANDLE,A0
 MOVE.L CUTBUFF,A1
 MOVE.L SAVELEN,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 JSR OPENWIND
 JSR CLRNAMES
 MOVE #1,CUTFLAG
 MOVE #1,LDFLAG
 JSR OBJPASTE
 CLR LDFLAG
 CLR CUTFLAG
 CLR CUTCOUNT
 JSR CLREDMEM

DOLFRM20 MOVE FHANDLE,A0
 MOVE.L EDMEM,A1
 CLR.L D0
 MOVE EDSIZE,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 SUB #1,D0
 MOVE.L EDMEM,A0
GOS TST.B (A0)
 BNE GMS
 MOVE.B #' ',(A0)
GMS ADD.L #1,A0
 DBF D0,GOS
 CLR.B (A0)

 MOVE FHANDLE,A0
 JSR F_CLOSE

 LEA TEREC2,A0
 JSR TEACTIVE

 JSR SVNAME
 JSR MENUSET1
 JMP WARMSTRT

SVNAME LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS2 MOVE.B (A0)+,(A1)+
 DBF D0,GMS2
 RTS

CLRNAMES MOVE.L NAMEBUFF,A0
 MOVE.L #MAXOB*16,D0
 SUB #1,D0
NMSCLR CLR.B (A0)+
 DBF D0,NMSCLR
 RTS

*------CONVERT OLD FORM FORMAT--------

DOLFRM80 CMP.L #'FORM',FTEST
 BNE DOLFRM90

 CLR D0
 JSR SHWMOUSE

 MOVE.L CONVADR,A0
 ADD.L #CONVYES*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L CONVADR,A0
 ADD.L #CONVCNCL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L CONVADR,A0
 MOVE #-1,D0
 JSR FORMDO
 CMP #CONVCNCL,SAVERTRN
 BEQ MAINLOOP

 MOVE #2,D0
 JSR SHWMOUSE

 MOVE FHANDLE,A0
 LEA COUNT,A1
 MOVE.L #2,D0
 JSR F_READ
 CMP #2,D0
 BNE SAVEERR

 TST COUNT
 BEQ DOLF40

 CLR.L D0  ;Load object structure
 MOVE COUNT,D0
 MULU #32,D0
 MOVE.L D0,TEMP
 MOVE FHANDLE,A0
 MOVE.L CUTBUFF2,A1
 JSR F_READ
 CMP.L TEMP,D0
 BNE SAVEERR

 CLR.L D0  ;Skip TEDINFO structures
 MOVE COUNT,D0
 MULU #30,D0
 MOVE FHANDLE,A0
 JSR F_SEEK
 TST.L D0
 BMI SAVEERR

 CLR.L D0  ;Load NAME information
 MOVE COUNT,D0
 MULU #80,D0
 MOVE.L D0,TEMP
 MOVE FHANDLE,A0
 MOVE.L CUTBUFF2,A1
 ADD.L #6400,A1
 JSR F_READ
 CMP.L TEMP,D0
 BNE SAVEERR

 CLR.L D0  ;Skip validation & template structures
 MOVE COUNT,D0
 MULU #160,D0
 MOVE.L D0,TEMP
 MOVE FHANDLE,A0
 JSR F_SEEK
 TST.L D0
 BMI SAVEERR

 CLR OBJCNT
 CLR OBJTER
 CLR ICONUM

DOLF31 MOVE OBJCNT,D2
 CMP #MAXOB,D2
 BEQ MAXMES

 CLR.L D2
 MOVE OBJCNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 MOVE.L D2,OBJADR2

 CLR.L D0
 MOVE OBJCNT,D0
 MULU #32,D0
 ADD.L CUTBUFF2,D0
 MOVE.L D0,A1
 MOVE.L D0,OBJADR3

 MOVE 16(A1),OB_RECT(A4)
 MOVE 18(A1),D0
 SUB #$1C,D0
 CMP #2,GRMODE
 BNE DOLF52
 LSL #1,D0
DOLF52 ADD WINDY,D0
 MOVE D0,OB_RECT+2(A4)
 MOVE 20(A1),OB_RECT+4(A4)

 MOVE.L PALSTOR,A0
 ADD.L #OBEDIT*OBSIZE,A0
 MOVE OB_HGHT(A0),OB_RECT+6(A4)

 CLR.L D1
 MOVE WINDX,D1
 ADD #8,D1
 CMP OB_RECT(A4),D1
 BCS DOLF54
 MOVE D1,OB_RECT(A4)
 JMP DOLF55

DOLF54 CLR.L D1
 MOVE WINDX,D1
 ADD WINDW,D1
 SUB #8,D1
 CLR.L D2
 MOVE OB_RECT(A4),D2
 ADD OB_RECT+4(A4),D2
 CMP D2,D1
 BCC DOLF55
 SUB OB_RECT+4(A4),D1
 MOVE D1,OB_RECT(A4)

DOLF55 CLR.L D1
 MOVE OB_RECT+2(A4),D1
 SUB #3,D1
 CMP WINDY,D1
 BCC DOLF53
 MOVE WINDY,D0
 ADD #4,D0
 MOVE D0,OB_RECT+2(A4)
 JMP DOLF50

DOLF53 MOVE OB_RECT+2(A4),D1
 ADD OB_RECT+6(A4),D1
 MOVE WINDY,D2
 ADD WINDH,D2
 SUB #3,D2
 CMP D2,D1
 BCS DOLF50
 SUB OB_RECT+6(A4),D2
 SUB #3,D2
 MOVE D2,OB_RECT+2(A4)

DOLF50 CLR D0
 CMP #1,30(A1)
 BNE DOLFCSS
 CMP #MAXEDIT,OBJTER
 BNE DOLF32
 JMP MAXMES
DOLFCSS MOVE #1,D0
 TST 30(A1)
 BEQ DOLF32
 MOVE #2,D0
 CMP #3,30(A1)
 BEQ DOLF32
 MOVE #3,D0
DOLF32 MOVE D0,OBJTYP
 CLR WRAPFLAG
 JSR STARTONE
 MOVE.L OBJADR2,A4
 MOVE.L OBJADR3,A1

 CLR OB_SEL(A4)
 MOVE 26(A1),OB_TXTSZ(A4)
 MOVE 28(A1),OB_TXTEF(A4)

 MOVE #'C',OB_DEF(A4)
 MOVE #500,OB_DEF2(A4)
 CLR OB_EXTR(A4)

 MOVE #1,OB_COLR1(A4)
 MOVE #2,OB_COLR2(A4)

 TST OB_TYPE(A4)
 BNE DOLF49
 MOVE.L OB_TEREC(A4),A0
 MOVE #1,TECOLOR1(A0)
 MOVE #2,TECOLOR2(A0)
 MOVE #' ',TESCORE(A0)

DOLF49 CMP #2,OB_TYPE(A4)
 BNE DOLF41
 MOVE #1,OB_TXTSZ(A4)

DOLF41 CLR.L D0
 MOVE OBJCNT,D0
 MULU #80,D0
 ADD.L CUTBUFF2,D0
 ADD.L #6400,D0
 MOVE.L D0,A1

 MOVE.L OB_BUTNM(A4),A2
 MOVE.L #OBJSZ-2,D0
DOLF36 MOVE.B (A1)+,D0
 TST.B D0
 BEQ DOLF36A
 MOVE.B D0,(A2)+
 DBF D0,DOLF36
DOLF36A CLR.B (A2)

DOLF35 ADD #1,OBJCNT
 MOVE OBJCNT,D0
 CMP COUNT,D0
 BNE DOLF31

DOLF40 JSR OPENWIND
 MOVE #1,SAVEFLAG
 JMP DOLFRM20

*---Bad form file---

DOLFRM90 CLR D0
 JSR SHWMOUSE

 MOVE.L BADADR,A0
 ADD.L #BDCNCL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L BADADR,A0
 MOVE #-1,D0
 JSR FORMDO
 JMP MAINLOOP

*----------SAVE FORM---------

DOSAVE TST SAVEFLAG
 BNE DOSAVE2
 JMP NOCHANGES
DOSAVE2 JSR SAVEIT
 CLR SAVEFLAG
 JMP MAINLOOP

*---------SAVE FORM AS--------

DOSAVEAS JSR SAVEIT2
 CLR SAVEFLAG
 JMP MAINLOOP

*----SAVE FORM TO DISK FILE----

SAVEIT TST.B FORMFILE
 BNE SAVEIT3

SAVEIT2 MOVE.L FORMADR,A0
 ADD #SVFROK*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L FORMADR,A0
 ADD #SVFRCNCL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L FORMADR,A0
 ADD #SVFRNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L #SAVEFILE,TE_PTEXT(A0)

 MOVE.L FORMADR,A0
 MOVE #SVFRNAME,D0
 JSR FORMDO
 CMP #SVFRCNCL,SAVERTRN
 BNE SAVEIT3

 LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS3 MOVE.B (A0)+,(A1)+
 DBF D0,GMS3
 JMP MAINLOOP

SAVEIT3 LEA SAVEFILE,A0
 CLR D0
GMS8 ADD #1,D0
 TST.B (A0)+
 BNE GMS8
GMS9 CMP.B #'\',-(A0)
 BEQ GMS10
 SUB #1,D0
 BNE GMS9
 SUB #1,A0

GMS10 ADD #1,A0

 MOVE #11,D0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
 CLR D2
GMS98 MOVE.B (A0)+,D1
 BEQ GMS96
 CMP.B #'.',D1
 BNE GMS97
 MOVE #1,D2
GMS97 MOVE.B D1,(A1)+
 DBF D0,GMS98

GMS96 TST D2
 BNE GMS95
 MOVE.B #'.',(A1)+
 MOVE.B #'F',(A1)+
 MOVE.B #'R',(A1)+
 MOVE.B #'M',(A1)+
 CLR.B (A1)+

GMS95 LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS4 MOVE.B (A1)+,(A0)+
 DBF D0,GMS4

 MOVE #79,D0
 LEA FORMFILE,A0
SAVE3 TST.B (A0)
 BEQ SAVE4
 CMP.B #'_',(A0)
 BEQ SAVE4
 CMP.B #'.',(A0)
 BEQ SAVE5
 CMP.B #'\',(A0)+
 BEQ SAVE5
 DBF D0,SAVE3

SAVE4 CMP #79,D0
 BEQ MAINLOOP

 MOVE.B #'.',(A0)+
 MOVE.B #'F',(A0)+
 MOVE.B #'R',(A0)+
 MOVE.B #'M',(A0)+
 CLR.B (A0)
 LEA FORMFILE,A0
 JSR ADDPATH
 JMP SAVE6

SAVE5 LEA FORMFILE,A0

SAVE6 MOVE.L A0,TEMP

SAVE7 MOVE #2,D0
 JSR SHWMOUSE

 MOVE.L TEMP,A0
 JSR F_CREATE
 TST D0
 BPL SAVE8
 MOVE.L TEMP,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ SAVE7
 JMP MAINLOOP

SAVE8 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 LEA FHEAD,A1
 MOVE.L #4,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 LEA OBRECS,A4  ;Set EDIT object size
 CLR D4
SAVEITSZ TST OB_TYPE(A4)
 BNE SAVEITSZ2
 JSR CALCOBSIZE
 MOVE D0,OB_DEF2(A4)
SAVEITSZ2 ADD #OBRECSZ,A4
 ADD #1,D4
 CMP OBJCNT,D4
 BNE SAVEITSZ

 MOVE #1,CUTFLAG
 MOVE #1,SVFLAG
 JSR OBJCOPY
 CLR SVFLAG
 CLR CUTFLAG

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 OR.L #1,D0
 ADD.L #1,D0
 MOVE.L D0,SAVELEN

 MOVE FHANDLE,A0
 MOVE.L #SAVELEN,A1
 MOVE.L #4,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #SQNCTYPE,A1
 MOVE.L #2,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #CUTCOUNT,A1
 MOVE.L #2,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 TST CUTCOUNT
 BEQ SAVE10

 MOVE FHANDLE,A0
 MOVE.L CUTBUFF,A1
 MOVE.L SAVELEN,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

SAVE10 MOVE.L EDMEM,A1
 LEA TEREC2,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 ADD #1,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 JSR F_CLOSE

 JMP SVNAME

SAVEERR MOVE D0,TEMP
 MOVE FHANDLE,A0
 JSR F_CLOSE
 MOVE TEMP,D0

 LEA NOERRMES,A0
 JSR DISK_ERR
 JMP MAINLOOP

*-------------CLOSE FORM------------

DOCLOSE TST SAVEFLAG
 BEQ DOCLS2

 JSR ARESURE
 CMP #SURECNL,SAVERTRN
 BEQ MAINLOOP
 CMP #SURENO,SAVERTRN
 BEQ DOCLS2
 CMP #SUREYES,SAVERTRN
 BNE MAINLOOP

 JSR SAVEIT

DOCLS2 JSR DESELECT
 JSR CLOSEW
 JSR MENUSET3
 CLR SAVEFLAG
 JMP WARMSTRT

*-------------QUIT------------

DOQUIT LEA MT4,A0
 JSR SHELLWRT

DOQUIT2 TST SAVEFLAG
 BEQ QUIT2

 JSR ARESURE
 CMP #SURECNL,SAVERTRN
 BEQ MAINLOOP
 CMP #SURENO,SAVERTRN
 BEQ QUIT2
 CMP #SUREYES,SAVERTRN
 BNE MAINLOOP

 JSR SAVEIT

QUIT2 MOVE #2,D0
 JSR SHWMOUSE

 JSR DESELECT
 JSR CLOSEW
 JSR MENUSET3

*----------SAVE CLIPBOARD---------

 MOVE.L SCRAP,A0
 CLR.L D5
SVCLIP TST.B (A0)+
 BEQ SVCLIP2
 ADD #1,D5
 CMP #999,D5
 BNE SVCLIP

SVCLIP2 TST D5
 BEQ SVCLIP9
 TST CLIPFLAG
 BEQ SVCLIP9

 LEA SCRAPNAME,A0
 JSR ADDPATH
 JSR F_CREATE
 TST.L D0
 BMI SVCLIP9
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L #TEXTHEAD,A1
 MOVE.L #4,D0
 JSR F_WRITE

 MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L D5,D0
 JSR F_WRITE

 MOVE FHANDLE,A0
 JSR F_CLOSE

SVCLIP9 JSR TRANSRV
 JSR NOCLIP
 JSR TEXTINIT
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$FFFF,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

 MOVE #101,CONTRL  ;Close Virtual Workstation
 CLR CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 MOVE #19,CONTRL  ;Appl_exit
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES

 CLR -(A7)  ;P_term
 TRAP #1

*-------------RUN FORM------------

DORUN TST SAVEFLAG
 BEQ RUN2

 JSR ARESURE
 CMP #SURECNL,SAVERTRN
 BEQ MAINLOOP
 CMP #SURENO,SAVERTRN
 BEQ RUN2
 CMP #SUREYES,SAVERTRN
 BNE MAINLOOP
 JSR SAVEIT

RUN2 JSR CLOSEW

 MOVE #121,CONTRL  ;Shell_write
 MOVE #3,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 JSR ADDPATH
 MOVE.L #BASEPRG,ADDRIN
 MOVE.L #FORMNAME,ADDRIN+4
 JSR AES
 JMP QUIT2

SHELLWRT MOVE #121,CONTRL  ;Shell_write
 MOVE #3,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 JSR ADDPATH
 MOVE.L A0,ADDRIN
 MOVE.L #FORMFILE,ADDRIN+4
 JMP AES

*---------ASK ARE YOU SURE?-------

ARESURE MOVE.L SUREADR,A0
 ADD #SURECNL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 ADD #SURENO*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 ADD #SUREYES*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 MOVE #-1,D0
 JMP FORMDO

*---------EDIT DROP-DOWN MENU---------

DOEDIT CMP #MCUT,D1
 BEQ DOCUT
 CMP #MCOPY,D1
 BEQ DOCOPY
 CMP #MPASTE,D1
 BEQ DOPASTE
 CMP #MEDSQNC,D1
 BEQ DOSEQNC
 CMP #MWRAP,D1
 BEQ DOWRAP
 CMP #MCARET,D1
 BEQ DOCARET
 CMP #MSCORE,D1
 BEQ DOSCORE
 CMP #MUPRCASE,D1
 BEQ DOUPONLY
 JMP MAINLOOP

*------TOGGLE UNDERSCORE------

DOSCORE MOVE SCORFLAG,D0
 ADD #1,D0
 AND #1,D0
 MOVE D0,SCORFLAG
 JMP DOS999

*-------TOGGLE WORD WRAP-------

DOWRAP MOVE WRAPFLAG,D0
 ADD #1,D0
 AND #1,D0
 MOVE D0,WRAPFLAG
 JMP DOS999

*-------TOGGLE UPPER CASE-------

DOUPONLY MOVE UCFLAG,D0
 ADD #1,D0
 AND #1,D0
 MOVE D0,UCFLAG
 JMP DOS999

*-------TOGGLE BLINKING CARET-------

DOCARET CLR D0
 TST CARETFLG
 BNE DOCA10
 MOVE #3,D0
DOCA10 MOVE D0,CARETFLG
 JMP DOS999

*--------SEQUENCE FUNCTION--------

DOSEQNC TST OBJCNT
 BEQ MAINLOOP

 JSR DESELECT

 MOVE.L SEQADR,A0
 ADD.L #SQNC1*OBSIZE,A0
 MOVE #1,OB_STATE(A0)
 MOVE.L SEQADR,A0
 ADD.L #SQNC2*OBSIZE,A0
 CLR OB_STATE(A0)
 TST SQNCTYPE
 BEQ DOSEQ6
 MOVE.L SEQADR,A0
 ADD.L #SQNC1*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SEQADR,A0
 ADD.L #SQNC2*OBSIZE,A0
 MOVE #1,OB_STATE(A0)

DOSEQ6 MOVE.L SEQADR,A0
 ADD.L #SQNCCNCL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SEQADR,A0
 ADD.L #SQNCOK*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SEQADR,A0
 MOVE #-1,D0
 JSR FORMDO
 CMP #SQNCCNCL,SAVERTRN
 BEQ MAINLOOP

 MOVE #1,SQNCNUM
 CLR SQNCCNT

 CLR SQNCTYPE
 MOVE.L SEQADR,A0
 ADD.L #SQNC1*OBSIZE,A0
 CMP #1,OB_STATE(A0)
 BEQ DOSEQ2
 MOVE #1,SQNCTYPE

DOSEQ2 CLR COUNT
DOSEQ3 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE DOSEQ4

 CLR OB_SQNC(A4)
 ADD #1,SQNCCNT

DOSEQ4 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DOSEQ3

 TST SQNCCNT
 BEQ MAINLOOP

 MOVE #1,SQNCFLAG
 JSR MENUSET4

 MOVE.L STRINGADR,A3
 ADD #SQNCMES*OBSIZE,A3
 MOVE.L OB_SPEC(A3),A3
 ADD #30,A3
 CLR D0
 JSR CONV2DEC

 MOVE.L STRINGADR,A3
 ADD #SQNCMES*OBSIZE,A3
 MOVE.L OB_SPEC(A3),A3
 ADD #48,A3
 MOVE SQNCCNT,D0
 JSR CONV2DEC

 JSR STOREM

 TST PALSFLAG
 BEQ MAINLOOP
 JMP TOGPAL

*-------ABORT SEQUENCE FUNCTION?------

SQNCABORT MOVE #SQNCALRT,D0
 JSR GADDR2
 JSR DOALERT
 CMP #1,INTOUT
 BEQ SQNCDN
 CMP #2,INTOUT
 BEQ MAINLOOP

SQNCDN CLR COUNT
 CLR SQNCCNT
DOSEQ10 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE DOSEQ11
 MOVE SQNCCNT,OB_SQNC(A4)
 ADD #1,SQNCCNT
DOSEQ11 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DOSEQ10

DOSEDOW CLR SQNCFLAG
 MOVE #1,SQNCFLG2

 MOVE.L STRINGADR,A0
 ADD #SQNCFIN*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES

 JSR MENUSET1
 JMP W_REDRAW

*----------SEQUENCE FINISHED---------

SQNCDONE MOVE.L STRINGADR,A0
 ADD #SQNCFIN*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES

 CLR SQNCFLAG
 MOVE #1,SQNCFLG2
 JMP DOSEDOW

*------------CUT FUNCTION-------------

DOCUT MOVE #1,SAVEFLAG
 CMP #2,WINDFLAG
 BNE OBCUT
 MOVE #1,CLIPFLAG
 LEA TEREC2,A0
 JSR TECUT
 JMP MAINLOOP

*------------CUT AN OBJECT------------

OBCUT CLR CUTFLAG
 JSR OBJCOPY
 TST CUTCOUNT
 BEQ MAINLOOP

 MOVE CUTCOUNT,CUT2
 MOVE.L CUTBUFF,CUTADR

 MOVE.L CUTBUFF2,CUTBUFF
 MOVE #1,CUTFLAG
 JSR OBJCOPY

 JSR CLS

 CLR OBJCNT
 CLR ICONUM
 CLR OBJTER

 TST CUTCOUNT
 BEQ CUTNULL
 DC $A00A
 JSR OBJPASTE

CUTNULL MOVE.L CUTADR,CUTBUFF
 MOVE CUT2,CUTCOUNT

 JSR CLS
 MOVE #1,CUTFLAG
 JSR REDRAW
 CLR CUTFLAG

 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDW,D2
 MOVE WINDH,D3
 JSR DRAWPAL
 DC $A009
 JMP MAINLOOP

*------------COPY FUNCTION-------------

DOCOPY CMP #2,WINDFLAG
 BNE OBCOPY
 MOVE #1,CLIPFLAG
 LEA TEREC2,A0
 JSR TECOPY
 JMP MAINLOOP

*------------COPY AN OBJECT--------------

OBCOPY CLR CUTFLAG
 JSR OBJCOPY
 JMP MAINLOOP

OBJCOPY CLR CUTCOUNT
 TST OBJCNT
 BEQ COPYDONE

 MOVE.L CUTBUFF,A3

COPY99 CLR COUNT
COPY100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A2

 TST SVFLAG
 BNE COPY104

 TST CUTFLAG
 BEQ COPY98
 TST OB_SEL(A2)
 BNE COPY101
 JMP COPY104

COPY98 TST OB_SEL(A2)
 BEQ COPY101

COPY97 MOVE PAGENUM,D0
 CMP OB_PAGE(A2),D0
 BNE COPY101

COPY104 MOVE.L #OBRECSZ-1,D0
COPY102 MOVE.B (A2)+,(A3)+
 DBF D0,COPY102
 ADD #1,CUTCOUNT

COPY101 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE COPY100

 TST CUTCOUNT
 BEQ COPYDONE

 CLR COUNT
TEMPEST CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A2

 TST SVFLAG
 BEQ COPY96
 CLR.L D0
 MOVE OB_RECT+2(A2),D0
 SUB WINDY,D0
 MOVE D0,OB_RECT+2(A2)

 CMP #2,GRMODE
 BNE COPY96
 MOVE OB_RECT+2(A2),D0
 LSR #1,D0
 MOVE D0,OB_RECT+2(A2)
 MOVE OB_RECT+6(A2),D0
 LSR #1,D0
 MOVE D0,OB_RECT+6(A2)

COPY96 TST OB_TYPE(A2)
 BNE BORMEO

 MOVE.L OB_TEREC(A2),A1
 CMP.L #0,A1
 BEQ BORMEO
 MOVE.L A1,A4

 MOVE.L A3,D0
 MOVE.L A3,D1
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_TEREC(A2)

 MOVE.L #TERECSIZE-1,D0
ALF MOVE.B (A1)+,(A3)+
 DBF D0,ALF

 MOVE.L HTEXT(A4),A0
 CMP.L #0,A0
 BEQ BORMEO

 MOVE.L D1,A1
 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,HTEXT(A1)

 CLR.L D0
 MOVE TELENGTH(A4),D0
 BEQ BIMINI
 SUB #1,D0
BAHAMAS MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ BIMINI
 DBF D0,BAHAMAS

BIMINI MOVE.L A3,D0
 OR.L #1,D0
 ADD.L #1,D0
 MOVE.L D0,A3

BORMEO ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE TEMPEST

 CLR COUNT
COPY103 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A4

 MOVE.L OB_NAME(A4),A0   ;Object Name
 CMP.L #0,A0
 BEQ COPY105

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_NAME(A4)

 MOVE.L #100,D0
SEXY MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ COPY105
 DBF D0,SEXY

COPY105 MOVE.L OB_BUTNM(A4),A0   ;Button contents
 CMP.L #0,A0
 BEQ COPY205

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_BUTNM(A4)

 MOVE.L #100,D0
KINKS MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ COPY205
 DBF D0,KINKS

COPY205 CMP #6,OB_TYPE(A4)  ;Icon
 BNE COPY111

 MOVE.L OB_ICON(A4),A0
 CMP.L #0,A0
 BEQ COPY111

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_ICON(A4)

 CLR.L D0
 MOVE OB_ICSZ(A4),D0
 MULU #2,D0
 SUB #1,D0
COPY110 MOVE.B (A0)+,(A3)+
 DBF D0,COPY110

COPY111 ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE COPY103

COPYDONE RTS

*-------------PASTE---------------

DOPASTE MOVE #1,SAVEFLAG
 CMP #2,WINDFLAG
 BNE OBPASTE

 MOVE #2,D0
 JSR SHWMOUSE

 LEA TEREC2,A0
 JSR TEPASTE

 CLR D0
 JSR SHWMOUSE

 JSR LINEDOWN
 JMP EDLNDONE

*-------------PASTE AN OBJECT---------------

OBPASTE TST CUTCOUNT
 BEQ MAINLOOP
 JSR DESELECT
 JSR OBJPASTE
 JSR UPDATE
 JSR NOCLIP
 JSR SELECT
 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDW,D2
 MOVE WINDH,D3
 JSR DRAWPAL
 JMP MAINLOOP

OBJPASTE CLR COUNT
 TST CUTCOUNT
 BEQ PASTDN

BOOBS CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A3

 CLR.L D2
 MOVE OBJCNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_TYPE(A3)
 BNE MREDIT
 MOVE OBJTER,D0
 CMP #MAXEDIT,D0
 BGE MAXMESED

MREDIT CLR OB_SEL(A3)

 TST CUTFLAG
 BNE ANDASS

 MOVE #1,OB_SEL(A3)
 ADD #4,OB_RECT(A3)
 ADD #4,OB_RECT+2(A3)

ANDASS MOVE.L A3,A0
 MOVE.L A4,A1
 MOVE.L #OBRECSZ-1,D0
TITS MOVE.B (A0)+,(A1)+
 DBF D0,TITS

 TST LDFLAG
 BNE TITS2
 TST CUTFLAG
 BNE ANDTITS
 MOVE PAGENUM,OB_PAGE(A4)
 JMP ANDTITS

TITS2 CMP #2,GRMODE
 BNE ITSYOU
 MOVE OB_RECT+2(A4),D0
 LSL #1,D0
 MOVE D0,OB_RECT+2(A4)
 MOVE OB_RECT+6(A4),D0
 LSL #1,D0
 MOVE D0,OB_RECT+6(A4)

ITSYOU CLR.L D0
 MOVE OB_RECT+2(A4),D0
 ADD WINDY,D0
 MOVE D0,OB_RECT+2(A4)

ANDTITS CLR.L D0  ;Object Name
 MOVE OBJCNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,OB_NAME(A4)
 MOVE.L D0,A1

 MOVE.L OB_NAME(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0

 TST LDFLAG
 BNE BODYMIN1
 TST CUTFLAG
 BNE BODYMIN1
 MOVE #15,D0
BODYMIN2 CLR.B (A1)+
 DBF D0,BODYMIN2
 JMP BODY3

BODYMIN1 MOVE #15,D0
BODY2 MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D1
 BEQ BODY3
 DBF D0,BODY2

BODY3 CLR.L D0  ;Button Name
 MOVE OBJCNT,D0
 MULU #OBJSZ,D0
 ADD.L OBJMEM,D0
 MOVE.L D0,OB_BUTNM(A4)
 MOVE.L D0,A1

 MOVE.L OB_BUTNM(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0
 MOVE #OBJSZ-1,D0
BODY MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D1
 BEQ BODY4
 DBF D0,BODY

BODY4 CMP #6,OB_TYPE(A3)  ;Icon
 BNE PEEPEE

 CLR.L D0
 MOVE ICONUM,D0
 CMP #MAXICONS,D0
 BGE MAXMESIC

 MULU #ICONBUFSZ,D0
 ADD.L OBJICN,D0
 MOVE.L D0,OB_ICON(A4)
 MOVE.L D0,A1

 MOVE.L D0,A0
 MOVE #ICONBUFSZ-1,D0
BODY4BI CLR.B (A0)+
 DBF D0,BODY4BI

 ADD #1,ICONUM

 MOVE.L OB_ICON(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE OB_ICSZ(A4),D0
 MULU #2,D0
 SUB #1,D0
SKYLER MOVE.B (A0)+,(A1)+
 DBF D0,SKYLER
 JMP MARKEL

PEEPEE TST OB_TYPE(A3) ;TextEdit Field
 BNE MARKEL

 TST LDFLAG
 BEQ MINER49ER
 TST OB_SQNC(A4)
 BNE MINEMINE
MINER49ER MOVE OBJTER,OB_SQNC(A4)
 ADD #1,OB_SQNC(A4)

MINEMINE MOVE.L OB_TEREC(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A2

 CLR.L D0
 MOVE OBJTER,D0
 MULU #TERECSIZE,D0
 ADD.L #TERECS,D0
 MOVE.L D0,OB_TEREC(A4)
 MOVE.L D0,A0
 MOVE.L D0,A3

 MOVE.L #TERECSIZE-1,D0
ALF2 MOVE.B (A2)+,(A3)+
 DBF D0,ALF2

 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

 TST LDFLAG
 BEQ CRUSHER

 MOVE #1,TEYOFF(A0)
 MOVE #8,TEYOFF2(A0)
 MOVE #9,TXSIZE(A0)
 MOVE #9,LINEHIGH(A0)

 CMP #2,GRMODE
 BNE CRUSHER

 MOVE #10,TXSIZE(A0)
 MOVE #2,TEYOFF(A0)
 MOVE #16,TEYOFF2(A0)
 MOVE #18,LINEHIGH(A0)

CRUSHER MOVE.L HTEXT(A0),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE OBJTER,D0
 MULU #EDITSZ,D0
 ADD.L TEMEM,D0
 MOVE.L D0,HTEXT(A0)
 MOVE.L D0,A2

 MOVE OB_DEF2(A4),D0
 TST D0
 BNE RUNEM2
 MOVE #EDITSZ-1,D0
 MOVE D0,OB_DEF2(A4)
RUNEM2 MOVE D0,TELENGTH(A0)

 MOVE.L #EDITSZ-1,D0
RUNEM MOVE.B (A1)+,D1
 MOVE.B D1,(A2)+
 TST.B D1
 BEQ RUNNIN
 DBF D0,RUNEM

RUNNIN CLR.B (A2)
 ADD #1,OBJTER

MARKEL ADD #1,OBJCNT
 ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE BOOBS

PASTDN RTS

*---------OPTIONS DROP-DOWN MENU---------

DOOPTION CMP #MPROCED,D1
 BEQ DOPROC
 CMP #MHIDE,D1
 BEQ TOGPAL
 CMP #MGRID,D1
 BEQ TOGGRID
 CMP #MNAME,D1
 BEQ DONAME
 CMP #MPRINTF,D1
 BEQ DOPFLDS
 CMP #MCOUNTRY,D1
 BEQ DOCOUNTRY
 CMP #MLOADP,D1
 BEQ DOLOADP
 CMP #MSAVEP,D1
 BEQ DOSAVEP
 CMP #MPRINTP,D1
 BEQ DOPRINT
 JMP MAINLOOP

*-------LOAD PROCEDURE-------

DOLOADP LEA FSELMES2,A0
 JSR ADDPATH
 LEA PRNTFILE,A4
 JSR F_SEL
 TST D0
 BMI MAINLOOP

DOLO10 LEA PRNTFILE,A0
 JSR F_OPEN
 TST D0
 BPL DOLO11
 LEA PRNTFILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOLO10
 JMP MAINLOOP

DOLO11 MOVE D0,FHANDLE
 JSR CLREDMEM

DOLO12 MOVE FHANDLE,A0
 MOVE.L EDMEM2,A1
 CLR.L D0
 MOVE EDSIZE,D0
 JSR F_READ
 TST.L D0
 BPL DOLO13
 LEA NOERRMES,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOLO12
 JMP MAINLOOP

DOLO13 MOVE EDSIZE,D1
 MOVE.L EDMEM2,A0
 MOVE.L EDMEM,A1
DOLO13A MOVE.B (A0)+,D0
 CMP.B #10,D0
 BEQ DOLO13C
 MOVE.B D0,(A1)+
DOLO13C SUB #1,D1
 TST D1
 BNE DOLO13A
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+

 MOVE #1,SAVEFLAG

 CMP #2,D0
 BCS DOLO18

 SUB #2,D0        ;FIX OLD FORMS FILE BUG
 MOVE.L EDMEM,A0
DOLO15 TST.B (A0)
 BNE DOLO16
 MOVE.B #' ',(A0)
DOLO16 ADD #1,A0
 DBF D0,DOLO15
 CLR.B (A0)

DOLO18 MOVE FHANDLE,A0
 JSR F_CLOSE

 LEA TEREC2,A0
 JSR TEACTIVE

 JMP MAINLOOP

*-------SAVE PROCEDURE-------

DOSAVEP MOVE.L SAVEADR,A0
 ADD.L #SVCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L SAVEADR,A0
 ADD.L #SVOK*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L SAVEADR,A0
 ADD.L #SAVENAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L #PRNTFILE,TE_PTEXT(A0)

 MOVE.L SAVEADR,A0
 MOVE #SAVENAME,D0
 JSR FORMDO

 CMP #SVCANCEL,SAVERTRN
 BEQ MAINLOOP

 MOVE #127,D0
 LEA PRNTFILE,A0
SVP10 TST.B (A0)
 BEQ SVP12
 CMP.B #'.',(A0)
 BEQ SVP11
 CMP.B #'_',(A0)
 BEQ SVP12
 CMP.B #'\',(A0)+
 BEQ SVP11
 DBF D0,SVP10

SVP12 MOVE.B #'.',(A0)+
 MOVE.B #'T',(A0)+
 MOVE.B #'X',(A0)+
 MOVE.B #'T',(A0)+
 CLR.B (A0)

 LEA PRNTFILE,A0
 JSR ADDPATH
 JMP SVP13

SVP11 LEA PRNTFILE,A0

SVP13 MOVE.L A0,TEMP

 CLR TEMP2
 MOVE EDSIZE,D1
 MOVE.L EDMEM,A0
 MOVE.L EDMEM2,A1
SVP100 MOVE.B (A0)+,D0
 CMP.B #13,D0
 BNE SVP101
 MOVE.B D0,(A1)+
 MOVE.B #10,(A1)+
 ADD #1,TEMP2
 JMP SVP102
SVP101 MOVE.B D0,(A1)+
SVP102 SUB #1,D1
 TST D1
 BNE SVP100
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+

SVP15 MOVE.L TEMP,A0
 JSR F_CREATE
 TST D0
 BPL SVP14
 MOVE.L TEMP,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ SVP15
 JMP MAINLOOP

SVP14 MOVE D0,FHANDLE

 MOVE.L EDMEM2,A1
 LEA TEREC2,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 ADD TEMP2,D0
 ADD #1,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 TST.L D0
 BPL SVP16
 LEA NOERRMES,A0
 JSR DISK_ERR

SVP16 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP MAINLOOP

SVPERR LEA NOERRMES,A0
 JSR DISK_ERR
 JMP MAINLOOP

*-------PRINT PROCEDURE-------

DOPRINT JSR TECALC
 CLR PRINTNUM
 MOVE #2,D0
 JSR SHWMOUSE
 CLR.L TIMEOUT

DOPR99 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ DOPR98
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BEQ DOPR15
DOPR98 MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD.L #2,A7
 TST.B D0
 BEQ DOPR99

 JSR PRINTHEADER
 LEA FLDMESZ,A0
 JSR PRINTIT

DOPR100 MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD.L #2,A7
 TST.B D0
 BNE DOPR21

 ADD.L #1,TIMEOUT
 CMP.L #70000,TIMEOUT
 BCS DOPR100
 CLR.L TIMEOUT

 CLR D0
 JSR SHWMOUSE

 MOVE.L PRINTREE,A0
 ADD.L #PCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L PRINTREE,A0
 ADD.L #POK*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L PRINTREE,A0
 MOVE #-1,D0
 JSR FORMDO
 CMP #PCANCEL,SAVERTRN
 BEQ MAINLOOP
 JMP DOPR100

DOPR21 LEA FLDMESY,A0
 JSR PRINTIT

 CLR.L D0
 MOVE PRINTNUM,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE (A0),D0
 MOVE D0,D1

 TST D0
 BMI DOPR14

 LEA TEREC2,A1
 ADD.L HTEXT(A1),D0
 MOVE.L D0,A4

 MOVE #80,COUNT
 TST 2(A0)
 BMI DPR101
 MOVE 2(A0),D2
 SUB D1,D2
 MOVE D2,COUNT

DPR101 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ DOPR11
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BEQ DOPR14

DOPR11 CLR D0
 MOVE.B (A4)+,D0
 CMP.B #13,D0
 BEQ DOPR13
 JSR PRINTCHAR

 SUB #1,COUNT
 TST COUNT
 BNE DOPR11

DOPR13 MOVE #13,D0
 JSR PRINTCHAR
 MOVE #10,D0
 JSR PRINTCHAR

 ADD #1,PRINTNUM
 JMP DOPR100

DOPR14 MOVE #13,D0
 JSR PRINTCHAR
 MOVE #10,D0
 JSR PRINTCHAR

DOPR15 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

*-----------FILE SELECTOR------------

F_SEL MOVE.L #127,D0
 LEA INPATH,A1
 LEA INFILE,A2
LDIC100 CLR.B (A1)+
 CLR.B (A2)+
 DBF D0,LDIC100

 LEA INPATH,A1
 MOVE #37,D0
FSEL2 MOVE.B (A0)+,(A1)+
 DBF D0,FSEL2

 MOVE #90,CONTRL
 CLR CONTRL+2
 MOVE #2,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE.L #INPATH,ADDRIN
 MOVE.L #INFILE,ADDRIN+4
 JSR AES

 TST INTOUT
 BEQ LDIC800
 TST INTOUT+2
 BEQ LDIC800

 LEA INPATH,A0
LDIC101 MOVE.B (A0)+,D0
 CMP.B #' ',D0
 BEQ LDIC102
 CMP.B #'*',D0
 BEQ LDIC102
 MOVE.B D0,(A4)+
 JMP LDIC101

LDIC102 LEA INFILE,A0
LDIC103 MOVE.B (A0)+,D0
 TST.B D0
 BEQ LDIC104
 CMP.B #' ',D0
 BEQ LDIC104
 MOVE.B D0,(A4)+
 JMP LDIC103

LDIC104 CLR.B (A4)+
 CLR D0
 RTS

LDIC800 MOVE #-1,D0
 RTS

*-------SELECT COUNTRY-------

DOCOUNTRY MOVE.L LANDTREE,A0
 ADD.L #MUSA*OBSIZE,A0
 MOVE #8,D0
DOC10 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 DBF D0,DOC10

 CLR.L D0
 MOVE INTLCODE,D0
 MULU #OBSIZE,D0
 ADD.L LANDTREE,D0
 ADD.L #MUSA*OBSIZE,D0
 MOVE.L D0,A0
 MOVE #1,OB_STATE(A0)

 MOVE.L LANDTREE,A0
 ADD.L #MUSAOK*OBSIZE,A0
 CLR OB_STATE(A0)

 JSR TRANSRV
 MOVE.L LANDTREE,A0
 MOVE #-1,D0
 JSR FORMDO
 CMP #NMCANCEL,SAVERTRN
 BEQ DONM10

 MOVE.L LANDTREE,A0
 ADD.L #MUSA*OBSIZE,A0
 CLR INTLCODE
 MOVE #8,D0
DOC20 TST OB_STATE(A0)
 BNE DOC21
 ADD.L #OBSIZE,A0
 ADD #1,INTLCODE
 DBF D0,DOC20

DOC21 JMP MAINLOOP

*-------PRINT FIELD INFO REPORT-------

DOPFLDS TST OBJCNT
 BEQ MAINLOOP

 MOVE #2,D0
 JSR SHWMOUSE

 JSR PRINTHEADER
 LEA FLDMES,A0
 JSR PRINTIT

 CLR COUNT
DOPR1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 MOVE.L #79,D0
 LEA FLDMES2,A0
DOPR30 MOVE.B #' ',(A0)+
 DBF D0,DOPR30

 LEA FLDMES2+6,A3
 MOVE COUNT,D0
 ADD #1,D0
 JSR CONV2DEC
 JSR BLANKLDS

 MOVE.L #OBTYPE0,A0
 TST OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE1,A0
 CMP #1,OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE2,A0
 CMP #2,OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE3,A0
 CMP #3,OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE4,A0
 CMP #4,OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE5,A0
 CMP #5,OB_TYPE(A4)
 BEQ DOPR3
 MOVE.L #OBTYPE6,A0

DOPR3 LEA FLDMES2+11,A3
DOPR4 MOVE.B (A0)+,D0
 TST.B D0
 BEQ DOPR5
 MOVE.B D0,(A3)+
 JMP DOPR4

DOPR5 TST OB_TYPE(A4)
 BNE DOPREDFLD
 JSR CALCOBSIZE
 LEA FLDMES2+18,A3
 JSR CONV2DEC
 JSR BLANKLDS

DOPREDFLD MOVE OB_PAGE(A4),D0
 ADD.B #'1',D0
 MOVE.B D0,FLDMES2+23

 LEA FLDMES2+28,A3
 TST OB_TYPE(A4)
 BNE DOXPR11
 MOVE OB_SQNC(A4),D0
 JSR CONV2DEC
 JSR BLANKLDS

DOXPR11 CLR.L D0
 MOVE COUNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,A0
 LEA FLDMES2+33,A1
 MOVE.L #15,D0
DOPR6 MOVE.B (A0)+,D1
 TST.B D1
 BEQ DOPR9
 MOVE.B D1,(A1)+
 DBF D0,DOPR6

DOPR9 MOVE.L OB_BUTNM(A4),A0   ;Object contents
 TST OB_TYPE(A4)
 BNE DOPR12
 MOVE.L OB_TEREC(A4),A0
 MOVE.L HTEXT(A0),A0
DOPR12 LEA FLDMES2+49,A3
 MOVE #15,D1
DOPR7 MOVE.B (A0)+,D0
 TST.B D0
 BEQ DOPR8
 MOVE.B D0,(A3)+
 DBF D1,DOPR7
 MOVE.B #'.',(A3)+
 MOVE.B #'.',(A3)+
 MOVE.B #'.',(A3)+

DOPR8 MOVE.B #13,(A3)+
 MOVE.B #10,(A3)+
 CLR.B (A3)

 JSR STATUS

 LEA FLDMES2,A0
 JSR PRINTIT

 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DOPR1

 JSR DOPFSPACE
 JSR DOPFSPACE
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

PRINTIT MOVE.B (A0)+,D0
 TST.B D0
 BEQ PRINTIT2
 JSR PRINTCHAR
 JMP PRINTIT
PRINTIT2 RTS

DOPFSPACE JSR STATUS
 MOVE.B #13,D0
 JSR PRINTCHAR
 MOVE.B #10,D0
 JSR PRINTCHAR
 MOVE.B #13,D0
 JSR PRINTCHAR
 MOVE.B #10,D0
 JMP PRINTCHAR

STATUS MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD #2,A7
 TST.B D0
 BNE STATEND

 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ STATUS
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BNE STATEND
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

STATEND RTS

BLANKLDS MOVE #1,D1  ;Clear leading zeros
BLANK1 CMP.B #'0',(A3)
 BNE BLANK2
 MOVE.B #' ',(A3)
 ADD #1,A3
 DBF D1,BLANK1
BLANK2 RTS

CALCOBSIZE MOVE.L OB_TEREC(A4),A0  ;Find object size
 CLR.L D0
 MOVE VIEWRECT+4(A0),D0
 SUB TEXOFF(A0),D0
 DIVU TEXSIZE(A0),D0
 CLR.L D1
 MOVE VIEWRECT+6(A0),D1
 SUB TEYOFF(A0),D1
 DIVU LINEHIGH(A0),D1
 AND.L #$FFFF,D0
 AND.L #$FFFF,D1
 MULU D1,D0
 RTS

PRINTHEADER JSR DOPFSPACE  ;Print report header

 MOVE.L STRINGADR,A0
 ADD #FLDMESB*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 LEA FLDMESZ,A0
 JSR PRINTIT

 MOVE.L STRINGADR,A0
 ADD #FLDMESC*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 LEA FORMNAME+1,A0
 JSR PRINTIT

 MOVE.L STRINGADR,A0
 ADD #FLDMESX*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 JSR CDATE
 LEA TIMEDATE,A0
 JSR PRINTIT

 JSR CTIME
 LEA TIMEDATE,A0
 JMP PRINTIT

*-----------------GET DATE-----------------

CDATE MOVE #42,-(A7)
 TRAP #1
 ADD #2,A7

 LEA TIMEDATE,A0
 MOVE D0,D1
 LSR.L #5,D1
 AND.L #$0F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #'/',(A0)+

 MOVE D0,D1
 AND.L #$1F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #'/',(A0)+

 MOVE D0,D1
 LSR.L #8,D1
 LSR.L #1,D1
 AND.L #$7F,D1
 ADD #80,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #' ',(A0)+
 CLR.B (A0)
 RTS

*-----------------GET TIME-----------------

CTIME MOVE #44,-(A7)
 TRAP #1
 ADD #2,A7

 LEA TIMEDATE,A0
 MOVE D0,D1
 LSR.L #8,D1
 LSR.L #3,D1
 AND.L #$1F,D1

 MOVE.B #'A',D2
 TST D1
 BNE CTIME4
 MOVE #12,D1
 JMP CTIME2

CTIME4 CMP #13,D1
 BCS CTIME2
 MOVE.B #'P',D2
 SUB #12,D1

CTIME2 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #':',(A0)+

 MOVE D0,D1
 LSR.L #5,D1
 AND.L #$3F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+

 MOVE.B #' ',(A0)+
 MOVE.B D2,(A0)+
 MOVE.B #'M',(A0)+
 MOVE.B #' ',(A0)+
 CLR.B (A0)
 RTS

**********************************
* SEND CHARACTER TO PRINTER PORT *
* D0=CHARACTER (DOES CONVERSION) *
**********************************

PRINTCHAR MOVEM.L D1-D7/A0-A4,-(A7)

 TST INTLCODE
 BEQ PRCR200

 CLR.L D1
 LEA PRCRTBL,A0
PRCR100 TST.B (A0)+
 BNE PRCR100
 ADD #1,D1
 CMP INTLCODE,D1
 BNE PRCR100

PRCR101 TST.B (A0)
 BEQ PRCR200
 CMP.B (A0),D0
 BEQ PRCR199
 ADD.L #2,A0
 JMP PRCR101

PRCR199 MOVE.B 1(A0),D0

PRCR200 MOVE D0,-(A7)   ;PRINTER PORT
 MOVE #5,-(A7)
 TRAP #1
 ADD.L #4,A7
 MOVEM.L (A7)+,D1-D7/A0-A4
 RTS

PRCRTBL
 DC.B 0       ;USA
 DC.B 156,35  ;UK
 DC.B 0
 DC.B 221,64  ;GERMANY
 DC.B 142,91
 DC.B 153,92
 DC.B 154,93
 DC.B 132,123
 DC.B 148,124
 DC.B 129,125
 DC.B 158,126
 DC.B 225,126
 DC.B 0
 DC.B 146,91  ;DENMARK
 DC.B 178,92
 DC.B 143,93
 DC.B 145,123
 DC.B 179,124
 DC.B 134,125
 DC.B 0
 DC.B 133,64   ;FRANCE
 DC.B 248,91
 DC.B 135,92
 DC.B 221,93
 DC.B 130,123
 DC.B 151,124
 DC.B 138,125
 DC.B 185,126
 DC.B 0
 DC.B 144,64   ;SWEDEN
 DC.B 142,91
 DC.B 153,92
 DC.B 143,93
 DC.B 154,94
 DC.B 130,96
 DC.B 132,123
 DC.B 148,124
 DC.B 134,125
 DC.B 129,126
 DC.B 0
 DC.B 248,91   ;ITALY
 DC.B 130,93
 DC.B 151,96
 DC.B 133,123
 DC.B 149,124
 DC.B 138,125
 DC.B 141,126
 DC.B 0
 DC.B 173,91   ;SPAIN
 DC.B 165,92
 DC.B 168,93
 DC.B 185,123
 DC.B 164,124
 DC.B 0
 DC.B 157,92   ;JAPAN
 DC.B 0
 EVEN

*-------NAME A FIELD-------

DONAME TST OBJCNT
 BEQ MAINLOOP

 MOVE #1,DESFLAG
 JSR DESELECT
 CLR DESFLAG

 CLR COUNT
DONM1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BNE DONM2
 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DONM1
 JMP DONM10

DONM2 MOVE.L NAMETREE,A0
 ADD.L #OBSIZE*FLDTYPE,A0
 MOVE.L #OBTYPE0,D0
 TST OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE1,D0
 CMP #1,OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE2,D0
 CMP #2,OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE3,D0
 CMP #3,OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE4,D0
 CMP #4,OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE5,D0
 CMP #5,OB_TYPE(A4)
 BEQ DONM3
 MOVE.L #OBTYPE6,D0
DONM3 MOVE.L D0,OB_SPEC(A0)

 MOVE.L NAMETREE,A0
 ADD.L #OBSIZE*PAGE1,A0
 CLR OB_STATE(A0)
 ADD #24,A0
 CLR OB_STATE(A0)
 ADD #24,A0
 CLR OB_STATE(A0)
 ADD #24,A0
 CLR OB_STATE(A0)

 CLR.L D0
 MOVE OB_PAGE(A4),D0
 ADD #PAGE1,D0
 MULU #OBSIZE,D0
 ADD.L NAMETREE,D0
 MOVE.L D0,A0
 MOVE #1,OB_STATE(A0)

 MOVE.L NAMETREE,A0
 ADD.L #OBSIZE*FLDNUM,A0
 MOVE.L OB_SPEC(A0),A3
 MOVE COUNT,D0
 ADD #1,D0
 JSR CONV2DEC
 JSR BLANKLDS

 MOVE.L NAMETREE,A0
 ADD.L #FLDSIZE*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A3
 MOVE.B #'-',(A3)
 MOVE.B #'-',1(A3)
 MOVE.B #'-',2(A3)
 TST OB_TYPE(A4)
 BNE DONM13
 JSR CALCOBSIZE
 JSR CONV2DEC
 JSR BLANKLDS

DONM13 MOVE.L NAMETREE,A0
 ADD.L #OBSIZE*FLDSQNC,A0
 MOVE.L OB_SPEC(A0),A3
 MOVE.B #'-',(A3)
 MOVE.B #'-',1(A3)
 MOVE.B #'-',2(A3)
 TST OB_TYPE(A4)
 BNE DONM11
 MOVE OB_SQNC(A4),D0
 JSR CONV2DEC
 JSR BLANKLDS

DONM11 MOVE.L NAMETREE,A0
 ADD.L #OBSIZE*OBNAMED,A0
 MOVE.L OB_SPEC(A0),A1
 MOVE.L #NAMEHOLD,TE_PTEXT(A1)

 CLR.L D0
 MOVE COUNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,A0
 LEA NAMEHOLD,A1
 MOVE.L #15,D0
DONM5 MOVE.B (A0)+,(A1)+
 DBF D0,DONM5

 MOVE.L NAMETREE,A0
 ADD.L #NMCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L NAMETREE,A0
 ADD.L #NMOK*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE OB_RECT(A4),SHRINK
 MOVE OB_RECT+2(A4),SHRINK+2
 MOVE OB_RECT+4(A4),SHRINK+4
 MOVE OB_RECT+6(A4),SHRINK+6

 JSR TRANSRV
 MOVE.L NAMETREE,A0
 MOVE #OBNAMED,D0
 JSR FORMDO

 JSR RSHRINK

 CMP #NMCANCEL,SAVERTRN
 BEQ DONM10

 MOVE #1,SAVEFLAG

 TST.B NAMEHOLD
 BEQ DONM102

 CLR COUNT2
DONM100 CLR.L D0
 MOVE COUNT2,D0
 CMP OBJCNT,D0
 BEQ DONM102
 CMP COUNT,D0
 BEQ DONM101
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,A0
 LEA NAMEHOLD,A1
 JSR MATCHER
 TST D0
 BEQ EXISTS
DONM101 ADD #1,COUNT2
 JMP DONM100

DONM102 CLR.L D0
 MOVE COUNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,A0
 LEA NAMEHOLD,A1
 MOVE.L #15,D0
DONM6 MOVE.B (A1)+,(A0)+
 DBF D0,DONM6

 CLR D1
 MOVE.L NAMETREE,A0
 ADD.L #PAGE1*OBSIZE,A0
 TST OB_STATE(A0)
 BNE DONM4
 ADD.L #OBSIZE,A0
 MOVE #1,D1
 TST OB_STATE(A0)
 BNE DONM4
 ADD.L #OBSIZE,A0
 MOVE #2,D1
 TST OB_STATE(A0)
 BNE DONM4
 MOVE #3,D1
DONM4 MOVE D1,OB_PAGE(A4)

 CMP PAGENUM,D1
 BEQ DONM10
 MOVE D1,PAGENUM
 JSR DESELECT
 JSR CLS
 JSR SETPAGE
 MOVE #1,CUTFLAG
 JSR UPDATE
 CLR CUTFLAG
 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDW,D2
 MOVE WINDH,D3
 JSR DRAWPAL
 JSR SELECT
 JMP MAINLOOP

DONM10 JSR SELECT
 JMP MAINLOOP

EXISTS JSR NMEXSTS
 JMP DONM10

RSHRINK MOVE #10,SHRINK
 MOVE #10,SHRINK+2
 MOVE #50,SHRINK+4
 MOVE #10,SHRINK+6
 RTS

*----------MATCH STRINGS A0 & A1----------

MATCHER CMP.L #0,A0
 BEQ MATBAD
 CMP.L #0,A1
 BEQ MATBAD

 MOVE.L A0,MHOLD1
 MOVE.L A1,MHOLD2

XMAT1 TST.B (A0)
 BEQ XMAT2
 MOVE.B (A0)+,D0
 CMP.B #'a',D0
 BCS XEM1
 CMP.B #'z'+1,D0
 BCC XEM1
 SUB.B #32,D0

XEM1 MOVE.B (A1)+,D1
 CMP.B #'a',D1
 BCS XEM2
 CMP.B #'z'+1,D1
 BCC XEM2
 SUB.B #32,D1
XEM2 CMP.B D0,D1
 BEQ XMAT1
 JMP XMAT3

XMAT2 TST.B (A1)
 BNE XMAT3
 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
 CLR D0
 RTS

XMAT3 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1

MATBAD MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
 MOVE #-1,D0
 RTS

************************************
* CONVERT THE VALUE IN D0 TO ASCII *
* A3 POINTS TO ASCII BUFFER        *
************************************

CONV2DEC AND.L #$FFFF,D0
 DIVU #100,D0
 MOVE.L D0,D1
 AND.L #15,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)

 SWAP D1
 AND.L #$FFFF,D1
 DIVU #10,D1
 MOVE.L D1,D0
 AND.L #15,D1
 ADD.B #'0',D1
 MOVE.B D1,1(A3)

 SWAP D0
 AND.L #$FFFF,D0
 AND.L #15,D0
 ADD.B #'0',D0
 MOVE.B D0,2(A3)

 RTS

*-------TOGGLE GRID ON/OFF------

TOGGRID CMP #1,WINDFLAG
 BNE MAINLOOP

 MOVE GRIDFLAG,D0
 ADD #1,D0
 AND #1,D0
 MOVE D0,GRIDFLAG

 CLR D1
 TST D0
 BEQ TOGG10
 MOVE #4,D1
TOGG10 MOVE.L MENUADR,A0
 ADD.L #MGRID*24,A0
 MOVE D1,OB_STATE(A0)
 JMP MAINLOOP

*-------TOGGLE PALETTE ON/OFF------

TOGPAL CMP #1,WINDFLAG
 BNE MAINLOOP

 MOVE.L STRINGADR,A0
 ADD #TOGMES1*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 TST PALSFLAG
 BNE TOG100
 MOVE.L STRINGADR,A0
 ADD #TOGMES2*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
TOG100 MOVE.L MENUADR,A1
 ADD.L #MHIDE*24,A1
 MOVE.L A0,OB_SPEC(A1)

 MOVE PALSFLAG,D0
 ADD #1,D0
 AND.L #1,D0
 MOVE D0,PALSFLAG

 TST D0
 BNE TOG200

 MOVE.L PALSTOR,A0
 MOVE OB_X(A0),HOLDX
 SUB #4,HOLDX
 MOVE OB_Y(A0),HOLDY
 SUB #2,HOLDY
 MOVE OB_WDTH(A0),HOLDW
 ADD #8,HOLDW
 MOVE OB_HGHT(A0),HOLDH
 ADD #6,HOLDH
 JSR UPDATE2
 JMP MAINLOOP

TOG200 MOVE #1,DESFLAG
 JSR DESELECT
 CLR DESFLAG
 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDW,D2
 MOVE WINDH,D3
 JSR DRAWPAL
 JSR SELECT
 JMP MAINLOOP

*--------START PROCEDURE EDITOR-------

DOPROC TST WINDFLAG
 BEQ MAINLOOP

 MOVE.L STRINGADR,A0
 ADD #PROCMES1*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 CMP #1,WINDFLAG
 BNE DOP100
 MOVE.L STRINGADR,A0
 ADD #PROCMES2*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
DOP100 MOVE.L MENUADR,A1
 ADD.L #MPROCED*24,A1
 MOVE.L A0,OB_SPEC(A1)

 CMP #2,WINDFLAG
 BEQ DOSQL

 JSR DESELECT

 JSR MENUSET2
 JSR CLOSEW
 JSR OPENEDW
 JSR INITPED

 MOVE #105,CONTRL  ;SET SIZE OF V SLIDER
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #16,INTIN+2
 MOVE #63,INTIN+4
 JSR AES

 JMP MAINLOOP

*---------INIT PROC EDITOR----------

INITPED CLR TEYLOC
 CLR VIEWNUM

 LEA TEREC2,A0

 MOVE WINDX,D0
 ADD #8,D0
 AND #$FFF8,D0
 MOVE D0,VIEWRECT(A0)
 MOVE WINDW,D1
 SUB D0,D1
 MOVE D1,VIEWRECT+4(A0)
 MOVE WINDY,VIEWRECT+2(A0)
 MOVE WINDH,VIEWRECT+6(A0)

 CLR TEXOFF(A0)
 MOVE #9,LINEHIGH(A0)
 MOVE #1,TEYOFF(A0)
 MOVE #8,TEYOFF2(A0)
 MOVE #8,TEXSIZE(A0)

 MOVE.L EDMEM,HTEXT(A0)
 MOVE EDSIZE,TELENGTH(A0)

 MOVE #1,WORDWRAP(A0)
 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE #3,CARETIME(A0)
 MOVE #9,TXSIZE(A0)
 MOVE #9,TXFONT(A0)
 CLR TXFACE(A0)
 CLR UCMODE(A0)
 MOVE #1,TECOLOR1(A0)

 CMP #2,GRMODE
 BNE CLRST

 ADD #4,VIEWRECT+2(A0)
 SUB #10,VIEWRECT+6(A0)
 MOVE #10,TXSIZE(A0)
 MOVE #2,TEYOFF(A0)
 MOVE #16,TEYOFF2(A0)
 MOVE LINEHIGH(A0),D0
 MULU #2,D0
 MOVE D0,LINEHIGH(A0)

CLRST JMP TEACTIVE

*---------BACK TO OBJECT EDITOR---------

DOSQL JSR MENUSET1
 JSR CLOSEW
 JSR OPENWIND
 JMP MAINLOOP

*---------DESK DROP-DOWN MENU---------

DODESK CMP #MABOUT,D1
 BNE MAINLOOP

 MOVE.L ABOUTDI,A0
 ADD.L #OBSIZE*MABTCONT,A0
 CLR OB_STATE(A0)

 MOVE.L ABOUTDI,A0
 MOVE #-1,D0
 JSR FORMDO

 JMP MAINLOOP

*-------------STYLE MENU-------------

DOSTYLE CMP #MOUTLINE,D1
 BEQ DOS101

 CMP #MCOLOR1,D1
 BCS MAINLOOP
 CMP #MNORMAL,D1
 BCS DOS100
 CMP #M8PT,D1
 BCS DOS101

 MOVE #4,TXTSIZE
 CMP #M20PT,D1
 BEQ DOS999
 SUB #M8PT,D1
 MOVE D1,TXTSIZE
 JMP DOS999

DOS100 SUB #MCOLOR1,D1
 MOVE D1,COLOR1
 JMP DOS999

DOS101 CMP #MNORMAL,D1
 BNE DOS102
 CLR TXTFX
 JMP DOS999

DOS102 CMP #MBOLD,D1
 BNE DOS103
 MOVE TXTFX,D1
 EOR #1,D1
 MOVE D1,TXTFX
 JMP DOS999

DOS103 CMP #MLIGHT,D1
 BNE DOS104
 MOVE TXTFX,D1
 EOR #2,D1
 MOVE D1,TXTFX
 JMP DOS999

DOS104 CMP #MITALICS,D1
 BNE DOS105
 MOVE TXTFX,D1
 EOR #4,D1
 MOVE D1,TXTFX
 JMP DOS999

DOS105 CMP #MUNDER,D1
 BNE DOS106
 MOVE TXTFX,D1
 EOR #8,D1
 MOVE D1,TXTFX
 JMP DOS999

DOS106 CMP #MOUTLINE,D1
 BNE DOS999
 MOVE TXTFX,D1
 EOR #16,D1
 MOVE D1,TXTFX

DOS999 JSR SETSELS

 TST OBJCNT
 BEQ DOS998

 CLR COUNT
DOS200 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ DOSRCRS

 MOVE #1,SAVEFLAG

 MOVE COLOR1,OB_COLR1(A4)
 MOVE COLOR2,OB_COLR2(A4)
 MOVE FILLPAT,OB_PATRN(A4)
 MOVE LINEWID,OB_WIDTH(A4)
 MOVE TXTSIZE,OB_TXTSZ(A4)
 MOVE TXTFX,OB_TXTEF(A4)

 TST OB_TYPE(A4)
 BNE DOS201
 MOVE.L OB_TEREC(A4),A0
 MOVE WRAPFLAG,WORDWRAP(A0)
 MOVE CARETFLG,CARETIME(A0)
 MOVE UCFLAG,UCMODE(A0)

 CLR D0
 MOVE.B #' ',D0
 TST SCORFLAG
 BEQ DOS203
 MOVE.B #'_',D0
DOS203 MOVE D0,TESCORE(A0)

DOS201 MOVE #1,KEYFLAG
 MOVE COUNT,D0
 JSR OBJ_DRAW
 CLR KEYFLAG

DOSRCRS ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DOS200

DOS998 JMP MAINLOOP

*-------------GRAPHICS MENU-------------

DOGRAPH CMP #MPAT1,D1
 BCS DOG100
 CMP #MPAT8+1,D1
 BCC DOG100
 CMP #MPAT8,D1
 BEQ DOG102
 SUB #MPAT1,D1
 MOVE D1,FILLPAT
 JMP DOS999

DOG102 MOVE #8,FILLPAT
 JMP DOS999

DOG100 CMP #MGRCLR1,D1
 BCS MAINLOOP
 CMP #MGRCLR4+1,D1
 BCC MAINLOOP
 SUB #MGRCLR1,D1
 MOVE D1,COLOR2
 JMP DOS999

*-------------ICONS MENU-------------

DOICON CMP #MLDICON,D1
 BEQ LOADICON
 JMP MAINLOOP

*------------TRANSFER MENU------------

DOTRANS CMP #MTRNGEM,D1
 BEQ DOBOOB

 LEA MT1,A0
 CMP #MTRNSQL,D1
 BEQ DOTIT
 LEA MT2,A0
 CMP #MTRNSORT,D1
 BEQ DOTIT
 LEA MT3,A0
 CMP #MTRNUTIL,D1
 BEQ DOTIT
 LEA MT4,A0
 CMP #MTRNMENU,D1
 BNE DOBOOB

DOTIT MOVE #121,CONTRL  ;Shell_write
 MOVE #3,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 JSR ADDPATH
 MOVE.L A0,ADDRIN
 MOVE.L #NULLFILE,ADDRIN+4
 JSR AES

DOBOOB JMP DOQUIT2

NULLFILE DC.B 0,0
 EVEN

*-------------REDRAW MESSAGE-------------

W_REDRAW MOVE EVMESG+6,D0
 CMP WIHANDLE,D0
 BNE MAINLOOP
 CMP #2,WINDFLAG
 BEQ DRAWED
 CMP #1,WINDFLAG
 BNE MAINLOOP
 JSR REDRAW
 JMP MAINLOOP

REDRAW MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ UPNOMORE
 JSR UPDATE2

UPAGAIN MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ UPNOMORE
 TST HOLDW
 BEQ UPNOMORE
 TST HOLDH
 BEQ UPNOMORE
 JSR UPDATE2
 JMP UPAGAIN

UPNOMORE RTS

*----------REDRAW EDIT WINDOW---------

DRAWED LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ EDUP2
 BMI EDUP2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP EDUP3
EDUP2 JSR TEDNOCAR

EDUP3 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ MAINLOOP
 JSR EDUP

DRAWED2 MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ MAINLOOP
 TST HOLDW
 BEQ MAINLOOP
 TST HOLDH
 BEQ MAINLOOP
 JSR EDUP
 JMP DRAWED2

EDUP JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D3
 JSR RECTANGLE

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D2
 JSR SETCLIP

 LEA TEREC2,A0
 JSR TEUPDATE

 LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ EDUP4
 BMI EDUP4
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
EDUP4 RTS

WIND_GET MOVE #104,CONTRL ;AES WIND_GET
 MOVE #2,CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES
 MOVE INTOUT+2,HOLDX
 MOVE INTOUT+4,HOLDY
 MOVE INTOUT+6,HOLDW
 MOVE INTOUT+8,HOLDH
 RTS

*-------------LOAD ICON DEFINITION-------------

LOADICON TST OBJCNT
 BEQ MAINLOOP

 CLR COUNT
LDICN1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ LDICN3
 CMP #6,OB_TYPE(A4)
 BEQ LDICN2
LDICN3 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE LDICN1
 JMP MAINLOOP
LDICN2 MOVE.L A4,OBJADR

 MOVE #1,DESFLAG
 JSR DESELECT
 CLR DESFLAG

 LEA FSELMES1,A0
 JSR ADDPATH
 LEA PRNTFILE,A4
 JSR F_SEL
 TST D0
 BMI LDIC99

 TST.B PRNTFILE
 BEQ LDIC99

 MOVE.L OBJADR,A0
 MOVE.L OB_ICON(A0),A0
 MOVE.L #15999,D0
LDIC105 CLR.B (A0)+
 DBF D0,LDIC105

 LEA PRNTFILE,A0
 JSR F_OPEN
 TST D0
 BMI LDIC99
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L LOADBUFF,A1
 MOVE.L LOADSIZE,D0
 JSR F_READ

 MOVE FHANDLE,A0
 JSR F_CLOSE

 MOVE #1,SAVEFLAG
 MOVE.L LOADBUFF,A4

 CMP.B #'/',(A4)
 BNE LDIC99

 JSR ICDEC
 MOVE.L OBJADR,A0
 MOVE D1,OB_RECT+4(A0)
 JSR ICDEC
 MOVE.L OBJADR,A0
 MOVE D1,OB_RECT+6(A0)
 JSR ICDEC
 MOVE.L OBJADR,A0
 MOVE D1,OB_ICSZ(A0)

 MOVE.L OBJADR,A0
 MOVE.L OB_ICON(A0),A3

 CLR.L D4
 MOVE OB_ICSZ(A0),D4
 SUB #1,D4

ICDECG JSR ICDEC
 MOVE D1,(A3)+
 DBF D4,ICDECG

LDIC99 JSR SELECT
 JMP MAINLOOP

*-----------FIND VALUE FROM C SOURCE CODE-----------

ICDEC MOVE #100,D0
 CLR.L D1
ICDEC1 CMP.B #'x',(A4)+
 BEQ ICDEC2
 DBF D0,ICDEC1
 JMP ICONBAD

ICDEC2 CLR.L D1
 CLR.L D0
 MOVE.B (A4),D0
 JSR ICDECON
 LSL #8,D0
 LSL #4,D0
 ADD.L D0,D1

 CLR.L D0
 MOVE.B 1(A4),D0
 JSR ICDECON
 AND.L #$FFFF,D0
 LSL #8,D0
 ADD.L D0,D1

 CLR.L D0
 MOVE.B 2(A4),D0
 JSR ICDECON
 AND.L #$FFFF,D0
 LSL #4,D0
 ADD.L D0,D1

 CLR.L D0
 MOVE.B 3(A4),D0
 JSR ICDECON
 AND.L #$FFFF,D0
 ADD.L D0,D1

ICONBAD RTS

ICDECON CMP.B #'9'+1,D0
 BCS ICDECO2
 SUB.B #'A',D0
 ADD.B #10,D0
 RTS
ICDECO2 SUB.B #'0',D0
 AND.L #15,D0
 RTS

*-----------SET MENU CHECKS-------------

INITSELS MOVE #1,COLOR1
 MOVE #2,COLOR2
 MOVE #1,FILLPAT
 MOVE #2,LINEWID
 MOVE #1,TXTSIZE
 CLR TXTFX
 CLR SCORFLAG
 MOVE #1,WRAPFLAG
 MOVE #3,CARETFLG
 CLR UCFLAG

SETSELS MOVE #MCOLOR1,D5
 MOVE.L #MPAT8-MCOLOR1,D6
SETS100 MOVE D5,D0
 JSR NOCHECK
 ADD #1,D5
 DBF D6,SETS100

 MOVE #MUPRCASE,D0
 JSR NOCHECK
 MOVE #MCARET,D0
 JSR NOCHECK
 MOVE #MWRAP,D0
 JSR NOCHECK
 MOVE #MSCORE,D0
 JSR NOCHECK

 MOVE #MOUTLINE,D0
 JSR NOCHECK

 TST UCFLAG
 BEQ SETNUCFLG
 MOVE #MUPRCASE,D0
 JSR CHECKIT

SETNUCFLG TST SCORFLAG
 BEQ SETS105A
 MOVE #MSCORE,D0
 JSR CHECKIT
SETS105A TST WRAPFLAG
 BEQ SETS105
 MOVE #MWRAP,D0
 JSR CHECKIT
SETS105 TST CARETFLG
 BEQ SETS106
 MOVE #MCARET,D0
 JSR CHECKIT

SETS106 MOVE #M20PT,D0
 JSR NOCHECK

 MOVE #MCOLOR1,D0
 ADD COLOR1,D0
 JSR CHECKIT

 MOVE #MGRCLR1,D0
 ADD COLOR2,D0
 JSR CHECKIT

 MOVE #MPAT1,D0
 ADD FILLPAT,D0
 CMP #8,FILLPAT
 BNE DOS997
 MOVE #MPAT8,D0
DOS997 JSR CHECKIT

 CMP #4,TXTSIZE
 BNE SETS201
 MOVE #M20PT,D0
 JMP SETS202

SETS201 MOVE #M8PT,D0
 ADD TXTSIZE,D0
SETS202 JSR CHECKIT

 MOVE TXTFX,D0
 BNE SETS110
 MOVE #MNORMAL,D0
 JSR CHECKIT
 JMP SETS999

SETS110 AND #1,D0
 BEQ SETS101
 MOVE #MBOLD,D0
 JSR CHECKIT

SETS101 MOVE TXTFX,D0
 AND #2,D0
 BEQ SETS102
 MOVE #MLIGHT,D0
 JSR CHECKIT

SETS102 MOVE TXTFX,D0
 AND #4,D0
 BEQ SETS103
 MOVE #MITALICS,D0
 JSR CHECKIT

SETS103 MOVE TXTFX,D0
 AND #8,D0
 BEQ SETS104
 MOVE #MUNDER,D0
 JSR CHECKIT

SETS104 MOVE TXTFX,D0
 AND #16,D0
 BEQ SETS999
 MOVE #MOUTLINE,D0
 JSR CHECKIT

SETS999 RTS

NOCHECK MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A0
 AND #$FFFB,OB_STATE(A0)
 RTS

CHECKIT MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A0
 OR #4,OB_STATE(A0)
 RTS

*--------MENU ENABLE/DISABLE------

* EDITING OPEN FORM IN OBJECT SCREEN
MENUSET1 LEA MENUALL,A0
 JSR DISABLE
 LEA MENU1,A0
 JMP ENABLE

* EDITING OPEN FORM IN PROCEDURE EDITOR
MENUSET2 LEA MENUALL,A0
 JSR DISABLE
 LEA MENU2,A0
 JMP ENABLE

* NO OPEN FORM
MENUSET3 LEA MENUALL,A0
 JSR DISABLE
 LEA MENU3,A0
 JMP ENABLE

* CHOOSING EDIT SEQUENCE
MENUSET4 LEA MENUALL,A0
 JMP DISABLE

* ICON SELECTED
MENUSET5 LEA MENU4,A0
 JMP ENABLE

* ICON DESELECTED
MENUSET6 LEA MENU4,A0
 JMP DISABLE

MENU1 DC.B MABOUT
 DC.B MSAVE,MSAVEAS,MCLOSE,MQUIT,MRUN
 DC.B MCUT,MCOPY,MPASTE,MEDSQNC,MWRAP,MCARET,MSCORE
 DC.B MPROCED
 DC.B MHIDE,MGRID,MNAME,MPRINTF,MCOUNTRY
 DC.B MCOLOR1,MCOLOR2,MCOLOR3,MCOLOR4
 DC.B MNORMAL,MBOLD,MLIGHT,MITALICS,MUNDER,MOUTLINE
 DC.B M8PT,M10PT,M14PT,M20PT,M28PT
 DC.B MGRCLR1,MGRCLR2,MGRCLR3,MGRCLR4
 DC.B MPAT1,MPAT2,MPAT3,MPAT4,MPAT5,MPAT6,MPAT7,MPAT8
 DC.B MTRNSQL,MTRNSORT,MTRNUTIL,MTRNMENU,MTRNGEM
 DC.B 0

MENU2 DC.B MABOUT
 DC.B MSAVE,MSAVEAS,MCLOSE,MQUIT,MRUN
 DC.B MCUT,MCOPY,MPASTE
 DC.B MPROCED
 DC.B MLOADP,MSAVEP,MPRINTP,MCOUNTRY
 DC.B MTRNSQL,MTRNSORT,MTRNUTIL,MTRNMENU,MTRNGEM
 DC.B 0
 EVEN

MENU3 DC.B MABOUT
 DC.B MNEW,MOPEN
 DC.B MQUIT
 DC.B MTRNSQL,MTRNSORT,MTRNUTIL,MTRNMENU,MTRNGEM
 DC.B 0

MENU4 DC.B MLDICON,0

MENUALL DC.B MABOUT
 DC.B MNEW,MOPEN
 DC.B MSAVE,MSAVEAS,MCLOSE,MQUIT,MRUN
 DC.B MCUT,MCOPY,MPASTE,MEDSQNC,MWRAP,MCARET,MSCORE
 DC.B MPROCED
 DC.B MHIDE,MGRID,MNAME,MLOADP,MSAVEP,MPRINTP,MPRINTF,MCOUNTRY
 DC.B MCOLOR1,MCOLOR2,MCOLOR3,MCOLOR4
 DC.B MNORMAL,MBOLD,MLIGHT,MITALICS,MUNDER,MOUTLINE
 DC.B M8PT,M10PT,M14PT,M20PT,M28PT
 DC.B MGRCLR1,MGRCLR2,MGRCLR3,MGRCLR4
 DC.B MPAT1,MPAT2,MPAT3,MPAT4,MPAT5,MPAT6,MPAT7,MPAT8
 DC.B MLDICON
 DC.B MTRNSQL,MTRNSORT,MTRNUTIL,MTRNMENU,MTRNGEM
 DC.B 0
 EVEN

ENABLE CLR.L D0
 MOVE.B (A0)+,D0
 TST.B D0
 BEQ EN2
 MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A1
 AND #$FFF7,OB_STATE(A1)
 JMP ENABLE
EN2 RTS

DISABLE CLR.L D0
 MOVE.B (A0)+,D0
 TST.B D0
 BEQ DIS2
 MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A1
 OR #8,OB_STATE(A1)
 JMP DISABLE
DIS2 RTS

*---------BUTTON CLICKED---------

BUTEVENT MOVE #106,CONTRL  ;WHICH WINDOW?
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE EVXPOS,INTIN
 MOVE EVYPOS,INTIN+2
 JSR AES
 MOVE WIHANDLE,D0
 CMP INTOUT,D0
 BNE MAINLOOP

 TST SQNCFLG2
 BEQ BUTEV2
 LEA OKMES,A0
 JSR SETMES
 CLR SQNCFLG2

BUTEV2 CMP #2,WINDFLAG
 BNE BUTE2
 LEA TEREC2,A0
 JSR TECLICK
 JMP MAINLOOP

*-------------CHANGE PAGE---------------

BUTE2 MOVE #43,CONTRL
 MOVE #4,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #PGFOUR,INTIN+2
 MOVE EVXPOS,INTIN+4
 MOVE EVYPOS,INTIN+6
 MOVE.L PAGEADR,ADDRIN
 JSR AES

BUTE5 MOVE INTOUT,D0
 BMI BUTEVXX
 CMP #PGONE,D0
 BCS BUTEVXX
 CMP #PGFOUR+1,D0
 BCC BUTEVXX
 SUB #PGONE,D0

 CMP PAGENUM,D0
 BEQ MAINLOOP
 MOVE D0,PAGENUM

 JSR SETPAGE

 JSR DESELECT
 JSR CLS
 MOVE #1,CUTFLAG
 JSR REDRAW
 CLR CUTFLAG
 JSR SELECT
 JMP MAINLOOP

SETPAGE MOVE.L PAGEADR,A0
 ADD.L #PGONE*OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)

 CLR.L D0
 MOVE PAGENUM,D0
 ADD #PGONE,D0
 MULU #OBSIZE,D0
 ADD.L PAGEADR,D0
 MOVE.L D0,A0
 MOVE #1,OB_STATE(A0)
 RTS

*---------SEQUENCE CLICK-----------

BUTEVXX TST SQNCFLAG
 BEQ BUTE3

 JSR OBJFIND
 TST D0
 BMI MAINLOOP
 MOVE.L A4,OBJADR2

 TST OB_TYPE(A4)
 BNE MAINLOOP
 TST OB_SQNC(A4)
 BNE MAINLOOP

 MOVE SQNCNUM,OB_SQNC(A4)

 MOVE FINDOBJ,D0
 JSR OBJ_DRAW

 MOVE #1,SAVEFLAG

 MOVE.L STRINGADR,A3
 ADD #SQNCMES*OBSIZE,A3
 MOVE.L OB_SPEC(A3),A3
 ADD #30,A3
 MOVE SQNCNUM,D0
 JSR CONV2DEC

 MOVE SQNCCNT,D0
 CMP SQNCNUM,D0
 BEQ SQNCDONE

 ADD #1,SQNCNUM

 JMP MAINLOOP

*------------DRAG AN OBJECT OFF THE PALETTE------------

BUTE3 TST PALSFLAG
 BEQ MODOBJ

 MOVE #43,CONTRL  ;FIND PALETTE OBJECT
 MOVE #4,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #10,INTIN+2
 MOVE EVXPOS,INTIN+4
 MOVE EVYPOS,INTIN+6
 MOVE.L PALSTOR,ADDRIN
 JSR AES
 TST INTOUT
 BMI MODOBJ

 MOVE INTOUT,D0
 CLR D1
 CMP #OBEDIT,D0
 BEQ NEWOBJ
 MOVE #1,D1
 CMP #OBTEXT,D0
 BEQ NEWOBJ
 MOVE #2,D1
 CMP #OBBUTTON,D0
 BEQ NEWOBJ
 MOVE #3,D1
 CMP #OBOUTPUT,D0
 BEQ NEWOBJ
 MOVE #4,D1
 CMP #OBBOX,D0
 BEQ NEWBOX
 CMP #OBBOX2,D0
 BEQ NEWBOX
 CMP #OBBOX3,D0
 BEQ NEWBOX
 MOVE #5,D1
 CMP #OBCIRCLE,D0
 BEQ NEWOBJ
 CMP #OBCIRCL2,D0
 BEQ NEWCIR
 CMP #OBCIRCL3,D0
 BEQ NEWCIR
 MOVE #6,D1
 CMP #OBICON,D0
 BEQ NEWOBJ
 CMP #OBICON2,D0
 BEQ NEWICON
 CMP #OBICON3,D0
 BEQ NEWICON
 CMP #MPALDRAG,D0
 BNE MAINLOOP
 JMP DRAGPAL

NEWBOX MOVE #OBBOX,D0
 JMP NEWOBJ
NEWCIR MOVE #OBCIRCLE,D0
 JMP NEWOBJ
NEWICON MOVE #OBICON,D0
 JMP NEWOBJ

*--------------DRAG PALETTE--------------

DRAGPAL MOVE #1,DESFLAG
 JSR DESELECT
 CLR DESFLAG

 MOVE #4,D0
 JSR SHWMOUSE
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$AAAA,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE

 MOVE.L PALSTOR,A0
 MOVE OB_X(A0),OBJX
 MOVE OB_Y(A0),OBJY
 MOVE OB_WDTH(A0),OBJW
 MOVE OB_HGHT(A0),OBJH

 MOVE #71,CONTRL
 MOVE #8,CONTRL+2
 MOVE #3,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE OB_WDTH(A0),INTIN
 MOVE OB_HGHT(A0),INTIN+2
 MOVE OB_X(A0),INTIN+4
 MOVE OB_Y(A0),INTIN+6
 MOVE WINDX,INTIN+8
 ADD #4,INTIN+8
 MOVE WINDY,INTIN+10
 ADD #4,INTIN+10
 MOVE WINDW,INTIN+12
 SUB #8,INTIN+12
 MOVE WINDH,INTIN+14
 SUB #8,INTIN+14
 JSR AES

 DC $A00A

 TST INTOUT
 BEQ DPAL999

 MOVE.L PALSTOR,A0
 MOVE INTOUT+2,OB_X(A0)
 MOVE INTOUT+4,OB_Y(A0)

 JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE OBJX,D0
 MOVE D0,D2
 MOVE OBJY,D1
 SUB #2,D1
 MOVE D1,D3
 ADD OBJW,D2
 ADD #4,D2
 ADD OBJH,D3
 ADD #4,D3
 JSR RECTANGLE

 MOVE OBJX,D0
 MOVE D0,D2
 MOVE OBJY,D1
 SUB #2,D1
 MOVE D1,D3
 ADD OBJW,D2
 ADD #4,D2
 ADD OBJH,D3
 ADD #4,D3
 JSR SETCLIP

 TST OBJCNT
 BEQ DPAL999
 CLR COUNT
PALD520 MOVE COUNT,D0
 JSR OBJ_DRAW
 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE PALD520

DPAL999 CLR D0
 JSR SHWMOUSE

 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDW,D2
 MOVE WINDH,D3
 JSR DRAWPAL
 JSR SELECT

 DC $A009
 JMP MAINLOOP

*---------------CREATE A NEW OBJECT---------------

NEWOBJ MOVE D0,OBJNUM
 MOVE D1,OBJTYP

 MOVE OBJCNT,D2
 CMP #MAXOB,D2
 BEQ MAXMES

 CLR.L D2
 MOVE OBJCNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 MOVE.L D2,OBJADR2

 CLR.L D0
 MOVE OBJNUM,D0
 MULU #OBSIZE,D0
 MOVE.L PALSTOR,A0
 ADD.L D0,A0

 MOVE OB_WDTH(A0),OB_RECT+4(A4)
 MOVE OB_HGHT(A0),OB_RECT+6(A4)

 MOVE.L PALSTOR,A1     ;GRAF_DRAGBOX
 MOVE OB_X(A0),D0
 ADD OB_X(A1),D0
 MOVE D0,INTIN+4
 MOVE OB_Y(A0),D0
 ADD OB_Y(A1),D0
 MOVE D0,INTIN+6
 MOVE OB_WDTH(A0),INTIN
 MOVE OB_HGHT(A0),INTIN+2
 MOVE #71,CONTRL
 MOVE #8,CONTRL+2
 MOVE #3,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8

 MOVE WINDX,D0
 ADD #8,D0
 MOVE D0,INTIN+8
 MOVE WINDY,D0
 ADD #3,D0
 MOVE D0,INTIN+10
 MOVE WINDW,D0
 SUB #16,D0
 MOVE D0,INTIN+12
 MOVE WINDH,D0
 SUB #6,D0
 MOVE D0,INTIN+14
 JSR AES
 TST INTOUT
 BEQ MAINLOOP

 TST GRIDFLAG
 BEQ NOGRID
 MOVE INTOUT+2,D0
 AND.L #$FFF0,D0
 MOVE D0,INTOUT+2
 MOVE INTOUT+4,D0
 AND.L #$FFFC,D0
 MOVE D0,INTOUT+4

NOGRID MOVE INTOUT+2,OB_RECT(A4)  ;Save object rect
 MOVE INTOUT+4,OB_RECT+2(A4)

 MOVE #43,CONTRL   ;DID USER PLACE OBJECT OVER PALETTE?
 MOVE #4,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #0,INTIN
 MOVE #8,INTIN+2
 MOVE INTOUT+2,INTIN+4
 MOVE INTOUT+4,INTIN+6
 MOVE.L PALSTOR,ADDRIN
 JSR AES
 TST INTOUT
 BPL MAINLOOP

 JSR DESELECT
 JSR STARTONE
 CLR.L D0
 MOVE OBJCNT,D0
 JSR OBJ_DRAW
 MOVE.L OBJADR2,A4
 JSR SELIT
 ADD #1,OBJCNT
 MOVE #1,SAVEFLAG
 JMP MAINLOOP

* USING THIS ROUTINE YOU MUST ESTABLISH THE OB_RECT YOURSELF
* OBJADR2 POINTS TO THE OBJECT STRUCTURE

STARTONE MOVE.L OBJADR2,A4

 MOVE OBJTYP,OB_TYPE(A4)
 MOVE PAGENUM,OB_PAGE(A4)
 MOVE COLOR1,OB_COLR1(A4)
 MOVE COLOR2,OB_COLR2(A4)
 MOVE FILLPAT,OB_PATRN(A4)
 MOVE LINEWID,OB_WIDTH(A4)
 MOVE TXTFX,OB_TXTEF(A4)
 MOVE #1,OB_SEL(A4)
 MOVE TXTSIZE,OB_TXTSZ(A4)
 MOVE OBJTER,D0
 ADD #1,D0
 MOVE D0,OB_SQNC(A4)

 MOVE #'C',OB_DEF(A4)
 MOVE #12,OB_DEF2(A4)
 CLR OB_EXTR(A4)

 CLR.L D0
 MOVE OBJCNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,OB_NAME(A4)
 MOVE.L D0,A0
 CLR.B (A0)

 CLR.L D0
 MOVE OBJCNT,D0
 MULU #OBJSZ,D0
 ADD.L OBJMEM,D0
 MOVE.L D0,OB_BUTNM(A4)
 MOVE.L D0,A0
 CLR.B (A0)

 TST OBJTYP      ;Text
 BEQ NEW90
 CMP #6,OBJTYP   ;Icon
 BEQ NEW80
 CMP #1,OBJTYP   ;Text
 BEQ NEW81
 CMP #2,OBJTYP   ;Button
 BEQ NEW100
 CMP #3,OBJTYP   ;Output
 BEQ NEW82
 CLR.B (A0)
 CLR OB_CURS(A4)
 RTS

NEW100 MOVE.B #'B',(A0)+
 MOVE.B #'U',(A0)+
 MOVE.B #'T',(A0)+
 MOVE.B #'T',(A0)+
 MOVE.B #'O',(A0)+
 MOVE.B #'N',(A0)+
 CLR.B (A0)
 MOVE #12,D0
 CMP #2,GRMODE
 BNE NEW70
 LSL #1,D0
NEW70 MOVE D0,OB_RECT+6(A4)
 MOVE #6,OB_CURS(A4)
 RTS

NEW81 MOVE.B #'T',(A0)+
 MOVE.B #'E',(A0)+
 MOVE.B #'X',(A0)+
 MOVE.B #'T',(A0)+
 CLR.B (A0)
 MOVE #12,D0
 CMP #2,GRMODE
 BNE NEW71
 LSL #1,D0
NEW71 MOVE D0,OB_RECT+6(A4)
 MOVE #4,OB_CURS(A4)
 RTS

NEW82 MOVE.B #'O',(A0)+
 MOVE.B #'U',(A0)+
 MOVE.B #'T',(A0)+
 MOVE.B #'P',(A0)+
 MOVE.B #'U',(A0)+
 MOVE.B #'T',(A0)+
 CLR.B (A0)
 MOVE #12,D0
 CMP #2,GRMODE
 BNE NEW72
 LSL #1,D0
NEW72 MOVE D0,OB_RECT+6(A4)
 MOVE #6,OB_CURS(A4)
 RTS

NEW80 JSR MENUSET5
 CLR.L D0
 MOVE ICONUM,D0
 CMP #MAXICONS,D0
 BGE MAXMESIC
 MULU #ICONBUFSZ,D0
 ADD.L OBJICN,D0
 MOVE.L D0,OB_ICON(A4)
 ADD #1,ICONUM
 RTS

NEW90 CLR.L D0
 MOVE OBJTER,D0
 CMP #MAXEDIT,D0
 BGE MAXMESED
 MULU #TERECSIZE,D0
 ADD.L #TERECS,D0
 MOVE.L D0,OB_TEREC(A4)
 MOVE.L D0,A0

 CLR.L D0
 MOVE OBJTER,D0
 MULU #EDITSZ,D0
 ADD.L TEMEM,D0
 MOVE.L D0,HTEXT(A0)

 MOVE #12,TELENGTH(A0)

 MOVE.L D0,A1
 CLR.B (A1)

 ADD #1,OBJTER
 ADD #2,OB_RECT+6(A4)

 MOVE OBJTER,OB_SQNC(A4)

 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

 MOVE #9,LINEHIGH(A0)
 MOVE #1,TEYOFF(A0)
 MOVE #8,TEYOFF2(A0)
 MOVE #2,TEXOFF(A0)
 MOVE #8,TEXSIZE(A0)
 MOVE #' ',TESCORE(A0)

 MOVE WRAPFLAG,WORDWRAP(A0)
 MOVE CARETFLG,CARETIME(A0)
 MOVE UCFLAG,UCMODE(A0)

 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE #9,TXSIZE(A0)
 MOVE #9,TXFONT(A0)
 CLR TXFACE(A0)

 CMP #2,GRMODE
 BNE COLORST

 MOVE #10,TXSIZE(A0)
 MOVE #2,TEYOFF(A0)
 MOVE #16,TEYOFF2(A0)
 MOVE #18,LINEHIGH(A0)

COLORST JMP TEACTIVE

*------------MODIFY AN EXISTING OBJECT------------

MODOBJ TST OBJCNT
 BEQ MAINLOOP

 JSR OBJFIND
 TST D0
 BMI SELAREA
 MOVE.L A4,OBJADR2

 JSR MENUSET6
 CMP #6,OB_TYPE(A4)
 BNE MODO99
 JSR MENUSET5

MODO99 CMP #1,SHIFTED
 BEQ MODO100
 CMP #2,SHIFTED
 BNE NEWSEL
MODO100 EOR #1,OB_SEL(A4)
 MOVE OB_COLR1(A4),COLOR1
 MOVE OB_COLR2(A4),COLOR2
 MOVE OB_PATRN(A4),FILLPAT
 MOVE OB_WIDTH(A4),LINEWID
 MOVE OB_TXTSZ(A4),TXTSIZE
 MOVE OB_TXTEF(A4),TXTFX
 JSR SELIT
 JSR SETSELS
 MOVE FINDOBJ,D0
 JSR OBJ_DRAW
 JMP MAINLOOP

NEWSEL TST OB_SEL(A4)
 BNE STRETCH

 MOVE.L A4,OBJADR
 JSR DESELECT
 MOVE.L OBJADR,A4
 MOVE #1,OB_SEL(A4)
 JSR SELIT

 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),COLOR1
 MOVE OB_COLR2(A4),COLOR2
 MOVE OB_PATRN(A4),FILLPAT
 MOVE OB_WIDTH(A4),LINEWID
 MOVE OB_TXTSZ(A4),TXTSIZE
 MOVE OB_TXTEF(A4),TXTFX

 TST OB_TYPE(A4)
 BNE DOS202
 MOVE.L OB_TEREC(A4),A0
 MOVE WORDWRAP(A0),WRAPFLAG
 MOVE CARETIME(A0),CARETFLG
 MOVE UCMODE(A0),UCFLAG

 CLR SCORFLAG
 CMP #' ',TESCORE(A0)
 BEQ DOS202
 ADD #1,SCORFLAG
DOS204 MOVE D0,SCORFLAG

DOS202 JSR SETSELS

*------STRETCH AN OBJECT-------

STRETCH CMP #2,CLICK12
 BEQ DONAME

 MOVE.L OBJADR2,A4
 CMP #6,OB_TYPE(A4)
 BEQ DRAGIT
 MOVE OB_RECT(A4),D0
 ADD OB_RECT+4(A4),D0
 SUB #8,D0
 CMP EVXPOS,D0
 BCC DRAGIT
 MOVE OB_RECT+2(A4),D0
 ADD OB_RECT+6(A4),D0
 SUB #8,D0
 CMP EVYPOS,D0
 BCC DRAGIT

 MOVE.L A4,OBJADR
 JSR DESELECT
 MOVE.L OBJADR,A4
 MOVE #1,OB_SEL(A4)
 JSR SELIT

 MOVE #3,D0
 JSR SHWMOUSE

 JSR STOREM

 MOVE.L OBJADR2,A4
 JSR SELIT

 MOVE #7,D0
 JSR LINETYPE
 MOVE #$AAAA,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE

 MOVE.L OBJADR2,A4
 MOVE #2,D0
 MOVE #2,D1
 CMP #4,OB_TYPE(A4)
 BEQ STRE3
 MOVE #10,D0
 MOVE #16,D1
 TST OB_TYPE(A4)
 BEQ STRE3
 MOVE #8,D0
 MOVE #16,D1

STRE3 CMP #2,GRMODE
 BNE STRE6
 LSL #1,D0

STRE6 MOVE #70,CONTRL  ;GRAF_RUBBERBOX
 MOVE #4,CONTRL+2
 MOVE #3,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE.L OBJADR2,A4
 MOVE OB_RECT(A4),INTIN
 MOVE OB_RECT+2(A4),INTIN+2
 MOVE D1,INTIN+4
 MOVE D0,INTIN+6
 JSR AES

 TST GRIDFLAG
 BEQ STRE7
 MOVE INTOUT+2,D0
 AND.L #$FFF0,D0
 MOVE D0,INTOUT+2

STRE7 CLR.L D0
 MOVE WINDX,D0
 ADD WINDW,D0
 SUB #8,D0
 CMP INTOUT+4,D0
 BCC STREFRK
 MOVE D0,INTOUT+4

STREFRK MOVE.L OBJADR2,A4
 CMP #5,OB_TYPE(A4)  ;CIRCLE
 BNE STRE2
 MOVE INTOUT+2,D0
 LSR #1,D0
 CMP #2,GRMODE ;MONO
 BNE STRE4
 LSL #1,D0
STRE4 MOVE D0,INTOUT+4

 ADD OB_RECT+2(A4),D0
 ADD #1,D0
 MOVE WINDY,D2
 ADD WINDH,D2
 SUB D0,D2
 BCS STRE5

STRE2 MOVE INTOUT+2,OB_RECT+4(A4)
 MOVE INTOUT+4,OB_RECT+6(A4)

 TST OB_TYPE(A4)
 BNE STRE5
 MOVE.L OB_TEREC(A4),A0
 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

 CLR.L D0   ;Evaluate new size
 MOVE VIEWRECT+4(A0),D0
 SUB TEXOFF(A0),D0
 DIVU TEXSIZE(A0),D0
 CLR.L D1
 MOVE VIEWRECT+6(A0),D1
 SUB TEYOFF(A0),D1
 DIVU LINEHIGH(A0),D1
 AND.L #$FFFF,D0
 AND.L #$FFFF,D1
 MULU D1,D0
 SUB #1,D0
 MOVE D0,OB_DEF2(A4)
 MOVE D0,TELENGTH(A0)

STRE5 JSR UPDATE

 MOVE.L OBJADR2,A4
 JSR SELIT

 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

*------------DRAG AN OBJECT-----------

DRAGIT MOVE.L OBJADR2,A4
 TST OB_TYPE(A4)
 BNE DRAGIT2

 MOVE EVXPOS,D0
 MOVE EVYPOS,D1
 CLR.L D3
 JSR INSIDE

DRAGIT2 JSR MKSTATE

 TST GRIDFLAG
 BEQ NOGRID3
 MOVE INTOUT+2,D0
 AND.L #$FFF0,D0
 MOVE D0,INTOUT+2
 MOVE INTOUT+4,D0
 AND.L #$FFFC,D0
 MOVE D0,INTOUT+4

NOGRID3 MOVE INTOUT+6,D0
 AND #1,D0
 BEQ MAINLOOP
 MOVE EVXPOS,D0
 CMP INTOUT+2,D0
 BNE DRAG100
 MOVE EVYPOS,D0
 CMP INTOUT+4,D0
 BNE DRAG100
 JMP DRAGIT

DRAG100 MOVE INTOUT+2,DRAGHOLD
 MOVE INTOUT+4,DRAGHOLD+2
 CLR DRAGFLAG

 MOVE #1,DESFLAG
 JSR DESELECT
 CLR DESFLAG

 MOVE #4,D0  ;FLAT HAND
 JSR SHWMOUSE

 JSR NOCLIP
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$AAAA,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE
 CLR D0
 CLR D1
 JSR LINEEND
 JSR TRANSRV

 JSR STOREM

 TST GRIDFLAG
 BEQ DRAGLOOP

 CLR COUNT
DRAG210 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ DRAG211

 MOVE OB_RECT(A4),D0
 AND.L #$FFF0,D0
 MOVE D0,OB_RECT(A4)
 MOVE OB_RECT+2(A4),D0
 AND.L #$FFFC,D0
 MOVE D0,OB_RECT+2(A4)

 TST OB_TYPE(A4)
 BNE DRAG211
 MOVE.L OB_TEREC(A4),A0
 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

DRAG211 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DRAG210

DRAGLOOP CLR.L D0  ;VALID POSITION?
 MOVE DRAGHOLD,D0
 SUB EVXPOS,D0
 MOVE D0,DRAGX

 CLR.L D0
 MOVE DRAGHOLD+2,D0
 SUB EVYPOS,D0
 MOVE D0,DRAGY

 CLR COUNT
DRAG101 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_SEL(A4)
 BEQ DRAG102

 CLR.L D0
 MOVE OB_RECT(A4),D0
 ADD DRAGX,D0
 TST D0
 BMI DRAG299
 CMP #8,D0
 BCC DRAG300
DRAG299 CLR DRAGX

DRAG300 CLR.L D0
 MOVE OB_RECT(A4),D0
 ADD OB_RECT+4(A4),D0
 ADD DRAGX,D0
 ADD #8,D0
 CMP WINDW,D0
 BCS DRAG301
 CLR DRAGX

DRAG301 CLR.L D1
 MOVE OB_RECT+2(A4),D1
 ADD DRAGY,D1
 SUB #3,D1
 CMP WINDY,D1
 BCC DRAG302
 CLR DRAGY

DRAG302 CLR.L D1
 MOVE OB_RECT+2(A4),D1
 ADD OB_RECT+6(A4),D1
 ADD DRAGY,D1
 MOVE WINDY,D2
 ADD WINDH,D2
 SUB #3,D2
 CMP D2,D1
 BCS DRAG102
 CLR DRAGY

DRAG102 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DRAG101

 MOVE DRAGHOLD,EVXPOS
 MOVE DRAGHOLD+2,EVYPOS

 JSR DRAGGIN

 MOVE #1,SAVEFLAG

 CLR COUNT
DRAG103 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_SEL(A4)
 BEQ DRAG104

 CLR.L D0
 MOVE OB_RECT(A4),D0
 ADD DRAGX,D0
 TST GRIDFLAG
 BEQ DRAG330
 AND.L #$FFF0,D0
DRAG330 MOVE D0,OB_RECT(A4)

 CLR.L D1
 MOVE OB_RECT+2(A4),D1
 ADD DRAGY,D1
 TST GRIDFLAG
 BEQ DRAG331
 AND.L #$FFFC,D0
DRAG331 MOVE D1,OB_RECT+2(A4)

 DC $A00A
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JSR DRAWPOLY
 DC $A009
 MOVE #1,DRAGFLAG

DRAG104 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DRAG103

DRAGRCRS JSR MKSTATE  ;MOUSE MOVED?
 MOVE INTOUT+6,D0
 AND #1,D0
 BEQ DRAGDONE

 TST GRIDFLAG
 BEQ NOGRID4
 MOVE INTOUT+2,D0
 AND.L #$FFF0,D0
 MOVE D0,INTOUT+2
 MOVE INTOUT+4,D0
 AND.L #$FFFC,D0
 MOVE D0,INTOUT+4

NOGRID4 MOVE EVXPOS,D0
 CMP INTOUT+2,D0
 BNE DRAG105
 MOVE EVYPOS,D0
 CMP INTOUT+4,D0
 BNE DRAG105
 JMP DRAGRCRS

DRAG105 MOVE INTOUT+2,DRAGHOLD
 MOVE INTOUT+4,DRAGHOLD+2
 JMP DRAGLOOP

DRAGDONE JSR DRAGGIN
 JSR UPDATE
 JSR NOCLIP
 JSR SELECT
 MOVE #1,D0
 JSR LINETYPE
 JSR TRANSOFF
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

DRAGGIN DC $A00A
 TST DRAGFLAG
 BEQ DRAG202
 CLR COUNT
DRAG200 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ DRAG201

 TST OB_TYPE(A4)
 BNE DRAG203
 MOVE.L OB_TEREC(A4),A0
 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

DRAG203 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JSR DRAWPOLY
DRAG201 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DRAG200
DRAG202 DC $A009
 RTS

*------------SELECTION AREA-----------

SELAREA JSR DESELECT

 JSR TRANSRV
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$AAAA,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE

 MOVE #3,D0
 JSR SHWMOUSE

 MOVE #70,CONTRL  ;GRAF_RUBBERBOX
 MOVE #4,CONTRL+2
 MOVE #3,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE EVXPOS,INTIN
 MOVE EVYPOS,INTIN+2
 MOVE #10,INTIN+4
 MOVE #10,INTIN+6
 JSR AES
 MOVE EVXPOS,DRAGX
 MOVE EVYPOS,DRAGY
 MOVE INTOUT+2,DRAGW
 MOVE INTOUT+4,DRAGH

 CLR COUNT

SEL200 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE SEL201

 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 JSR INSIGHT
 TST D0
 BNE SEL201

 MOVE OB_RECT(A4),D0
 ADD OB_RECT+4(A4),D0
 MOVE OB_RECT+2(A4),D1
 JSR INSIGHT
 TST D0
 BNE SEL201

 MOVE OB_RECT(A4),D0
 ADD OB_RECT+4(A4),D0
 MOVE OB_RECT+2(A4),D1
 ADD OB_RECT+6(A4),D1
 JSR INSIGHT
 TST D0
 BNE SEL201

 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 ADD OB_RECT+6(A4),D1
 JSR INSIGHT
 TST D0
 BNE SEL201

 MOVE #1,OB_SEL(A4)
 JSR SELIT

SEL201 ADD #1,COUNT
 MOVE OBJCNT,D0
 CMP COUNT,D0
 BNE SEL200
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

INSIGHT CLR.L D2
 MOVE DRAGX,D2
 CMP D2,D0
 BCC INST2
 MOVE #1,D0
 RTS

INST2 MOVE DRAGX,D2
 ADD DRAGW,D2
 CMP D0,D2
 BCC INST3
 MOVE #1,D0
 RTS

INST3 MOVE DRAGY,D2
 CMP D2,D1
 BCC INST4
 MOVE #1,D0
 RTS

INST4 MOVE DRAGY,D2
 ADD DRAGH,D2
 CMP D1,D2
 BCC INST5
 MOVE #1,D0
 RTS

INST5 CLR.L D0
 RTS

*---------------SELECT-----------------

SELECT TST OBJCNT
 BEQ SEL102
 CLR COUNT
SEL100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST CUTFLAG
 BNE SEL103
 TST OB_SEL(A4)
 BEQ SEL101
SEL103 DC $A00A
 JSR SELIT
 DC $A009
SEL101 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE SEL100
SEL102 RTS

*---------------DESELECT-----------------

DESELECT TST OBJCNT
 BEQ DES102

 MOVE OBJCNT,COUNT
 SUB #1,COUNT

DES100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_SEL(A4)
 BEQ DES101
 JSR SELIT

DES101 TST COUNT
 BEQ DES210
 SUB #1,COUNT
 JMP DES100

DES210 MOVE OBJCNT,COUNT
 SUB #1,COUNT

DES200 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_SEL(A4)
 BEQ DES207

 TST DESFLAG
 BNE DES208
 CLR OB_SEL(A4)

DES208 TST OB_TYPE(A4)
 BNE DES207

 MOVE.L OB_TEREC(A4),A0
 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE CARETIME(A0),CARETTOG(A0)
 CLR CARETVAL(A0)
 JSR TEUPDATE

DES207 TST COUNT
 BEQ DES102
 SUB #1,COUNT
 JMP DES200

DES102 RTS

*------------STORE RECTANGLES---------

STOREM MOVE.L A4,-(A7)
 TST OBJCNT
 BEQ DRAG601
 CLR COUNT
DRAG600 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 MOVE OB_RECT(A4),OB_ORECT(A4)
 MOVE OB_RECT+2(A4),OB_ORECT+2(A4)
 MOVE OB_RECT+4(A4),OB_ORECT+4(A4)
 MOVE OB_RECT+6(A4),OB_ORECT+6(A4)
 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE DRAG600
DRAG601 MOVE.L (A7)+,A4
 RTS

*---------CLIPPED REDRAW----------

UPDATE DC $A00A

 TST OBJCNT
 BEQ TREK19

 CLR TREKCNT2
TREK10 CLR.L D2
 MOVE TREKCNT2,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 MOVE.L A4,TREKADR

 TST CUTFLAG
 BNE TREK11
 TST OB_SEL(A4)
 BEQ TREK14
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE TREK14

TREK11 JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE OB_ORECT(A4),D0
 MOVE D0,D2
 MOVE OB_ORECT+2(A4),D1
 MOVE D1,D3
 ADD OB_ORECT+4(A4),D2
 ADD OB_ORECT+6(A4),D3
 JSR RECTANGLE

 MOVE OB_ORECT(A4),D0
 MOVE D0,D2
 MOVE OB_ORECT+2(A4),D1
 MOVE D1,D3
 ADD OB_ORECT+4(A4),D2
 ADD OB_ORECT+6(A4),D3
 JSR SETCLIP

 CLR TREKCNT
TREK12 CLR.L D2
 MOVE TREKCNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A3

 MOVE TREKCNT2,D2
 CMP TREKCNT,D2
 BEQ TREK21

 MOVE PAGENUM,D0
 CMP OB_PAGE(A3),D0
 BNE TREK21

 MOVE.L TREKADR,A4

 MOVE OB_RECT(A3),D1
 ADD OB_RECT+4(A3),D1
 MOVE OB_ORECT(A4),D0
 CMP D1,D0
 BGT TREK21

 MOVE OB_ORECT(A4),D0
 ADD OB_ORECT+4(A4),D0
 CMP D1,D0
 BGT TREK22

 CMP OB_RECT(A3),D0
 BLT TREK21

TREK22 MOVE OB_RECT+2(A3),D1
 ADD OB_RECT+6(A3),D1
 MOVE OB_ORECT+2(A4),D0
 CMP D1,D0
 BGT TREK21

 MOVE OB_ORECT+2(A4),D0
 ADD OB_ORECT+6(A4),D0
 CMP D1,D0
 BGT TREK13

 CMP OB_RECT+2(A3),D0
 BLT TREK21

TREK13 MOVE TREKCNT,D0
 JSR OBJ_DRAW

TREK21 ADD #1,TREKCNT
 MOVE TREKCNT,D0
 CMP OBJCNT,D0
 BNE TREK12

*----------CHECK PALETTE ICONS------------

 TST CUTFLAG
 BNE TREK14

 MOVE.L PALSTOR,A3

 MOVE OB_X(A3),D1
 ADD OB_WDTH(A3),D1
 MOVE OB_ORECT(A4),D0
 CMP D1,D0
 BGT TREK25

 MOVE OB_ORECT(A4),D0
 ADD OB_ORECT+4(A4),D0
 CMP D1,D0
 BGT TREK26

 CMP OB_X(A3),D0
 BLT TREK25

TREK26 MOVE OB_Y(A3),D1
 ADD OB_HGHT(A3),D1
 MOVE OB_ORECT+2(A4),D0
 CMP D1,D0
 BGT TREK25

 MOVE OB_ORECT+2(A4),D0
 ADD OB_ORECT+6(A4),D0
 CMP D1,D0
 BGT TREK24

 CMP OB_Y(A3),D0
 BLT TREK25

TREK24 JMP TREK20

*----------CHECK PAGE ICONS------------

TREK25 MOVE.L PAGEADR,A3

 MOVE OB_X(A3),D1
 ADD OB_WDTH(A3),D1
 MOVE OB_ORECT(A4),D0
 CMP D1,D0
 BGT TREK14

 MOVE OB_ORECT(A4),D0
 ADD OB_ORECT+4(A4),D0
 CMP D1,D0
 BGT TREK27

 CMP OB_X(A3),D0
 BLT TREK14

TREK27 MOVE OB_Y(A3),D1
 ADD OB_HGHT(A3),D1
 MOVE OB_ORECT+2(A4),D0
 CMP D1,D0
 BGT TREK14

 MOVE OB_ORECT+2(A4),D0
 ADD OB_ORECT+6(A4),D0
 CMP D1,D0
 BGT TREK20

 CMP OB_Y(A3),D0
 BLT TREK14

*-------------DO THE PLOTTING----------

TREK20 MOVE OB_ORECT(A4),D0
 MOVE OB_ORECT+2(A4),D1
 MOVE OB_ORECT+4(A4),D2
 ADD #2,D2
 MOVE OB_ORECT+6(A4),D3
 ADD #2,D3
 JSR DRAWPAL

TREK14 ADD #1,TREKCNT2
 MOVE TREKCNT2,D0
 CMP OBJCNT,D0
 BNE TREK10

TREK15 JSR NOCLIP
 CLR COUNT
TREK16 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST CUTFLAG
 BNE TREK17
 TST OB_SEL(A4)
 BEQ TREK18
TREK17 MOVE COUNT,D0
 JSR OBJ_DRAW
TREK18 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE TREK16

TREK19 DC $A009
 RTS

*------SECONDARY UPDATE-------

UPDATE2 JSR UPDATE3

 JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 DC $A00A
 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D3
 JSR RECTANGLE
 DC $A009

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D2
 JSR SETCLIP

 TST OBJCNT
 BEQ UP101

 CLR COUNT2
UP100 MOVE COUNT2,D0
 JSR OBJ_DRAW
 ADD #1,COUNT2
 MOVE COUNT2,D0
 CMP OBJCNT,D0
 BNE UP100

UP101 JSR UPDATE3

 MOVE HOLDX,D0
 MOVE HOLDY,D1
 MOVE HOLDW,D2
 MOVE HOLDH,D3
 JMP DRAWPAL

UPDATE3 MOVE HOLDX,D0 ;SET/CLEAR SELECT KNOBS
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 ADD HOLDH,D3
 JSR SETCLIP

 TST OBJCNT
 BEQ UP201

 CLR COUNT
UP200 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ UPD202
 JSR SELIT2
UPD202 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE UP200

UP201 RTS

*-----------DRAW SELECT KNOBS-----------

SELIT JSR NOCLIP

SELIT2 MOVE PAGENUM,D7
 CMP OB_PAGE(A4),D7
 BNE SELIT3

 DC $A00A

 MOVE #1,D0
 JSR LINETYPE
 MOVE #2,D0
 JSR LINEWIDE
 CLR D0
 CLR D1
 JSR LINEEND
 JSR TRANSRV
 MOVE OB_RECT(A4),D0
 SUB #4,D0
 MOVE OB_RECT+2(A4),D1
 SUB #2,D1
 MOVE OB_RECT+4(A4),D2
 ADD #8,D2
 MOVE OB_RECT+6(A4),D3
 ADD #4,D3
 JSR DRAWPOLY

 MOVE OB_RECT(A4),D0
 SUB #5,D0
 MOVE OB_RECT+2(A4),D1
 SUB #3,D1
 MOVE OB_RECT+4(A4),D2
 ADD #10,D2
 MOVE OB_RECT+6(A4),D3
 ADD #6,D3
 JSR DRAWMARK
 DC $A009

SELIT3 RTS

*--------------FIND OBJECT NUMBER------------------
* RETURN A4 PTR TO OBJECT
* D0=-1 IF NO OBJECT FOUND

OBJFIND TST OBJCNT
 BEQ OBJ103

 MOVE OBJCNT,COUNT
 SUB #1,COUNT

OBJ100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 MOVE PAGENUM,D7
 CMP OB_PAGE(A4),D7
 BNE OBJ101

 MOVE EVXPOS,D0
 MOVE EVYPOS,D1
 CLR.L D3
 MOVE OB_SEL(A4),D3
 JSR INSIDE
 TST D0
 BEQ OBJ102

OBJ101 TST COUNT
 BEQ OBJ103
 SUB #1,COUNT
 JMP OBJ100
OBJ103 MOVE #-1,D0
 RTS

OBJ102 MOVE COUNT,FINDOBJ
 CLR D0
 RTS

*-----------INTERSECT-----------
* TEST POINT TO BE INSIDE OB_RECT, D0=X D1=Y
* RETURNS D0=1 IF OUTSIDE
INSIDE CLR.L D2
 MOVE OB_RECT(A4),D2
 TST D3
 BEQ INS6
 SUB #5,D2
INS6 CMP D2,D0
 BCC INS2
 MOVE #1,D0
 RTS

INS2 MOVE OB_RECT(A4),D2
 ADD OB_RECT+4(A4),D2
 TST D3
 BEQ INS7
 ADD #8,D2
INS7 CMP D0,D2
 BCC INS3
 MOVE #1,D0
 RTS

INS3 MOVE OB_RECT+2(A4),D2
 TST D3
 BEQ INS8
 SUB #6,D2
INS8 CMP D2,D1
 BCC INS4
 MOVE #1,D0
 RTS

INS4 MOVE OB_RECT+2(A4),D2
 ADD OB_RECT+6(A4),D2
 TST D3
 BEQ INS9
 ADD #6,D2
INS9 CMP D1,D2
 BCC INS5
 MOVE #1,D0
 RTS

INS5 CLR.L D0
 RTS

*----------PALETTE ROUTINES----------

DRAWPAL MOVE D0,PALX
 MOVE D1,PALY
 MOVE D2,PALW
 MOVE D3,PALH

 DC $A00A

 JSR TRANSOFF
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

 TST PALSFLAG
 BEQ NOPAL

 MOVE #42,CONTRL  ;OBJC_DRAW
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #10,INTIN+2
 MOVE PALX,INTIN+4
 MOVE PALY,INTIN+6
 MOVE PALW,INTIN+8
 MOVE PALH,INTIN+10
 MOVE.L PALSTOR,ADDRIN
 JSR AES

NOPAL MOVE #42,CONTRL  ;OBJC_DRAW
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #10,INTIN+2
 MOVE PALX,INTIN+4
 MOVE PALY,INTIN+6
 MOVE PALW,INTIN+8
 MOVE PALH,INTIN+10
 MOVE.L PAGEADR,ADDRIN
 JSR AES
 DC $A009
 RTS

*----------KEY PRESSED---------

KEYEVENT TST WINDFLAG
 BEQ KEYCLS

 TST SQNCFLG2
 BEQ KEYEV2Z
 LEA OKMES,A0
 JSR SETMES
 CLR SQNCFLG2

KEYEV2Z TST SQNCFLAG
 BNE SQNCABORT
 JMP KEYEV2

KEYCLS MOVE EVKEY,D0
 LSR #8,D0
 AND #$FF,D0
 CMP #59,D0
 BEQ DONEW
 CMP #60,D0
 BEQ DOOPEN
 JMP MAINLOOP

*----------KEYBOARD EQUIVALENTS---------

KEYEV2 MOVE EVKEY,D0
 MOVE D0,D1
 LSR #8,D1

 CMP.B #24,D0
 BEQ DOCUT
 CMP.B #3,D0
 BEQ DOCOPY
 CMP.B #22,D0
 BEQ DOPASTE

 CMP.B #18,D0
 BEQ DORUN
 CMP.B #4,D0
 BEQ DOSEQNC
 CMP.B #23,D0
 BEQ DOWRAP
 CMP.B #7,D0
 BEQ TOGGRID
 CMP.B #1,D0
 BEQ TOGPAL

 CMP.B #9,D0
 BNE KEYEV4
 CMP.B #23,D1
 BEQ DOPFLDS

KEYEV4 CMP.B #5,D0
 BEQ DOPROC
 CMP.B #21,D0
 BEQ DOCOUNTRY
 CMP.B #12,D0
 BEQ DOLOADP
 CMP.B #19,D0
 BEQ DOSAVEP
 CMP.B #16,D0
 BEQ DOPRINT
 CMP.B #15,D0
 BEQ DONAME

 CMP.B #61,D1
 BEQ DOSAVE
 CMP.B #62,D1
 BEQ DOSAVEAS
 CMP.B #63,D1
 BEQ DOCLOSE
 CMP.B #64,D1
 BEQ DOQUIT
 CMP.B #65,D1
 BCS KEYEV3
 CMP.B #69,D1
 BCC KEYEV3
 SUB #65,D1
 ADD #PGONE,D1
 MOVE D1,INTOUT
 JMP BUTE5

*-----------NORMAL KEY EVENT-----------

KEYEV3 CMP #2,WINDFLAG
 BEQ KEYBL3

 TST OBJCNT
 BEQ MAINLOOP

 CLR COUNT
KEDBL1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_SEL(A4)
 BEQ KEDBL2
 CMP #1,OB_TYPE(A4)
 BEQ KEINSRT
 CMP #2,OB_TYPE(A4)
 BEQ KEINSRT
 CMP #3,OB_TYPE(A4)
 BEQ KEINSRT
 TST OB_TYPE(A4)
 BNE KEDBL2
 MOVE.L OB_TEREC(A4),A0
 JSR TEKEY
 JMP MAINLOOP
KEDBL2 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE KEDBL1
 JMP MAINLOOP

KEINSRT MOVE #1,SAVEFLAG

 MOVE EVKEY,D1
 LSR #8,D1
 CMP #83,D1
 BEQ KEYDEL

 MOVE EVKEY,D0
 AND #$FF,D0
 CMP #27,D0
 BEQ KEYESC
 CMP #8,D0
 BEQ KEYDEL

 CMP #75,OB_CURS(A4)
 BEQ MAINLOOP

 CLR.L D1
 MOVE OB_CURS(A4),D1
 ADD.L OB_BUTNM(A4),D1
 MOVE.L D1,A0
 MOVE.B D0,(A0)+
 CLR.B (A0)+
 ADD #1,OB_CURS(A4)
 JMP KEYDRAW

KEYDEL TST OB_CURS(A4)
 BEQ MAINLOOP
 CLR.L D0
 MOVE OB_CURS(A4),D0
 SUB #1,D0
 ADD.L OB_BUTNM(A4),D0
 MOVE.L D0,A0
 CLR.B (A0)
 SUB #1,OB_CURS(A4)
 JMP KEYDRAW

KEYESC MOVE.L OB_BUTNM(A4),A0
 CLR.B (A0)+
 CLR OB_CURS(A4)

KEYDRAW MOVE #1,KEYFLAG
 MOVE COUNT,D0
 JSR OBJ_DRAW
 CLR KEYFLAG
 JMP MAINLOOP

KEYBL3 MOVE EVKEY,D1  ;UP/DOWN CURSOR KEYS
 LSR #8,D1
 MOVE #2,EVMESG+8
 CMP #72,D1
 BEQ DOARROW
 MOVE #3,EVMESG+8
 CMP #80,D1
 BEQ DOARROW

 MOVE #1,SAVEFLAG

 LEA TEREC2,A0
 JSR TEKEY
 JMP MAINLOOP

*--------GET MOUSE STATE-------

MKSTATE MOVE #79,CONTRL ;GRAF_MKSTATE
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JMP AES

*----------OBJECT DRAW LIBRARY------------

OB_RECT EQU 0   ;X Y W H
OB_TYPE EQU 8   ;0-EDIT 1-TEXT 2-BUTTON 3-OUTPUT 4-BOX 5-CIRCLE 6-ICON
OB_NAME EQU 10  ;POINTER TO NAME OF OBJECT
OB_COLR1 EQU 14 ;PRIMARY COLOR
OB_COLR2 EQU 16 ;SECONDARY COLOR
OB_PATRN EQU 18 ;PATTERN FILL INDEX FOR VDI SETINDEX CALL
OB_WIDTH EQU 20 ;LINE WIDTH FOR VDI POLYLINE CALL
OB_TXTSZ EQU 22 ;TEXT SIZE
OB_TXTEF EQU 24 ;TEXT EFFECTS
OB_TEREC EQU 26 ;POINTER TO TErec
OB_ICON EQU 30  ;POINTER TO ICON BLOCK
OB_ICSZ EQU 34  ;ICON BLOCK SIZE
OB_BUTNM EQU 36 ;POINTER TO BUTTON/OUTPUT/TEXT FIELD CONTENTS
OB_SEL EQU 40   ;SELECTED FLAG 1=ACTIVE
OB_ORECT EQU 42 ;OLD RECTANGLE X Y W H
OB_CURS EQU 50  ;CURSOR LOCATION
OB_PAGE EQU 52  ;PAGE NUMBER
OB_SQNC EQU 54  ;SEQUENCE NUMBER
OB_DEF EQU 56   ;DEFINITION D-DECIMAL I-INTEGER A-DATE E-EUROPEAN
OB_DEF2 EQU 58  ;DEFINED SIZE
OB_EXTR EQU 60  ;DECIMAL EXTENSION
OB_MISC EQU 62  ;MISCELLANEOUS STORAGE (4 BYTES)

OBRECSZ EQU 66 ;RECORD SIZE

* DRAW AN OBJECT
* D0 = OBJECT #

OBJ_DRAW DC $A00A
 JSR OBJ_DRAW2
 DC $A009
 RTS

OBJ_DRAW2 LEA OBRECS,A4
 AND.L #255,D0
 MULU #OBRECSZ,D0
 ADD.L D0,A4
 MOVE.L A4,OBJADR

 MOVE PAGENUM,D7
 CMP OB_PAGE(A4),D7
 BNE OBJ_DUD

 CLR.L D0
 MOVE OB_TYPE(A4),D0
 TST D0
 BEQ OBD_EDIT
 CMP #1,D0
 BEQ OBD_TEXT
 CMP #2,D0
 BEQ OBD_BUTN
 CMP #3,D0
 BEQ OBD_OUTP
 CMP #4,D0
 BEQ OBD_BOX
 CMP #5,D0
 BEQ OBD_CIRC
 CMP #6,D0
 BEQ OBD_ICON
OBJ_DUD RTS

*----------DRAW ICON OBJECT----------*

OBD_ICON MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 MOVE.L OB_ICON(A4),MFDB  ;Establish Memory Form Definition Block

 MOVE OB_RECT+4(A4),MFDB+4  ;Width in pixels
 MOVE OB_RECT+6(A4),MFDB+6  ;Height in pixels

 CLR.L D0
 MOVE OB_RECT+4(A4),D0      ;Width in bytes
 ADD #15,D0
 LSR #4,D0
 MOVE D0,MFDB+8

 MOVE #0,MFDB+10     ;Screen coordinates
 MOVE #1,MFDB+12     ;Mono resolution
 CLR MFDB+14         ;Reserved
 CLR MFDB+16
 CLR MFDB+18

 CLR.L MFDB2         ;Eastblish MFDB for screen
 CLR MFDB2+2
 CLR MFDB2+4
 CLR MFDB2+6
 CLR MFDB2+8
 CLR MFDB2+10
 CLR MFDB2+12
 CLR MFDB2+14
 CLR MFDB2+16
 CLR MFDB2+18

 MOVE #121,CONTRL
 MOVE #4,CONTRL+2
 MOVE #3,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE.L #MFDB,CONTRL+14
 MOVE.L #MFDB2,CONTRL+18
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #0,INTIN+4

 MOVE #0,PTSIN   ;Source rectangle
 MOVE #0,PTSIN+2

 MOVE.L OBJADR,A4
 MOVE OB_RECT+4(A4),PTSIN+4
 SUB #1,PTSIN+4
 MOVE OB_RECT+6(A4),PTSIN+6

 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE D0,D2
 ADD OB_RECT+4(A4),D2
 MOVE D1,D3
 ADD OB_RECT+6(A4),D3

 MOVE D0,PTSIN+8
 MOVE D1,PTSIN+10
 SUB #1,D2
 MOVE D2,PTSIN+12
 MOVE D3,PTSIN+14
 JMP VDI

*----------DRAW BOX OBJECT----------*

OBD_BOX MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 TST OB_PATRN(A4)
 BNE OBD_B2
 CLR D0
 JSR SETFILL
 JMP OBD_B3
OBD_B2 MOVE #2,D0
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
OBD_B3 JSR TRANSOFF

 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT(A4),D2
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+2(A4),D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 JSR RECTANGLE

 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR
 MOVE OB_WIDTH(A4),D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE

 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JMP DRAWPOLY

*----------DRAW CIRCLE OBJECT----------*

OBD_CIRC MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0    ;INTERIOR COLOR
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 TST OB_PATRN(A4)
 BNE OBD_C2
 CLR D0
 JSR SETFILL
 JMP OBD_C3
OBD_C2 MOVE #2,D0
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
OBD_C3 JSR TRANSOFF
 MOVE #1,D0
 JSR FILLPERI

 MOVE #11,CONTRL ;VDI CIRCLE
 MOVE #3,CONTRL+2
 CLR CONTRL+6
 MOVE #4,CONTRL+10
 MOVE GRHANDLE,CONTRL+12

 MOVE.L OBJADR,A4

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 ADD OB_RECT(A4),D0
 MOVE D0,PTSIN

 MOVE OB_RECT+6(A4),D0
 LSR #1,D0
 ADD OB_RECT+2(A4),D0
 MOVE D0,PTSIN+2

 CLR PTSIN+4
 CLR PTSIN+6

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 MOVE D0,PTSIN+8

 CLR PTSIN+10
 JSR VDI

 CLR D0
 JSR SETFILL
 MOVE #1,D0

 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR
 JSR TRANSON

 MOVE #11,CONTRL ;VDI CIRCLE
 MOVE #3,CONTRL+2
 CLR CONTRL+6
 MOVE #4,CONTRL+10
 MOVE GRHANDLE,CONTRL+12

 MOVE.L OBJADR,A4
 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 ADD OB_RECT(A4),D0
 MOVE D0,PTSIN

 MOVE OB_RECT+6(A4),D0
 LSR #1,D0
 ADD OB_RECT+2(A4),D0
 MOVE D0,PTSIN+2

 CLR PTSIN+4
 CLR PTSIN+6

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 MOVE D0,PTSIN+8

 CLR PTSIN+10
 JMP VDI

*----------DRAW BUTTON OBJECT----------*

OBD_BUTN DC $A00A
 CLR OUTFLAG

 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #9,HELPER
 JSR OBD_RR
 MOVE #8,HELPER
 JMP OBD_OP3

OBD_OP2 JSR OBD_INI

OBD_OP3 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR SETCOLOR
 MOVE #1,D0    ;PATTERN
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
 MOVE.L OBJADR,A4
 MOVE OB_WIDTH(A4),D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE
 JSR TRANSOFF
 MOVE #1,D0
 JSR FILLPERI

 JSR TRANSON
 MOVE.L OBJADR,A4
 CLR.L D0
 MOVE OB_TXTSZ(A4),D0
 ADD.L #TXTBUFF,D0
 MOVE.L D0,A1
 CLR.L D0
 MOVE.B (A1),D0
 JSR GEMTSIZE
 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR GEMCOLOR
 MOVE.L OBJADR,A4
 MOVE OB_TXTEF(A4),D0
 JSR GEMFX

 MOVE #116,CONTRL  ;Inquire text extent
 CLR CONTRL+2

 MOVE.L OBJADR,A4
 MOVE.L OB_BUTNM(A4),A0
 LEA INTIN,A1
 MOVE #70,D1
 CLR.L D0
 CLR.L D2
OBD_BUT10 MOVE.B (A0)+,D2
 MOVE D2,(A1)+
 TST.B D2
 BEQ OBD_BUT11
 ADD #1,D0
 DBF D1,OBD_BUT10

OBD_BUT11 MOVE D0,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 CLR.L D0
 CLR.L D1
 MOVE PTSOUT+4,D0  ;WIDTH
 MOVE D0,BUTNW
 MOVE PTSOUT+10,D1 ;HEIGHT
 MOVE D1,BUTNH
 MULS #-1,D1

 CLR BUTNSEL

 MOVE.L OBJADR,A4
 CLR.L D2
 MOVE D0,D2
 ADD OB_RECT(A4),D2
 CLR.L D1
 MOVE WINDX,D1
 ADD WINDW,D1
 CMP D1,D2
 BGE OBD_BUT7

 CMP OB_RECT+4(A4),D0
 BLE OBD_BUT12
 TST KEYFLAG
 BEQ OBD_BUT17
 MOVE #1,BUTNSEL
OBD_BUT17 MOVE BUTNW,OB_RECT+4(A4)

OBD_BUT12 MOVE.L OBJADR,A4
 MOVE.L OBJADR,A4
 CLR.L D2
 MOVE BUTNH,D2
 ADD OB_RECT+2(A4),D2
 CLR.L D1
 MOVE WINDY,D1
 ADD WINDH,D1
 CMP D1,D2
 BGE OBD_BUT7

 MOVE BUTNH,D1
 CMP OB_RECT+6(A4),D1
 BLT OBD_BUT15
 TST KEYFLAG
 BEQ OBD_BUT18
 TST BUTNSEL
 BNE OBD_BUT18
 MOVE #1,BUTNSEL
OBD_BUT18 MOVE BUTNH,OB_RECT+6(A4)

OBD_BUT15 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR

 TST OUTFLAG
 BEQ OBD_BUT5
 CMP #2,OUTFLAG
 BEQ OBD_BUT6

 MOVE OB_RECT(A4),D0  ;OUTPUT BOX
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JSR DRAWPOLY
 JMP OBD_BUT6

OBD_BUT5 JSR OBD_RR

OBD_BUT6 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR GEMCOLOR

 CMP #2,OUTFLAG
 BNE OBD_BUT7Z
 JSR TRANSON

OBD_BUT7Z MOVE.L OBJADR,A4
 MOVE.L OB_BUTNM(A4),A0
 TST.B (A0)
 BEQ OBD_BUT7
 LEA INTIN,A1
 CLR.L D0
 CLR.L D1
 MOVE #70,D2
OBD_BUT2 MOVE.B (A0)+,D1
 MOVE D1,(A1)+
 TST.B D1
 BEQ OBD_BUT2A
 ADD #1,D0
 DBF D2,OBD_BUT2
OBD_BUT2A MOVE D0,TEMP

 MOVE OB_RECT(A4),D1
 CMP #2,OUTFLAG
 BEQ OBD_BT17
 CLR.L D1
 MOVE OB_RECT+4(A4),D1
 SUB BUTNW,D1
 LSR #1,D1
 ADD OB_RECT(A4),D1
OBD_BT17 MOVE D1,PTSIN

 CLR.L D1
 MOVE OB_RECT+6(A4),D1
 SUB BUTNH,D1
 LSR #1,D1
 ADD OB_RECT+2(A4),D1
 ADD BUTNH,D1
 SUB #1,D1
 MOVE D1,PTSIN+2

 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE TEMP,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

OBD_BUT7 MOVE #9,D0
 JSR GEMTSIZE

 TST BUTNSEL
 BEQ OBD_BUT16
 TST KEYFLAG
 BEQ OBD_BUT16
 MOVE.L OBJADR,A4

OBD_BUT16 DC $A009
 RTS

TXTBUFF DC.B 7,9,11,17,19

OBD_INI JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE D0,D2
 MOVE OB_RECT+2(A4),D1
 MOVE D1,D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 JMP RECTANGLE

OBD_RR MOVE #11,CONTRL  ;ROUNDED RECTANGLE
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE HELPER,CONTRL+10
 MOVE GRHANDLE,CONTRL+12
 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT(A4),D2
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+2(A4),D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D2,PTSIN+4
 MOVE D3,PTSIN+6
 JMP VDI

*----------DRAW OUTPUT OBJECT----------*

OBD_OUTP MOVE #1,OUTFLAG
 JMP OBD_OP2

*----------DRAW TEXT OBJECT----------*

OBD_TEXT MOVE #2,OUTFLAG
 JMP OBD_OP2

*----------DRAW EDIT OBJECT----------*

OBD_EDIT TST SQNCFLAG
 BNE OBD_E2

 MOVE.L OBJADR,A4
 MOVE.L OB_TEREC(A4),A0
 MOVE OB_COLR1(A4),TECOLOR1(A0)
 MOVE OB_COLR2(A4),TECOLOR2(A0)
 CLR CARETVAL(A0)
 JMP TEUPDATE

OBD_E2 MOVE.L OBJADR,A0
 MOVE.L OB_TEREC(A0),TEMPADR
 CLR CARETVAL(A0)
 JSR TEDORECT

 MOVE #9,D0
 JSR GEMTSIZE
 MOVE #1,D0
 JSR GEMCOLOR
 MOVE #0,D0
 JSR GEMFX
 JSR NOCLIP

 LEA EDITMES,A3
 MOVE.B #'-',(A3)
 MOVE.B #'-',1(A3)
 MOVE.B #'-',2(A3)
 MOVE.L OBJADR,A0
 MOVE OB_SQNC(A0),D0
 TST D0
 BEQ OBD_ED3
 JSR CONV2DEC

OBD_ED3 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 ADD #3,D0
 MOVE OB_RECT+2(A4),D1
 ADD #8,D1
 LEA EDITMES,A0
 JMP GEMTEXT

*---------SET INFO LINE MESSAGE-----------
SETMES MOVE #105,CONTRL
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #3,INTIN+2
 MOVE.L A0,INTIN+4
 JMP AES

************************
* PROCESS A DIALOG BOX *
* A0=DIALOG TREE       *
* D0=EDIT FIELD        *
************************

FORMDO MOVE.L A0,FORMDIAL
 MOVE D0,FORMEDIT

 DC $A00A

 MOVE #54,CONTRL   ;FORM_CENTER
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE.L FORMDIAL,ADDRIN
 JSR AES
 MOVE INTOUT+2,DIALX
 MOVE INTOUT+4,DIALY
 MOVE INTOUT+6,DIALW
 MOVE INTOUT+8,DIALH

 MOVE #51,CONTRL  ;FORM_DIAL
 MOVE #9,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE SHRINK,INTIN+2
 MOVE SHRINK+2,INTIN+4
 MOVE SHRINK+4,INTIN+6
 MOVE SHRINK+6,INTIN+8
 MOVE INTOUT+2,INTIN+10
 MOVE INTOUT+4,INTIN+12
 MOVE INTOUT+6,INTIN+14
 MOVE INTOUT+8,INTIN+16
 JSR AES

 MOVE #1,INTIN   ;FORM_DIAL (EXPAND)
 JSR AES

 MOVE #42,CONTRL ;OBJC_DRAW
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #100,INTIN+2
 MOVE GEMXPOS,INTIN+4
 MOVE GEMYPOS,INTIN+6
 MOVE GEMWIDTH,INTIN+8
 MOVE GEMHOEHE,INTIN+10
 MOVE.L FORMDIAL,ADDRIN
 JSR AES

 DC $A009

 MOVE #50,CONTRL  ;FORM_DO
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE FORMEDIT,INTIN
 MOVE.L FORMDIAL,ADDRIN
 JSR AES
 MOVE INTOUT,SAVERTRN

 DC $A00A

 MOVE #51,CONTRL  ;FORM_DIAL (SHRINK)
 MOVE #9,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE #2,INTIN
 MOVE SHRINK,INTIN+2
 MOVE SHRINK+2,INTIN+4
 MOVE SHRINK+4,INTIN+6
 MOVE SHRINK+6,INTIN+8
 MOVE DIALX,INTIN+10
 MOVE DIALY,INTIN+12
 MOVE DIALW,INTIN+14
 MOVE DIALH,INTIN+16
 JSR AES

 MOVE #3,INTIN   ;FORM_DIAL (FREES)
 JSR AES

 DC $A009
 RTS

*----------OPEN A WINDOW-------------

OPENWIND DC $A00A
 MOVE #1,WINDFLAG
 MOVE #$13,INTIN
 JSR WIND_CR
 MOVE.L STRINGADR,A0
 ADD #OBJNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),INTIN+4
 JMP DOWIND

*----------OPEN PROC EDITOR WINDOW---------

OPENEDW DC $A00A
 MOVE #2,WINDFLAG
 MOVE #$1D3,INTIN
 JSR WIND_CR

 MOVE.L STRINGADR,A0
 ADD #PROCNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),INTIN+4

DOWIND MOVE #105,CONTRL ;SET WINDOW TITLE
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #2,INTIN+2
 JSR AES

 LEA OKMES,A0  ;Set information line to OK.
 JSR SETMES

 MOVE #101,CONTRL       ;WIND_OPEN
 MOVE #5,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE GEMXPOS,INTIN+2
 MOVE GEMYPOS,INTIN+4
 MOVE GEMWIDTH,INTIN+6
 MOVE GEMHOEHE,INTIN+8
 JSR AES

 MOVE #104,CONTRL  ;WIND_GET
 MOVE #2,CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #4,INTIN+2
 JSR AES
 MOVE INTOUT+2,WINDX
 MOVE INTOUT+4,WINDY
 MOVE INTOUT+6,WINDW
 MOVE INTOUT+8,WINDH
 SUB #2,WINDW
 SUB #1,WINDH

 JSR CLS
 JSR INITPED

 DC $A009
 RTS

WIND_CR MOVE #100,CONTRL ;WIND_CREATE
 MOVE #5,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE GEMXPOS,INTIN+2
 MOVE GEMYPOS,INTIN+4
 MOVE GEMWIDTH,INTIN+6
 MOVE GEMHOEHE,INTIN+8
 JSR AES
 MOVE INTOUT,WIHANDLE
 RTS

*-----------CLOSE THE OPEN WINDOW-----------

CLOSEW TST WINDFLAG
 BEQ CLOSEW2

 CLR WINDFLAG
 DC $A00A

 MOVE #102,CONTRL  ;CLOSE WINDOW
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES

 MOVE #103,CONTRL  ;DELETE WINDOW
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES
 DC $A009
CLOSEW2 RTS

CLS JSR NOCLIP ;CLEAR OPEN WINDOW
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDX,D2
 MOVE WINDY,D3
 ADD WINDW,D2
 ADD WINDH,D3
 JMP RECTANGLE

******************************************************************
*                   TEXT EDIT CORE ROUTINES                      *
******************************************************************

* TEREC edit record definition:

TERECSIZE EQU 102 ;Size of a TERec edit record

VIEWRECT EQU 0  ;View Rectangle X Y W H
LINEHIGH EQU 8  ;Verticle Line Spacing
TEYOFF EQU 10   ;Verticle offset for caret
TEYOFF2 EQU 12  ;Verticle offset for text base line
TEXOFF EQU 14   ;Horizontal offset within view rectangle
TEXSIZE EQU 16  ;Horizontal size of one character
HTEXT EQU 18    ;Pointer to text block
TELENGTH EQU 22 ;Length in bytes of text block available
WORDWRAP EQU 24 ;1 = Word wrap active
SELSTART EQU 26 ;Starting location of highlighted text
SELEND   EQU 28 ;Ending location of highlighted text
CARETIME EQU 30 ;0-255 Sets caret blink speed (0=no blink)
CARETTOG EQU 32 ;Used internally
TXSIZE EQU 34   ;Text Size (VDI Text Size Call)
TXFONT EQU 36   ;Text font (for RDOS use only)
TXFACE EQU 38   ;Text face (VDI Text Effects Call)

TXMODE EQU 40   ;Text Mode (for RDOS use only)  !UPPER CASE FLAG!
UCMODE EQU 40   ;Upper case mode flag

CARETVAL EQU 42 ;Used internally
TETXTEND EQU 44 ;Used internally
TECOLOR1 EQU 46 ;Text color
TECOLOR2 EQU 48 ;Text color for outline rectangle
TESCORE EQU 50  ;Blank area character pattern
LINESTRT EQU 52 ;Positions of line starts (24 lines x 1 word)

*----------------------TEACTIVE-------------------------
* Call TEACTIVE to initalize the Text Edit object and make it active.
* A0 - TERec

TEACTIVE MOVE.L A0,TEMPADR
 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE CARETIME(A0),CARETTOG(A0)
 CLR CARETVAL(A0)

 MOVE.L HTEXT(A0),A1
 CLR.L D0
 CLR.L D1
 MOVE TELENGTH(A0),D1
 SUB #1,D1
TEACT10 TST.B (A1)
 BEQ TEACT11

 CMP.B #10,(A1) ;LINE FEED
 BNE TEACT12
 MOVE.B #' ',(A1)

TEACT12 ADD #1,A1
 ADD #1,D0
 DBF D1,TEACT10
TEACT11 MOVE D0,TETXTEND(A0)
 RTS

*----------------------TEUPDATE-------------------------
* Call TEUPDATE to draw the text specified within the
* view rectangle.  Call TEUPWORD to update the text only.

TEUPDATE MOVE.L A0,TEMPADR
 JSR TEDORECT
 MOVE TEYLOC,TESTART

* DRAW WORD WRAPPED TEXT

TEWORDUP DC $A00A
 CLR TEEOF

 MOVE #23,D0
 MOVE.L TEMPADR,A0
TESTRT1 MOVE #-1,LINESTRT(A0)
 ADD #2,A0
 DBF D0,TESTRT1

* This chunck of code sets up the VDI writing info

 MOVE.L TEMPADR,A0
 MOVE TXFACE(A0),D0
 JSR GEMFX
 MOVE.L TEMPADR,A0
 MOVE TXSIZE(A0),D0
 JSR GEMTSIZE
 MOVE.L TEMPADR,A0
 MOVE TECOLOR1(A0),D0
 JSR GEMCOLOR
 JSR TRANSOFF

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEXOFF(A0),D0
 MULU #4,D0
 ADD VIEWRECT+4(A0),D0
 SUB #2,D0
 DIVU TEXSIZE(A0),D0
 AND.L #255,D0
 SUB #1,D0
 MOVE D0,TEMPHOLD
 MOVE D0,TEFLAG

 MOVE.L TEMPADR,A0
 MOVE.L HTEXT(A0),A0
 TST.B (A0)
 BNE TESTRTZ
 DC $A009
 JSR TEDORECT
 DC $A00A
 MOVE #1,TEEOF
 CLR TECOUNT
 JSR TEWUCALC
 JMP TEPCRS3

TESTRTZ MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEYLOC,D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A2

 CLR.L D1
 MOVE TEYLOC,D1

 MOVE.L TEMPADR,A1
 CLR TECOUNT

TESTRT10 MOVE.L A2,A4
 MOVE D1,LINESTRT(A1)
 ADD #2,A1

 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE TEMPHOLD,D4
 MOVE.L TEMPADR,A0

TEJUST10 TST.B (A4)
 BEQ TESTRT15

 CMP.B #13,(A4)
 BEQ TEJUST18
 CMP #1,WORDWRAP(A0)
 BNE TEJUST11
 CMP.B #' ',(A4)
 BEQ TEJUST20

TEJUST11 ADD.L #1,A4
 ADD #1,D2
 SUB #1,D4
 TST D4
 BNE TEJUST10
 TST D3
 BNE TESTRT19
 MOVE TEMPHOLD,D3
 MOVE.L A4,A2
 JMP TESTRT19

TEJUST18 MOVE #1,D4

TEJUST20 ADD #1,D2
 ADD #1,A4
 MOVE D2,D3
 MOVE.L A4,A2
 SUB #1,D4
 TST D4
 BNE TEJUST10

TESTRT19 ADD D3,D1

TESTRT13 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TESTRT10

* Find the starting line to update

TESTRT15 CLR TECOUNT
 CLR TESTART2
 MOVE TESTART,D1
 MOVE.L TEMPADR,A0

TESTRT55 TST LINESTRT(A0)
 BMI TESTRT50
 CMP LINESTRT(A0),D1
 BCS TESTRT50

 ADD #2,A0
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BNE TESTRT55
 JMP TESTRT51

TESTRT50 MOVE TECOUNT,TESTART2
 SUB #1,TESTART2
 TST TESTART2
 BEQ TESTRT51
 SUB #1,TESTART2

* TEMPHOLD - # of lines in screen  TEFLAG = # of chars per line
* Draw one line of text loop

TESTRT51 JSR TEWUCALC
 MOVE TESTART2,TECOUNT

TESTRT60 SUB #1,TEMPHOLD
 CMP #1,TEMPHOLD
 BLT TENOJUST

 TST TEEOF
 BNE TEPCRS3

 CLR.L D0
 MOVE TECOUNT,D0
 MULU #2,D0
 ADD.L TEMPADR,D0
 MOVE.L D0,A0
 CLR.L D3
 MOVE LINESTRT(A0),D3
 TST D3
 BPL TEPCRS
TEPCRSZZ MOVE #1,TEEOF

* D2 = # of characters to plot

TEPCRS TST TEEOF
 BEQ TEPCRS2
TEPCRS3 LEA INTIN,A1
 MOVE TEFLAG,D3
 SUB #1,D3
 JMP TEUPAT34

TEPCRS2 TST LINESTRT+2(A0)
 BPL TESTRT59
 MOVE.L TEMPADR,A1
 CLR.L D2
 MOVE TETXTEND(A1),D2
 SUB LINESTRT(A0),D2
 TST D2
 BEQ TEPCRSZZ
 SUB #1,D2
 JMP TESTRT61

TESTRT59 CLR.L D2
 MOVE LINESTRT+2(A0),D2
 SUB LINESTRT(A0),D2
 TST D2
 BEQ TENOJUST
 SUB #1,D2

TESTRT61 MOVE.L TEMPADR,A0
 MOVE.L HTEXT(A0),A0
 ADD.L D3,A0

* Move characters into INTIN

 CLR D0
 CLR D1
 LEA INTIN,A1
TEUPAT30 MOVE.B (A0)+,D0
 BEQ TEUPAT32
 CMP.B #13,D0
 BEQ TEUPAT33
 MOVE D0,(A1)+
 ADD #1,D1
TEUPAT33 DBF D2,TEUPAT30

* Fill rest of line with blank characters

TEUPAT32 MOVE TEFLAG,D3
 SUB D1,D3
 TST D3
 BEQ TEUPAT40
 SUB #1,D3
TEUPAT34 MOVE.L TEMPADR,A0
 MOVE TESCORE(A0),D0
TEUPAT32Z MOVE D0,(A1)+
 DBF D3,TEUPAT32Z

* Finish setting VDI stuff and draw it.

TEUPAT40 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0
 MOVE D0,PTSIN

 CLR.L D0
 MOVE LINEHIGH(A0),D0
 MULU TECOUNT,D0
 ADD VIEWRECT+2(A0),D0
 ADD TEYOFF2(A0),D0
 MOVE D0,PTSIN+2

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 CMP D0,D4
 BCS TENOJUST

 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE TEFLAG,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 TST WORDBRK
 BNE TEYESJST
 MOVE #11,-(A7)  ;KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BNE TENOJUST

TEYESJST ADD #1,TECOUNT
 CMP #18,TECOUNT
 BCS TESTRT60

TENOJUST DC $A009
 RTS

TEWUCALC MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE VIEWRECT+6(A0),D0
 SUB #1,D0
 DIVU LINEHIGH(A0),D0
 AND.L #255,D0
 ADD #1,D0
 MOVE D0,TEMPHOLD
 RTS

*-------------REPLOT VIEW RECTANGLE---------------
TEDORECT DC $A00A
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 JSR TRANSOFF
 CLR D0
 JSR FILLPERI

 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 MOVE VIEWRECT(A0),D2
 MOVE VIEWRECT+2(A0),D1
 MOVE VIEWRECT+2(A0),D3
 ADD VIEWRECT+4(A0),D2
 ADD VIEWRECT+6(A0),D3
 JSR RECTANGLE

 CMP #2,WINDFLAG
 BEQ TEDO2

 MOVE.L TEMPADR,A0
 MOVE TECOLOR2(A0),D0
 JSR GEMCOLR
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE

 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 MOVE VIEWRECT+2(A0),D1
 MOVE VIEWRECT+4(A0),D2
 MOVE VIEWRECT+6(A0),D3
 JSR DRAWPOLY

TEDO2 DC $A009
 RTS

*---------------------TEIDLE----------------------
* Call TEIDLE repeatedly to make a blinking
* caret appear at the insertion point.

TEIDLE MOVE.L A0,TEMPADR

 MOVE SELSTART(A0),D0  ;Selection range defined?
 CMP SELEND(A0),D0
 BNE TEIDLE99

 TST CARETIME(A0) ;0 = NO BLINK
 BNE TEIDLE2

 MOVE CARETVAL(A0),D0
 AND #1,D0
 BNE TEIDLE99
 JMP TEIDLE20

TEIDLE2 SUB #1,CARETTOG(A0)
 TST CARETTOG(A0)
 BNE TEIDLE99
 MOVE CARETIME(A0),CARETTOG(A0)

TEIDLE20 MOVE #1,D0   ;INTERIOR COLOR
 JSR SETCOLOR
 MOVE #1,D0    ;PATTERN
 JSR SETFILL
 JSR TRANSXOR

 MOVE.L TEMPADR,A0
 ADD #1,CARETVAL(A0)

 CLR TECOUNT
 CLR.L D0
 MOVE.L TEMPADR,A0
 MOVE.L TEMPADR,A1
 ADD.L #2,A1

TEIDLE21 TST LINESTRT(A1)
 BMI TEIDLE22

 MOVE SELSTART(A0),D0
 CMP LINESTRT(A1),D0
 BEQ TEIDLE29
 BCS TEIDLE22

TEIDLE29 ADD.L #2,A1
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TEIDLE21

TEIDLE22 SUB.L #2,A1
 CLR.L D0
 MOVE SELSTART(A0),D0
 TST LINESTRT(A1)
 BMI TEIDLE23
 SUB LINESTRT(A1),D0
TEIDLE23 MOVE D0,TEMPHOLD

TEIDLE30 DC $A00A

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEMPHOLD,D0
 MULU TEXSIZE(A0),D0
 ADD VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0
 MOVE D0,D2
 ADD TEXSIZE(A0),D2
 SUB #1,D2

 CLR.L D1
 MOVE TECOUNT,D1
 MULU LINEHIGH(A0),D1
 ADD VIEWRECT+2(A0),D1
 ADD TEYOFF(A0),D1
 MOVE D1,D3
 ADD LINEHIGH(A0),D3
 SUB #1,D3

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 SUB LINEHIGH(A0),D4
 ADD #1,D4
 CMP D4,D1
 BCC TEIDLE98

 JSR RECTANGLE
 DC $A009
 RTS

TEIDLE99 JMP SHOWSLID

TEIDLE98 CMP #2,WINDFLAG
 BNE TEIDLE97

 MOVE.L TEMPADR,A0
 MOVE CARETVAL(A0),D0
 AND.L #1,D0
 BNE TEIDLE97

 JSR TECALC
 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,LINENUM
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM

 MOVE #1,WORDBRK
 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 CLR WORDBRK
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR SHOWSLID

TEIDLE97 DC $A009
 RTS

*----------------------------TEKEY-----------------------------
* Call TEKEY when a key event occurs.  The key pressed replaces the
* selection range and leaves the caret just past the inserted character.
* D0 = Key code from AES Get Event

TEKEY MOVE.L A0,TEMPADR
 MOVE INTOUT+10,TEMPKEY2

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BNE TEK10

 MOVE.L TEMPADR,A0
 JSR TEDNOCAR
 JMP TEINSKEY

TEK10 JSR TEDELSEL

 MOVE SELSTART(A0),TESTART
 MOVE #1,CARETTOG(A0)

 MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 CMP.B #8,D0
 BEQ TEKEY25

TEINSKEY MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 CMP.B #27,D0 ;ESCAPE
 BEQ TEESC
 CMP.B #8,D0  ;BACKSPACE
 BEQ TEINSK2

 MOVE TEMPKEY2,D0
 LSR #8,D0
 AND.L #$FF,D0
 CMP.B #83,D0
 BEQ TEDEL
 CMP.B #82,D0
 BEQ TEINS
 CMP.B #71,D0
 BEQ TEESC
 CMP.B #15,D0
 BEQ TETAB

 CMP.B #$4B,D0
 BEQ TELEFT
 CMP.B #$48,D0 ;UP ARW
 BEQ TEKEY25
 CMP.B #$50,D0 ;DN ARW
 BEQ TEKEY25
 CMP.B #$4D,D0
 BNE TEINSK9

 JSR TERTARW  ;RT ARW
 JMP TEKEY25

TETAB JSR TERTARW ;TAB
 JSR TERTARW
 JSR TERTARW
 JSR TERTARW
 JSR TERTARW
 JMP TEKEY25

TERTARW MOVE.L TEMPADR,A0  ;RIGHT ARROW
 MOVE SELSTART(A0),D0
 CMP TETXTEND(A0),D0
 BEQ TERT2
 ADD #1,SELSTART(A0)
TERT2 RTS

TEINSK2 MOVE.L TEMPADR,A0
 MOVE TEYLOC,D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 JSR TEDELONE  ;BACKSPACE

TELEFT MOVE.L TEMPADR,A0
 TST SELSTART(A0)
 BEQ TEKEY25
 MOVE TEYLOC,D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 SUB #1,SELSTART(A0)
 JMP TEKEY25

TEESC CMP #2,WINDFLAG
 BEQ TEKEY25

 MOVE.L TEMPADR,A0
 CLR SELSTART(A0)
 CLR SELEND(A0)
 CLR TETXTEND(A0)

 MOVE.L HTEXT(A0),D0
 ADD TEYLOC,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE TELENGTH(A0),D0
 SUB #1,D0
TEESC2 CLR.B (A1)+
 DBF D0,TEESC2
 JMP TEUPDATE

TEDEL MOVE.L TEMPADR,A0
 MOVE TETXTEND(A0),D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 ADD #1,SELSTART(A0)
 JSR TEDELONE
 SUB #1,SELSTART(A0)
 JMP TEKEY25

TEINS MOVE.L TEMPADR,A0
 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 MOVE.L TEMPADR,A0
 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B #' ',(A1)
 JMP TEKEY25

TEINSK9 MOVE.L TEMPADR,A0  ;Insert new key

 MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 BEQ TEKY99

 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEKEY25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEKEY31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE TEMPKEY2,D0
 TST UCMODE(A0)  ;Force Upper Case
 BEQ TEKEY25B
 CMP.B #'a',D0
 BLT TEKEY25B
 CMP.B #'z',D0
 BGT TEKEY25B
 SUB.B #32,D0
TEKEY25B MOVE.B D0,(A1)

 ADD #1,SELSTART(A0)
 ADD #1,TETXTEND(A0)
 JMP TEKEY25

TEKEY31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE TEMPKEY2,D0
 MOVE.B D0,(A1)

 ADD #1,SELSTART(A0)

TEKEY25 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),TESTART
 MOVE SELSTART(A0),SELEND(A0)
 MOVE #1,CARETTOG(A0)
 JSR TEWORDUP
 MOVE.L TEMPADR,A0
 JMP TEIDLE

* DELETE SELECTED TEXT
TEDELSEL MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

 MOVE.L TEMPADR,A0
 CLR.L D3
 MOVE SELEND(A0),D3
 SUB SELSTART(A0),D3
 SUB #1,D3

 CLR.L D1
 MOVE TETXTEND(A0),D1
 SUB SELSTART(A0),D1

TEK19 MOVE D1,D2

 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A1

TEK20 MOVE.B 1(A1),(A1)+
 DBF D2,TEK20

 SUB #1,TETXTEND(A0)
 DBF D3,TEK19

 MOVE SELSTART(A0),SELEND(A0)
 RTS

* INSERT ONE CHARACTER (' ') INTO BUFFER
TEINSONE MOVE.L TEMPADR,A0
 ADD #1,TETXTEND(A0)

 CLR.L D0
 MOVE TETXTEND(A0),D0
 SUB SELSTART(A0),D0

 CLR.L D1
 MOVE TETXTEND(A0),D1
 ADD.L HTEXT(A0),D1
 SUB.L #1,D1
 MOVE.L D1,A1

TEKEY32 MOVE.B (A1),1(A1)
 SUB.L #1,A1
 DBF D0,TEKEY32

 RTS

* DELETE ONE CHARACTER FROM BUFFER
TEDELONE MOVE.L TEMPADR,A0

 TST SELSTART(A0)
 BEQ TEKY99

 CLR.L D1
 MOVE TETXTEND(A0),D1
 SUB SELSTART(A0),D1

 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 SUB.L #1,D0
 MOVE.L D0,A1

TEK33 MOVE.B 1(A1),(A1)+
 DBF D1,TEK33

 SUB #1,TETXTEND(A0)

TEKY99 RTS

*-------------------TECUT--------------------
* Call TECUT to copy the selected range into the SCRAP buffer
* and delete the selected text.
TECUT MOVE A0,TEMPADR
 MOVE SELSTART(A0),TESTART
 MOVE SELEND(A0),TESTART2
 JSR TECOPY

 MOVE.L TEMPADR,A0
 MOVE TESTART,SELSTART(A0)
 MOVE TESTART2,SELEND(A0)

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECUT2

 JSR TEDELSEL

 MOVE TEYLOC,TESTART
 MOVE.L TEMPADR,A0
 JMP TEUPDATE

TECUT2 MOVE.L TEMPADR,A0
 JMP TEDNOCAR

*-------------------TECOPY--------------------
* Call TECOPY to copy the selected range into the SCRAP buffer.
* Unlike TECUT the selected text is not deleted.
TECOPY MOVE.L A0,TEMPADR
 JSR CLRSCRAP

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECOP99

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A1

 CLR.L D1
 MOVE SELEND(A0),D1
 SUB SELSTART(A0),D1

 MOVE.L SCRAP,A2
 CLR.L D2
 MOVE SCRAPSZ,D2

TECOP10 TST.B (A1)
 BEQ TECOP99
 MOVE.B (A1)+,(A2)+
 SUB #1,D2
 BEQ TECOP99
 SUB #1,D1
 BNE TECOP10

TECOP99 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),SELEND(A0)
 RTS

*-------------------TEPASTE--------------------
* Call TEPASTE to insert text in the SCRAP buffer at the
* insertion point.  If a range of text has been selected
* it will be replaced with the contents of the SCRAP buffer.
TEPASTE MOVE.L A0,TEMPADR

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BNE TEPA10

 MOVE.L TEMPADR,A0
 JSR TEDNOCAR
 JMP TEPA11

TEPA10 JSR TEDELSEL

TEPA11 MOVE.L SCRAP,TEMPADR2

TEPA20 MOVE.L TEMPADR2,A2
 TST.B (A2)
 BEQ TEPA25

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEPA25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEPA31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B (A2),(A1)

 ADD.L #1,TEMPADR2
 ADD #1,SELSTART(A0)
 ADD #1,TETXTEND(A0)
 JMP TEPA20

TEPA31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE.L TEMPADR2,A2
 MOVE.B (A2),(A1)

 ADD #1,SELSTART(A0)
 ADD.L #1,TEMPADR2
 JMP TEPA20

TEPA25 MOVE.L TEMPADR,A0
 MOVE TEYLOC,TESTART
 MOVE SELSTART(A0),SELEND(A0)
 JMP TEWORDUP

*-------------------TEDELETE--------------------
* Call TEDELETE to remove the selected range of text.
* This is the same as TECUT except that it doesn't copy the
* selected range to the SCRAP buffer.
TEDELETE MOVE.L A0,TEMPADR

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TEDEL90

 JSR TEDELSEL
 JMP TEUPDATE

TEDEL90 RTS

*-------------------TEINSERT--------------------
* Call TEInsert to take the text pointed to in A1 and
* insert it just before the selected range of text. The new
* text must be 0 terminated.  TEInsert doesn't affect either
* the current selected range or the SCRAP buffer.
TEINSERT MOVE.L A0,TEMPADR
 MOVE.L A1,TEMPADR2

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 TST D0
 BEQ TEINS19
 BMI TEINS20
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP TEINS20

TEINS19 MOVE.L TEMPADR,A0
 JSR TEDNOCAR

TEINS20 MOVE.L TEMPADR2,A2
 TST.B (A2)
 BEQ TEINS25

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEINS25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEINS31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B (A2),(A1)

 ADD.L #1,TEMPADR2
 ADD #1,SELSTART(A0)
 ADD #1,SELEND(A0)
 ADD #1,TETXTEND(A0)
 JMP TEINS20

TEINS31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE.L TEMPADR2,A2
 MOVE.B (A2),(A1)

 ADD #1,SELSTART(A0)
 ADD #1,SELEND(A0)
 ADD.L #1,TEMPADR2
 JMP TEINS20

TEINS25 MOVE.L TEMPADR,A0
 MOVE TEYLOC,TESTART
 JSR TEWORDUP

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ TEINS26
 BMI TEINS26
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

TEINS26 RTS

*-------------------TEGETLEN--------------------
* Call TEGETLEN to get the size of the contents of the
* SCRAP buffer.
TEGETLEN MOVE.L A0,TEMPADR

 MOVE.L SCRAP,A1
 CLR.L D0
TEGLN10 ADD #1,D0
 TST.B (A1)+
 BNE TEGLN10
 SUB #1,D0
 RTS

*-------------------TECLICK--------------------
* Call TECLICK when a mouse-down AES event occurs.  TECLICK controls
* the placement and highlighting of the selection range.  Double clicking
* the mouse selects a word.

TECLICK MOVE.L A0,TEMPADR
 MOVE.L HTEXT(A0),A1
 TST.B (A1)
 BEQ TECL82

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TEPOINT
 TST D0
 BNE TECL99

 MOVE INTOUT+2,TEXHOLD
 MOVE INTOUT+4,TEYHOLD
 MOVE INTOUT+12,TEMPKEY

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECLI1

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP TECLI2

TECLI1 MOVE.L TEMPADR,A0
 JSR TEDNOCAR

TECLI2 MOVE TEXHOLD,D0
 MOVE TEYHOLD,D1
 JSR TELOC
 MOVE.L TEMPADR,A0
 MOVE D0,TEANCHOR
 MOVE D0,SELSTART(A0)
 MOVE D0,SELEND(A0)
 MOVE #1,CARETTOG(A0)

 CMP #2,TEMPKEY
 BEQ TECLWORD

 MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #7,INTIN
 JSR AES

TECL20 CLR TEFLAG

 MOVE #79,CONTRL  ;Graf_Mkstate
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES
 MOVE INTOUT+6,D0
 AND.L #1,D0
 TST D0
 BEQ TECL80

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TEPOINT
 TST D0
 BNE TECL20

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TELOC
 CMP TEANCHOR,D0
 BEQ TECL20
 BCS TEBACKUP

 MOVE D0,D1
 MOVE.L TEMPADR,A0
 MOVE D0,SELEND(A0)
 SUB TEANCHOR,D0
 MOVE D0,TEMPHOLD
 MOVE TEANCHOR,TEMPKEY
 MOVE D1,TEANCHOR

 JSR TEHIGHLT
 JMP TECL20

TEBACKUP MOVE D0,D1
 MOVE.L TEMPADR,A0
 MOVE D0,SELEND(A0)
 MOVE D0,TEMPKEY
 MOVE TEANCHOR,D1
 SUB D0,D1
 MOVE D1,TEMPHOLD
 MOVE D0,TEANCHOR

 JSR TEHIGHLT
 JMP TECL20

TECL80 MOVE.L TEMPADR,A0

 CLR.L D0
 MOVE SELEND(A0),D0
 CMP SELSTART(A0),D0
 BCC TECL81

 MOVE SELSTART(A0),D0
 MOVE SELEND(A0),SELSTART(A0)
 MOVE D0,SELEND(A0)

TECL81 MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 JMP AES

TECL82 RTS

* SELECT A WORD

TECLWORD TST D0
 BEQ TECLW11

 CLR.L D1
 MOVE D0,D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 CMP.B #'A',(A1)
 BLT TECLWLEE
 CMP.B #'Z',(A1)
 BLE TECLWLEE2

TECLWLEE CMP.B #'a',(A1)
 BLT TECLW10
 CMP.B #'z',(A1)
 BGT TECLW10

 CMP.B #13,(A1)
 BEQ TECLW10
 CMP.B #' ',(A1)
 BEQ TECLW10
TECLWLEE2 SUB #1,D0
 JMP TECLWORD

TECLW10 ADD #1,D0
TECLW11 MOVE D0,SELSTART(A0)

TECLW12 CMP TETXTEND(A0),D0
 BEQ TECLW14

 CLR.L D1
 MOVE D0,D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 CMP.B #'A',(A1)
 BLT TECLWLEEA
 CMP.B #'Z',(A1)
 BLE TECLWLEEB

TECLWLEEA CMP.B #'a',(A1)
 BLT TECLW14
 CMP.B #'z',(A1)
 BGT TECLW14

 CMP.B #' ',(A1)
 BEQ TECLW14
 CMP.B #13,(A1)
 BEQ TECLW14
TECLWLEEB ADD #1,D0
 JMP TECLW12

TECLW14 MOVE D0,SELEND(A0)

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ TECL99
 BMI TECL99
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

TECLW15 MOVE #79,CONTRL  ;Graf_Mkstate
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES
 MOVE INTOUT+6,D0
 AND.L #1,D0
 TST D0
 BNE TECLW15
 RTS

* HIGHLIGHT A RANGE OF CHARACTERS
* TEMPKEY  = STARTING CHARACTER #
* TEMPHOLD = # OF CHARACTERS
TEHIGHLT DC $A00A

TEHIGH2 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 JSR TRANSXOR

 CLR TECOUNT
 CLR.L D0
 MOVE.L TEMPADR,A0
 MOVE.L TEMPADR,A1
 ADD.L #2,A1

TECL72 TST LINESTRT(A1)
 BMI TECL74

 MOVE TEMPKEY,D0
 CMP LINESTRT(A1),D0
 BEQ TECL73
 BCS TECL74

TECL73 ADD.L #2,A1
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TECL72

 CLR TECOUNT
 MOVE.L TEMPADR,A1
 ADD.L #2,A1

TECL74 CLR.L D0
 MOVE.L TEMPADR,A0
 SUB.L #2,A1
 MOVE TEMPKEY,D0
 SUB LINESTRT(A1),D0
 MULU TEXSIZE(A0),D0
 ADD VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0

 CLR.L D1
 MOVE TECOUNT,D1
 MULU LINEHIGH(A0),D1
 ADD VIEWRECT+2(A0),D1
 ADD TEYOFF(A0),D1

 MOVE D0,D2
 ADD TEXSIZE(A0),D2
 SUB #1,D2
 MOVE D1,D3
 ADD LINEHIGH(A0),D3
 SUB #1,D3

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 CMP D3,D4
 BCS TECL98

 JSR RECTANGLE

TECL98 ADD #1,TEMPKEY
 SUB #1,TEMPHOLD
 TST TEMPHOLD
 BNE TEHIGH2
 DC $A009
 RTS

TECL99 RTS

* TEST POINT TO BE INSIDE VIEWRECT, D0=X D1=Y
* RETURNS D0=1 IF OUTSIDE
TEPOINT MOVE.L TEMPADR,A0
 CLR.L D2

 MOVE VIEWRECT(A0),D2
 ADD TEXOFF(A0),D2
 CMP D2,D0
 BCC TEP2
 MOVE #1,D0
 RTS

TEP2 MOVE VIEWRECT(A0),D2
 ADD VIEWRECT+4(A0),D2
 ADD TEXOFF(A0),D2
 CMP D0,D2
 BCC TEP3
 MOVE #1,D0
 RTS

TEP3 MOVE VIEWRECT+2(A0),D2
 ADD TEYOFF(A0),D2
 CMP D2,D1
 BCC TEP4
 MOVE #1,D0
 RTS

TEP4 MOVE VIEWRECT+2(A0),D2
 ADD VIEWRECT+6(A0),D2
 SUB TEYOFF(A0),D2
 CMP D1,D2
 BCC TEP5
 MOVE #1,D0
 RTS

TEP5 CLR.L D0
 RTS

* CONVERTS X & Y SCREEN COORD OF MOUSE
* INTO CHAR OFFSET INTO TEXT BUFFER
* ON ENTRY SET D0 = Y LOC  D1 = X LOC  OF MOUSE
* RETURNS D0 = CHAR OFFSET   A1=ADR OF LINESTRT VALUE
TELOC MOVE D0,TEXHOLD
 MOVE D1,TEYHOLD

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEYHOLD,D0
 SUB VIEWRECT+2(A0),D0
 DIVU LINEHIGH(A0),D0
 AND.L #255,D0
 MULU #2,D0
 ADD.L TEMPADR,D0
 MOVE.L D0,A1

 TST LINESTRT(A1)
 BMI TECL10

 CLR.L D1
 MOVE TEXHOLD,D1
 SUB VIEWRECT(A0),D1
 SUB TEXOFF(A0),D1
 DIVU TEXSIZE(A0),D1
 AND.L #255,D1
 MOVE.L D1,D3
 ADD LINESTRT(A1),D3

 TST LINESTRT+2(A1)
 BMI TECL15

 CLR.L D2
 MOVE LINESTRT+2(A1),D2
 CMP D3,D2
 BEQ TECL40
 BCS TECL40

 ADD LINESTRT(A1),D1
 MOVE D1,D0
 RTS

TECL40 SUB #1,D2
 MOVE D2,D0
 RTS

TECL15 CMP TETXTEND(A0),D3
 BCC TECL10
 MOVE D3,D0
 RTS

TECL10 MOVE TETXTEND(A0),D0
 RTS

*-------------------------TEDEACT---------------------------
* Call TEDEACT to deactivate the Text Edit object

TEDEACT MOVE.L A0,TEMPADR

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 TST D0
 BEQ TEDEA2
 BMI TEDEA2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JMP TEHIGHLT

TEDEA2 MOVE.L TEMPADR,A0
 JMP TEDNOCAR

*------------------TENOCAR--------------------
* Call TENOCAR to hide the CARET before any screen update
TEDNOCAR MOVE.L A0,TEMPADR
 MOVE CARETVAL(A0),D0
 AND #1,D0
 BEQ TEDACT99
 JMP TEIDLE20
TEDACT99 RTS

*------------------CLEAR SCRAP BUFFER-------------------
CLRSCRAP MOVE.L SCRAP,A0  ;CLEAR SCRAP BUFFER
 MOVE SCRAPSZ,D0
 SUB #1,D0
CLRSCRA2 CLR.B (A0)+
 DBF D0,CLRSCRA2
 RTS

******************** TEXTEDIT SUBROUTINE LIBRARY **********************

*---------SET FILL COLOR INDEX-----------

SETCOLOR MOVE #25,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;COLOR REG
 JMP VDI

*--------SET FILL INTERIOR STYLE---------

SETFILL MOVE #23,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;0=HALLOW 1=SOLID 2=PATTERN 3=HATCH 4=USER DEF
 JMP VDI

*--------SET FILL PERIMETER FLAG---------

FILLPERI MOVE #104,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*---------SET FILL STYLE INDEX-----------

SETINDEX MOVE #24,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;SEE PG 5-33 OF GEM MANUAL
 JMP VDI

*---------DRAW FILLED RECTANGLE----------

RECTANGLE MOVE #114,CONTRL
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN   ;X1
 MOVE D1,PTSIN+2 ;Y1
 MOVE D2,PTSIN+4 ;X2
 MOVE D3,PTSIN+6 ;Y2
 JMP VDI

*-------------SET LINE TYPE--------------

LINETYPE MOVE #15,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------------SET USER LINE--------------

LINESTYL MOVE #113,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*------------SET LINE WIDTH--------------

LINEWIDE MOVE #16,CONTRL
 MOVE #1,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 CLR PTSIN+2
 JMP VDI

*------------SET LINE MARKER-------------

LINEMARK MOVE #18,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*------------SET LINE END-------------

LINEEND MOVE #108,CONTRL
 CLR CONTRL+2
 MOVE #2,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 MOVE D1,INTIN+2
 JMP VDI

*-------------DRAW POLYLINE--------------

DRAWPOLY MOVE #6,CONTRL
 MOVE #5,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2

 MOVE D0,PTSIN+4
 ADD D2,PTSIN+4
 MOVE D1,PTSIN+6

 MOVE D0,PTSIN+8
 ADD D2,PTSIN+8
 MOVE D1,PTSIN+10
 ADD D3,PTSIN+10

 MOVE D0,PTSIN+12
 MOVE D1,PTSIN+14
 ADD D3,PTSIN+14

 MOVE D0,PTSIN+16
 MOVE D1,PTSIN+18

 JMP VDI

*-------------DRAW POLYLINE MARKER--------------

DMXSIZE EQU 5
DMYSIZE EQU 2

DRAWMARK SUB #2,D0
 SUB #2,D2
 SUB #2,D3

 MOVE D0,DMORG
 MOVE D1,DMORG+2
 MOVE D2,DMORG+4
 MOVE D3,DMORG+6

 JSR TRANSRV
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 LSR #1,D0
 ADD DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 LSR #1,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 LSR #1,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG,D0
 MOVE DMORG+2,D1
 ADD DMORG+6,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG,D0
 MOVE DMORG+6,D1
 LSR #1,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JMP DORECT

DORECT ADD D0,D2
 ADD D1,D3
 JMP RECTANGLE

*-----------------DRAW LINE-------------------

DRAWLINE MOVE #6,CONTRL
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D0,PTSIN+4
 MOVE D1,PTSIN+6
 ADD D3,PTSIN+6
 JMP VDI

TEXTINIT CLR D0
 JSR GEMFX
 MOVE #9,D0
 CMP #2,GRMODE
 BNE ELTON
 MOVE #10,D0
ELTON JSR GEMTSIZE
 MOVE #1,D0
 JMP GEMCOLOR

*--------------SET DRAWING COLOR--------------

GEMCOLR MOVE #17,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*---------SET VDI DRAWING TO MODE TO XOR-------

TRANSXOR MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #3,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO OVERWRITE------

TRANSOFF MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #1,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO TRANSPARENT------

TRANSON MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #2,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO REVERSE------

TRANSRV MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #3,INTIN
 JMP VDI

*-------------TURN OFF CLIPPING----------

NOCLIP MOVE #129,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 CLR INTIN
 JMP VDI

*-------------TURN CLIPPING ON----------

SETCLIP MOVE #129,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #1,INTIN
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D2,PTSIN+4
 MOVE D3,PTSIN+6
 JMP VDI

*------SET EFFECTS FOR VDI TEXT CALLS--------
* 0-BOLD 1-INTENSITY 2-ITALICS 3-UNDERLINE 4-OUTLINE 5-SHADOW

GEMFX MOVE #106,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------SET SIZE FOR VDI TEXT CALLS---------
* D0 = POINT SIZE

GEMTSIZE MOVE #107,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------SET COLOR FOR VDI TEXT CALLS---------
* D0 = COLOR #

GEMCOLOR MOVE #22,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*----------GEM TEXT PRINT SETUP-----------
* D0=XPOS D1=YPOS A0=PTR

GEMTEXT MOVE D0,PTSIN
 MOVE D1,PTSIN+2

 LEA INTIN,A1
 CLR.L D1
GEMT101 CLR.L D0
 MOVE.B (A0)+,D0
 BEQ GEMT100
 MOVE D0,(A1)+
 ADD #1,D1
 JMP GEMT101

GEMT100 CLR.B (A1)
 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE D1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JMP VDI

*-----------------SYSTEM CALLS-----------------

AES MOVE.L #AESPB,D1  ;CALL AES
 MOVE.L #200,D0
 TRAP #2
 RTS

VDI MOVE.L #VDIPB,D1  ;CALL VDI
 MOVE.L #$73,D0
 TRAP #2
 RTS

*-------------GEM PARAMETER BLOCKS--------------

AESPB DC.L CONTRL,GLOBAL,INTIN,INTOUT,ADDRIN,ADDROUT
VDIPB DC.L CONTRL,INTIN,PTSIN,INTOUT,PTSOUT

******************************************************************
*                   End of TextEdit library                      *
******************************************************************

*--------------GEM RELATED EQUATES--------------

OBSIZE EQU 24  ;BYTES PER OBJECT STRUCTURE

OB_NEXT EQU 0  ;OBJECT OFFSETS
OB_HEAD EQU 2
OB_TAIL EQU 4
OB_TYPED EQU 6
OB_FLAGS EQU 8
OB_STATE EQU 10
OB_SPEC EQU 12
OB_X EQU 16
OB_Y EQU 18
OB_WDTH EQU 20
OB_HGHT EQU 22

TEDSIZE EQU 28   ;SIZE OF EACH TEDINFO STRUCTURE

TE_PTEXT EQU 0   ;TEDINFO OFFSETS
TE_PTMPLT EQU 4
TE_PVALID EQU 8
TE_FONT EQU 12
TE_RESVD EQU 14
TE_JUST EQU 16
TE_COLOR EQU 18
TE_RESV2 EQU 20
TE_THICK EQU 22
TE_TXLEN EQU 24
TE_TMPLN EQU 26

************
* GETEVENT *
************

GT_EVENT MOVE #25,CONTRL
 MOVE #16,CONTRL+2
 MOVE #7,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #$33,INTIN   ;KEY - MOUSE  - MESAGE - TIMER
 MOVE #2,INTIN+2
 MOVE #1,INTIN+4
 MOVE #1,INTIN+6
 MOVE #200,INTIN+28
 MOVE #0,INTIN+30
 MOVE.L #EVMESG,ADDRIN
 JSR AES
 MOVE INTOUT,EVWHICH
 MOVE INTOUT+2,EVXPOS
 MOVE INTOUT+4,EVYPOS
 MOVE INTOUT+6,EVBUTN
 MOVE INTOUT+8,EVSTATE
 MOVE INTOUT+10,EVKEY
 MOVE INTOUT+12,EVBSTAT
 MOVE INTOUT+14,EVHEIGH
 RTS

EVMESG DC.L 0,0,0,0,0,0
EVWHICH DC 0
EVXPOS DC 0
EVYPOS DC 0
EVBUTN DC 0
EVSTATE DC 0
EVKEY DC 0
EVBSTAT DC 0
EVHEIGH DC 0

****************************
* SET MOUSE IMAGE AND SHOW *
* D0 = IMAGE               *
****************************
* 0-ARROW 1-TEXT CURSOR 2-BUSYBEE 3-FINGER 4-HAND 5-THIN CROSS
* 6-THICK CROSS 7-OUTLINE CROSS
SHWMOUSE MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE D0,INTIN ;MOUSE IMAGE
 CLR.L ADDRIN
 JSR AES
 DC $A009  ;SHOW MOUSE
 RTS

********************************
* GET ADDRESS OF TREE RESOURCE *
* D0 = TREE NUMBER             *
* A0 RETURNS ADDRESS           *
********************************

GADDR CLR INTIN
 JMP GADDR3

GADDR2 MOVE #5,INTIN

GADDR3 MOVE #112,CONTRL  ;RSRC_GADDR
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 MOVE #1,CONTRL+8
 MOVE D0,INTIN+2
 JSR AES
 MOVE.L ADDROUT,A0
 RTS

GEMXPOS DC 0
GEMYPOS DC 0
GEMWIDTH DC 0
GEMHOEHE DC 0

**************************
* OPEN DISK FILE         *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_OPEN MOVE #0,-(A7)
 MOVE.L A0,-(A7)
 MOVE #$3D,-(A7)
 TRAP #1
 ADD.L #8,A7
 RTS

*************************
* READ DISK FILE        *
* A0 = FILE HANDLE      *
* A1 = WHERE TO LOAD IT *
* D0 = NUMBER OF BYTES  *
*************************

F_READ MOVE.L A1,-(A7)
 MOVE.L D0,-(A7)
 MOVE A0,-(A7)
 MOVE #$3F,-(A7)
 TRAP #1
 ADD.L #12,A7
 RTS

*************************
* WRITE DISK FILE       *
* A0 = FILE HANDLE      *
* A1 = BUFFER ADRESS    *
* D0 = NUMBER OF BYTES  *
*************************

F_WRITE MOVE.L A1,-(A7)
 MOVE.L D0,-(A7)
 MOVE A0,-(A7)
 MOVE #$40,-(A7)
 TRAP #1
 ADD.L #12,A7
 RTS

*********************
* CLOSE DISK FILE   *
* A0 = FILE HANDLE  *
* D0 = ERROR CODE   *
*********************

F_CLOSE MOVE A0,-(A7)
 MOVE #$3E,-(A7)
 TRAP #1
 ADD.L #4,A7
 RTS

*********************
* CREATE DISK FILE  *
* A0 = FILE NAME    *
* D0 = FILE HANDLE  *
*********************

F_CREATE CLR -(A7)
 MOVE.L A0,-(A7)
 MOVE #$3C,-(A7)
 TRAP #1
 ADD.L #8,A7
 RTS

*********************
* SEEK DISK FILE    *
* A0 = FILE NAME    *
* D0 = # OF BYTES   *
*********************

F_SEEK MOVE #1,-(A7)
 MOVE A0,-(A7)
 MOVE.L D0,-(A7)
 MOVE #66,-(A7)
 TRAP #1
 ADD.L #10,A7
 RTS

******************
* LOAD PATH INFO *
******************

GETPATH MOVE.L #39,D0
 LEA PATHNAME,A0
FPATHC CLR.B (A0)+
 DBF D0,FPATHC

 LEA FPATH,A0
 JSR F_OPEN
 TST D0
 BPL FPATHNE
 LEA NOPATH,A0
 JSR DOALERT
 JMP DOQUIT

FPATHNE MOVE D0,FHANDLE

 MOVE D0,A0
 MOVE.L #PATHNAME,A1
 MOVE.L #39,D0
 JSR F_READ

 MOVE.B PATHNAME,D0
 CMP.B #10,D0
 BNE FPATHE

 MOVE.L #38,D0
 LEA PATHNAME,A0
FPATHD MOVE.B 1(A0),(A0)
 ADD.L #1,A0
 DBF D0,FPATHD

FPATHE MOVE FHANDLE,A0
 JMP F_CLOSE

*******************************
* ADD PATH TO FILE NAME IN A0 *
*******************************

ADDPATH MOVEM.L A1-A4/D0-D2,-(A7)

 LEA PTHNM,A1
 MOVE.L #39,D0
ADDP100 CLR.B (A1)+
 DBF D0,ADDP100

 MOVE.L #39,D1
 LEA PATHNAME,A1
 LEA PTHNM,A2
ADDP101 MOVE.B (A1)+,D0
 CMP.B #' ',D0
 BEQ ADDP102
 CMP.B #13,D0
 BEQ ADDP102
 TST.B D0
 BEQ ADDP102
 MOVE.B D0,(A2)+
 DBF D1,ADDP101

ADDP102 MOVE.B (A0)+,D0
 CMP.B #13,D0
 BEQ ADDP103
 TST.B D0
 BEQ ADDP103
 MOVE.B D0,(A2)+
 DBF D1,ADDP102

ADDP103 LEA PTHNM,A0
 MOVEM.L (A7)+,A1-A4/D0-D2
 RTS

*------------------------DISK I/O ERROR--------------------------

DISK_ERR MOVEM.L A0-A4,-(A7)

 MOVE.L ERRDLG,A1
 ADD.L #ERMES2*OBSIZE,A1
 MOVE.L A0,OB_SPEC(A1)

 TST D0
 BEQ DE6

 CLR.L D1
 SUB.L D0,D1
 CMP #18,D1
 BCC DE2

 SUB #1,D1
 ADD #IOERR1,D1
 JMP DEPRINT

DE2 CMP #32,D1
 BCS DE3
 CMP #41,D1
 BCC DE3
 SUB #32,D1
 ADD #IOERR2,D1
 JMP DEPRINT

DE3 CMP #64,D1
 BCS DE4
 CMP #68,D1
 BCC DE4
 SUB #64,D1
 ADD #IOERR5,D1
 JMP DEPRINT

DE4 CMP #46,D1
 BNE DE5
 MOVE #IOERR3,D1
 JMP DEPRINT
DE5 CMP #49,D1
 BNE DE6
 MOVE #IOERR4,D1
 JMP DEPRINT

DE6 MOVE #IOERR6,D1

DEPRINT MOVE.L ERRDLG,A0
 ADD.L #ERMES*OBSIZE,A0

 MULU #OBSIZE,D1
 ADD.L IOERRADR,D1
 MOVE.L D1,A1
 MOVE.L OB_SPEC(A1),OB_SPEC(A0)

 MOVE.L ERRDLG,A0
 ADD.L #ERRETRY*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L ERRDLG,A0
 ADD.L #ERCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 CLR D0
 JSR SHWMOUSE

 MOVE.L ERRDLG,A0
 MOVE #-1,D0
 JSR FORMDO

 MOVE #-2,D0
 CMP #ERRETRY,SAVERTRN
 BEQ DE7
 MOVE #-1,D0

DE7 MOVEM.L (A7)+,A0-A4
 RTS

NOERRMES DC.B '---',0
 EVEN

*----------DO AN ALERT---------

BADMODE MOVE #MODMES,D0
 JSR GADDR2
 JSR DOALERT
 JMP DOQUIT

NOMEM MOVE #NMEMMES,D0
 JSR GADDR2
 JSR DOALERT
 JMP DOQUIT

MAXMES MOVE #MAXMES2,D0
 JSR GADDR2
 JSR DOALERT
 JMP MAINLOOP

MAXMESED MOVE #MAXEDS,D0
 JSR GADDR2
 JSR DOALERT
 JMP MAINLOOP

MAXMESIC MOVE #MAXICN,D0
 JSR GADDR2
 JSR DOALERT
 JMP MAINLOOP

NOCHANGES MOVE #NCMES,D0
 JSR GADDR2
 JSR DOALERT
 JMP MAINLOOP

NMEXSTS MOVE #NMEXIST,D0
 JSR GADDR2

DOALERT MOVE #52,CONTRL
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE.L A0,ADDRIN
 JMP AES

WAIT_KEY MOVE #7,-(A7)
 TRAP #1
 ADD.L #2,A7
 RTS

TESTPOINT ADD.B #'0',D0
 MOVE.B D0,TSTMES
 LEA TSTMES,A0
 JSR STRING
 JMP WAIT_KEY

STRING MOVE.L A0,-(A7)
 MOVE #9,-(A7)
 TRAP #1
 ADD #6,A7
 RTS

TSTMES DC.B '0',0
 EVEN

*--------------TEXT STORAGE--------------

TEXTHEAD DC.B 'TEXT',0
SCRAPNAME DC.B 'CLIPBORD.SYS',0
RSCNAME DC.B 'FORMS.RSC',0
 EVEN
OKMES DC.B 'Ok.',0
 EVEN
NOPATH DC.B '[2][Cannot find the|PATH.TBL file!]'
 DC.B '[ Ok ]',0,0
 EVEN
OBTYPE0 DC.B 'Edit  ',0
OBTYPE1 DC.B 'Text  ',0
OBTYPE2 DC.B 'Button',0
OBTYPE3 DC.B 'Output',0
OBTYPE4 DC.B 'Box   ',0
OBTYPE5 DC.B 'Circle',0
OBTYPE6 DC.B 'Icon  ',0
 EVEN
FLDMESY DC.B '     ',0
FLDMESZ DC.B 13,10,13,10,13,10,0
FLDMES DC.B 13,10,13,10
 DC.B '     Field Type   Size Page Sqnc Name            Contents'
 DC.B 13,10,13,10,0
 EVEN
FSELMES1 DC.B '*.ICN',0
FSELMES2 DC.B '*.TXT',0
FSELMES3 DC.B '*.FRM',0
BASEPRG DC.B 'BASE.PRG',0
 EVEN
FPATH DC.B 'PATH.TBL',0
 EVEN
FHEAD DC.B 'FRM2'
FTEST  DC.B '    '
 EVEN
MT1 DC.B 'BASE.PRG',0
MT2 DC.B 'SORT.PRG',0
MT3 DC.B 'UTIL.PRG',0
MT4 DC.B 'MENU.PRG',0
 EVEN
EDITMES DC.B '000',0
 EVEN

*-----------------------------STORAGE AREA-----------------------------

 BSS
 EVEN

**************************************************************
*             TextEdit Library BSS variables                 *
**************************************************************

 EVEN
TEMPADR DS.L 1 ;FOR INTERNAL USE
TEMPADR2 DS.L 1 ;FOR INTERNAL USE
TECOUNT DS 1 ;FOR INTERNAL USE
TEMPHOLD DS 1 ;FOR INTERNAL USE
TEMPKEY DS 1 ;FOR INTERNAL USE
TEMPKEY2 DS 1 ;FOR INTERNAL USE
TEXHOLD DS 1 ;FOR INTERNAL USE
TEYHOLD DS 1 ;FOR INTERNAL USE
TEANCHOR DS 1 ;FOR INTERNAL USE
TEADR DS.L 1 ;FOR INTERNAL USE
TEFLAG DS 1 ;FOR INTERNAL USE
TESTART DS 1 ;FOR INTERNAL USE
TESTART2 DS 1 ;FOR INTERNAL USE
TEEOF DS 1
 EVEN

SCRAP DS.L 1 ;SCRAP BUFFER LOCATION
SCRAPSZ DS 1 ;SCRAP BUFFER SIZE

**************************************************************
*          End of TextEdit Library BSS Variables             *
**************************************************************

 EVEN

*-------------GEM PARAMETER BLOCKS--------------

GEMSTART DS 1
CONTRL DS 1
OPCODE EQU CONTRL
SINTIN DS 1
SINTOUT DS 1
SADDRIN DS 1
SADDROUT DS.L 5
GLOBAL DS 1
APCOUNT DS 1
APID DS 1
APPRIVATE DS.L 1
APPTREE DS.L 1
AP1RESV DS.L 1
AP2RESV DS.L 1
AP3RESV DS.L 1
AP4RESV DS.L 1
INTIN DS.L 80
PTSIN DS.L 32
INTOUT DS.L 32
PTSOUT DS.L 32
ADDRIN DS.L 32
ADDROUT DS.L 32
GEMEND DS 1

GRHANDLE DS 1
DRHANDLE DS 1

*------------VARIABLES-----------

HELPER DS 1

WINDFLAG DS 1
FORMDIAL DS.L 1
FORMEDIT DS 1
SAVERTRN DS 1

DIALX DS 1
DIALY DS 1
DIALW DS 1
DIALH DS 1

HOLDX DS 1
HOLDY DS 1
HOLDW DS 1
HOLDH DS 1

SQNCTYPE DS 1
SQNCCNT DS 1
SQNCNUM DS 1
SQNCFLAG DS 1
SQNCFLG2 DS 1

OBJCNT DS 1
OBJADR DS.L 1
OBJADR2 DS.L 1
OBJADR3 DS.L 1
OBJNUM DS 1
OBJTYP DS 1
COUNT DS 1
COUNT2 DS 1
DESFLAG DS 1
FINDOBJ DS 1
CUTCOUNT DS 1
CUT2 DS 1
CUTADR DS.L 1

TREKADR DS.L 1
TREKCNT DS 1
TREKCNT2 DS 1

TECTEMP DS 1
TECTEMP2 DS 1
TECTEMP3 DS 1
LINENUM DS 1
BOTNUM DS 1
VIEWNUM DS 1
TEYLOC DS 1
VIEWCNT DS 1
OLDSLID DS 1
PAGENUM DS 1
PRINTNUM DS 1

SAVEFLAG DS 1
SAVELEN DS.L 1

MHOLD1 DS.L 1
MHOLD2 DS.L 1
NAMEBUFF DS.L 1
NAMEHOLD DS.B 16
 EVEN

DRAGFLAG DS 1
DRAGX DS 1
DRAGY DS 1
DRAGW DS 1
DRAGH DS 1
DRAGHOLD DS 2
TEMP DS.L 1
TEMP2 DS 1

PALSFLAG DS 1
GRIDFLAG DS 1

CLICK2 DS 1
CLICK4 DS 1
CLICK12 DS 1

COLOR1 DS 1
COLOR2 DS 1
FILLPAT DS 1
LINEWID DS 1
TXTSIZE DS 1
TXTFX DS 1

OBJX DS 1
OBJY DS 1
OBJW DS 1
OBJH DS 1

XPOS DS 1
YPOS DS 1

MENUADR DS.L 1  ;MENUBAR TREE ADDRESS
PALSTOR DS.L 1  ;PALETTE ADDRESS
PAGEADR DS.L 1  ;PAGE TOKEN
SCROLL DS.L 1   ;TEdit Scroll buffer

GRMODE DS 1  ;GRAPHIC MODE

INPATH DS.B 128 ;F_sel path
INFILE DS.B 128 ;F_sel filename
SAVEFILE DS.B 80
PRNTFILE DS.B 80 ;Procedure Filename
FORMFILE DS.B 80 ;Form Filename
FORMNAME DS.B 80 ;Form name

TAILFLAG DS 1
COMDBUFF DS.B 128
COMTAIL DS.B 128
FILENAME DS.B 128
 EVEN

FLDMES2 DS.B 80 ;Field description
FHANDLE DS 1
PTHNM DS.B 40
PATHNAME DS.B 40
 EVEN

CUTBUFF DS.L 1 ;Cut/Copy/Past buffer
CUTBUFF2 DS.L 1 ;Cut Buffer
CUTFLAG DS 1 ;Cut function flag
LDFLAG DS 1
SVFLAG DS 1
CLIPFLAG DS 1
OBJMEM DS.L 1 ;Object memory pointer
OBJICN DS.L 1 ;Icon buffer
ICONUM DS 1  ;Icon counter
OBJTER DS 1  ;TERec counter
TEMEM DS.L 1 ;TERec text buffer
 EVEN

DMORG DS 4

LOADBUFF DS.L 1  ;Disk load buffer
LOADSIZE DS.L 1  ;Size of buffer

MFDB DS 10 ;Memory form definition block
MFDB2 DS 10

WINDX DS 1
WINDY DS 1
WINDW DS 1
WINDH DS 1
WIHANDLE DS 1

PALX DS 1  ;Palette values
PALY DS 1
PALW DS 1
PALH DS 1

ABOUTDI DS.L 1
NAMETREE DS.L 1
LANDTREE DS.L 1
ERRDLG DS.L 1
SAVEADR DS.L 1
FORMADR DS.L 1
BADADR DS.L 1
CONVADR DS.L 1
SEQADR DS.L 1
MONOADR DS.L 1
PRINTREE DS.L 1
SUREADR DS.L 1
IOERRADR DS.L 1
STRINGADR DS.L 1
 EVEN

INTLCODE DS 1
WRAPFLAG DS 1
UCFLAG DS 1
SCORFLAG DS 1
CARETFLG DS 1
SHRINK DS 4

OBRECS DS.B OBRECSZ*MAXOB ;Object records
 EVEN

TERECS DS.B TERECSIZE*MAXEDIT ;TERecs
 EVEN
EDSIZE DS 1
EDMEM DS.L 1
EDMEM2 DS.L 1
TEREC2 DS.B TERECSIZE
 EVEN

WORDBRK DS 1
OUTFLAG DS 1  ;Object draw flag
SHIFTED DS 1  ;Shift key press
BUTNW DS 1
BUTNH DS 1
BUTNSEL DS 1
KEYFLAG DS 1
TIMEDATE DS 32
TIMEOUT DS.L 1

 EVEN
 DS.B 4000
USTK DS 1
 EVEN

*------Resource file Equates------

ABOUTDLG = 0;  REM ---TREE---
MENUBAR = 1;  REM ---TREE---
PALETTE = 2;  REM ---TREE---
MABTCONT = 2;  REM 0---
MDESK = 3;  REM 1---
MFILE = 4;  REM 1---
MEDIT = 5;  REM 1---
MOPTIONS = 6;  REM 1---
MSTYLE = 7;  REM 1---
MGRAPHIC = 8;  REM 1---
MICONS = 9;  REM 1---
MABOUT = 13;  REM 1---
MNEW = 22;  REM 1---
MOPEN = 23;  REM 1---
MSAVE = 24;  REM 1---
MSAVEAS = 25;  REM 1---
MCLOSE = 26;  REM 1---
MQUIT = 29;  REM 1---
MRUN = 28;  REM 1---
MCUT = 31;  REM 1---
MCOPY = 32;  REM 1---
MPASTE = 33;  REM 1---
MPROCED = 42;  REM 1---
MHIDE = 44;  REM 1---
MGRID = 45;  REM 1---
MNAME = 46;  REM 1---
MLOADP = 48;  REM 1---
MSAVEP = 49;  REM 1---
MPRINTP = 50;  REM 1---
MCOLOR1 = 56;  REM 1---
MCOLOR2 = 57;  REM 1---
MCOLOR3 = 58;  REM 1---
MCOLOR4 = 59;  REM 1---
MNORMAL = 61;  REM 1---
MBOLD = 62;  REM 1---
MLIGHT = 63;  REM 1---
MITALICS = 64;  REM 1---
MUNDER = 65;  REM 1---
M8PT = 67;  REM 1---
M10PT = 68;  REM 1---
M14PT = 69;  REM 1---
M28PT = 70;  REM 1---
MGRCLR1 = 74;  REM 1---
MGRCLR2 = 75;  REM 1---
MGRCLR3 = 76;  REM 1---
MGRCLR4 = 77;  REM 1---
MPAT1 = 79;  REM 1---
MPAT2 = 80;  REM 1---
MPAT3 = 81;  REM 1---
MPAT4 = 82;  REM 1---
MPAT5 = 83;  REM 1---
MPAT6 = 84;  REM 1---
MPAT7 = 85;  REM 1---
MPAT8 = 86;  REM 1---
MLDICON = 88;  REM 1---
MPALDRAG = 4;  REM 2---
OBEDIT = 2;  REM 2---
OBTEXT = 3;  REM 2---
OBBUTTON = 5;  REM 2---
OBOUTPUT = 6;  REM 2---
OBBOX = 7;  REM 2---
OBCIRCLE = 10;  REM 2---
OBICON = 13;  REM 2---
M20PT = 71;  REM 1---
OBBOX2 = 8;  REM 2---
OBBOX3 = 9;  REM 2---
OBCIRCL2 = 11;  REM 2---
OBCIRCL3 = 12;  REM 2---
OBICON2 = 14;  REM 2---
OBICON3 = 15;  REM 2---
NAMEFLD = 3;  REM ---TREE---
OBNAMED = 20;  REM 3---
NMCANCEL = 2;  REM 3---
NMOK = 3;  REM 3---
FLDNUM = 5;  REM 3---
FLDTYPE = 6;  REM 3---
PAGE1 = 15;  REM 3---
PAGE2 = 16;  REM 3---
PAGE3 = 17;  REM 3---
PAGE4 = 18;  REM 3---
MPRINTF = 51;  REM 1---
MCOUNTRY = 54;  REM 1---
COUNTRY = 4;  REM ---TREE---
MUSAOK = 22;  REM 4---
MUSA = 13;  REM 4---
MUK = 14;  REM 4---
MGERMAN = 15;  REM 4---
MDENMARK = 16;  REM 4---
MFRANCE = 17;  REM 4---
MSWEDEN = 18;  REM 4---
MITALY = 19;  REM 4---
MSPAIN = 20;  REM 4---
MJAPAN = 21;  REM 4---
SAVEDLG = 5;  REM ---TREE---
SAVENAME = 2;  REM 5---
DISKERR = 6;  REM ---TREE---
ERRETRY = 6;  REM 6---
ERCANCEL = 7;  REM 6---
ERMES = 8;  REM 6---
SVCANCEL = 6;  REM 5---
SVOK = 7;  REM 5---
ERMES2 = 9;  REM 6---
PSTATUS = 7;  REM ---TREE---
PCANCEL = 6;  REM 7---
POK = 7;  REM 7---
PAGER = 8;  REM ---TREE---
PGONE = 1;  REM 8---
PGTWO = 2;  REM 8---
PGTHREE = 3;  REM 8---
PGFOUR = 4;  REM 8---
SUREDLG = 9;  REM ---TREE---
SUREYES = 3;  REM 9---
SURENO = 4;  REM 9---
SURECNL = 5;  REM 9---
BADFORM = 10;  REM ---TREE---
BDCNCL = 5;  REM 10---
CONVERT = 11;  REM ---TREE---
CONVYES = 6;  REM 11---
CONVCNCL = 7;  REM 11---
SAVEFRM = 12;  REM ---TREE---
SVFROK = 4;  REM 12---
SVFRCNCL = 3;  REM 12---
SVFRNAME = 1;  REM 12---
MEDSQNC = 35;  REM 1---
MTRANSFR = 10;  REM 1---
MTRNSQL = 90;  REM 1---
MTRNSORT = 91;  REM 1---
MTRNUTIL = 92;  REM 1---
MTRNMENU = 93;  REM 1---
MTRNGEM = 94;  REM 1---
SEQUENCE = 13;  REM ---TREE---
SQNCCNCL = 6;  REM 13---
SQNCOK = 7;  REM 13---
SQNC1 = 9;  REM 13---
SQNC2 = 10;  REM 13---
FLDSQNC = 10;  REM 3---
MWRAP = 36;  REM 1---
MCARET = 37;  REM 1---
MSCORE = 39;  REM 1---
ICON1 = 23;  REM 3---
ICON2 = 4;  REM 6---
ICON3 = 1;  REM 7---
ICON4 = 1;  REM 11---
ICON5 = 2;  REM 12---
ICON6 = 1;  REM 10---
ICON7 = 1;  REM 13---
MONO = 14;  REM ---TREE---
MOBBOX2 = 1;  REM 14---
MCIRCLE = 2;  REM 14---
MOBICON2 = 3;  REM 14---
MICON2 = 4;  REM 14---
MICON3 = 5;  REM 14---
MICON46 = 6;  REM 14---
MICON5 = 7;  REM 14---
MICON7 = 8;  REM 14---
MICON1 = 9;  REM 14---
MOUTLINE = 72;  REM 1---
MUPRCASE = 40;  REM 1---
IOERRS = 15;  REM ---TREE---
IOERR1 = 1;  REM 15---
IOERR2 = 18;  REM 15---
IOERR3 = 27;  REM 15---
IOERR4 = 28;  REM 15---
IOERR5 = 29;  REM 15---
IOERR6 = 33;  REM 15---
NCMES = 0;  REM ---STRING---
NMEMMES = 1;  REM ---STRING---
MODMES = 2;  REM ---STRING---
STRINGS = 16;  REM ---TREE---
SQNCMES = 1;  REM 16---
SQNCFIN = 2;  REM 16---
SQNCALRT = 3;  REM ---STRING---
OBJNAME = 3;  REM 16---
PROCNAME = 4;  REM 16---
TOGMES1 = 5;  REM 16---
TOGMES2 = 6;  REM 16---
PROCMES1 = 7;  REM 16---
PROCMES2 = 8;  REM 16---
FLDMESB = 9;  REM 16---
FLDMESC = 10;  REM 16---
NMEXIST = 4;  REM ---STRING---
MAXMES2 = 5;  REM ---STRING---
MAXEDS = 6;  REM ---STRING---
MAXICN = 7;  REM ---STRING---
FLDMESX = 11;  REM 16---
FLDSIZE = 12;  REM 3---

 END
