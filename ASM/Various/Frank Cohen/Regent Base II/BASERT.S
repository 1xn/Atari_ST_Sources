
*****************************
* REGENT BASE 2             *
* A 4GL SQL Database System *
* (c) 1989 FRANK COHEN      *
* ========================= *
* FORMS PROCESSOR           *
* Started February 2, 1988  *
*****************************

*---------------SQL PARAMETER VARIABLES---------------*

BUFSIZE EQU 8000 ;Maximum table disk buffer space

MAX_SEL EQU 200 ;Maximum # of expressions
SIZ_SEL EQU 12000

MAX_AGG EQU 25  ;Maximum # of aggregate expressions
SIZ_AGG EQU 30*MAX_AGG

MAX_TBL EQU 8 ;Maximum # of tables
SIZ_TBL EQU 32*MAX_TBL

MAX_WHERE EQU 50 ;Maximum # of where expressions
SIZ_WHERE EQU 8000

MAX_ORD EQU 10 ;Maximum # of order by expressions
SIZ_ORD EQU 32*MAX_ORD

MAX_GRP EQU 1 ;Maximum # of group by expressions
SIZ_GRP EQU 32*MAX_GRP

MAX_REOR EQU MAX_SEL ;Maximum # of reorganize fields
MAX_INDX EQU MAX_SEL ;Maximum # of index fields

MAX_VARS EQU 50  ;Maximum # of variables
SIZ_VAR EQU 4000

PRNTBLN EQU 68   ;Page buffer line count
PRNTBCR EQU 200  ;Page buffer character count
SHOWLINE EQU 20  ;# of lines in Show screen
SHOWCHAR EQU 74  ;# of characters in Show screen

PMAX EQU 250  ;# of format structures
PBSIZE EQU 4000  ;Size of format buffer

MAX_LABELS EQU 200 ;Maximum # of labels
SIZ_LABELS EQU 4000

*-------------NON SQL EQUATES------------

MAXOB EQU 200      ;Maximum number of objects
MAXEDIT EQU 125    ;Maximum number of edit fields
EDITSZ EQU 540     ;Size of each edit fields HTEXT() buffer
OBJSZ EQU 80       ;Size of each object contents buffer
MAXICONS EQU 20    ;Maximum number of icons
ICONBUFSZ EQU 8000 ;Size of each icon buffer
MAXLINE EQU 800    ;Max # of lines in editor

CACTBL EQU 64  ;Maximum number of tables
CACFLD EQU 450 ;Maximum number of fields
CACIDX EQU 64  ;Maximum number of indexes

START MOVE.L A7,A5
 MOVE.L 4(A5),A5
 MOVE.L $C(A5),D0
 ADD.L $14(A5),D0
 ADD.L $1C(A5),D0
 ADD.L #$100,D0
 MOVE.L D0,-(A7)
 MOVE.L A5,-(A7)
 MOVE D0,-(A7)
 MOVE #$4A,-(A7)
 TRAP #1
 ADD.L #12,A7

 MOVE #GEMEND-GEMSTART,D0
 SUB #1,D0
 LEA GEMSTART,A0
CLRGEM CLR.B (A0)+
 DBF D0,CLRGEM

*--------------INIT GEM VARIABLES-------------

 CLR.L AP1RESV   ;APPL_INIT
 CLR.L AP2RESV
 CLR.L AP3RESV
 CLR.L AP4RESV
 CLR.L APPTREE
 MOVE #10,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES

 MOVE #77,CONTRL  ;GRAF_HANDLE
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES
 MOVE INTOUT,DRHANDLE

 MOVE #100,CONTRL ;OPEN_VWORK
 CLR CONTRL+2
 MOVE #11,CONTRL+6
 MOVE DRHANDLE,CONTRL+12
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 MOVE #1,INTIN+6
 MOVE #1,INTIN+8
 MOVE #1,INTIN+10
 MOVE #1,INTIN+12
 MOVE #1,INTIN+14
 MOVE #1,INTIN+16
 MOVE #1,INTIN+18
 MOVE #2,INTIN+20
 JSR VDI

 MOVE CONTRL+12,GRHANDLE

 MOVE #104,OPCODE     ;DETERMINE WORK STORAGE
 MOVE #2,SINTIN       ;OF THE DESKTOP WINDOW
 MOVE #5,SINTOUT
 CLR SADDRIN
 CLR SADDROUT
 CLR INTIN
 MOVE #4,INTIN+2
 JSR AES
 MOVE INTOUT+2,GEMXPOS
 MOVE INTOUT+4,GEMYPOS
 MOVE INTOUT+6,GEMWIDTH
 MOVE INTOUT+8,GEMHOEHE

 JSR GETPATH

 MOVE #2,D0
 JSR SHWMOUSE

 MOVE #3,-(A7)
 TRAP #14
 ADD.L #2,A7
 MOVE.L D0,SCREEN

*------------------FIND COMMAND TAIL-------------------

 MOVE #120,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE.L #COMDBUFF,ADDRIN
 MOVE.L #COMTAIL,ADDRIN+4
 JSR AES

 CLR TAILFLAG
 LEA FILENAME,A1
 LEA COMTAIL,A0
 CLR.L D1
 MOVE.B (A0)+,D1
 TST.B D1
 BEQ TAIL2

TAIL1 MOVE.B (A0)+,D0
 TST.B D0
 BEQ TAIL2
 CMP.B #13,D0
 BEQ TAIL2
 CMP.B #' ',D0
 BEQ TAIL2
 MOVE.B D0,(A1)+
 MOVE #1,TAILFLAG
 DBF D1,TAIL1
TAIL2 CLR.B (A1)+

 CLR.B FORMFILE

 LEA FILENAME,A0
 JSR ADDPATH
 LEA FORMFILE,A1
 TST.B FILENAME
 BEQ TAIL4
TAIL3 TST.B (A0)
 BEQ TAIL4
 MOVE.B (A0)+,(A1)+
 JMP TAIL3
TAIL4 CLR.B (A1)+

 MOVE #11,D0
 LEA FILENAME,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
TAIL10 MOVE.B (A0)+,(A1)+
 DBF D0,TAIL10

*----------------LOAD RESOURCE FILE------------------

 MOVE #110,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE.L #RSCNAME,ADDRIN
 JSR AES

*----------GET RESOURCE ADDRESSES-------------

 LEA G_TREE,A4
G_100 MOVE.L (A4)+,D0
 TST.L D0
 BMI G_101
 JSR GADDR
 MOVE.L (A4)+,A1
 MOVE.L A0,(A1)
 JMP G_100

G_101 MOVE.L (A4)+,D0
 TST.L D0
 BMI G_102
 JSR GADDR2
 MOVE.L (A4)+,A1
 MOVE.L A0,(A1)
 JMP G_101

G_102 MOVE.L STRINGADR,A0
 ADD #ROBJNAM*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 LEA OBJNAME,A1
 MOVE #79,D0
INROBJ MOVE.B (A0)+,(A1)+
 DBF D0,INROBJ

*----------------Check Graphic Mode---------------------

 MOVE #4,-(A7)
 TRAP #14
 ADD #2,A7
 MOVE D0,GRMODE
 TST D0
 BNE GOODMD
 JMP BADMODE

*----------------DISPLAY MENU BAR---------------------

GOODMD MOVE #MENUBAR,D0
 JSR GADDR
 MOVE.L A0,MENUADR

 CLR OB_X(A0)
 CLR OB_Y(A0)

 MOVE #30,CONTRL   ;SHOW MENU BAR
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE.L MENUADR,ADDRIN
 JSR AES

 JSR MENUSET1

*-----------GET SOME MEMORY-------------

 MOVE.L #-1,-(A7)  ;MALLOC
 MOVE #$48,-(A7)
 TRAP #1
 ADD.L #6,A7
 SUB.L #32000,D0
 MOVE.L D0,D4

 MOVE.L D0,-(A7)  ;MALLOC
 MOVE #$48,-(A7)
 TRAP #1
 ADD #6,A7

 MOVE.L D0,D1

 MOVE.L D4,D2  ;Move stack pointer
 ADD.L D0,D2
 MOVE.L D2,A7

*------------SQL VARIABLE ALLOCATION-------------

*Field, Table & Index storage
 MOVE.L D0,CACHET
 ADD.L #48*CACTBL,D0
 MOVE.L D0,CACHEF
 ADD.L #65*CACFLD,D0
 MOVE.L D0,CACIND
 ADD.L #65*CACIDX,D0

*Select field expression storage
 MOVE.L D0,STR_SEL
 ADD.L #MAX_SEL*EV_FSZ,D0
 MOVE.L D0,BUF_SEL
 ADD.L #SIZ_SEL,D0

*Aggregate expression storage
 MOVE.L D0,STR_AGG
 ADD.L #MAX_AGG*EV_FSZ,D0
 MOVE.L D0,BUF_AGG
 ADD.L #SIZ_AGG,D0

*Table definition storage
 MOVE.L D0,STR_TBL
 ADD.L #MAX_TBL*EV_FSZ,D0
 MOVE.L D0,BUF_TBL
 ADD.L #SIZ_TBL,D0

*Where expression storage
 MOVE.L D0,STR_WHERE
 ADD.L #MAX_WHERE*EV_FSZ,D0
 MOVE.L D0,BUF_WHERE
 ADD.L #SIZ_WHERE,D0

*Order by storage
 MOVE.L D0,STR_ORD
 ADD.L #MAX_ORD*EV_FSZ,D0
 MOVE.L D0,BUF_ORD
 ADD.L #SIZ_ORD,D0

*Group by definition storage
 MOVE.L D0,STR_GRP
 ADD.L #MAX_GRP*EV_FSZ,D0
 MOVE.L D0,BUF_GRP
 ADD.L #SIZ_GRP,D0

*Label storage
 MOVE.L D0,STR_LBL
 ADD.L #MAX_LABELS*EV_FSZ,D0
 MOVE.L D0,BUF_LBL
 ADD.L #SIZ_LABELS,D0

*Reorganize definition storage
 MOVE.L D0,STR_REOR
 ADD.L #MAX_REOR*EV_FSZ,D0
 MOVE.L D0,STR_INDX
 ADD.L #MAX_INDX*EV_FSZ,D0

*Variable storage
 MOVE.L D0,STR_VAR
 ADD.L #MAX_VARS*EV_FSZ,D0
 MOVE.L D0,BUF_VAR
 ADD.L #SIZ_VAR,D0

*Format storage
 MOVE.L D0,PBUFFER
 ADD.L #PSIZE*PMAX,D0
 MOVE.L D0,PBUF
 ADD.L #PBSIZE,D0

 MOVE.L D0,PGARBAGE
 ADD.L #PSIZE*PMAX,D0
 MOVE.L D0,PGARBUF
 ADD.L #PBSIZE,D0

*Print preview page
 MOVE.L D0,PRNTBUFF
 ADD.L #PRNTBLN*PRNTBCR,D0

 MOVE.L D0,OBJMEM  ;Object buffers
 ADD.L #MAXOB*OBJSZ,D0

 MOVE.L D0,SCROLL  ;TEdit Scroll buffer
 ADD.L #MAXLINE*2,D0

 MOVE.L D0,SCRAP   ;TextEdit Scrap Buffer
 MOVE #1900,SCRAPSZ
 ADD.L #2000,D0

 MOVE.L D0,TEMEM   ;TextEdit buffers
 ADD.L #MAXEDIT*EDITSZ,D0

 MOVE.L D0,EDMEM   ;Procedure editor memory
 ADD.L #34000,D0
 MOVE.L #32000,EDSIZE
 MOVE.L D0,EDMEM2  ;Secondary editor memory
 ADD.L #34000,D0

 MOVE.L D0,OBJICN  ;Icon storage
 ADD.L #MAXICONS*ICONBUFSZ,D0

 MOVE.L D0,CUTBUFF ;Cut/Copy/Paste Buffer
 ADD.L #50000,D0

 MOVE.L D0,NAMEBUFF ;Object name buffer
 ADD.L #MAXOB*16,D0

 MOVE.L D0,D2
 SUB.L D1,D2
 SUB.L D2,D4
 CMP.L #10000,D4
 BLT NOMEM

*Quick Sort storage
 OR.L #1,D0
 AND.L #$FFFFFFFE,D0
 MOVE.L D0,Q_HEAP

 SUB.L #4000,D4
 AND.L #$FFFFFFFE,D4
 MOVE.L D4,Q_SIZE

*-----------MONOCHROME----------

 CMP #2,GRMODE
 BNE INITPRNTR

 MOVE.L MONOADR,A0
 ADD.L #MICON2*OBSIZE,A0
 MOVE.L ERRDLG,A1
 ADD.L #ICON2*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON3*OBSIZE,A0
 MOVE.L PRINTREE,A1
 ADD.L #ICON3*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON46*OBSIZE,A0
 MOVE.L BADADR,A1
 ADD.L #ICON4*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L CONVADR,A1
 ADD.L #ICON6*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L MONOADR,A0
 ADD.L #MICON5*OBSIZE,A0
 MOVE.L FORMADR,A1
 ADD.L #ICON5*OBSIZE,A1
 MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 MOVE.L PAGEADR,A0
 ADD.L #PGONE*OBSIZE,A0
 MOVE OB_HGHT(A0),D0
 LSL #1,D0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)
 ADD.L #OBSIZE,A0
 MOVE D0,OB_HGHT(A0)

*---------------GET PRINTER NUMBER----------------

INITPRNTR JSR RSTPRNTR
 CLR INTLCODE
 CLR OLDINTL

 MOVE.L #127,D0
 LEA PRNTFILE,A0
PRNTCLR1 CLR.B (A0)+
 DBF D0,PRNTCLR1

 LEA PRNTNAME,A0
 JSR ADDPATH
 JSR F_OPEN
 TST D0
 BMI INITCLIP
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 LEA PRNTFILE,A1
 MOVE.L #128,D0
 JSR F_READ
 CMP.L #128,D0
 BNE INITCLIP

 MOVE FHANDLE,A0
 JSR F_CLOSE

 CLR D0
 MOVE.B PRNTFILE,D0
 MOVE D0,INTLCODE

 JSR LDPRNTR

*----------LOAD CLIPBOARD---------

INITCLIP JSR CLRSCRAP ;Clear TextEdit Scrap buffer
 CLR CLIPFLAG

 LEA SCRAPNAME,A0
 JSR ADDPATH
 JSR F_OPEN
 TST D0
 BMI INITFORM
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L #4,D0
 JSR F_READ

 MOVE.L SCRAP,A0
 CMP.L #'TEXT',(A0)
 BEQ GOODSCRAP
 CLR.L (A0)
 JMP BADSCRAP

GOODSCRAP MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L #1000,D0
 JSR F_READ

BADSCRAP MOVE FHANDLE,A0
 JSR F_CLOSE

*------------INIT A FORM----------

INITFORM MOVE.L STRINGADR,A0
 ADD #PRNAMZ*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.B (A0),EURO_DATE

 CLR VAR_COUNT
 MOVE.L BUF_VAR,BUF_VAR2
 CLR NAMEFLAG

 MOVE #1,CACHE
 JSR LDCACHE
 TST D0
 BMI QUIT2

 MOVE #1,D0
 JSR WIND_UPDATE

 TST TAILFLAG  ;Warmstart a form?
 BNE LOADANDGO
 JMP DOOPEN

 JSR BEGFORM
 JSR OPENEDW

*----------MAIN EVENT LOOP---------

MAINLOOP CLR D0
 JSR SHWMOUSE

 JSR NOCLIP
 JSR TEXTINIT
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$FFFF,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

MAINSTRT JSR TRANSRV

 TST EVWHICH
 BNE WARP

GTAGN CLR D0
 JSR WIND_UPDATE

 JSR GT_EVENT

 MOVE #1,D0
 JSR WIND_UPDATE

 MOVE INTOUT+8,SHIFTED
 MOVE INTOUT+2,CLICK2
 MOVE INTOUT+4,CLICK4
 MOVE INTOUT+12,CLICK12

WARP MOVE EVWHICH,D0
 AND #$33,D0
 MOVE D0,EVWHICH

 MOVE EVWHICH,D0
 AND #$10,D0
 BEQ EVENT2

 MOVE EVWHICH,D0
 AND #$EF,D0
 MOVE D0,EVWHICH
 JMP MESEVENT

EVENT2 JSR VALIDATE
 TST D0
 BEQ EVENT4
 CLR EVWHICH
 JMP MAINSTRT

EVENT4 MOVE EVWHICH,D0
 AND #1,D0
 BEQ EVENT3

 MOVE EVWHICH,D0
 AND #$FE,D0
 MOVE D0,EVWHICH
 JMP KEYEVENT

EVENT3 MOVE EVWHICH,D0
 AND #2,D0
 BEQ EVENT5

 MOVE EVWHICH,D0
 AND #$FD,D0
 MOVE D0,EVWHICH
 JMP BUTEVENT

EVENT5 MOVE EVWHICH,D0
 AND #$20,D0
 BEQ MAINLOOP

 MOVE EVWHICH,D0
 AND #$DF,D0
 MOVE D0,EVWHICH

*------------IDLING--------

DOIDLE CMP #2,WINDFLAG
 BEQ EDBL3
 TST WINDFLAG
 BEQ MAINLOOP

 CLR.L D2
 MOVE ACTIVE,D2
 BEQ EDBL4
 SUB #1,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE EDBL4
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE EDBL4
 MOVE.L OB_TEREC(A4),A0
 JSR TEIDLE
EDBL4 JMP MAINSTRT

EDBL3 LEA TEREC2,A0
 JSR TEIDLE
 JMP MAINLOOP

*---------Activate First TE Object-----------

ACTIVATE CLR ACTIVE

 TST OBJCNT
 BEQ NOACTIVE
 TST OBJTER
 BEQ NOACTIVE

 CLR ACTVAR
 MOVE #4000,ACTVAR2
 CLR COUNT

FACT1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE FACT5

 TST SQNCTYPE
 BEQ FACT2
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE FACT5
 MOVE ACTVAR2,D0
 CMP OB_SQNC(A4),D0
 BLT FACT5
 MOVE OB_SQNC(A4),ACTVAR2
 MOVE COUNT,ACTVAR
 ADD #1,ACTVAR
 JMP FACT5

FACT2 CMP #1,OB_SQNC(A4)
 BNE FACT5
 MOVE COUNT,ACTIVE
 ADD #1,ACTIVE
 MOVE OB_PAGE(A4),PAGENUM
 RTS

FACT5 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE FACT1

 TST SQNCTYPE
 BEQ NOACTIVE
 MOVE ACTVAR,ACTIVE

NOACTIVE RTS

*------------Init Some Form Variables-----------

BEGFORM MOVE #1,PAGEICON
 CLR PAGENUM
 JSR SETPAGER

 CLR SAVEFLAG
 CLR.B SAVEFILE
 CLR LDFLAG
 CLR ACTIVE
 CLR OBJTER
 CLR ICONUM
 CLR OBJCNT
 CLR STATUS
 MOVE #8,HELPER
 CLR EVWHICH

 JSR CLRNAMES

 MOVE.L TEMEM,A0
 CLR.L D0
IPED2 CLR.B (A0)+
 ADD #1,D0
 CMP #MAXEDIT*EDITSZ,D0
 BNE IPED2

CLREDMEM CLR.L D0
 MOVE.L EDMEM,A0
NEW1 CLR.B (A0)+
 ADD #1,D0
 CMP.L EDSIZE,D0
 BNE NEW1
 RTS

*--------DROP-DOWN MENU SELECTED------

VALIDATE LEA VALTBL,A4

VAL_LOOP CLR.L D0
 MOVE (A4)+,D0
 TST D0
 BEQ VALIDYS
 MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A0
 TST OB_STATE(A0)
 BEQ VAL_LOOP

VALIDNO MOVE #1,D0
 RTS

VALIDYS CLR D0
 RTS

VALTBL DC IDESK,IFILE,IEDIT,IPRINTER,ITRANSFR,0

*-----------MESSAGE EVENT---------

MESEVENT MOVE EVMESG,D0
 CMP #10,D0
 BEQ W_MENU

 MOVE EVMESG+6,D1
 CMP WIHANDLE,D1
 BNE MAINLOOP

 CMP #20,D0
 BEQ W_REDRAW
 CMP #21,D0
 BEQ W_TOPPED
 CMP #29,D0
 BEQ W_NEWTOP
 CMP #22,D0
 BEQ W_CLOSE
 CMP #24,D0
 BEQ W_ARROW
 CMP #25,D0
 BEQ W_HSLIDE
 CMP #26,D0
 BEQ W_VSLIDE
 CMP #27,D0
 BEQ W_SIZED
 CMP #28,D0
 BEQ W_MOVED
 JMP MAINLOOP

W_CLOSE JMP DOCLOSE

W_TOPPED TST D0
W_HSLIDE TST D0
W_SIZED TST D0
W_NEWTOP TST D0
W_MOVED JMP MAINLOOP

*------------ARROW-------------

W_ARROW CMP #2,WINDFLAG
 BNE MAINLOOP

DOARROW LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ ARROW2
 BMI ARROW2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 LEA TEREC2,A0
 MOVE SELSTART(A0),SELEND(A0)
 JMP ARROW3
ARROW2 JSR TEDNOCAR

ARROW3 CMP #0,EVMESG+8
 BEQ EDPGUP
 CMP #1,EVMESG+8
 BEQ EDPGDN
 CMP #2,EVMESG+8
 BEQ EDLNUP
 CMP #3,EVMESG+8
 BEQ EDLNDN
 JMP MAINLOOP

*----------SCROLL ONE LINE DOWN------------

EDLNDN JSR LINEDOWN
 JMP EDLNDONE

LINEDOWN JSR TECALC

 ADD #1,D1

WITLDOWN CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0
 TST (A0)
 BPL LNDN10
 SUB.L #2,A0
 SUB #1,D1

LNDN10 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 MOVE VIEWNUM,D0
 ADD #17,D0
 CMP D1,D0
 BGT LNDN41

 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM
LNDN41 RTS

*-----------SCROLL ONE LINE UP------------

EDLNUP JSR TECALC

 TST D1
 BEQ LNDN20

 SUB #1,D1

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0
 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 MOVE (A0),D0
 CMP TEYLOC,D0
 BGE EDLNDONE

 MOVE D1,VIEWNUM
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 JMP EDLNDONE

LNDN20 CLR TEYLOC
 CLR TESTART
 LEA TEREC2,A1
 CLR SELSTART(A1)
 CLR SELEND(A1)
 CLR LINENUM
 CLR VIEWNUM
 JMP EDLNDONE

*-----------SCROLL ONE PAGE UP------------

EDPGUP JSR TECALC

 TST D1
 BEQ EDLNDONE

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 MOVE #17,D0
LNDN25 TST (A0)
 BEQ LNDN26
 SUB #2,A0
 SUB #1,D1
 DBF D0,LNDN25

LNDN26 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM

 CLR TEYLOC
 CLR TESTART
 CMP #17,D1
 BLT EDLNDONE
 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM
 JMP EDLNDONE

*----------SCROLL ONE PAGE DOWN-----------

EDPGDN JSR TECALC

 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 MOVE #17,D0
LNDN22 TST (A0)
 BMI LNDN23
 ADD #2,A0
 ADD #1,D1
 DBF D0,LNDN22

LNDN23 SUB #2,A0
 SUB #1,D1

 LEA TEREC2,A1
 MOVE (A0),SELSTART(A1)
 MOVE (A0),SELEND(A1)
 MOVE D1,LINENUM
 MOVE D1,VIEWNUM

 CLR TEYLOC
 CLR TESTART
 CMP #17,D1
 BLT EDLNDONE
 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM

EDLNDONE MOVE #1,WORDBRK
 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 CLR WORDBRK
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR TEIDLE
 JSR SHOWSLID

EDLCLR MOVE #11,-(A7) ;C_conis
 TRAP #1
 ADD.L #2,A7
 TST.L D0
 BEQ MAINLOOP

 MOVE #7,-(A7) ;C_rawcin
 TRAP #1
 ADD.L #2,A7
 JMP EDLCLR

*-------------DRAG THUMB---------------

W_VSLIDE MOVE EVMESG+6,D0
 CMP WIHANDLE,D0
 BNE MAINLOOP

 CMP #2,WINDFLAG
 BNE MAINLOOP

 LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 TST D0
 BEQ THUMB2
 BMI THUMB2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 LEA TEREC2,A0
 MOVE SELSTART(A0),SELEND(A0)
 JMP THUMB3
THUMB2 JSR TEDNOCAR

THUMB3 JSR TECALC

 CLR.L D1
 MOVE BOTNUM,D1
 SUB #1,D1
 CLR.L D0
 MOVE EVMESG+8,D0
 MULU D1,D0
 DIVU #1000,D0
 AND.L #$FFFF,D0
 MOVE D0,D1

 MULU #2,D1
 ADD.L SCROLL,D1
 MOVE.L D1,A1
 LEA TEREC2,A0
 MOVE (A1),SELSTART(A0)
 MOVE (A1),SELEND(A0)

 MOVE D0,LINENUM
 MOVE D0,VIEWNUM
 CLR TEYLOC
 CLR TESTART
 CMP #9,D0
 BCS THUMB4
 SUB.L #9*2,A1
 SUB #9,VIEWNUM
 MOVE (A1),TEYLOC
 MOVE (A1),TESTART

THUMB4 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR TEIDLE
 JSR SHOWSLID
 JMP MAINLOOP

*--------SET THUMB POSITION-------

SHOWSLID CMP #2,WINDFLAG
 BNE NOPOS

 MOVE #105,CONTRL  ;POSITION V SLIDER
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #9,INTIN+2

 MOVE BOTNUM,D0
 BEQ SSLID2

 CLR.L D0
 MOVE LINENUM,D0
 MULU #1000,D0
 DIVU BOTNUM,D0
SSLID2 MOVE D0,INTIN+4

 CMP OLDSLID,D0
 BEQ NOPOS
 MOVE D0,OLDSLID
 JMP AES
NOPOS RTS

*----------FILL SCROLL BUFFER-----------

TECALC MOVE.L SCROLL,A0
 MOVE #MAXLINE-1,D0
TELX01 MOVE #-1,(A0)+
 DBF D0,TELX01

 LEA TEREC2,A0
 CLR.L D0
 MOVE TEXOFF(A0),D0
 MULU #4,D0
 ADD VIEWRECT+4(A0),D0
 SUB #2,D0
 DIVU TEXSIZE(A0),D0
 AND.L #255,D0
 SUB #1,D0
 MOVE D0,TEMPHOLD

 MOVE.L HTEXT(A0),A2
 TST.B (A2)
 BEQ TELX30

 MOVE.L SCROLL,A3

 CLR.L D1
 CLR TECOUNT

TELX9 MOVE D1,(A3)+
 MOVE.L A2,A4
 MOVE TECOUNT,BOTNUM

 CMP #1,WORDWRAP(A0)
 BNE TELX16

 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE TEMPHOLD,D4

TELX10 MOVE.B (A4),D0
 BEQ TELX30
 CMP.B #' ',D0
 BEQ TELX20
 CMP.B #13,D0
 BEQ TELX18
 ADD #1,A4
 ADD #1,D2
 SUB #1,D4
 BNE TELX10

TELX19 ADD D3,D1
 TST D3
 BNE TELX13
 ADD TEMPHOLD,D1
 CLR.L D0
 MOVE TEMPHOLD,D0
 ADD.L D0,A2
 JMP TELX13

TELX18 MOVE #1,D4

TELX20 ADD #1,D2
 ADD.L #1,A4
 MOVE D2,D3
 MOVE.L A4,A2
 SUB #1,D4
 BNE TELX10
 JMP TELX19

TELX16 MOVE.L A2,D0
 SUB.L HTEXT(A0),D0
 CMP TETXTEND(A0),D0
 BCC TELX30

TELX14 ADD TEMPHOLD,D1

TELX13 ADD #1,TECOUNT
 CMP #MAXLINE,TECOUNT
 BCS TELX9

TELX30 LEA TEREC2,A1
 MOVE SELSTART(A1),D0
 MOVE.L SCROLL,A0
 CLR.L D1

TELX33 TST (A0)
 BMI TELX31
 CMP (A0),D0
 BEQ TELX32
 BLT TELX31
 ADD #2,A0
 ADD #1,D1
 CMP #MAXLINE,D1
 BNE TELX33
TELX31 SUB #1,D1
TELX32 ADD #1,BOTNUM
 RTS

*----------------MENU SELECTED-------------------

W_MENU MOVE #33,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE EVMESG+6,INTIN
 MOVE #1,INTIN+2
 MOVE.L MENUADR,ADDRIN
 JSR AES

 MOVE EVMESG+6,D0
 MOVE EVMESG+8,D1

 CMP #IDESK,D0
 BEQ DODESK
 CMP #IFILE,D0
 BEQ DOFILE
 CMP #IEDIT,D0
 BEQ DOEDIT
 CMP #IPRINTER,D0
 BEQ DOPRINTER
 CMP #ITRANSFR,D0
 BEQ DOTRANS
 JMP MAINLOOP

*---------DESK DROP-DOWN MENU---------

DODESK CMP #IABOUT,D1
 BNE MAINLOOP

 MOVE.L ABOUTDI,A0
 ADD.L #OBSIZE*MABTCONT,A0
 CLR OB_STATE(A0)

 MOVE.L ABOUTDI,A0
 MOVE #-1,D0
 JSR FORMDO

 JMP MAINLOOP

*---------PRINTER DROP-DOWN MENU---------

DOPRINTER CMP #SELPRNTR,D1
 BEQ MENU3PR

 CMP #USA,D1
 BCS MAINLOOP
 CMP #JAPAN+1,D1
 BCC MAINLOOP
 SUB #USA,D1
 MOVE D1,INTLCODE
 MOVE.B D1,PRNTFILE
 JMP MENU3SV

MENU3PR MOVE.L #126,D0
 LEA PRNTFILE+1,A0
MEN3CLR2 CLR.B (A0)+
 DBF D0,MEN3CLR2

 MOVE.L #127,D0
 LEA INPATH,A0
 LEA INFILE,A1
MENU3CLR CLR.B (A0)+
 CLR.B (A1)+
 DBF D0,MENU3CLR

 LEA PINFILE,A0
 JSR ADDPATH
 LEA INPATH,A1
PNFL101 TST.B (A0)
 BEQ PNFL100
 MOVE.B (A0)+,(A1)+
 JMP PNFL101
PNFL100 CLR.B (A1)
 CLR.B INFILE

 MOVE #90,CONTRL   ;FILE SELECTOR
 CLR CONTRL+2
 MOVE #2,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE.L #INPATH,ADDRIN
 MOVE.L #INFILE,ADDRIN+4
 JSR AES
 TST INTOUT
 BEQ MAINLOOP
 TST INTOUT+2
 BEQ MAINLOOP

 LEA INPATH,A0
 LEA PRNTFILE+1,A1
MENU3AS1 MOVE.B (A0)+,D0
 CMP.B #' ',D0
 BEQ MENU3AS2
 CMP.B #'*',D0
 BEQ MENU3AS2
 MOVE.B D0,(A1)+
 JMP MENU3AS1

MENU3AS2 LEA INFILE,A0
MENU3100 MOVE.B (A0)+,D0
 TST.B D0
 BEQ MENU3101
 CMP.B #' ',D0
 BEQ MENU3101
 MOVE.B D0,(A1)+
 JMP MENU3100
MENU3101 CLR.B (A1)+

MENU3SV TST.B PRNTFILE+1
 BEQ PNSV200

 LEA PRNTNAME,A0  ;F_CREATE
 JSR ADDPATH
 CLR -(A7)
 MOVE.L A0,-(A7)
 MOVE #60,-(A7)
 TRAP #1
 ADD.L #8,A7
 TST.L D0
 BPL PSNV100
PNSV101 JMP DISK_ERR
PSNV100 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 LEA PRNTFILE,A1
 MOVE.L #128,D0
 JSR F_WRITE
 CMP.L #128,D0
 BNE PNSV101

 MOVE FHANDLE,A0
 JSR F_CLOSE

PNSV200 JSR LDPRNTR
 JMP MAINLOOP

PINFILE DC.B '*.PRN',0
 EVEN

*----------LOAD PRINTER DRIVER-----------

LDPRNTR MOVE #31,CONTRL  ;MENU_ICHECK
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE OLDINTL,D0
 ADD #USA,D0
 MOVE D0,INTIN
 CLR INTIN+2
 MOVE.L MENUADR,ADDRIN
 JSR AES

 MOVE #31,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE INTLCODE,D0
 ADD #USA,D0
 MOVE D0,INTIN
 MOVE #1,INTIN+2
 MOVE.L MENUADR,ADDRIN
 JSR AES

 MOVE INTLCODE,OLDINTL

 TST.B PRNTFILE+1
 BEQ PRNTDONE
 LEA PRNTFILE+1,A0
 JSR F_OPEN
 TST D0
 BMI PRNTDONE
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 LEA TEMPDRIV,A1
 MOVE.L #128,D0
 JSR F_READ

 MOVE FHANDLE,A0
 JSR F_CLOSE

 JSR RSTPRNTR

 CLR.L D0
 LEA TEMPDRIV+1,A0
PRNTLDZ3 LEA DRIVERS,A1
 CLR.L D1
 MOVE.L D0,D1
 MULU #8,D1
 ADD.L D1,A1

 MOVE.L #4,D3
 CLR.L D4
PRNTLDZ1 MOVE.B (A0)+,D4
 CMP.B #255,D4
 BEQ PRNTLDZ2
 MOVE.B D4,(A1)+
 DBF D3,PRNTLDZ1

PRNTLDZ2 ADD #1,D0
 CMP #11,D0
 BCS PRNTLDZ3

 MOVE.L #127,D0
 LEA PRNTFILE+128,A1
PRNTFND1 CMP.B #'.',-(A1)
 BEQ PRNTFND2
 DBF D0,PRNTFND1
 JMP PRNTFND3

PRNTFND2 CMP.B #'\',-(A1)
 BEQ PRNTFND3
 DBF D0,PRNTFND2

PRNTFND3 ADD.L #1,A1

 MOVE.L #7,D0
 MOVE.L MENUADR,A0
 ADD.L #24*PRNTR,A0
 MOVE.L OB_SPEC(A0),A0
 ADD.L #2,A0

PRNTFND4 MOVE.B (A1)+,D1
 TST.B D1
 BEQ PRNTFND5
 CMP.B #'.',D1
 BEQ PRNTFND5
 MOVE.B D1,(A0)+
 DBF D0,PRNTFND4

PRNTFND5 CLR.B (A0)+
PRNTDONE RTS

RSTPRNTR MOVE #127,D0  ;RESET PRINTER DRIVER
 LEA DRIVERS,A0
RSTPRN1 MOVE.B #255,(A0)+
 DBF D0,RSTPRN1
 RTS

PRNTNAME DC.B 'PRINTER.DB',0
 EVEN

*---------FILE DROP-DOWN MENU---------
DOFILE CMP #IQUIT,D1
 BEQ DOQUIT
 JMP MAINLOOP

*-------NEW-------
DONEW CLR.B FORMFILE
 CLR.B SAVEFILE
 CLR.B PRNTFILE
 CLR OBJTER
 CLR ICONUM
 CLR OBJCNT
 CLR PAGENUM
 CLR ACTIVE
 CLR STATUS

 JSR OPENEDW
 JSR SETPAGER
 JSR BEGFORM
 JSR MENUSET1
 JSR CLREDMEM

 LEA TEREC2,A0
 JSR TEACTIVE

* MOVE.L STRINGADR,A0   ;Set menu entry
* ADD #PROCMES2*OBSIZE,A0
* MOVE.L MENUADR,A1
* ADD.L #IPROCESS*24,A1
* MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 JMP MAINLOOP

*----------OPEN FORM---------

DOOPEN MOVE.L RUNADR,A0
 ADD.L #RUNNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 LEA INFILE,A1
 MOVE #40,D0
DOOP57 MOVE.B (A0)+,(A1)+
 DBF D0,DOOP57

 MOVE #11,D0
 LEA INFILE,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
DOO10 MOVE.B (A0)+,(A1)+
 DBF D0,DOO10
 CLR.B (A1)+

 LEA INFILE,A0
 JSR ADDPATH

 MOVE #127,D0
 LEA FORMFILE,A1
DOO58 MOVE.B (A0)+,(A1)+
 DBF D0,DOO58

LOADANDGO JSR BEGFORM
 JSR MENUSET2

 MOVE #2,D0
 JSR SHWMOUSE

 LEA FORMFILE,A0
 JSR F_OPEN
 TST D0
 BPL DOLFRM11
 LEA FORMFILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ LOADANDGO
 JMP MAINLOOP

DOLFRM11 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L #FTEST,A1
 MOVE.L #4,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 CMP.L #'FRM2',FTEST
 BNE DOLFRM80

 MOVE FHANDLE,A0
 MOVE.L #SAVELEN,A1
 MOVE.L #4,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #SQNCTYPE,A1
 MOVE.L #2,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #CUTCOUNT,A1
 MOVE.L #2,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 TST CUTCOUNT
 BEQ DOLFRM20

 MOVE FHANDLE,A0
 MOVE.L CUTBUFF,A1
 MOVE.L SAVELEN,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

DOLFRM20 MOVE FHANDLE,A0
 MOVE.L EDMEM,A1
 MOVE.L EDSIZE,D0
 JSR F_READ
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 JSR F_CLOSE

 JSR INITPED
 JSR MENUSET1
 JSR CLOSEW
 JSR OPENWIND

 TST CUTCOUNT
 BEQ LNG2

 MOVE #1,CUTFLAG
 MOVE #1,LDFLAG
 JSR OBJPASTE
 CLR LDFLAG
 CLR CUTFLAG
 CLR CUTCOUNT

 JSR INITEDS

LNG2 JSR SVNAME

* MOVE.L STRINGADR,A0
* ADD #PROCMES1*OBSIZE,A0
* MOVE.L MENUADR,A1   ;Set menu entry
* ADD.L #IPROCESS*24,A1
* MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 JMP DOSQLLNG

 MOVE.L STRINGADR,A0
 ADD #ERRORMES*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A3



SVNAME LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS2 MOVE.B (A0)+,(A1)+
 DBF D0,GMS2
 RTS

CLRNAMES MOVE.L NAMEBUFF,A0  ;Clear all object names
 MOVE.L #MAXOB*16,D0
 SUB #1,D0
NMSCLR CLR.B (A0)+
 DBF D0,NMSCLR
 RTS

INITEDS TST OBJCNT  ;Init all edit fields
 BEQ SQLIN3
 TST OBJTER
 BEQ SQLIN3
 CLR COUNT
SQLIN1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE SQLIN2
 MOVE.L OB_TEREC(A4),A0
 JSR TEACTIVE
SQLIN2 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE SQLIN1
SQLIN3 RTS

*------CONVERT OLD FORM FORMAT--------

DOLFRM80 CMP.L #'FORM',FTEST
 BNE DOLFRM90

 CLR D0
 JSR SHWMOUSE

 MOVE.L CONVADR,A0
 ADD.L #CONVYES*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L CONVADR,A0
 MOVE #-1,D0
 JSR FORMDO
 JMP MAINLOOP

*---Bad form file---

DOLFRM90 CLR D0
 JSR SHWMOUSE

 MOVE.L BADADR,A0
 ADD.L #BDCNCL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L BADADR,A0
 MOVE #-1,D0
 JSR FORMDO
 JMP MAINLOOP

*----------SAVE FORM---------

DOSAVE TST SAVEFLAG
 BNE DOSAVE2
 JMP NOCHANGES
DOSAVE2 JSR SAVEIT
 CLR SAVEFLAG
 JMP MAINLOOP

*---------SAVE FORM AS--------

DOSAVEAS JSR SAVEIT2
 CLR SAVEFLAG
 JMP MAINLOOP

*----SAVE FORM TO DISK FILE----

SAVEIT TST.B FORMFILE
 BNE SAVEIT3

SAVEIT2 MOVE.L FORMADR,A0
 ADD #SVFROK*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L FORMADR,A0
 ADD #SVFRCNCL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L FORMADR,A0
 ADD #SVFRNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L #SAVEFILE,TE_PTEXT(A0)

 MOVE.L FORMADR,A0
 MOVE #SVFRNAME,D0
 JSR FORMDO
 CMP #SVFRCNCL,SAVERTRN
 BNE SAVEIT3

 LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS3 MOVE.B (A0)+,(A1)+
 DBF D0,GMS3
 JMP MAINLOOP

SAVEIT3 LEA FORMFILE,A0
 LEA SAVEFILE,A1
 MOVE #79,D0
GMS4 MOVE.B (A1)+,(A0)+
 DBF D0,GMS4

 MOVE #79,D0
 LEA FORMFILE,A0
SAVE3 TST.B (A0)
 BEQ SAVE4
 CMP.B #'_',(A0)
 BEQ SAVE4
 CMP.B #'.',(A0)
 BEQ SAVE5
 CMP.B #'\',(A0)+
 BEQ SAVE5
 DBF D0,SAVE3

SAVE4 CMP #79,D0
 BEQ MAINLOOP

 MOVE.B #'.',(A0)+
 MOVE.B #'F',(A0)+
 MOVE.B #'R',(A0)+
 MOVE.B #'M',(A0)+
 CLR.B (A0)
 LEA FORMFILE,A0
 JSR ADDPATH
 JMP SAVE6

SAVE5 LEA FORMFILE,A0

SAVE6 MOVE.L A0,TEMP

SAVE7 MOVE #2,D0
 JSR SHWMOUSE

 MOVE.L TEMP,A0
 JSR F_CREATE
 TST.L D0
 BPL SAVE8
 MOVE.L TEMP,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ SAVE7
 JMP MAINLOOP

SAVE8 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 LEA FHEAD,A1
 MOVE.L #4,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 LEA OBRECS,A4  ;Set EDIT object size
 CLR D4
SAVEITSZ TST OB_TYPE(A4)
 BNE SAVEITSZ2
 JSR CALCOBSIZE
 MOVE D0,OB_DEF2(A4)
SAVEITSZ2 ADD #OBRECSZ,A4
 ADD #1,D4
 CMP OBJCNT,D4
 BNE SAVEITSZ

 MOVE #1,CUTFLAG
 MOVE #1,SVFLAG
 JSR OBJCOPY
 CLR SVFLAG
 CLR CUTFLAG

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 OR.L #1,D0
 ADD.L #1,D0
 MOVE.L D0,SAVELEN

 MOVE FHANDLE,A0
 MOVE.L #SAVELEN,A1
 MOVE.L #4,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #SQNCTYPE,A1
 MOVE.L #2,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 MOVE.L #CUTCOUNT,A1
 MOVE.L #2,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 TST CUTCOUNT
 BEQ SAVE10

 MOVE FHANDLE,A0
 MOVE.L CUTBUFF,A1
 MOVE.L SAVELEN,D0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

SAVE10 MOVE.L EDMEM,A1
 LEA TEREC2,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 ADD #1,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 TST.L D0
 BMI SAVEERR

 MOVE FHANDLE,A0
 JSR F_CLOSE

 JMP SVNAME

SAVEERR MOVE D0,TEMP
 MOVE FHANDLE,A0
 JSR F_CLOSE
 MOVE TEMP,D0

 LEA NOERRMES,A0
 JSR DISK_ERR
 JMP MAINLOOP

CALCOBSIZE MOVE.L OB_TEREC(A4),A0  ;Find object size
 CLR.L D0
 MOVE VIEWRECT+4(A0),D0
 SUB TEXOFF(A0),D0
 DIVU TEXSIZE(A0),D0
 CLR.L D1
 MOVE VIEWRECT+6(A0),D1
 SUB TEYOFF(A0),D1
 DIVU LINEHIGH(A0),D1
 AND.L #$FFFF,D0
 AND.L #$FFFF,D1
 MULU D1,D0
 RTS

*-------------CLOSE FORM------------

DOCLOSE TST SAVEFLAG
 BEQ DOCLS2
 TST.B SAVEFILE
 BEQ DOCLS2

 JSR ARESURE
 CMP #SURECNL,SAVERTRN
 BEQ MAINLOOP
 CMP #SURENO,SAVERTRN
 BEQ DOCLS2
 CMP #SUREYES,SAVERTRN
 BNE MAINLOOP

 JSR SAVEIT

DOCLS2 JSR CLOSEW
 JSR MENUSET2
 CLR SAVEFLAG
 JMP MAINLOOP

*-------------QUIT------------

DOQUIT LEA MT3,A0
* JSR SHELLWRT

DOQUIT2
* TST.B FORMFILE
* BEQ QUIT2
 TST.B SAVEFLAG
 BEQ QUIT2

 JSR ARESURE
 CMP #SURECNL,SAVERTRN
 BEQ MAINLOOP
 CMP #SURENO,SAVERTRN
 BEQ QUIT2
 CMP #SUREYES,SAVERTRN
 BNE MAINLOOP

* JSR SAVEIT

QUIT2 MOVE #2,D0
 JSR SHWMOUSE

 JSR CLOSEW

 MOVE.L SCRAP,A0
 CLR.L D5
SVCLIP TST.B (A0)+
 BEQ SVCLIP2
 ADD #1,D5
 CMP #999,D5
 BNE SVCLIP

SVCLIP2 TST D5
 BEQ SVCLIP9
 TST CLIPFLAG
 BEQ SVCLIP9

 LEA SCRAPNAME,A0
 JSR ADDPATH
 JSR F_CREATE
 TST.L D0
 BMI SVCLIP9
 MOVE D0,FHANDLE

 MOVE FHANDLE,A0
 MOVE.L #TEXTHEAD,A1
 MOVE.L #4,D0
 JSR F_WRITE

 MOVE FHANDLE,A0
 MOVE.L SCRAP,A1
 MOVE.L D5,D0
 JSR F_WRITE

 MOVE FHANDLE,A0
 JSR F_CLOSE

SVCLIP9 JSR TRANSRV
 JSR NOCLIP
 JSR TEXTINIT
 MOVE #7,D0
 JSR LINETYPE
 MOVE #$FFFF,D0
 JSR LINESTYL
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

 CLR D0
 JSR WIND_UPDATE

QUIT3 MOVE #101,CONTRL  ;Close Virtual Workstation
 CLR CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 MOVE #19,CONTRL  ;Appl_exit
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JSR AES

 CLR -(A7)  ;P_term
 TRAP #1

TEXTHEAD DC.B 'TEXT',0
 EVEN

*--------MENU ENABLE/DISABLE------

* Open and editing
MENUSET1 LEA MENUALL,A0
 JSR DISABLE
 LEA MENU1,A0
 JMP ENABLE

* Closed
MENUSET2 LEA MENUALL,A0
 JSR DISABLE
 LEA MENU2,A0
 JMP ENABLE

* Clear proc
MENUSET3 LEA MENU3,A0
 JMP ENABLE
MENUSET4 LEA MENU3,A0
 JMP DISABLE

* Show screen active
MENUSET5 LEA MENUEVERY,A0
 JMP DISABLE
MENUSET6 LEA MENUEVERY,A0
 JMP ENABLE

* Edit mode Cold start, no form loaded
MENU1 DC.B IABOUT,ICUT,ICOPY,IPASTE,0

* After close
MENU2 DC.B IABOUT,0

MENU3 DC.B 0

MENUALL DC.B IABOUT,ICUT,ICOPY,IPASTE,0
 EVEN

MENUEVERY
 DC.B IABOUT,IQUIT,SELPRNTR
 DC.B PRNTR,USA,ENGLAND,GERMANY,DENMARK
 DC.B FRANCE,SWEDEN,ITALY,SPAIN,JAPAN
 DC.B ICUT,ICOPY,IPASTE,0

ENABLE CLR.L D0
 MOVE.B (A0)+,D0
 TST.B D0
 BEQ EN2
 MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A1
 AND #$FFF7,OB_STATE(A1)
 JMP ENABLE
EN2 RTS

DISABLE CLR.L D0
 MOVE.B (A0)+,D0
 TST.B D0
 BEQ DISA2
 MULU #OBSIZE,D0
 ADD.L MENUADR,D0
 MOVE.L D0,A1
 OR #8,OB_STATE(A1)
 JMP DISABLE
DISA2 RTS

*---------Shell-Write-------

SHELLWRT MOVE #121,CONTRL  ;Shell_write
 MOVE #3,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 JSR ADDPATH
 MOVE.L A0,ADDRIN
 MOVE.L #FORMNAME,ADDRIN+4
 JMP AES

*---------ASK ARE YOU SURE?-------

ARESURE MOVE.L SUREADR,A0
 ADD #SURECNL*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 ADD #SURENO*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 ADD #SUREYES*OBSIZE,A0
 CLR OB_STATE(A0)
 MOVE.L SUREADR,A0
 MOVE #-1,D0
 JMP FORMDO

*---------EDIT DROP-DOWN MENU---------

DOEDIT CMP #ICUT,D1
 BEQ DOCUT
 CMP #ICOPY,D1
 BEQ DOCOPY
 CMP #IPASTE,D1
 BEQ DOPASTE
 JMP MAINLOOP

*----------CLEAR PROCEDURE----------

DOSQLCLR JMP MAINLOOP

 MOVE.L SQLCLRADR,A0
 JSR DOALERT
 CMP #1,INTOUT
 BNE MAINLOOP

 LEA TEREC2,A0
 JSR TEDEACT

 JSR CLREDMEM

 CLR TEYLOC
 CLR VIEWNUM
 
 LEA TEREC2,A0
 JSR TEACTIVE

 DC $A00A
 JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE WINDX,D0
 MOVE D0,D2
 MOVE WINDY,D1
 MOVE D1,D3
 ADD WINDW,D2
 SUB #1,D2
 ADD WINDH,D3
 SUB #1,D3
 JSR RECTANGLE
 DC $A009
 JMP MAINLOOP

*------------CUT FUNCTION-------------

DOCUT MOVE #1,CLIPFLAG
 CMP #2,WINDFLAG
 BNE CUTIT

 MOVE #2,D0
 JSR SHWMOUSE
 LEA TEREC2,A0
 JSR TECUT
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

CUTIT TST ACTIVE
 BEQ MAINLOOP
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE.L OB_TEREC(A0),A0
 JSR TECUT
 JMP MAINLOOP

*------------COPY FUNCTION-----------

DOCOPY MOVE #1,CLIPFLAG
 CMP #2,WINDFLAG
 BNE OBCOPY
 LEA TEREC2,A0
 JSR TECOPY
 JMP MAINLOOP

OBCOPY TST ACTIVE
 BEQ MAINLOOP
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE.L OB_TEREC(A0),A0
 JSR TECOPY
 JMP MAINLOOP

*------------COPY AN OBJECT-----------

OBJCOPY CLR CUTCOUNT
 TST OBJCNT
 BEQ COPYDONE

 MOVE.L CUTBUFF,A3

COPY99 CLR COUNT
COPY100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A2

 TST SVFLAG
 BNE COPY104

 TST CUTFLAG
 BEQ COPY98
 TST OB_SEL(A2)
 BNE COPY101
 JMP COPY104

COPY98 TST OB_SEL(A2)
 BEQ COPY101

COPY97 MOVE PAGENUM,D0
 CMP OB_PAGE(A2),D0
 BNE COPY101

COPY104 MOVE.L #OBRECSZ-1,D0
COPY102 MOVE.B (A2)+,(A3)+
 DBF D0,COPY102
 ADD #1,CUTCOUNT

COPY101 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE COPY100

 TST CUTCOUNT
 BEQ COPYDONE

 CLR COUNT
TEMPEST CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A2

 TST SVFLAG
 BEQ COPY96
 CLR.L D0
 MOVE OB_RECT+2(A2),D0
 SUB WINDY,D0
 MOVE D0,OB_RECT+2(A2)

 CMP #2,GRMODE
 BNE COPY96
 MOVE OB_RECT+2(A2),D0
 LSR #1,D0
 MOVE D0,OB_RECT+2(A2)
 MOVE OB_RECT+6(A2),D0
 LSR #1,D0
 MOVE D0,OB_RECT+6(A2)

COPY96 TST OB_TYPE(A2)
 BNE BORMEO

 MOVE.L OB_TEREC(A2),A1
 CMP.L #0,A1
 BEQ BORMEO
 MOVE.L A1,A4

 MOVE.L A3,D0
 MOVE.L A3,D1
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_TEREC(A2)

 MOVE.L #TERECSIZE-1,D0
ALF MOVE.B (A1)+,(A3)+
 DBF D0,ALF

 MOVE.L HTEXT(A4),A0
 CMP.L #0,A0
 BEQ BORMEO

 MOVE.L D1,A1
 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,HTEXT(A1)

 CLR.L D0
 MOVE TELENGTH(A4),D0
 BEQ BIMINI
 SUB #1,D0
BAHAMAS MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ BIMINI
 DBF D0,BAHAMAS

BIMINI MOVE.L A3,D0
 OR.L #1,D0
 ADD.L #1,D0
 MOVE.L D0,A3

BORMEO ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE TEMPEST

 CLR COUNT
COPY103 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A4

 MOVE.L OB_NAME(A4),A0   ;Object Name
 CMP.L #0,A0
 BEQ COPY105

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_NAME(A4)

 MOVE.L #100,D0
SEXY MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ COPY105
 DBF D0,SEXY

COPY105 MOVE.L OB_BUTNM(A4),A0   ;Button contents
 CMP.L #0,A0
 BEQ COPY205

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_BUTNM(A4)

 MOVE.L #100,D0
KINKS MOVE.B (A0)+,D1
 MOVE.B D1,(A3)+
 TST.B D1
 BEQ COPY205
 DBF D0,KINKS

COPY205 CMP #6,OB_TYPE(A4)  ;Icon
 BNE COPY111

 MOVE.L OB_ICON(A4),A0
 CMP.L #0,A0
 BEQ COPY111

 MOVE.L A3,D0
 SUB.L CUTBUFF,D0
 MOVE.L D0,OB_ICON(A4)

 CLR.L D0
 MOVE OB_ICSZ(A4),D0
 MULU #2,D0
 SUB #1,D0
COPY110 MOVE.B (A0)+,(A3)+
 DBF D0,COPY110

COPY111 ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE COPY103

COPYDONE RTS

*-------------PASTE---------------

DOPASTE CMP #2,WINDFLAG
 BNE OBPASTE

 MOVE #2,D0
 JSR SHWMOUSE
 LEA TEREC2,A0
 JSR TEPASTE
 CLR D0
 JSR SHWMOUSE
 JSR LINEDOWN
 JMP EDLNDONE

OBPASTE TST ACTIVE
 BEQ MAINLOOP
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE.L OB_TEREC(A0),A0
 JSR TEPASTE
 JMP MAINLOOP

*-------------PASTE AN OBJECT---------------

OBJPASTE CLR COUNT
 TST CUTCOUNT
 BEQ PASTDN

BOOBS CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L CUTBUFF,D2
 MOVE.L D2,A3

 CLR.L D2
 MOVE OBJCNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 TST OB_TYPE(A3)
 BNE MREDIT
 CMP #MAXEDIT,OBJTER
 BEQ MAXOB

MREDIT CLR OB_SEL(A3)

 TST CUTFLAG
 BNE ANDASS

 MOVE #1,OB_SEL(A3)
 ADD #4,OB_RECT(A3)
 ADD #4,OB_RECT+2(A3)

ANDASS MOVE.L A3,A0
 MOVE.L A4,A1
 MOVE.L #OBRECSZ-1,D0
TITS MOVE.B (A0)+,(A1)+
 DBF D0,TITS

 TST LDFLAG
 BNE TITS2
 TST CUTFLAG
 BNE ANDTITS
 MOVE PAGENUM,OB_PAGE(A4)
 JMP ANDTITS

TITS2 CMP #2,GRMODE
 BNE ITSYOU
 MOVE OB_RECT+2(A4),D0
 LSL #1,D0
 MOVE D0,OB_RECT+2(A4)
 MOVE OB_RECT+6(A4),D0
 LSL #1,D0
 MOVE D0,OB_RECT+6(A4)

ITSYOU CLR.L D0
 MOVE OB_RECT+2(A4),D0
 ADD WINDY,D0
 MOVE D0,OB_RECT+2(A4)

ANDTITS CLR.L D0  ;Object Name
 MOVE OBJCNT,D0
 MULU #16,D0
 ADD.L NAMEBUFF,D0
 MOVE.L D0,OB_NAME(A4)
 MOVE.L D0,A1

 MOVE.L OB_NAME(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0

 MOVE #15,D0
BODY2 MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D1
 BEQ BODY3
 DBF D0,BODY2

BODY3 CLR.L D0  ;Button Name
 MOVE OBJCNT,D0
 MULU #OBJSZ,D0
 ADD.L OBJMEM,D0
 MOVE.L D0,OB_BUTNM(A4)
 MOVE.L D0,A1

 MOVE.L OB_BUTNM(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0
 MOVE #OBJSZ-1,D0
BODY MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D1
 BEQ BODY4
 DBF D0,BODY

BODY4 CMP #6,OB_TYPE(A3)  ;Icon
 BNE PEEPEE

 CLR.L D0
 MOVE ICONUM,D0
 MULU #ICONBUFSZ,D0
 ADD.L OBJICN,D0
 MOVE.L D0,OB_ICON(A4)
 MOVE.L D0,A1

 MOVE.L D0,A0
 MOVE #ICONBUFSZ-1,D0
BODY4BI CLR.B (A0)+
 DBF D0,BODY4BI

 ADD #1,ICONUM

 MOVE.L OB_ICON(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE OB_ICSZ(A4),D0
 MULU #2,D0
 SUB #1,D0
SKYLER MOVE.B (A0)+,(A1)+
 DBF D0,SKYLER
 JMP MARKEL

PEEPEE TST OB_TYPE(A3) ;TextEdit Field
 BNE MARKEL

 TST OB_SQNC(A4)
 BNE MINEMINE
 MOVE OBJTER,OB_SQNC(A4)
 ADD #1,OB_SQNC(A4)

MINEMINE MOVE.L OB_TEREC(A3),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A2

 CLR.L D0
 MOVE OBJTER,D0
 MULU #TERECSIZE,D0
 ADD.L #TERECS,D0
 MOVE.L D0,OB_TEREC(A4)
 MOVE.L D0,A0
 MOVE.L D0,A3

 MOVE.L #TERECSIZE-1,D0
ALF2 MOVE.B (A2)+,(A3)+
 DBF D0,ALF2

 MOVE OB_RECT(A4),VIEWRECT(A0)
 MOVE OB_RECT+2(A4),VIEWRECT+2(A0)
 MOVE OB_RECT+4(A4),VIEWRECT+4(A0)
 MOVE OB_RECT+6(A4),VIEWRECT+6(A0)

 TST LDFLAG
 BEQ CRUSHER

 MOVE #1,TEYOFF(A0)
 MOVE #8,TEYOFF2(A0)
 MOVE #9,TXSIZE(A0)
 MOVE #9,LINEHIGH(A0)

 CMP #2,GRMODE
 BNE CRUSHER

 MOVE #10,TXSIZE(A0)
 MOVE #2,TEYOFF(A0)
 MOVE #16,TEYOFF2(A0)
 MOVE #18,LINEHIGH(A0)

CRUSHER MOVE.L HTEXT(A0),D0
 ADD.L CUTBUFF,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE OBJTER,D0
 MULU #EDITSZ,D0
 ADD.L TEMEM,D0
 MOVE.L D0,HTEXT(A0)
 MOVE.L D0,A2

 MOVE OB_DEF2(A4),D0
 TST D0
 BNE RUNEM2
 MOVE #EDITSZ-1,D0
 MOVE D0,OB_DEF2(A4)
RUNEM2 MOVE D0,TELENGTH(A0)

 MOVE.L #EDITSZ-1,D0
RUNEM MOVE.B (A1)+,D1
 MOVE.B D1,(A2)+
 TST.B D1
 BEQ RUNNIN
 DBF D0,RUNEM

RUNNIN CLR.B (A2)+
 ADD #1,OBJTER

MARKEL ADD #1,OBJCNT
 ADD #1,COUNT
 MOVE COUNT,D0
 CMP CUTCOUNT,D0
 BNE BOOBS

PASTDN RTS

*-------LOAD PROCEDURE-------

DOLOADP LEA FSELMES2,A0
 JSR ADDPATH
 LEA PRCDFILE,A4
 JSR F_SEL
 TST D0
 BMI MAINLOOP

DOLO10 LEA PRCDFILE,A0
 JSR F_OPEN
 TST D0
 BPL DOLO11
 LEA PRCDFILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOLO10
 JMP MAINLOOP

DOLO11 MOVE D0,FHANDLE

 JSR CLREDMEM

DOLO12 MOVE FHANDLE,A0
 MOVE.L EDMEM2,A1
 MOVE.L EDSIZE,D0
 JSR F_READ
 TST.L D0
 BPL DOLO13
 LEA NOERRMES,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOLO12
 JMP MAINLOOP

DOLO13 MOVE.L EDSIZE,D1
 MOVE.L EDMEM2,A0
 MOVE.L EDMEM,A1
DOLO13A MOVE.B (A0)+,D0
 CMP.B #10,D0
 BEQ DOLO13C
 MOVE.B D0,(A1)+
DOLO13C SUB #1,D1
 TST D1
 BNE DOLO13A
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+

 MOVE FHANDLE,A0
 JSR F_CLOSE

 LEA TEREC2,A0
 JSR TEACTIVE

 JMP MAINLOOP

*-------SAVE PROCEDURE-------

DOSAVEP MOVE.L SAVEADR,A0
 ADD.L #SVCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L SAVEADR,A0
 ADD.L #SVOK*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L SAVEADR,A0
 ADD.L #SAVENAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 MOVE.L #PRCDFILE,TE_PTEXT(A0)

 MOVE.L SAVEADR,A0
 MOVE #SAVENAME,D0
 JSR FORMDO

 CMP #SVCANCEL,SAVERTRN
 BEQ MAINLOOP

 MOVE #127,D0
 LEA PRCDFILE,A0
SVP10 TST.B (A0)
 BEQ SVP12
 CMP.B #'.',(A0)
 BEQ SVP11
 CMP.B #'_',(A0)
 BEQ SVP12
 CMP.B #'\',(A0)+
 BEQ SVP11
 DBF D0,SVP10

SVP12 MOVE.B #'.',(A0)+
 MOVE.B #'T',(A0)+
 MOVE.B #'X',(A0)+
 MOVE.B #'T',(A0)+
 CLR.B (A0)

 LEA PRCDFILE,A0
 JSR ADDPATH
 JMP SVP13

SVP11 LEA PRCDFILE,A0

SVP13 MOVE.L A0,TEMP

 CLR TEMP2
 MOVE.L EDSIZE,D1
 MOVE.L EDMEM,A0
 MOVE.L EDMEM2,A1
SVP100 MOVE.B (A0)+,D0
 CMP.B #13,D0
 BNE SVP101
 MOVE.B D0,(A1)+
 MOVE.B #10,(A1)+
 ADD #1,TEMP2
 JMP SVP102
SVP101 MOVE.B D0,(A1)+
SVP102 SUB #1,D1
 TST D1
 BNE SVP100
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+
 CLR.B (A1)+

SVP15 MOVE.L TEMP,A0
 JSR F_CREATE
 TST.L D0
 BPL SVP14
 MOVE.L TEMP,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ SVP15
 JMP MAINLOOP

SVP14 MOVE D0,FHANDLE

 MOVE.L EDMEM2,A1
 LEA TEREC2,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 ADD TEMP2,D0
 ADD #1,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 TST.L D0
 BPL SVP16
 LEA NOERRMES,A0
 JSR DISK_ERR

SVP16 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP MAINLOOP

SVPERR LEA NOERRMES,A0
 JSR DISK_ERR
 JMP MAINLOOP

*-------PRINT PROCEDURE-------

DOPRINTP JSR TECALC
 CLR PRINTNUM
 MOVE #2,D0
 JSR SHWMOUSE
 CLR.L TIMEOUT

DOPR99 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ DOPR98
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BEQ DOPR15
DOPR98 MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD.L #2,A7
 TST.B D0
 BEQ DOPR99

 JSR PRINTHEADER
 LEA FLDMESZ,A0
 JSR PRINTIT

DOPR100 MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD.L #2,A7
 TST.B D0
 BNE DOPR21

 ADD.L #1,TIMEOUT
 CMP.L #70000,TIMEOUT
 BCS DOPR100
 CLR.L TIMEOUT

 CLR D0
 JSR SHWMOUSE

 MOVE.L PRINTREE,A0
 ADD.L #PCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L PRINTREE,A0
 ADD.L #POK*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L PRINTREE,A0
 MOVE #-1,D0
 JSR FORMDO
 CMP #PCANCEL,SAVERTRN
 BEQ MAINLOOP
 JMP DOPR100

DOPR21 LEA FLDMESY,A0
 JSR PRINTIT

 CLR.L D0
 MOVE PRINTNUM,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE (A0),D0
 MOVE D0,D1

 TST D0
 BMI DOPR14

 LEA TEREC2,A1
 ADD.L HTEXT(A1),D0
 MOVE.L D0,A4

 MOVE #80,COUNT
 TST 2(A0)
 BMI DPR101
 MOVE 2(A0),D2
 SUB D1,D2
 MOVE D2,COUNT

DPR101 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ DOPR11
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BEQ DOPR14

DOPR11 CLR D0
 MOVE.B (A4)+,D0
 CMP.B #13,D0
 BEQ DOPR13
 JSR PRINTCHAR

 SUB #1,COUNT
 TST COUNT
 BNE DOPR11

DOPR13 MOVE #13,D0
 JSR PRINTCHAR
 MOVE #10,D0
 JSR PRINTCHAR

 ADD #1,PRINTNUM
 JMP DOPR100

DOPR14 MOVE #13,D0
 JSR PRINTCHAR
 MOVE #10,D0
 JSR PRINTCHAR

DOPR15 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

PRINTHEADER JSR DOPFSPACE  ;Print report header

 MOVE.L STRINGADR,A0
 ADD #FLDMESB*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 LEA FLDMESZ,A0
 JSR PRINTIT

 MOVE.L STRINGADR,A0
 ADD #FLDMESC*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 LEA FORMNAME+1,A0
 JSR PRINTIT

 MOVE.L STRINGADR,A0
 ADD #FLDMESX*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR PRINTIT

 JSR CDATE
 LEA TIMEDATE,A0
 JSR PRINTIT

 JSR CTIME
 LEA TIMEDATE,A0
 JMP PRINTIT

PRINTIT MOVE.B (A0)+,D0
 TST.B D0
 BEQ PRINTIT2
 JSR PRINTCHAR
 JMP PRINTIT
PRINTIT2 RTS

DOPFSPACE JSR STATUSX
 MOVE.B #13,D0
 JSR PRINTCHAR
 MOVE.B #10,D0
 JSR PRINTCHAR
 MOVE.B #13,D0
 JSR PRINTCHAR
 MOVE.B #10,D0
 JMP PRINTCHAR

STATUSX MOVE #17,-(A7) ;PRINTER STATUS
 TRAP #1
 ADD #2,A7
 TST.B D0
 BNE STATEND

 MOVE #11,-(A7)  ;UNDO KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BEQ STATUSX
 MOVE #7,-(A7)
 TRAP #1
 ADD #2,A7
 SWAP D0
 CMP #97,D0
 BNE STATEND
 CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

STATEND RTS

FLDMESY DC.B '     ',0
FLDMESZ DC.B 13,10,13,10,13,10,0

*-----------FILE SELECTOR------------

F_SEL MOVE.L #127,D0
 LEA INPATH,A1
 LEA INFILE,A2
LDIC100 CLR.B (A1)+
 CLR.B (A2)+
 DBF D0,LDIC100

 LEA INPATH,A1
 MOVE #37,D0
FSEL2 MOVE.B (A0)+,(A1)+
 DBF D0,FSEL2

 MOVE #90,CONTRL
 CLR CONTRL+2
 MOVE #2,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE.L #INPATH,ADDRIN
 MOVE.L #INFILE,ADDRIN+4
 JSR AES

 TST INTOUT
 BEQ LDIC800
 TST INTOUT+2
 BEQ LDIC800

 LEA INPATH,A0
LDIC101 MOVE.B (A0)+,D0
 CMP.B #' ',D0
 BEQ LDIC102
 CMP.B #'*',D0
 BEQ LDIC102
 MOVE.B D0,(A4)+
 JMP LDIC101

LDIC102 LEA INFILE,A0
LDIC103 MOVE.B (A0)+,D0
 TST.B D0
 BEQ LDIC104
 CMP.B #' ',D0
 BEQ LDIC104
 MOVE.B D0,(A4)+
 JMP LDIC103

LDIC104 CLR.B (A4)+
 CLR D0
 RTS

LDIC800 MOVE #-1,D0
 RTS

*--------START PROCEDURE EDITOR-------

DOPROCESS TST WINDFLAG
 BEQ MAINLOOP

 CMP #2,WINDFLAG
 BEQ DOSQL

 JSR CLOSEW
 JSR OPENEDW
 JSR MENUSET1

 TST STATUS
 BPL MAINLOOP

 JSR TECALC

 CLR D1
 MOVE.L SCROLL,A1
ERROR_LOOP MOVE (A1),D0
 CMP ERRORX,D0
 BGT ERROR_FND
 ADD #2,A1
 TST (A1)
 BMI ERROR_FND
 ADD #1,D1
 JMP ERROR_LOOP

ERROR_FND LEA TEREC2,A0
 MOVE ERRORX,SELSTART(A0)
 MOVE ERRORX,SELEND(A0)

 MOVE D1,LINENUM
 MOVE D1,VIEWNUM
 CLR TEYLOC
 CLR TESTART
 CMP #9,D1
 BCS ERRTHMB
 SUB.L #9*2,A1
 SUB #9,VIEWNUM
 MOVE D1,TEYLOC
 MOVE D1,TESTART

ERRTHMB JSR SHOWSLID

 MOVE ERRORNUM,D0  ;These are errors that show
 CMP #320,D0       ;bad variable/table/field names
 BEQ ERR320
 CMP #210,D0
 BEQ ERR320
 CMP #211,D0
 BEQ ERR320
 CMP #212,D0
 BEQ ERR320
 CMP #260,D0
 BEQ ERR320
 CMP #321,D0
 BEQ ERR320
 CMP #224,D0
 BEQ ERR320

 MOVE.L STRINGADR,A0
 ADD #ERRORMES*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A3
 ADD #7,A3
 JSR CONV2DEC

 MOVE.L STRINGADR,A0
 ADD #ERRORMES*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES
 JMP MAINLOOP

ERR320 MOVE.L STRINGADR,A1
 ADD #ERRMES2*OBSIZE,A1
 MOVE.L OB_SPEC(A1),A1

 MOVE.L A1,A3
 ADD #7,A3
 MOVE ERRORNUM,D0
 JSR CONV2DEC

 ADD #26,A1
 CLR.B (A1)

 MOVE.L ERRADR,A0
 CMP.L #0,A0
 BEQ ERRCPY2

 MOVE #20,D1
ERRCPY MOVE.B (A0)+,(A1)+
 DBF D1,ERRCPY

ERRCPY2 MOVE.L STRINGADR,A0
 ADD #ERRMES2*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES
 JMP MAINLOOP

*---------RUN THE FORM---------

DOSQL JSR MENUSET1
 JSR CLOSEW
 JSR OPENWIND

DOSQLLNG CLR PAGENUM
 JSR SETPAGER

 CLR TEYLOC
 CLR LINENUM

 CLR ACTIVE
 JSR ACTIVATE

 CLR STATUS
 CLR ERRORNUM

SQLIN300 JSR GT_MESSAGE
 MOVE EVMESG+6,D1
 CMP WIHANDLE,D1
 BNE SQLIN300
 CMP #20,EVMESG
 BNE SQLIN300

 DC $A00A
 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SQLIN201
 JSR UPDATE
SQLIN200 MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SQLIN201
 TST HOLDW
 BEQ SQLIN201
 TST HOLDH
 BEQ SQLIN201
 JSR UPDATE
 JMP SQLIN200
SQLIN201 DC $A009

 CLR.L D0
 MOVE.L EDMEM,A0
 MOVE.L EDMEM2,A1
NOCRS MOVE.B (A0)+,D1
 CMP.B #13,D1
 BNE NOCRS2
 MOVE.B #' ',D1
NOCRS2 MOVE.B D1,(A1)+
 ADD #1,D0
 CMP.L EDSIZE,D0
 BNE NOCRS

 JSR SETPRINT
 JMP STARTSQL

*---------INIT PROC EDITOR----------

INITPED CLR TEYLOC
 CLR VIEWNUM

 LEA TEREC2,A0

 MOVE WINDX,D0
 ADD #8,D0
 AND #$FFF8,D0
 MOVE D0,VIEWRECT(A0)
 MOVE WINDW,D1
 SUB D0,D1
 MOVE D1,VIEWRECT+4(A0)
 MOVE WINDY,VIEWRECT+2(A0)
 MOVE WINDH,VIEWRECT+6(A0)

 CLR TEXOFF(A0)
 MOVE #9,LINEHIGH(A0)
 MOVE #1,TEYOFF(A0)
 MOVE #8,TEYOFF2(A0)
 MOVE #8,TEXSIZE(A0)
 MOVE #' ',TESCORE(A0)

 MOVE.L EDMEM,HTEXT(A0)
 MOVE.L EDSIZE,D0
 MOVE D0,TELENGTH(A0)

 MOVE #1,WORDWRAP(A0)
 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE #3,CARETIME(A0)
 MOVE #9,TXSIZE(A0)
 MOVE #9,TXFONT(A0)
 CLR TXFACE(A0)
 CLR TXMODE(A0)
 MOVE #1,TECOLOR1(A0)

 CMP #2,GRMODE
 BNE CLRST

 ADD #4,VIEWRECT+2(A0)
 SUB #10,VIEWRECT+6(A0)
 MOVE #10,TXSIZE(A0)
 MOVE #2,TEYOFF(A0)
 MOVE #16,TEYOFF2(A0)
 MOVE LINEHIGH(A0),D0
 MULU #2,D0
 MOVE D0,LINEHIGH(A0)

CLRST JMP TEACTIVE

*------------TRANSFER MENU------------

DOTRANS ADD #401-OPT1,D1
 MOVE D1,D0
 JMP KEYED

*-------------REDRAW MESSAGE-------------

W_REDRAW CMP #2,WINDFLAG
 BEQ DRAWED
 CMP #1,WINDFLAG
 BNE MAINLOOP

 DC $A00A
 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ UPNOMORE
 JSR UPDATE

UPAGAIN MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ UPNOMORE
 TST HOLDW
 BEQ UPNOMORE
 TST HOLDH
 BEQ UPNOMORE
 JSR UPDATE
 JMP UPAGAIN

UPNOMORE DC $A009
 JMP MAINLOOP

*------Refresh the Screen-------

UPDATE JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D3
 JSR RECTANGLE

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D2
 JSR SETCLIP

 TST OBJCNT
 BEQ UP101

 CLR UPCOUNT
UP100 MOVE UPCOUNT,D0
 JSR OBJ_DRAW
 ADD #1,UPCOUNT
 MOVE UPCOUNT,D0
 CMP OBJCNT,D0
 BNE UP100

UP101 JSR TRANSOFF
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE #1,D0
 JSR GEMCOLR

 TST PAGEICON
 BEQ NOUPCNT

 MOVE #42,CONTRL  ;OBJC_DRAW
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #10,INTIN+2
 MOVE HOLDX,INTIN+4
 MOVE HOLDY,INTIN+6
 MOVE HOLDW,INTIN+8
 MOVE HOLDH,INTIN+10
 MOVE.L PAGEADR,ADDRIN
 JMP AES

NOUPCNT RTS

UPCOUNT DC 0

*----------REDRAW EDIT WINDOW---------

DRAWED LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ EDUP2
 BMI EDUP2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP EDUP3
EDUP2 JSR TEDNOCAR

EDUP3 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ MAINLOOP
 JSR EDUP

DRAWED2 MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ MAINLOOP
 TST HOLDW
 BEQ MAINLOOP
 TST HOLDH
 BEQ MAINLOOP
 JSR EDUP
 JMP DRAWED2

EDUP JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D3
 JSR RECTANGLE

 MOVE HOLDX,D0
 MOVE D0,D2
 MOVE HOLDY,D1
 MOVE D1,D3
 ADD HOLDW,D2
 SUB #1,D2
 ADD HOLDH,D3
 SUB #1,D2
 JSR SETCLIP

 LEA TEREC2,A0
 JSR TEUPDATE

 LEA TEREC2,A0
 MOVE.L A0,TEMPADR
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ EDUP4
 BMI EDUP4
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
EDUP4 RTS

WIND_GET MOVE #104,CONTRL ;AES WIND_GET
 MOVE #2,CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES
 MOVE INTOUT+2,HOLDX
 MOVE INTOUT+4,HOLDY
 MOVE INTOUT+6,HOLDW
 MOVE INTOUT+8,HOLDH
 RTS

*---------BUTTON CLICKED---------

BUTEVENT MOVE #106,CONTRL  ;WHICH WINDOW?
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE EVXPOS,INTIN
 MOVE EVYPOS,INTIN+2
 JSR AES
 MOVE WIHANDLE,D0
 CMP INTOUT,D0
 BNE MAINLOOP

 CMP #2,WINDFLAG
 BNE BUTE2
 LEA TEREC2,A0
 JSR TECLICK
 JMP MAINLOOP

*-------------CHANGE PAGE---------------

BUTE2 TST PAGEICON
 BEQ BUTEVXX

 MOVE #43,CONTRL
 MOVE #4,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #PGFOUR,INTIN+2
 MOVE EVXPOS,INTIN+4
 MOVE EVYPOS,INTIN+6
 MOVE.L PAGEADR,ADDRIN
 JSR AES

BUTE5 MOVE INTOUT,D0
 BMI BUTEVXX
 CMP #PGONE,D0
 BCS BUTEVXX
 CMP #PGFOUR+1,D0
 BCC BUTEVXX
 SUB #PGONE,D0

 CMP PAGENUM,D0
 BEQ MAINLOOP
 MOVE D0,PAGENUM

 JSR SETPAGER
 JSR CLS

 MOVE SQNCTYPE,-(A7)  ;Activate first edit field on new page
 MOVE #1,SQNCTYPE
 JSR FINDDEFLT
 ADD #1,D3
 MOVE D3,ACTIVE
 MOVE (A7)+,SQNCTYPE

 JMP W_REDRAW

SETPAGER MOVE.L PAGEADR,A0
 ADD.L #PGONE*OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)
 ADD.L #OBSIZE,A0
 CLR OB_STATE(A0)

 CLR.L D0
 MOVE PAGENUM,D0
 ADD #PGONE,D0
 MULU #OBSIZE,D0
 ADD.L PAGEADR,D0
 MOVE.L D0,A0
 MOVE #1,OB_STATE(A0)
 RTS

*---------------OBJECT CLICK-------------

BUTEVXX JSR OBJFIND
 TST D0
 BMI MAINLOOP

 MOVE FINDOBJ,D0
 ADD #1,D0
 CMP ACTIVE,D0
 BEQ BUTDRAG

 TST ACTIVE
 BEQ BUTEVX2
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0

 MOVE PAGENUM,D0
 CMP OB_PAGE(A0),D0
 BNE BUTEVX2

 MOVE.L OB_TEREC(A0),A0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ BUTDEACT
 BMI BUTDEACT
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 LEA TEREC2,A0
 MOVE SELSTART(A0),SELEND(A0)
 JMP BUTEVX2
BUTDEACT JSR TEDNOCAR

BUTEVX2 CLR.L D0
 MOVE FINDOBJ,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,BUTADR
 MOVE.L D0,A0
 TST OB_TYPE(A0)
 BNE BUTEVYY
 MOVE.L OB_TEREC(A0),A0
 JSR TEACTIVE
 MOVE FINDOBJ,ACTIVE
 ADD #1,ACTIVE

BUTDRAG CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE.L OB_TEREC(A0),A0
 JSR TECLICK
 JMP MAINLOOP

*-------------BUTTON/ICON OBJECT CLICK------------

BUTEVYY CMP #2,OB_TYPE(A4)
 BEQ BUTCLICKED
 CMP #6,OB_TYPE(A4)
 BNE MAINLOOP

 JSR BUTINVERT

BUTEVYY2 JSR MKSTATE
 MOVE INTOUT+6,D0
 AND #1,D0
 TST D0
 BNE BUTEVYY2

 JSR BUTINVERT
 JMP BUTCLI5

BUTCLICKED MOVE.L A4,OBJADR

 DC $A00A
 MOVE #9,HELPER
 MOVE FINDOBJ,D0
 JSR OBJ_DRAW
 DC $A009

BUTCLI2 JSR MKSTATE
 MOVE INTOUT+6,D0
 AND #1,D0
 TST D0
 BNE BUTCLI2

 DC $A00A
 MOVE #8,HELPER
 MOVE FINDOBJ,D0
 JSR OBJ_DRAW
 DC $A009

BUTCLI5 MOVE FINDOBJ,USERNUM
 ADD #1,USERNUM
 JMP USER_ENTRY

BUTCLI3 RTS

BUTINVERT DC $A00A
 JSR TRANSRV
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE OB_RECT(A4),D0
 MOVE D0,D2
 MOVE OB_RECT+2(A4),D1
 MOVE D1,D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 JSR RECTANGLE
 DC $A009
 RTS

*--------------FIND OBJECT NUMBER------------------
* RETURN A4 PTR TO OBJECT
* D0=-1 IF NO OBJECT FOUND

OBJFIND TST OBJCNT
 BEQ OBJ103

 MOVE OBJCNT,COUNT
 SUB #1,COUNT

OBJ100 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4

 MOVE PAGENUM,D7
 CMP OB_PAGE(A4),D7
 BNE OBJ101

 MOVE EVXPOS,D0
 MOVE EVYPOS,D1
 CLR.L D3
 MOVE OB_SEL(A4),D3
 JSR INSIDE
 TST D0
 BEQ OBJ102

OBJ101 TST COUNT
 BEQ OBJ103
 SUB #1,COUNT
 JMP OBJ100
OBJ103 MOVE #-1,D0
 RTS

OBJ102 MOVE COUNT,FINDOBJ
 CLR D0
 RTS

*-----------INTERSECT-----------
* TEST POINT TO BE INSIDE OB_RECT, D0=X D1=Y
* RETURNS D0=1 IF OUTSIDE
INSIDE CLR.L D2
 MOVE OB_RECT(A4),D2
 TST D3
 BEQ INS6
 SUB #5,D2
INS6 CMP D2,D0
 BCC INS2
 MOVE #1,D0
 RTS

INS2 MOVE OB_RECT(A4),D2
 ADD OB_RECT+4(A4),D2
 TST D3
 BEQ INS7
 ADD #8,D2
INS7 CMP D0,D2
 BCC INS3
 MOVE #1,D0
 RTS

INS3 MOVE OB_RECT+2(A4),D2
 TST D3
 BEQ INS8
 SUB #6,D2
INS8 CMP D2,D1
 BCC INS4
 MOVE #1,D0
 RTS

INS4 MOVE OB_RECT+2(A4),D2
 ADD OB_RECT+6(A4),D2
 TST D3
 BEQ INS9
 ADD #6,D2
INS9 CMP D1,D2
 BCC INS5
 MOVE #1,D0
 RTS

INS5 CLR.L D0
 RTS

*----------KEY PRESSED---------

KEYEVENT CMP #1,WINDFLAG
 BNE KEYEDIT

 MOVE EVKEY,D0  ;FUNCTION KEY
 LSR #8,D0
 AND.L #$FF,D0

 CMP.B #84,D0 ;SHFT FUNCT
 BCS KEY30
 CMP.B #94,D0
 BCC KEY30
 SUB.B #74,D0
 JMP KEY31

KEY30 CMP.B #$3B,D0
 BCS NOFUNCT
 CMP.B #$45,D0
 BCC NOFUNCT
 SUB.B #$3B,D0

KEY31 ADD #901,D0
KEYED MOVE D0,USERNUM
 JMP USER_ENTRY

NOFUNCT MOVE EVSTATE,D0
 MOVE D0,D1
 AND.L #8,D0
 BNE KEYALT
 AND.L #4,D1
 BEQ KEYEDIT

 MOVE EVKEY,D0 ;CTRL key pressed
 AND.L #$FF,D0
 ADD #800,D0
 JMP KEYED

KEYALT MOVE EVKEY,D0  ;ALT KEY PRESSED
 LSR #8,D0
 AND.L #$FF,D0
 ADD #600,D0
 JMP KEYED

*--------Editor/Show Key Event--------

KEYEDIT TST WINDFLAG
 BNE KEYEV2

 MOVE EVKEY,D0
 LSR #8,D0
 AND #$FF,D0
 CMP #59,D0
 BEQ DONEW
 CMP #60,D0
 BEQ DOOPEN
 JMP MAINLOOP

*----------KEYBOARD EQUIVALENTS---------

KEYEV2 MOVE EVKEY,D0
 AND #$FF,D0
 CMP #24,D0
 BEQ DOCUT
 CMP #3,D0
 BEQ DOCOPY
 CMP #22,D0
 BEQ DOPASTE
 CMP #16,D0
 BEQ DOSQLCLR

 MOVE EVKEY,D0  ;Function keys
 LSR #8,D0
 AND #$FF,D0
 CMP #61,D0
 BEQ DOPROCESS
 CMP #62,D0
 BEQ DOSAVE
 CMP #63,D0
 BEQ DOSAVEAS
 CMP #64,D0
 BEQ DOCLOSE
 CMP #65,D0
 BEQ DOLOADP
 CMP #66,D0
 BEQ DOSAVEP
 CMP #67,D0
 BEQ DOPRINTP
 CMP #68,D0
 BEQ DOQUIT

*-----------NORMAL KEY EVENT-----------

 CMP #2,WINDFLAG
 BEQ KEYBL3

 MOVE EVKEY,D0
 CMP.B #13,D0
 BEQ NEXTEDIT

 MOVE EVKEY,D1  ;UP/DOWN CURSOR KEYS
 LSR #8,D1
 MOVE #2,EVMESG+8
 CMP #72,D1
 BEQ LASTEDIT
 MOVE #3,EVMESG+8
 CMP #80,D1
 BEQ NEXTEDIT

 TST ACTIVE
 BEQ MAINLOOP
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE PAGENUM,D1
 CMP OB_PAGE(A0),D1
 BNE MAINLOOP
 MOVE.L OB_TEREC(A0),A0
 JSR TEKEY
 JMP MAINLOOP

KEYBL3 MOVE EVKEY,D1  ;UP/DOWN CURSOR KEYS
 LSR #8,D1
 MOVE #2,EVMESG+8
 CMP #72,D1
 BEQ DOARROW
 MOVE #3,EVMESG+8
 CMP #80,D1
 BEQ DOARROW

 LEA TEREC2,A0
 JSR TEKEY
 JMP MAINLOOP

*------FIND NEXT EDIT FIELD-------

NEXTEDIT TST ACTIVE
 BEQ MAINLOOP
 CMP #1,OBJCNT
 BLE MAINLOOP

 JSR NEXTLAST
 ADD #1,D4

 CLR D6
 MOVE ACTIVE,D5
 CMP OBJCNT,D5
 BNE NEXTED1
 CLR D5

NEXTED1 CLR.L D0
 MOVE D5,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A4

 TST OB_TYPE(A4)
 BNE NEXTED2
 TST OB_SQNC(A4)
 BEQ NEXTED2

 TST SQNCTYPE
 BEQ NEXTED3
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE NEXTED2

NEXTED3 CMP OB_SQNC(A4),D4
 BEQ FOUNDED

NEXTED2 ADD #1,D5
 CMP OBJCNT,D5
 BNE NEXTED1
 CLR D5
 ADD #1,D6
 CMP #1,D6
 BEQ NEXTED1

 JSR ACTIVATE
 TST SQNCTYPE
 BNE MAINLOOP
 MOVE #-1,PAGENUM
 JMP FOUNDED2

FOUNDED MOVE D5,ACTIVE
 ADD #1,ACTIVE

FOUNDED2 MOVE OB_PAGE(A4),D0
 CMP PAGENUM,D0
 BEQ MAINLOOP
 MOVE D0,PAGENUM
 JSR SETPAGER
 JMP W_REDRAW

*------FIND LAST EDIT FIELD-------

LASTEDIT TST ACTIVE
 BEQ MAINLOOP
 CMP #1,OBJCNT
 BEQ MAINLOOP

 JSR NEXTLAST
 SUB #1,D4

 CLR.L D1
 MOVE #1,D2
 MOVE #-1,D3
LASTED8 MOVE.L D1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A4

 TST OB_TYPE(A4)
 BNE LASTED11

 TST SQNCTYPE
 BEQ LASTED10
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE LASTED11

LASTED10 CMP OB_SQNC(A4),D2
 BGE LASTED11
 MOVE OB_SQNC(A4),D2
 MOVE D1,D3
 MOVE.L A4,A3

LASTED11 ADD #1,D1
 CMP OBJCNT,D1
 BNE LASTED8

 CLR D6
 MOVE ACTIVE,D5
 SUB #1,D5

LASTED1 SUB #1,D5
 BPL LASTED3X
 ADD #1,D6
 CMP #1,D6
 BNE LASTBLOWN
 MOVE OBJCNT,D5
 SUB #1,D5

LASTED3X CLR.L D0
 MOVE D5,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A4
 TST OB_TYPE(A4)
 BNE LASTED2
 TST OB_SQNC(A4)
 BEQ LASTED2

 TST SQNCTYPE
 BEQ LASTED3
 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE LASTED2

LASTED3 CMP OB_SQNC(A4),D4
 BEQ FOUNDED

LASTED2 JMP LASTED1

LASTBLOWN TST D3
 BMI MAINLOOP
 MOVE D3,D5
 MOVE.L A3,A4
 JMP FOUNDED

NEXTLAST CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 MOVE.L A0,-(A7)
 MOVE.L OB_TEREC(A0),A0
 JSR TEDEACT
 MOVE.L (A7)+,A0
 MOVE OB_SQNC(A0),D4
 RTS

FINDDEFLT CLR.L D1
 MOVE #1000,D2
 MOVE #-1,D3
NEXTED8 MOVE.L D1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A4

 TST OB_TYPE(A4)
 BNE NEXTED11

 MOVE PAGENUM,D0
 CMP OB_PAGE(A4),D0
 BNE NEXTED11
 CMP OB_SQNC(A4),D2
 BLE NEXTED11
 MOVE OB_SQNC(A4),D2
 MOVE D1,D3
 MOVE.L A4,A3

NEXTED11 ADD #1,D1
 CMP OBJCNT,D1
 BNE NEXTED8
 RTS

*--------GET MOUSE STATE-------

MKSTATE MOVE #79,CONTRL ;GRAF_MKSTATE
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 JMP AES

*----------OBJECT DRAW LIBRARY------------

OB_RECT EQU 0   ;X Y W H
OB_TYPE EQU 8   ;0-EDIT 1-TEXT 2-BUTTON 3-OUTPUT 4-BOX 5-CIRCLE 6-ICON
OB_NAME EQU 10  ;POINTER TO NAME OF OBJECT
OB_COLR1 EQU 14 ;PRIMARY COLOR
OB_COLR2 EQU 16 ;SECONDARY COLOR
OB_PATRN EQU 18 ;PATTERN FILL INDEX FOR VDI SETINDEX CALL
OB_WIDTH EQU 20 ;LINE WIDTH FOR VDI POLYLINE CALL
OB_TXTSZ EQU 22 ;TEXT SIZE
OB_TXTEF EQU 24 ;TEXT EFFECTS
OB_TEREC EQU 26 ;POINTER TO TErec
OB_ICON EQU 30  ;POINTER TO ICON BLOCK
OB_ICSZ EQU 34  ;ICON BLOCK SIZE
OB_BUTNM EQU 36 ;POINTER TO BUTTON/OUTPUT/TEXT FIELD CONTENTS
OB_SEL EQU 40   ;SELECTED FLAG 1=ACTIVE
OB_ORECT EQU 42 ;OLD RECTANGLE X Y W H
OB_CURS EQU 50  ;CURSOR LOCATION
OB_PAGE EQU 52  ;PAGE NUMBER
OB_SQNC EQU 54  ;SEQUENCE NUMBER
OB_DEF EQU 56   ;DEFINITION D-DECIMAL I-INTEGER A-DATE E-EUROPEAN
OB_DEF2 EQU 58  ;DEFINED SIZE
OB_EXTR EQU 60  ;DECIMAL EXTENSION
OB_MISC EQU 62  ;MISCELLANEOUS STORAGE (4 BYTES)

OBRECSZ EQU 66 ;RECORD SIZE

* DRAW AN OBJECT
* D0 = OBJECT #

OBJ_DRAW LEA OBRECS,A4
 AND.L #255,D0
 MULU #OBRECSZ,D0
 ADD.L D0,A4
 MOVE.L A4,OBJADR

 MOVE PAGENUM,D7
 CMP OB_PAGE(A4),D7
 BNE OBJ_DUD

 CLR.L D0
 MOVE OB_TYPE(A4),D0
 TST D0
 BEQ OBD_EDIT
 CMP #1,D0
 BEQ OBD_TEXT
 CMP #2,D0
 BEQ OBD_BUTN
 CMP #3,D0
 BEQ OBD_OUTP
 CMP #4,D0
 BEQ OBD_BOX
 CMP #5,D0
 BEQ OBD_CIRC
 CMP #6,D0
 BEQ OBD_ICON
OBJ_DUD RTS

*----------DRAW ICON OBJECT----------*

OBD_ICON MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 MOVE.L OB_ICON(A4),MFDB  ;Establish Memory Form Definition Block

 MOVE OB_RECT+4(A4),MFDB+4  ;Width in pixels
 MOVE OB_RECT+6(A4),MFDB+6  ;Height in pixels

 CLR.L D0
 MOVE OB_RECT+4(A4),D0      ;Width in bytes
 ADD #15,D0
 LSR #4,D0
 MOVE D0,MFDB+8

 MOVE #0,MFDB+10     ;Screen coordinates
 MOVE #1,MFDB+12     ;Mono resolution
 CLR MFDB+14         ;Reserved
 CLR MFDB+16
 CLR MFDB+18

 CLR.L MFDB2         ;Eastblish MFDB for screen
 CLR MFDB2+2
 CLR MFDB2+4
 CLR MFDB2+6
 CLR MFDB2+8
 CLR MFDB2+10
 CLR MFDB2+12
 CLR MFDB2+14
 CLR MFDB2+16
 CLR MFDB2+18

 MOVE #121,CONTRL
 MOVE #4,CONTRL+2
 MOVE #3,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE.L #MFDB,CONTRL+14
 MOVE.L #MFDB2,CONTRL+18
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #0,INTIN+4

 MOVE #0,PTSIN   ;Source rectangle
 MOVE #0,PTSIN+2

 MOVE.L OBJADR,A4
 MOVE OB_RECT+4(A4),PTSIN+4
 SUB #1,PTSIN+4
 MOVE OB_RECT+6(A4),PTSIN+6

 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE D0,D2
 ADD OB_RECT+4(A4),D2
 MOVE D1,D3
 ADD OB_RECT+6(A4),D3

 MOVE D0,PTSIN+8
 MOVE D1,PTSIN+10
 SUB #1,D2
 MOVE D2,PTSIN+12
 MOVE D3,PTSIN+14
 JMP VDI

*----------DRAW BOX OBJECT----------*

OBD_BOX DC $A00A

 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 TST OB_PATRN(A4)
 BNE OBD_B2
 CLR D0
 JSR SETFILL
 JMP OBD_B3
OBD_B2 MOVE #2,D0
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
OBD_B3 JSR TRANSOFF

 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT(A4),D2
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+2(A4),D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 JSR RECTANGLE

 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR
 MOVE OB_WIDTH(A4),D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE

 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JSR DRAWPOLY

 DC $A009
 RTS

*----------DRAW CIRCLE OBJECT----------*

OBD_CIRC DC $A00A

 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0    ;INTERIOR COLOR
 JSR SETCOLOR

 MOVE.L OBJADR,A4
 TST OB_PATRN(A4)
 BNE OBD_C2
 CLR D0
 JSR SETFILL
 JMP OBD_C3
OBD_C2 MOVE #2,D0
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
OBD_C3 JSR TRANSOFF
 MOVE #1,D0
 JSR FILLPERI

 MOVE #11,CONTRL ;VDI CIRCLE
 MOVE #3,CONTRL+2
 CLR CONTRL+6
 MOVE #4,CONTRL+10
 MOVE GRHANDLE,CONTRL+12

 MOVE.L OBJADR,A4

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 ADD OB_RECT(A4),D0
 MOVE D0,PTSIN

 MOVE OB_RECT+6(A4),D0
 LSR #1,D0
 ADD OB_RECT+2(A4),D0
 MOVE D0,PTSIN+2

 CLR PTSIN+4
 CLR PTSIN+6

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 MOVE D0,PTSIN+8

 CLR PTSIN+10
 JSR VDI

 CLR D0
 JSR SETFILL
 MOVE #1,D0

 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR
 JSR TRANSON

 MOVE #11,CONTRL ;VDI CIRCLE
 MOVE #3,CONTRL+2
 CLR CONTRL+6
 MOVE #4,CONTRL+10
 MOVE GRHANDLE,CONTRL+12

 MOVE.L OBJADR,A4
 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 ADD OB_RECT(A4),D0
 MOVE D0,PTSIN

 MOVE OB_RECT+6(A4),D0
 LSR #1,D0
 ADD OB_RECT+2(A4),D0
 MOVE D0,PTSIN+2

 CLR PTSIN+4
 CLR PTSIN+6

 MOVE OB_RECT+4(A4),D0
 LSR #1,D0
 MOVE D0,PTSIN+8

 CLR PTSIN+10
 JSR VDI

 DC $A009
 RTS

*----------DRAW BUTTON OBJECT----------*

OBD_BUTN DC $A00A
 CLR OUTFLAG

 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE HELPER,HELPER2
 MOVE #9,HELPER
 JSR OBD_RR
 MOVE HELPER2,HELPER
 JMP OBD_OP3

OBD_OP2 JSR OBD_INI

OBD_OP3 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR SETCOLOR
 MOVE #1,D0    ;PATTERN
 JSR SETFILL
 MOVE.L OBJADR,A4
 MOVE OB_PATRN(A4),D0
 JSR SETINDEX
 MOVE.L OBJADR,A4
 MOVE OB_WIDTH(A4),D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE
 JSR TRANSOFF
 MOVE #1,D0
 JSR FILLPERI

 JSR TRANSON
 MOVE.L OBJADR,A4
 CLR.L D0
 MOVE OB_TXTSZ(A4),D0
 ADD.L #TXTBUFF,D0
 MOVE.L D0,A1
 CLR.L D0
 MOVE.B (A1),D0
 JSR GEMTSIZE
 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR GEMCOLOR
 MOVE.L OBJADR,A4
 MOVE OB_TXTEF(A4),D0
 JSR GEMFX

 MOVE #116,CONTRL  ;Inquire text extent
 CLR CONTRL+2

 MOVE.L OBJADR,A4
 MOVE.L OB_BUTNM(A4),A0
 LEA INTIN,A1
 MOVE #70,D1
 CLR.L D0
 CLR.L D2
OBD_BUT10 MOVE.B (A0)+,D2
 MOVE D2,(A1)+
 TST.B D2
 BEQ OBD_BUT11
 ADD #1,D0
 DBF D1,OBD_BUT10

OBD_BUT11 MOVE D0,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 CLR.L D0
 CLR.L D1
 MOVE PTSOUT+4,D0  ;WIDTH
 MOVE D0,BUTNW
 MOVE PTSOUT+10,D1 ;HEIGHT
 MOVE D1,BUTNH
 MULS #-1,D1

 CLR BUTNSEL

 MOVE.L OBJADR,A4
 CLR.L D2
 MOVE D0,D2
 ADD OB_RECT(A4),D2
 CLR.L D1
 MOVE WINDX,D1
 ADD WINDW,D1
 CMP D1,D2
 BGE OBD_BUT7

 CMP OB_RECT+4(A4),D0
 BLE OBD_BUT12
 TST KEYFLAG
 BEQ OBD_BUT17
 MOVE #1,BUTNSEL
OBD_BUT17 MOVE BUTNW,OB_RECT+4(A4)

OBD_BUT12 MOVE.L OBJADR,A4
 MOVE.L OBJADR,A4
 CLR.L D2
 MOVE BUTNH,D2
 ADD OB_RECT+2(A4),D2
 CLR.L D1
 MOVE WINDY,D1
 ADD WINDH,D1
 CMP D1,D2
 BGE OBD_BUT7

 MOVE BUTNH,D1
 CMP OB_RECT+6(A4),D1
 BLT OBD_BUT15
 TST KEYFLAG
 BEQ OBD_BUT18
 TST BUTNSEL
 BNE OBD_BUT18
 MOVE #1,BUTNSEL
OBD_BUT18 MOVE BUTNH,OB_RECT+6(A4)

OBD_BUT15 MOVE.L OBJADR,A4
 MOVE OB_COLR2(A4),D0
 JSR GEMCOLR

 TST OUTFLAG
 BEQ OBD_BUT5
 CMP #2,OUTFLAG
 BEQ OBD_BUT6

 MOVE OB_RECT(A4),D0  ;OUTPUT BOX
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+4(A4),D2
 MOVE OB_RECT+6(A4),D3
 JSR DRAWPOLY
 JMP OBD_BUT6

OBD_BUT5 JSR OBD_RR

OBD_BUT6 MOVE.L OBJADR,A4
 MOVE OB_COLR1(A4),D0
 JSR GEMCOLOR

 CMP #2,OUTFLAG
 BNE OBD_BUT7Z
 JSR TRANSON

OBD_BUT7Z MOVE.L OBJADR,A4
 MOVE.L OB_BUTNM(A4),A0
 TST.B (A0)
 BEQ OBD_BUT7
 LEA INTIN,A1
 CLR.L D0
 CLR.L D1
 MOVE #70,D2
OBD_BUT2 MOVE.B (A0)+,D1
 MOVE D1,(A1)+
 TST.B D1
 BEQ OBD_BUT2A
 ADD #1,D0
 DBF D2,OBD_BUT2
OBD_BUT2A MOVE D0,TEMP

 MOVE OB_RECT(A4),D1
 CMP #2,OUTFLAG
 BEQ OBD_BT17
 CLR.L D1
 MOVE OB_RECT+4(A4),D1
 SUB BUTNW,D1
 LSR #1,D1
 ADD OB_RECT(A4),D1
OBD_BT17 MOVE D1,PTSIN

 CLR.L D1
 MOVE OB_RECT+6(A4),D1
 SUB BUTNH,D1
 LSR #1,D1
 ADD OB_RECT+2(A4),D1
 ADD BUTNH,D1
 SUB #1,D1
 MOVE D1,PTSIN+2

 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE TEMP,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

OBD_BUT7 MOVE #9,D0
 JSR GEMTSIZE

 TST BUTNSEL
 BEQ OBD_BUT16
 TST KEYFLAG
 BEQ OBD_BUT16
 MOVE.L OBJADR,A4

OBD_BUT16 DC $A009
 RTS

TXTBUFF DC.B 7,9,11,17,19

OBD_INI JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE D0,D2
 MOVE OB_RECT+2(A4),D1
 MOVE D1,D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 JMP RECTANGLE

OBD_RR MOVE #11,CONTRL  ;ROUNDED RECTANGLE
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE HELPER,CONTRL+10
 MOVE GRHANDLE,CONTRL+12
 MOVE.L OBJADR,A4
 MOVE OB_RECT(A4),D0
 MOVE OB_RECT(A4),D2
 MOVE OB_RECT+2(A4),D1
 MOVE OB_RECT+2(A4),D3
 ADD OB_RECT+4(A4),D2
 ADD OB_RECT+6(A4),D3
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D2,PTSIN+4
 MOVE D3,PTSIN+6
 JMP VDI

*----------DRAW OUTPUT OBJECT----------*

OBD_OUTP DC $A00A
 MOVE #1,OUTFLAG
 JMP OBD_OP2

*----------DRAW TEXT OBJECT----------*

OBD_TEXT DC $A00A
 MOVE #2,OUTFLAG
 JMP OBD_OP3

*----------DRAW EDIT OBJECT----------*

OBD_EDIT DC $A00A
 MOVE.L OBJADR,A4
 MOVE.L OB_TEREC(A4),A0
 MOVE OB_COLR1(A4),TECOLOR1(A0)
 MOVE OB_COLR2(A4),TECOLOR2(A0)
 CLR CARETVAL(A0)
 JSR TEUPDATE
 DC $A009
 RTS

*---------SET INFO LINE MESSAGE-----------
SETMES MOVE #105,CONTRL
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #3,INTIN+2
 MOVE.L A0,INTIN+4
 JMP AES

*---------SET TITLE BAR MESSAGE-----------
SETTITLE MOVE #105,CONTRL ;SET WINDOW TITLE
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #2,INTIN+2
 JMP AES

************************
* PROCESS A DIALOG BOX *
* A0=DIALOG TREE       *
* D0=EDIT FIELD        *
************************

FORMDO MOVE.L A0,FORMDIAL
 MOVE D0,FORMEDIT

 DC $A00A

 MOVE #54,CONTRL   ;FORM_CENTER
 CLR CONTRL+2
 MOVE #5,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE.L FORMDIAL,ADDRIN
 JSR AES
 MOVE INTOUT+2,DIALX
 MOVE INTOUT+4,DIALY
 MOVE INTOUT+6,DIALW
 MOVE INTOUT+8,DIALH

 MOVE #51,CONTRL  ;FORM_DIAL
 MOVE #9,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE SHRINK,INTIN+2
 MOVE SHRINK+2,INTIN+4
 MOVE SHRINK+4,INTIN+6
 MOVE SHRINK+6,INTIN+8
 MOVE INTOUT+2,INTIN+10
 MOVE INTOUT+4,INTIN+12
 MOVE INTOUT+6,INTIN+14
 MOVE INTOUT+8,INTIN+16
 JSR AES

 MOVE #1,INTIN   ;FORM_DIAL (EXPAND)
 JSR AES

 MOVE #42,CONTRL ;OBJC_DRAW
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 MOVE #100,INTIN+2
 MOVE GEMXPOS,INTIN+4
 MOVE GEMYPOS,INTIN+6
 MOVE GEMWIDTH,INTIN+8
 MOVE GEMHOEHE,INTIN+10
 MOVE.L FORMDIAL,ADDRIN
 JSR AES

 DC $A009

 MOVE #50,CONTRL  ;FORM_DO
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE FORMEDIT,INTIN
 MOVE.L FORMDIAL,ADDRIN
 JSR AES
 MOVE INTOUT,SAVERTRN

 DC $A00A

 MOVE #51,CONTRL  ;FORM_DIAL (SHRINK)
 MOVE #9,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE #2,INTIN
 MOVE SHRINK,INTIN+2
 MOVE SHRINK+2,INTIN+4
 MOVE SHRINK+4,INTIN+6
 MOVE SHRINK+6,INTIN+8
 MOVE DIALX,INTIN+10
 MOVE DIALY,INTIN+12
 MOVE DIALW,INTIN+14
 MOVE DIALH,INTIN+16
 JSR AES

 MOVE #3,INTIN   ;FORM_DIAL (FREES)
 JSR AES

 DC $A009
 RTS

*----------OPEN A WINDOW-------------

OPENWIND DC $A00A
 MOVE #1,WINDFLAG
 MOVE #$13,INTIN
 JSR WIND_CR

 MOVE.L #OBJNAME,INTIN+4
 JSR SETTITLE

 LEA OKMES,A0  ;Set information line to OK.
 JSR SETMES

 JSR DOWIND

 MOVE.L PAGEADR,A0  ;Set page token location
 MOVE WINDX,D0
 ADD #1,D0
 MOVE D0,OB_X(A0)
 MOVE WINDY,D0
 ADD WINDH,D0
 SUB OB_HGHT(A0),D0
 ADD #1,D0
 MOVE D0,OB_Y(A0)

* MOVE.L STRINGADR,A0
* ADD #PROCMES1*OBSIZE,A0
* MOVE.L MENUADR,A1   ;Set menu entry
* ADD.L #IPROCESS*24,A1
* MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 JMP MENUSET4

*----------OPEN PROC EDITOR WINDOW---------

OPENEDW DC $A00A
 MOVE #2,WINDFLAG

 MOVE #$1D3,INTIN
 JSR WIND_CR

 MOVE.L STRINGADR,A0
 ADD #PROCNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),INTIN+4
 JSR SETTITLE

 LEA OKMES,A0
 JSR SETMES

 JSR DOWIND

 MOVE #105,CONTRL  ;SET SIZE OF V SLIDER
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #16,INTIN+2
 MOVE #63,INTIN+4
 JSR AES

* MOVE.L STRINGADR,A0   ;Set menu entry
* ADD #PROCMES2*OBSIZE,A0
* MOVE.L MENUADR,A1
* ADD.L #IPROCESS*24,A1
* MOVE.L OB_SPEC(A0),OB_SPEC(A1)

 JSR MENUSET3
 JMP INITPED

*----------OPEN SHOW WINDOW---------

OPENSHOW DC $A00A
 MOVE #3,WINDFLAG

 MOVE #$FC1,INTIN
 JSR WIND_CR

 MOVE.L STRINGADR,A0
 ADD #SHOWNAME*OBSIZE,A0
 MOVE.L OB_SPEC(A0),INTIN+4
 JSR SETTITLE

*------------OPEN WINDOW-------------

DOWIND MOVE #101,CONTRL       ;WIND_OPEN
 MOVE #5,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE GEMXPOS,INTIN+2
 MOVE GEMYPOS,INTIN+4
 MOVE GEMWIDTH,INTIN+6
 MOVE GEMHOEHE,INTIN+8
 JSR AES

 MOVE #104,CONTRL  ;WIND_GET
 MOVE #2,CONTRL+2
 MOVE #5,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #4,INTIN+2
 JSR AES
 MOVE INTOUT+2,WINDX
 MOVE INTOUT+4,WINDY
 MOVE INTOUT+6,WINDW
 MOVE INTOUT+8,WINDH
 SUB #2,WINDW
 SUB #1,WINDH

 JSR CLS

 DC $A009
 RTS

WIND_CR MOVE #100,CONTRL ;WIND_CREATE
 MOVE #5,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE GEMXPOS,INTIN+2
 MOVE GEMYPOS,INTIN+4
 MOVE GEMWIDTH,INTIN+6
 MOVE GEMHOEHE,INTIN+8
 JSR AES
 MOVE INTOUT,WIHANDLE
 RTS

*-----------CLOSE THE OPEN WINDOW-----------

CLOSEW TST WINDFLAG
 BEQ CLOSEW2

 CLR WINDFLAG
 DC $A00A

 MOVE #102,CONTRL  ;CLOSE WINDOW
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES

 MOVE #103,CONTRL  ;DELETE WINDOW
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 JSR AES
 DC $A009

CLOSEW2 RTS

CLS JSR NOCLIP ;CLEAR OPEN WINDOW
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE WINDX,D0
 MOVE WINDY,D1
 MOVE WINDX,D2
 MOVE WINDY,D3
 ADD WINDW,D2
 ADD WINDH,D3
 JMP RECTANGLE

******************************************************************
*                   TEXT EDIT CORE ROUTINES                      *
******************************************************************

* TEREC edit record definition:

TERECSIZE EQU 102 ;Size of a TERec edit record

VIEWRECT EQU 0  ;View Rectangle X Y W H
LINEHIGH EQU 8  ;Verticle Line Spacing
TEYOFF EQU 10   ;Verticle offset for caret
TEYOFF2 EQU 12  ;Verticle offset for text base line
TEXOFF EQU 14   ;Horizontal offset within view rectangle
TEXSIZE EQU 16  ;Horizontal size of one character
HTEXT EQU 18    ;Pointer to text block
TELENGTH EQU 22 ;Length in bytes of text block available
WORDWRAP EQU 24 ;1 = Word wrap active
SELSTART EQU 26 ;Starting location of highlighted text
SELEND   EQU 28 ;Ending location of highlighted text
CARETIME EQU 30 ;0-255 Sets caret blink speed (0=no blink)
CARETTOG EQU 32 ;Used internally
TXSIZE EQU 34   ;Text Size (VDI Text Size Call)
TXFONT EQU 36   ;Text font (for RDOS use only)
TXFACE EQU 38   ;Text face (VDI Text Effects Call)

TXMODE EQU 40   ;Text Mode (for RDOS use only)
UCMODE EQU TXMODE ;!!!Upper Case flag!!!

CARETVAL EQU 42 ;Used internally
TETXTEND EQU 44 ;Used internally
TECOLOR1 EQU 46 ;Text color
TECOLOR2 EQU 48 ;Text color for outline rectangle
TESCORE EQU 50  ;Blank area character pattern
LINESTRT EQU 52 ;Positions of line starts (24 lines x 1 word)

*----------------------TEACTIVE-------------------------
* Call TEACTIVE to initalize the Text Edit object and make it active.
* A0 - TERec

TEACTIVE MOVE.L A0,TEMPADR
 CLR SELSTART(A0)
 CLR SELEND(A0)
 MOVE #1,CARETTOG(A0)
 CLR CARETVAL(A0)

 MOVE.L HTEXT(A0),A1
 CLR.L D0
 CLR.L D1
 MOVE TELENGTH(A0),D1
 SUB #1,D1
TEACT10 TST.B (A1)
 BEQ TEACT11

 CMP.B #10,(A1) ;LINE FEED
 BNE TEACT12
 MOVE.B #' ',(A1)

TEACT12 ADD #1,A1
 ADD #1,D0
 DBF D1,TEACT10
TEACT11 MOVE D0,TETXTEND(A0)
 RTS

*----------------------TEUPDATE-------------------------
* Call TEUPDATE to draw the text specified within the
* view rectangle.  Call TEUPWORD to update the text only.

TEUPDATE MOVE.L A0,TEMPADR
 JSR TEDORECT
 MOVE TEYLOC,TESTART

* DRAW WORD WRAPPED TEXT

TEWORDUP DC $A00A
 CLR TEEOF

 MOVE #23,D0
 MOVE.L TEMPADR,A0
TESTRT1 MOVE #-1,LINESTRT(A0)
 ADD #2,A0
 DBF D0,TESTRT1

* This chunck of code sets up the VDI writing info

 MOVE.L TEMPADR,A0
 MOVE TXFACE(A0),D0
 JSR GEMFX
 MOVE.L TEMPADR,A0
 MOVE TXSIZE(A0),D0
 JSR GEMTSIZE
 MOVE.L TEMPADR,A0
 MOVE TECOLOR1(A0),D0
 JSR GEMCOLOR
 JSR TRANSOFF

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEXOFF(A0),D0
 MULU #4,D0
 ADD VIEWRECT+4(A0),D0
 SUB #2,D0
 DIVU TEXSIZE(A0),D0
 AND.L #255,D0
 SUB #1,D0
 MOVE D0,TEMPHOLD
 MOVE D0,TEFLAG

 MOVE.L TEMPADR,A0
 MOVE.L HTEXT(A0),A0
 TST.B (A0)
 BNE TESTRTZ
 DC $A009
 JSR TEDORECT
 DC $A00A
 MOVE #1,TEEOF
 CLR TECOUNT
 JSR TEWUCALC
 JMP TEPCRS3

TESTRTZ MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEYLOC,D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A2

 CLR.L D1
 MOVE TEYLOC,D1

 MOVE.L TEMPADR,A1
 CLR TECOUNT

TESTRT10 MOVE.L A2,A4
 MOVE D1,LINESTRT(A1)
 ADD #2,A1

 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE TEMPHOLD,D4
 MOVE.L TEMPADR,A0

TEJUST10 TST.B (A4)
 BEQ TESTRT15

 CMP.B #13,(A4)
 BEQ TEJUST18
 CMP #1,WORDWRAP(A0)
 BNE TEJUST11
 CMP.B #' ',(A4)
 BEQ TEJUST20

TEJUST11 ADD.L #1,A4
 ADD #1,D2
 SUB #1,D4
 TST D4
 BNE TEJUST10
 TST D3
 BNE TESTRT19
 MOVE TEMPHOLD,D3
 MOVE.L A4,A2
 JMP TESTRT19

TEJUST18 MOVE #1,D4

TEJUST20 ADD #1,D2
 ADD #1,A4
 MOVE D2,D3
 MOVE.L A4,A2
 SUB #1,D4
 TST D4
 BNE TEJUST10

TESTRT19 ADD D3,D1

TESTRT13 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TESTRT10

* Find the starting line to update

TESTRT15 CLR TECOUNT
 CLR TESTART2
 MOVE TESTART,D1
 MOVE.L TEMPADR,A0

TESTRT55 TST LINESTRT(A0)
 BMI TESTRT50
 CMP LINESTRT(A0),D1
 BCS TESTRT50

 ADD #2,A0
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BNE TESTRT55
 JMP TESTRT51

TESTRT50 MOVE TECOUNT,TESTART2
 SUB #1,TESTART2
 TST TESTART2
 BEQ TESTRT51
 SUB #1,TESTART2

* TEMPHOLD - # of lines in screen  TEFLAG = # of chars per line
* Draw one line of text loop

TESTRT51 JSR TEWUCALC
 MOVE TESTART2,TECOUNT

TESTRT60 SUB #1,TEMPHOLD
 CMP #1,TEMPHOLD
 BLT TENOJUST

 TST TEEOF
 BNE TEPCRS3

 CLR.L D0
 MOVE TECOUNT,D0
 MULU #2,D0
 ADD.L TEMPADR,D0
 MOVE.L D0,A0
 CLR.L D3
 MOVE LINESTRT(A0),D3
 TST D3
 BPL TEPCRS

TEPCRSZZ MOVE #1,TEEOF

* D2 = # of characters to plot

TEPCRS TST TEEOF
 BEQ TEPCRS2
TEPCRS3 LEA INTIN,A1
 MOVE TEFLAG,D3
 SUB #1,D3
 JMP TEUPAT34

TEPCRS2 TST LINESTRT+2(A0)
 BPL TESTRT59
 MOVE.L TEMPADR,A1
 CLR.L D2
 MOVE TETXTEND(A1),D2
 SUB LINESTRT(A0),D2
 TST D2
 BEQ TEPCRSZZ
 SUB #1,D2
 JMP TESTRT61

TESTRT59 CLR.L D2
 MOVE LINESTRT+2(A0),D2
 SUB LINESTRT(A0),D2
 TST D2
 BEQ TENOJUST
 SUB #1,D2

TESTRT61 MOVE.L TEMPADR,A0
 MOVE.L HTEXT(A0),A0
 ADD.L D3,A0

* Move characters into INTIN

 CLR D0
 CLR D1
 LEA INTIN,A1
TEUPAT30 MOVE.B (A0)+,D0
 BEQ TEUPAT32
 CMP.B #13,D0
 BEQ TEUPAT33
 MOVE D0,(A1)+
 ADD #1,D1
TEUPAT33 DBF D2,TEUPAT30

* Fill rest of line with blank characters

TEUPAT32 MOVE TEFLAG,D3
 SUB D1,D3
 TST D3
 BEQ TEUPAT40
 SUB #1,D3
TEUPAT34 MOVE.L TEMPADR,A0
 MOVE TESCORE(A0),D0
TEUPAT32Z MOVE D0,(A1)+
 DBF D3,TEUPAT32Z

* Finish setting VDI stuff and draw it.

TEUPAT40 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0
 MOVE D0,PTSIN

 CLR.L D0
 MOVE LINEHIGH(A0),D0
 MULU TECOUNT,D0
 ADD VIEWRECT+2(A0),D0
 ADD TEYOFF2(A0),D0
 MOVE D0,PTSIN+2

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 CMP D0,D4
 BCS TENOJUST

 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE TEFLAG,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 TST WORDBRK
 BNE TEYESJST
 MOVE #11,-(A7)  ;KEY PRESSED?
 TRAP #1
 ADD #2,A7
 TST.B D0
 BNE TENOJUST

TEYESJST ADD #1,TECOUNT
 CMP #18,TECOUNT
 BCS TESTRT60

TENOJUST DC $A009
 RTS

TEWUCALC MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE VIEWRECT+6(A0),D0
 SUB #1,D0
 DIVU LINEHIGH(A0),D0
 AND.L #255,D0
 ADD #1,D0
 MOVE D0,TEMPHOLD
 RTS

*-------------REPLOT VIEW RECTANGLE---------------
TEDORECT DC $A00A
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 JSR TRANSOFF
 CLR D0
 JSR FILLPERI

 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 MOVE VIEWRECT(A0),D2
 MOVE VIEWRECT+2(A0),D1
 MOVE VIEWRECT+2(A0),D3
 ADD VIEWRECT+4(A0),D2
 ADD VIEWRECT+6(A0),D3
 JSR RECTANGLE

 CMP #2,WINDFLAG
 BEQ TEDO2

 MOVE.L TEMPADR,A0
 MOVE TECOLOR2(A0),D0
 JSR GEMCOLR
 MOVE #2,D0
 JSR LINEWIDE
 MOVE #$FFFF,D0
 JSR LINETYPE

 MOVE.L TEMPADR,A0
 MOVE VIEWRECT(A0),D0
 MOVE VIEWRECT+2(A0),D1
 MOVE VIEWRECT+4(A0),D2
 MOVE VIEWRECT+6(A0),D3
 JSR DRAWPOLY

TEDO2 DC $A009
 RTS

*---------------------TEIDLE----------------------
* Call TEIDLE repeatedly to make a blinking
* caret appear at the insertion point.

TEIDLE MOVE.L A0,TEMPADR

 MOVE SELSTART(A0),D0  ;Selection range defined?
 CMP SELEND(A0),D0
 BNE TEIDLE99

 TST CARETIME(A0) ;0 = NO BLINK
 BNE TEIDLE2

 MOVE CARETVAL(A0),D0
 AND #1,D0
 BNE TEIDLE99
 JMP TEIDLE20

TEIDLE2 SUB #1,CARETTOG(A0)
 TST CARETTOG(A0)
 BNE TEIDLE99
 MOVE CARETIME(A0),CARETTOG(A0)

TEIDLE20 MOVE #1,D0   ;INTERIOR COLOR
 JSR SETCOLOR
 MOVE #1,D0    ;PATTERN
 JSR SETFILL
 JSR TRANSXOR

 MOVE.L TEMPADR,A0
 ADD #1,CARETVAL(A0)

 CLR TECOUNT
 CLR.L D0
 MOVE.L TEMPADR,A0
 MOVE.L A0,A1
 ADD.L #2,A1

TEIDLE21 TST LINESTRT(A1)
 BMI TEIDLE22

 MOVE SELSTART(A0),D0
 CMP LINESTRT(A1),D0
 BEQ TEIDLE29
 BCS TEIDLE22

TEIDLE29 ADD.L #2,A1
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TEIDLE21

TEIDLE22 SUB.L #2,A1
 CLR.L D0
 MOVE SELSTART(A0),D0
 TST LINESTRT(A1)
 BMI TEIDLE23
 SUB LINESTRT(A1),D0
TEIDLE23 MOVE D0,TEMPHOLD

TEIDLE30 DC $A00A

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEMPHOLD,D0
 MULU TEXSIZE(A0),D0
 ADD VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0
 MOVE D0,D2
 ADD TEXSIZE(A0),D2
 SUB #1,D2

 CLR.L D1
 MOVE TECOUNT,D1
 MULU LINEHIGH(A0),D1
 ADD VIEWRECT+2(A0),D1
 ADD TEYOFF(A0),D1
 MOVE D1,D3
 ADD LINEHIGH(A0),D3
 SUB #1,D3

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 SUB LINEHIGH(A0),D4
 ADD #1,D4
 CMP D4,D1
 BCC TEIDLE98

 JSR RECTANGLE
 DC $A009
 RTS

TEIDLE99 JMP SHOWSLID

TEIDLE98 CMP #2,WINDFLAG
 BNE TEIDLE97

 MOVE.L TEMPADR,A0
 MOVE CARETVAL(A0),D0
 AND.L #1,D0
 BNE TEIDLE97

 JSR TECALC
 CLR.L D0
 MOVE D1,D0
 MULU #2,D0
 ADD.L SCROLL,D0
 MOVE.L D0,A0

 SUB.L #2*17,A0
 MOVE (A0),TEYLOC
 MOVE (A0),TESTART
 MOVE D1,LINENUM
 MOVE D1,VIEWNUM
 SUB #17,VIEWNUM

 MOVE #1,WORDBRK
 MOVE.L #TEREC2,TEMPADR
 JSR TEWORDUP
 CLR WORDBRK
 LEA TEREC2,A0
 MOVE #1,CARETTOG(A0)
 JSR SHOWSLID

TEIDLE97 DC $A009
 RTS

*----------------------------TEKEY-----------------------------
* Call TEKEY when a key event occurs.  The key pressed replaces the
* selection range and leaves the caret just past the inserted character.
* D0 = Key code from AES Get Event

TEKEY MOVE.L A0,TEMPADR
 MOVE INTOUT+10,TEMPKEY2

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BNE TEK10

 MOVE.L TEMPADR,A0
 JSR TEDNOCAR
 JMP TEINSKEY

TEK10 JSR TEDELSEL

 MOVE SELSTART(A0),TESTART
 MOVE #1,CARETTOG(A0)

 MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 CMP.B #8,D0
 BEQ TEKEY25

TEINSKEY MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 CMP.B #27,D0 ;ESCAPE
 BEQ TEESC
 CMP.B #8,D0  ;BACKSPACE
 BEQ TEINSK2

 MOVE TEMPKEY2,D0
 LSR #8,D0
 AND.L #$FF,D0
 CMP.B #83,D0
 BEQ TEDEL
 CMP.B #82,D0
 BEQ TEINS
 CMP.B #71,D0
 BEQ TEESC
 CMP.B #15,D0
 BEQ TETAB

 CMP.B #$4B,D0
 BEQ TELEFT
 CMP.B #$48,D0 ;UP ARW
 BEQ TEKEY25
 CMP.B #$50,D0 ;DN ARW
 BEQ TEKEY25
 CMP.B #$4D,D0
 BNE TEINSK9

 JSR TERTARW  ;RT ARW
 JMP TEKEY25

TETAB JSR TERTARW ;TAB
 JSR TERTARW
 JSR TERTARW
 JSR TERTARW
 JSR TERTARW
 JMP TEKEY25

TERTARW MOVE.L TEMPADR,A0  ;RIGHT ARROW
 MOVE SELSTART(A0),D0
 CMP TETXTEND(A0),D0
 BEQ TERT2
 ADD #1,SELSTART(A0)
TERT2 RTS

TEINSK2 MOVE.L TEMPADR,A0
 MOVE TEYLOC,D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 JSR TEDELONE  ;BACKSPACE

TELEFT MOVE.L TEMPADR,A0
 TST SELSTART(A0)
 BEQ TEKEY25
 MOVE TEYLOC,D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 SUB #1,SELSTART(A0)
 JMP TEKEY25

TEESC CMP #2,WINDFLAG
 BEQ TEKEY25

 MOVE.L TEMPADR,A0
 CLR SELSTART(A0)
 CLR SELEND(A0)
 CLR TETXTEND(A0)

 MOVE.L HTEXT(A0),A1
 CLR.L D0
 MOVE TELENGTH(A0),D0
 SUB #1,D0
TEESC2 CLR.B (A1)+
 DBF D0,TEESC2
 JMP TEUPDATE

TEDEL MOVE.L TEMPADR,A0
 MOVE TETXTEND(A0),D0
 CMP SELSTART(A0),D0
 BEQ TEKEY25
 ADD #1,SELSTART(A0)
 JSR TEDELONE
 SUB #1,SELSTART(A0)
 JMP TEKEY25

TEINS MOVE.L TEMPADR,A0
 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 MOVE.L TEMPADR,A0
 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B #' ',(A1)
 JMP TEKEY25

TEINSK9 MOVE.L TEMPADR,A0

 MOVE TEMPKEY2,D0
 AND.L #$FF,D0
 BEQ TEKY99

 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEKEY25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEKEY31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE TEMPKEY2,D0
 TST UCMODE(A0)  ;Force Upper Case
 BEQ TEKEY25B
 CMP.B #'a',D0
 BLT TEKEY25B
 CMP.B #'z',D0
 BGT TEKEY25B
 SUB.B #32,D0
TEKEY25B MOVE.B D0,(A1)

 ADD #1,SELSTART(A0)
 ADD #1,TETXTEND(A0)
 JMP TEKEY25

TEKEY31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE TEMPKEY2,D0
 MOVE.B D0,(A1)

 ADD #1,SELSTART(A0)

TEKEY25 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),TESTART
 MOVE SELSTART(A0),SELEND(A0)
 MOVE #1,CARETTOG(A0)
 JSR TEWORDUP
 MOVE.L TEMPADR,A0
 JMP TEIDLE

* DELETE SELECTED TEXT
TEDELSEL MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

 MOVE.L TEMPADR,A0
 CLR.L D3
 MOVE SELEND(A0),D3
 SUB SELSTART(A0),D3
 SUB #1,D3

 CLR.L D1
 MOVE TETXTEND(A0),D1
 SUB SELSTART(A0),D1

TEK19 MOVE D1,D2

 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A1

TEK20 MOVE.B 1(A1),(A1)+
 DBF D2,TEK20

 SUB #1,TETXTEND(A0)
 DBF D3,TEK19

 MOVE SELSTART(A0),SELEND(A0)
 RTS

* INSERT ONE CHARACTER (' ') INTO BUFFER
TEINSONE MOVE.L TEMPADR,A0
 ADD #1,TETXTEND(A0)

 CLR.L D0
 MOVE TETXTEND(A0),D0
 SUB SELSTART(A0),D0

 CLR.L D1
 MOVE TETXTEND(A0),D1
 ADD.L HTEXT(A0),D1
 SUB.L #1,D1
 MOVE.L D1,A1

TEKEY32 MOVE.B (A1),1(A1)
 SUB.L #1,A1
 DBF D0,TEKEY32

 RTS

* DELETE ONE CHARACTER FROM BUFFER
TEDELONE MOVE.L TEMPADR,A0

 TST SELSTART(A0)
 BEQ TEKY99

 CLR.L D1
 MOVE TETXTEND(A0),D1
 SUB SELSTART(A0),D1

 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 SUB.L #1,D0
 MOVE.L D0,A1

TEK33 MOVE.B 1(A1),(A1)+
 DBF D1,TEK33

 SUB #1,TETXTEND(A0)

TEKY99 RTS

*-------------------TECUT--------------------
* Call TECUT to copy the selected range into the SCRAP buffer
* and delete the selected text.
TECUT MOVE A0,TEMPADR
 MOVE SELSTART(A0),TESTART
 MOVE SELEND(A0),TESTART2
 JSR TECOPY

 MOVE.L TEMPADR,A0
 MOVE TESTART,SELSTART(A0)
 MOVE TESTART2,SELEND(A0)

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECUT2

 JSR TEDELSEL

 MOVE TEYLOC,TESTART
 MOVE.L TEMPADR,A0
 JMP TEUPDATE

TECUT2 MOVE.L TEMPADR,A0
 JMP TEDNOCAR

*-------------------TECOPY--------------------
* Call TECOPY to copy the selected range into the SCRAP buffer.
* Unlike TECUT the selected text is not deleted.
TECOPY MOVE.L A0,TEMPADR
 JSR CLRSCRAP

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECOP99

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELSTART(A0),D0
 ADD.L HTEXT(A0),D0
 MOVE.L D0,A1

 CLR.L D1
 MOVE SELEND(A0),D1
 SUB SELSTART(A0),D1

 MOVE.L SCRAP,A2
 CLR.L D2
 MOVE SCRAPSZ,D2

TECOP10 TST.B (A1)
 BEQ TECOP99
 MOVE.B (A1)+,(A2)+
 SUB #1,D2
 BEQ TECOP99
 SUB #1,D1
 BNE TECOP10

TECOP99 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),SELEND(A0)
 RTS

*-------------------TEPASTE--------------------
* Call TEPASTE to insert text in the SCRAP buffer at the
* insertion point.  If a range of text has been selected
* it will be replaced with the contents of the SCRAP buffer.
TEPASTE MOVE.L A0,TEMPADR

 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BNE TEPA10

 MOVE.L TEMPADR,A0
 JSR TEDNOCAR
 JMP TEPA11

TEPA10 JSR TEDELSEL

TEPA11 MOVE.L SCRAP,TEMPADR2

TEPA20 MOVE.L TEMPADR2,A2
 TST.B (A2)
 BEQ TEPA25

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEPA25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEPA31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B (A2),(A1)

 ADD.L #1,TEMPADR2
 ADD #1,SELSTART(A0)
 ADD #1,TETXTEND(A0)
 JMP TEPA20

TEPA31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE.L TEMPADR2,A2
 MOVE.B (A2),(A1)

 ADD #1,SELSTART(A0)
 ADD.L #1,TEMPADR2
 JMP TEPA20

TEPA25 MOVE.L TEMPADR,A0
 MOVE TEYLOC,TESTART
 MOVE SELSTART(A0),SELEND(A0)
 JMP TEWORDUP

*-------------------TEDELETE--------------------
* Call TEDELETE to remove the selected range of text.
* This is the same as TECUT except that it doesn't copy the
* selected range to the SCRAP buffer.
TEDELETE MOVE.L A0,TEMPADR

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TEDEL90

 JSR TEDELSEL
 JMP TEUPDATE

TEDEL90 RTS

*-------------------TEINSERT--------------------
* Call TEInsert to take the text pointed to in A1 and
* insert it just before the selected range of text. The new
* text must be 0 terminated.  TEInsert doesn't affect either
* the current selected range or the SCRAP buffer.
TEINSERT MOVE.L A0,TEMPADR
 MOVE.L A1,TEMPADR2

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 TST D0
 BEQ TEINS19
 BMI TEINS20
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP TEINS20

TEINS19 MOVE.L TEMPADR,A0
 JSR TEDNOCAR

TEINS20 MOVE.L TEMPADR2,A2
 TST.B (A2)
 BEQ TEINS25

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TETXTEND(A0),D0
 CMP TELENGTH(A0),D0
 BCC TEINS25

 MOVE TETXTEND(A0),D1
 CMP SELSTART(A0),D1
 BNE TEINS31

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1
 MOVE.B (A2),(A1)

 ADD.L #1,TEMPADR2
 ADD #1,SELSTART(A0)
 ADD #1,SELEND(A0)
 ADD #1,TETXTEND(A0)
 JMP TEINS20

TEINS31 ADD #1,SELSTART(A0)
 JSR TEINSONE
 SUB #1,SELSTART(A0)

 CLR.L D1
 MOVE SELSTART(A0),D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 MOVE.L TEMPADR2,A2
 MOVE.B (A2),(A1)

 ADD #1,SELSTART(A0)
 ADD #1,SELEND(A0)
 ADD.L #1,TEMPADR2
 JMP TEINS20

TEINS25 MOVE TEYLOC,TESTART
 JSR TEWORDUP

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ TEINS26
 BMI TEINS26
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

TEINS26 RTS

*-------------------TEGETLEN--------------------
* Call TEGETLEN to get the size of the contents of the
* SCRAP buffer.
TEGETLEN MOVE.L A0,TEMPADR

 MOVE.L SCRAP,A1
 CLR.L D0
TEGLN10 ADD #1,D0
 TST.B (A1)+
 BNE TEGLN10
 SUB #1,D0
 RTS

*-------------------TECLICK--------------------
* Call TECLICK when a mouse-down AES event occurs.  TECLICK controls
* the placement and highlighting of the selection range.  Double clicking
* the mouse selects a word.

TECLICK MOVE.L A0,TEMPADR
 MOVE.L HTEXT(A0),A1
 TST.B (A1)
 BEQ TECL82

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TEPOINT
 TST D0
 BNE TECL99

 MOVE INTOUT+2,TEXHOLD
 MOVE INTOUT+4,TEYHOLD
 MOVE INTOUT+12,TEMPKEY

 MOVE.L TEMPADR,A0
 MOVE SELSTART(A0),D0
 CMP SELEND(A0),D0
 BEQ TECLI1

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT
 JMP TECLI2

TECLI1 MOVE.L TEMPADR,A0
 JSR TEDNOCAR

TECLI2 MOVE TEXHOLD,D0
 MOVE TEYHOLD,D1
 JSR TELOC
 MOVE.L TEMPADR,A0
 MOVE D0,TEANCHOR
 MOVE D0,SELSTART(A0)
 MOVE D0,SELEND(A0)
 MOVE #1,CARETTOG(A0)

 CMP #2,TEMPKEY
 BEQ TECLWORD

 MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #7,INTIN
 JSR AES

TECL20 CLR TEFLAG

 JSR MKSTATE
 MOVE INTOUT+6,D0
 AND.L #1,D0
 TST D0
 BEQ TECL80

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TEPOINT
 TST D0
 BNE TECL20

 MOVE INTOUT+2,D0
 MOVE INTOUT+4,D1
 JSR TELOC
 CMP TEANCHOR,D0
 BEQ TECL20
 BCS TEBACKUP

 MOVE D0,D1
 MOVE.L TEMPADR,A0
 MOVE D0,SELEND(A0)
 SUB TEANCHOR,D0
 MOVE D0,TEMPHOLD
 MOVE TEANCHOR,TEMPKEY
 MOVE D1,TEANCHOR

 JSR TEHIGHLT
 JMP TECL20

TEBACKUP MOVE D0,D1
 MOVE.L TEMPADR,A0
 MOVE D0,SELEND(A0)
 MOVE D0,TEMPKEY
 MOVE TEANCHOR,D1
 SUB D0,D1
 MOVE D1,TEMPHOLD
 MOVE D0,TEANCHOR

 JSR TEHIGHLT
 JMP TECL20

TECL80 MOVE.L TEMPADR,A0

 CLR.L D0
 MOVE SELEND(A0),D0
 CMP SELSTART(A0),D0
 BCC TECL81

 MOVE SELSTART(A0),D0
 MOVE SELEND(A0),SELSTART(A0)
 MOVE D0,SELEND(A0)

TECL81 MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 CLR INTIN
 JMP AES

TECL82 RTS

* SELECT A WORD

TECLWORD TST D0
 BEQ TECLW11

 CLR.L D1
 MOVE D0,D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 CMP.B #'A',(A1)
 BLT TECLWLEE
 CMP.B #'Z',(A1)
 BLE TECLWLEE2

TECLWLEE CMP.B #'a',(A1)
 BLT TECLW10
 CMP.B #'z',(A1)
 BGT TECLW10

 CMP.B #13,(A1)
 BEQ TECLW10
 CMP.B #' ',(A1)
 BEQ TECLW10
TECLWLEE2 SUB #1,D0
 JMP TECLWORD

TECLW10 ADD #1,D0
TECLW11 MOVE D0,SELSTART(A0)

TECLW12 CMP TETXTEND(A0),D0
 BEQ TECLW14

 CLR.L D1
 MOVE D0,D1
 ADD.L HTEXT(A0),D1
 MOVE.L D1,A1

 CMP.B #'A',(A1)
 BLT TECLWLEEA
 CMP.B #'Z',(A1)
 BLE TECLWLEEB

TECLWLEEA CMP.B #'a',(A1)
 BLT TECLW14
 CMP.B #'z',(A1)
 BGT TECLW14

 CMP.B #' ',(A1)
 BEQ TECLW14
 CMP.B #13,(A1)
 BEQ TECLW14
TECLWLEEB ADD #1,D0
 JMP TECLW12

TECLW14 MOVE D0,SELEND(A0)

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 BEQ TECL99
 BMI TECL99
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JSR TEHIGHLT

TECLW15 JSR MKSTATE
 MOVE INTOUT+6,D0
 AND.L #1,D0
 TST D0
 BNE TECLW15
 RTS

* HIGHLIGHT A RANGE OF CHARACTERS
* TEMPKEY  = STARTING CHARACTER #
* TEMPHOLD = # OF CHARACTERS
TEHIGHLT DC $A00A

TEHIGH2 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 JSR TRANSXOR

 CLR TECOUNT
 CLR.L D0
 MOVE.L TEMPADR,A0
 MOVE.L TEMPADR,A1
 ADD.L #2,A1

TECL72 TST LINESTRT(A1)
 BMI TECL74

 MOVE TEMPKEY,D0
 CMP LINESTRT(A1),D0
 BEQ TECL73
 BCS TECL74

TECL73 ADD.L #2,A1
 ADD #1,TECOUNT
 CMP #24,TECOUNT
 BCS TECL72

 CLR TECOUNT
 MOVE.L TEMPADR,A1
 ADD.L #2,A1

TECL74 CLR.L D0
 MOVE.L TEMPADR,A0
 SUB.L #2,A1
 MOVE TEMPKEY,D0
 SUB LINESTRT(A1),D0
 MULU TEXSIZE(A0),D0
 ADD VIEWRECT(A0),D0
 ADD TEXOFF(A0),D0

 CLR.L D1
 MOVE TECOUNT,D1
 MULU LINEHIGH(A0),D1
 ADD VIEWRECT+2(A0),D1
 ADD TEYOFF(A0),D1

 MOVE D0,D2
 ADD TEXSIZE(A0),D2
 SUB #1,D2
 MOVE D1,D3
 ADD LINEHIGH(A0),D3
 SUB #1,D3

 CLR.L D4
 MOVE VIEWRECT+2(A0),D4
 ADD VIEWRECT+6(A0),D4
 CMP D3,D4
 BCS TECL98

 JSR RECTANGLE

TECL98 ADD #1,TEMPKEY
 SUB #1,TEMPHOLD
 TST TEMPHOLD
 BNE TEHIGH2
 DC $A009
 RTS

TECL99 RTS

* TEST POINT TO BE INSIDE VIEWRECT, D0=X D1=Y
* RETURNS D0=1 IF OUTSIDE
TEPOINT MOVE.L TEMPADR,A0
 CLR.L D2

 MOVE VIEWRECT(A0),D2
 ADD TEXOFF(A0),D2
 CMP D2,D0
 BCC TEP2
 MOVE #1,D0
 RTS

TEP2 MOVE VIEWRECT(A0),D2
 ADD VIEWRECT+4(A0),D2
 ADD TEXOFF(A0),D2
 CMP D0,D2
 BCC TEP3
 MOVE #1,D0
 RTS

TEP3 MOVE VIEWRECT+2(A0),D2
 ADD TEYOFF(A0),D2
 CMP D2,D1
 BCC TEP4
 MOVE #1,D0
 RTS

TEP4 MOVE VIEWRECT+2(A0),D2
 ADD VIEWRECT+6(A0),D2
 SUB TEYOFF(A0),D2
 CMP D1,D2
 BCC TEP5
 MOVE #1,D0
 RTS

TEP5 CLR.L D0
 RTS

* CONVERTS X & Y SCREEN COORD OF MOUSE
* INTO CHAR OFFSET INTO TEXT BUFFER
* ON ENTRY SET D0 = Y LOC  D1 = X LOC  OF MOUSE
* RETURNS D0 = CHAR OFFSET   A1=ADR OF LINESTRT VALUE
TELOC MOVE D0,TEXHOLD
 MOVE D1,TEYHOLD

 MOVE.L TEMPADR,A0
 CLR.L D0
 MOVE TEYHOLD,D0
 SUB VIEWRECT+2(A0),D0
 DIVU LINEHIGH(A0),D0
 AND.L #255,D0
 MULU #2,D0
 ADD.L TEMPADR,D0
 MOVE.L D0,A1

 TST LINESTRT(A1)
 BMI TECL10

 CLR.L D1
 MOVE TEXHOLD,D1
 SUB VIEWRECT(A0),D1
 SUB TEXOFF(A0),D1
 DIVU TEXSIZE(A0),D1
 AND.L #255,D1
 MOVE.L D1,D3
 ADD LINESTRT(A1),D3

 TST LINESTRT+2(A1)
 BMI TECL15

 CLR.L D2
 MOVE LINESTRT+2(A1),D2
 CMP D3,D2
 BEQ TECL40
 BCS TECL40

 ADD LINESTRT(A1),D1
 MOVE D1,D0
 RTS

TECL40 SUB #1,D2
 MOVE D2,D0
 RTS

TECL15 CMP TETXTEND(A0),D3
 BCC TECL10
 MOVE D3,D0
 RTS

TECL10 MOVE TETXTEND(A0),D0
 RTS

*-------------------------TEDEACT---------------------------
* Call TEDEACT to deactivate the Text Edit object

TEDEACT MOVE.L A0,TEMPADR

 CLR.L D0
 MOVE SELEND(A0),D0
 SUB SELSTART(A0),D0
 TST D0
 BEQ TEDEA2
 BMI TEDEA2
 MOVE D0,TEMPHOLD
 MOVE SELSTART(A0),TEMPKEY
 JMP TEHIGHLT

TEDEA2 MOVE.L TEMPADR,A0
 JMP TEDNOCAR

*------------------TENOCAR--------------------
* Call TENOCAR to hide the CARET before any screen update
TEDNOCAR MOVE.L A0,TEMPADR
 MOVE CARETVAL(A0),D0
 AND #1,D0
 BEQ TEDACT99
 JMP TEIDLE20
TEDACT99 RTS

*------------------CLEAR SCRAP BUFFER-------------------
CLRSCRAP MOVE.L SCRAP,A0  ;CLEAR SCRAP BUFFER
 MOVE SCRAPSZ,D0
 SUB #1,D0
CLRSCRA2 CLR.B (A0)+
 DBF D0,CLRSCRA2
 RTS

******************** TEXTEDIT SUBROUTINE LIBRARY **********************

*---------SET FILL COLOR INDEX-----------

SETCOLOR MOVE #25,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;COLOR REG
 JMP VDI

*--------SET FILL INTERIOR STYLE---------

SETFILL MOVE #23,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;0=HALLOW 1=SOLID 2=PATTERN 3=HATCH 4=USER DEF
 JMP VDI

*--------SET FILL PERIMETER FLAG---------

FILLPERI MOVE #104,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*---------SET FILL STYLE INDEX-----------

SETINDEX MOVE #24,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN   ;SEE PG 5-33 OF GEM MANUAL
 JMP VDI

*---------DRAW FILLED RECTANGLE----------

RECTANGLE MOVE #114,CONTRL
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN   ;X1
 MOVE D1,PTSIN+2 ;Y1
 MOVE D2,PTSIN+4 ;X2
 MOVE D3,PTSIN+6 ;Y2
 JMP VDI

*-------------SET LINE TYPE--------------

LINETYPE MOVE #15,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------------SET USER LINE--------------

LINESTYL MOVE #113,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*------------SET LINE WIDTH--------------

LINEWIDE MOVE #16,CONTRL
 MOVE #1,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 CLR PTSIN+2
 JMP VDI

*------------SET LINE MARKER-------------

LINEMARK MOVE #18,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*------------SET LINE END-------------

LINEEND MOVE #108,CONTRL
 CLR CONTRL+2
 MOVE #2,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 MOVE D1,INTIN+2
 JMP VDI

*-------------DRAW POLYLINE--------------

DRAWPOLY MOVE #6,CONTRL
 MOVE #5,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2

 MOVE D0,PTSIN+4
 ADD D2,PTSIN+4
 MOVE D1,PTSIN+6

 MOVE D0,PTSIN+8
 ADD D2,PTSIN+8
 MOVE D1,PTSIN+10
 ADD D3,PTSIN+10

 MOVE D0,PTSIN+12
 MOVE D1,PTSIN+14
 ADD D3,PTSIN+14

 MOVE D0,PTSIN+16
 MOVE D1,PTSIN+18

 JMP VDI

*-------------DRAW POLYLINE MARKER--------------

DMXSIZE EQU 5
DMYSIZE EQU 2

DRAWMARK SUB #2,D0
 SUB #2,D2
 SUB #2,D3

 MOVE D0,DMORG
 MOVE D1,DMORG+2
 MOVE D2,DMORG+4
 MOVE D3,DMORG+6

 JSR TRANSRV
 MOVE #1,D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 DC $A00A

 MOVE DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 LSR #1,D0
 ADD DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 LSR #1,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG+4,D0
 LSR #1,D0
 ADD DMORG,D0
 MOVE DMORG+6,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG,D0
 MOVE DMORG+2,D1
 ADD DMORG+6,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 MOVE DMORG,D0
 MOVE DMORG+6,D1
 LSR #1,D1
 ADD DMORG+2,D1
 MOVE #DMXSIZE,D2
 MOVE #DMYSIZE,D3
 JSR DORECT

 DC $A009
 RTS

DORECT ADD D0,D2
 ADD D1,D3
 JMP RECTANGLE

*-----------------DRAW LINE-------------------

DRAWLINE MOVE #6,CONTRL
 MOVE #2,CONTRL+2
 CLR CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D0,PTSIN+4
 MOVE D1,PTSIN+6
 ADD D3,PTSIN+6
 JMP VDI

TEXTINIT CLR D0
 JSR GEMFX
 MOVE #9,D0
 CMP #2,GRMODE
 BNE ELTON
 MOVE #10,D0
ELTON JSR GEMTSIZE
 MOVE #1,D0
 JMP GEMCOLOR

*--------------SET DRAWING COLOR--------------

GEMCOLR MOVE #17,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*---------SET VDI DRAWING TO MODE TO XOR-------

TRANSXOR MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #3,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO OVERWRITE------

TRANSOFF MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #1,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO TRANSPARENT------

TRANSON MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #2,INTIN
 JMP VDI

*-------SET VDI DRAWING TO MODE TO REVERSE------

TRANSRV MOVE #32,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #3,INTIN
 JMP VDI

*-------------TURN OFF CLIPPING----------

NOCLIP MOVE #129,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 CLR INTIN
 JMP VDI

*-------------TURN CLIPPING ON----------

SETCLIP MOVE #129,CONTRL
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE #1,INTIN
 MOVE D0,PTSIN
 MOVE D1,PTSIN+2
 MOVE D2,PTSIN+4
 MOVE D3,PTSIN+6
 JMP VDI

*------SET EFFECTS FOR VDI TEXT CALLS--------
* 0-BOLD 1-INTENSITY 2-ITALICS 3-UNDERLINE 4-OUTLINE 5-SHADOW

GEMFX MOVE #106,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------SET SIZE FOR VDI TEXT CALLS---------
* D0 = POINT SIZE

GEMTSIZE MOVE #107,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*-------SET COLOR FOR VDI TEXT CALLS---------
* D0 = COLOR #

GEMCOLOR MOVE #22,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 MOVE D0,INTIN
 JMP VDI

*----------ENABLE/DISABLE ALL MOUSE FUNCTIONS-----------
WIND_UPDATE MOVE #107,CONTRL
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE D0,INTIN
 JMP AES

*-----------------SYSTEM CALLS-----------------

AES MOVE.L #AESPB,D1  ;CALL AES
 MOVE.L #200,D0
 TRAP #2
 RTS

VDI MOVE.L #VDIPB,D1  ;CALL VDI
 MOVE.L #$73,D0
 TRAP #2
 RTS

*-------------GEM PARAMETER BLOCKS--------------

AESPB DC.L CONTRL,GLOBAL,INTIN,INTOUT,ADDRIN,ADDROUT
VDIPB DC.L CONTRL,INTIN,PTSIN,INTOUT,PTSOUT

******************************************************************
*                   End of TextEdit library                      *
******************************************************************

*--------------GEM RELATED EQUATES--------------

OBSIZE EQU 24  ;BYTES PER OBJECT STRUCTURE

OB_NEXT EQU 0  ;OBJECT OFFSETS
OB_HEAD EQU 2
OB_TAIL EQU 4
OB_TYPED EQU 6
OB_FLAGS EQU 8
OB_STATE EQU 10
OB_SPEC EQU 12
OB_X EQU 16
OB_Y EQU 18
OB_WDTH EQU 20
OB_HGHT EQU 22

TEDSIZE EQU 28   ;SIZE OF EACH TEDINFO STRUCTURE

TE_PTEXT EQU 0   ;TEDINFO OFFSETS
TE_PTMPLT EQU 4
TE_PVALID EQU 8
TE_FONT EQU 12
TE_RESVD EQU 14
TE_JUST EQU 16
TE_COLOR EQU 18
TE_RESV2 EQU 20
TE_THICK EQU 22
TE_TXLEN EQU 24
TE_TMPLN EQU 26

************
* GETEVENT *
************

GT_EVENT MOVE #25,CONTRL
 MOVE #16,CONTRL+2
 MOVE #7,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #$33,INTIN   ;KEY - MOUSE  - MESAGE - TIMER
 MOVE #2,INTIN+2
 MOVE #1,INTIN+4
 MOVE #1,INTIN+6
 MOVE #200,INTIN+28
 MOVE #0,INTIN+30
 MOVE.L #EVMESG,ADDRIN
 JSR AES
 MOVE INTOUT,EVWHICH
 MOVE INTOUT+2,EVXPOS
 MOVE INTOUT+4,EVYPOS
 MOVE INTOUT+6,EVBUTN
 MOVE INTOUT+8,EVSTATE
 MOVE INTOUT+10,EVKEY
 MOVE INTOUT+12,EVBSTAT
 MOVE INTOUT+14,EVHEIGH
 RTS

EVMESG DC.L 0,0,0,0,0,0
EVWHICH DC 0
EVXPOS DC 0
EVYPOS DC 0
EVBUTN DC 0
EVSTATE DC 0
EVKEY DC 0
EVBSTAT DC 0
EVHEIGH DC 0

GT_MESSAGE MOVE #23,CONTRL
 CLR CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE.L #EVMESG,ADDRIN
 JMP AES

****************************
* SET MOUSE IMAGE AND SHOW *
* D0 = IMAGE               *
****************************
* 0-ARROW 1-TEXT CURSOR 2-BUSYBEE 3-FINGER 4-HAND 5-THIN CROSS
* 6-THICK CROSS 7-OUTLINE CROSS
SHWMOUSE MOVE #78,CONTRL ;GRAF_MOUSE
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE D0,INTIN ;MOUSE IMAGE
 CLR.L ADDRIN
 JSR AES
 DC $A009  ;SHOW MOUSE
 RTS

********************************
* GET ADDRESS OF TREE RESOURCE *
* D0 = TREE NUMBER             *
* A0 RETURNS ADDRESS           *
********************************

GADDR CLR INTIN
 JMP GADDR3

GADDR2 MOVE #5,INTIN

GADDR3 MOVE #112,CONTRL  ;RSRC_GADDR
 MOVE #2,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 MOVE #1,CONTRL+8
 MOVE D0,INTIN+2
 JSR AES
 MOVE.L ADDROUT,A0
 RTS

GEMXPOS DC 0
GEMYPOS DC 0
GEMWIDTH DC 0
GEMHOEHE DC 0

******************
* LOAD PATH INFO *
******************

GETPATH MOVE.L #39,D0
 LEA PATHNAME,A0
FPATHC CLR.B (A0)+
 DBF D0,FPATHC

 LEA FPATH,A0
 JSR F_OPEN
 TST D0
 BPL FPATHNE
 LEA NOPATH,A0
 JSR DOALERT
 JMP DOQUIT

NOPATH DC.B '[3][Cannot find the|PATH.TBL file.!][  Ok  ]',0,0
 EVEN

FPATHNE MOVE D0,FHANDLE

 MOVE D0,A0
 MOVE.L #PATHNAME,A1
 MOVE.L #39,D0
 JSR F_READ

 MOVE.B PATHNAME,D0
 CMP.B #10,D0
 BNE FPATHE

 MOVE.L #38,D0
 LEA PATHNAME,A0
FPATHD MOVE.B 1(A0),(A0)
 ADD.L #1,A0
 DBF D0,FPATHD

FPATHE MOVE FHANDLE,A0
 JMP F_CLOSE

*******************************
* ADD PATH TO FILE NAME IN A0 *
*******************************

ADDPATH MOVEM.L A1-A4/D0-D2,-(A7)

 LEA PTHNM,A1
 MOVE.L #39,D0
ADDP100 CLR.B (A1)+
 DBF D0,ADDP100

 MOVE.L #39,D1
 LEA PATHNAME,A1
 LEA PTHNM,A2
ADDP101 MOVE.B (A1)+,D0
 CMP.B #' ',D0
 BEQ ADDP102
 CMP.B #13,D0
 BEQ ADDP102
 TST.B D0
 BEQ ADDP102
 MOVE.B D0,(A2)+
 DBF D1,ADDP101

ADDP102 MOVE.B (A0)+,D0
 CMP.B #13,D0
 BEQ ADDP103
 TST.B D0
 BEQ ADDP103
 MOVE.B D0,(A2)+
 DBF D1,ADDP102

ADDP103 LEA PTHNM,A0
 MOVEM.L (A7)+,A1-A4/D0-D2
 RTS

*------------------------DISK I/O ERROR--------------------------

DISK_ERR MOVEM.L A0-A4,-(A7)

 MOVE.L ERRDLG,A1
 ADD.L #ERMES2*OBSIZE,A1
 MOVE.L A0,OB_SPEC(A1)

 TST D0
 BEQ DE6

 CLR.L D1
 SUB.L D0,D1
 CMP #18,D1
 BCC DE2

 SUB #1,D1
 ADD #IOERR1,D1
 JMP DEPRINT

DE2 CMP #32,D1
 BCS DE3
 CMP #41,D1
 BCC DE3
 SUB #32,D1
 ADD #IOERR2,D1
 JMP DEPRINT

DE3 CMP #64,D1
 BCS DE4
 CMP #68,D1
 BCC DE4
 SUB #64,D1
 ADD #IOERR5,D1
 JMP DEPRINT

DE4 CMP #46,D1
 BNE DE5
 MOVE #IOERR3,D1
 JMP DEPRINT
DE5 CMP #49,D1
 BNE DE6
 MOVE #IOERR4,D1
 JMP DEPRINT

DE6 MOVE #IOERR6,D1

DEPRINT MOVE.L ERRDLG,A0
 ADD.L #ERMES*OBSIZE,A0

 MULU #OBSIZE,D1
 ADD.L IOERRADR,D1
 MOVE.L D1,A1
 MOVE.L OB_SPEC(A1),OB_SPEC(A0)

 MOVE.L ERRDLG,A0
 ADD.L #ERRETRY*OBSIZE,A0
 CLR OB_STATE(A0)

 MOVE.L ERRDLG,A0
 ADD.L #ERCANCEL*OBSIZE,A0
 CLR OB_STATE(A0)

 CLR D0
 JSR SHWMOUSE

 MOVE.L ERRDLG,A0
 MOVE #-1,D0
 JSR FORMDO

 MOVE #-2,D0
 CMP #ERRETRY,SAVERTRN
 BEQ DE7
 MOVE #-1,D0

DE7 MOVEM.L (A7)+,A0-A4
 RTS

NOERRMES DC.B '---',0
 EVEN

*----------DO AN ALERT---------

BADMODE MOVE.L MODMESADR,A0
 JSR DOALERT
 JMP QUIT2

NOMEM MOVE.L NMEMMESADR,A0
 JSR DOALERT
 JMP QUIT3

NOCHANGES MOVE.L NCMESADR,A0
 JSR DOALERT
 JMP MAINLOOP

DOALERT MOVE #52,CONTRL
 MOVE #1,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #1,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE.L A0,ADDRIN
 JMP AES

TESTPOINT LEA TSTMES,A3
 JSR CONV2DEC
 LEA TSTMES,A0
 JSR STRING

WAIT_KEY MOVE #7,-(A7)
 TRAP #1
 ADD.L #2,A7
 RTS

STRING MOVE.L A0,-(A7)
 MOVE #9,-(A7)
 TRAP #1
 ADD #6,A7
 RTS

TSTMES DC.B '0000',0
 EVEN

*--------------TEXT STORAGE--------------

SCRAPNAME DC.B 'CLIPBORD.SYS',0
 EVEN
RSCNAME DC.B 'BASERT.RSC',0
 EVEN
OKMES DC.B 'Ok.',0
 EVEN
FSELMES2 DC.B '*.TXT',0
FSELMES3 DC.B '*.FRM',0
 EVEN
FPATH DC.B 'PATH.TBL',0
 EVEN
FHEAD DC.B 'FRM2'
FTEST  DC.B '    '
 EVEN
MT1 DC.B 'FORMS.PRG',0
MT2 DC.B 'SORT.PRG',0
MT3 DC.B 'MENU.PRG',0
MT4 DC.B 'UTIL.PRG',0
 EVEN

**********************************************
* STRUCTURE QUERY LANGUAGE COMMAND PROCESSOR *
* ------------ by Frank Cohen -------------- *
*           Version 1.02 (c) 122287          *
**********************************************

*SQL Errors
*290 No more commands
*291 Unknown command
*292 No fields defined for sort
*293 Syntax error
*294 Disk I/O Error
*295 Cannot use CURRENT before selecting a record
*296 Invalid table name
*297 Expecting a SET clause
*298 No records found
*299 Table already exists
*300 Invalid field name
*301 Invalid field type
*302 Range must be 1 to 32000
*303 Size must be larger than extension value
*304 Field already defined
*305 Disk error while creating table file
*306 Indexes already defined for this table
*307 Cannot drop this table because it has not been defined
*308 Field not defined
*309 Field already indexed
*310 Disk error while creating index file
*311 Cannot drop indexes for this table because no indexes have been defined
*312 Selecting first record in table
*313 Variable already defined
*314 Output device unknown
*315 Aggregate function not allowed on character or date field
*316 Illegal label definition
*317 Unknown label
*318 Expecting a THEN clause
*319 Label already defined

STARTSQL JSR INITSQL
 CLR CURSX
 CLR ERRORX
 CLR SHOWESC
 MOVE #-1,ONERRX

 MOVE.L STR_LBL,A0
 MOVE.L BUF_LBL,A1
 JSR FINDLABELS
 TST D0
 BMI SQL_ERROR

 CLR CURSX
 CLR ERRORX

DOSEQUEL MOVE CURSX,ERRORX
 JSR FINDCHAR
 TST D0
 BMI SQL_DONE

 MOVE CURSX,ERRORX
 MOVE #293,D7
 JSR GETNAME
 TST D0
 BMI DOSQL2
 JSR FINDCHAR
 TST D0
 BMI DOSQL2
 CMP.B #':',D0
 BNE DOSQL2
 JSR MOVERT
 TST D0
 BPL DOSQL3

DOSQL2 MOVE FHOLDX,CURSX

DOSQL3 JSR LDCACHE
 TST D0
 BMI SQL_ERROR

 CLR AP_FLAG ;Append flag

 JSR ED_CALC
 TST.B (A0)
 BEQ SQL_DONE

 MOVE #247,D7
 JSR KEYSTOP
 TST D0
 BNE SQL_ERROR

 JSR FINDWORD
 CMP #5,D3
 BEQ DOSELECT
 CMP #4,D3
 BEQ DOREORG
 CMP #8,D3
 BEQ DODEL
 CMP #9,D3
 BEQ DOUPDATE
 CMP #7,D3
 BEQ DOINSERT
 CMP #79,D3
 BEQ DOAPPEND
 CMP #0,D3
 BEQ DOCREATE
 CMP #3,D3
 BEQ DODROP
 CMP #86,D3
 BEQ DOSORT
 CMP #2,D3
 BEQ DODEFINE
 CMP #71,D3
 BEQ DOLET
 CMP #11,D3
 BEQ DOPRINT
 CMP #10,D3
 BEQ DOFORMAT
 CMP #51,D3
 BEQ DOOUTPUT
 CMP #92,D3
 BEQ DOSHOW
 CMP #68,D3
 BEQ DOCLEAR
 CMP #87,D3
 BEQ SQL_DONE
 CMP #62,D3
 BEQ DOGOTO
 CMP #64,D3
 BEQ DOIFTHEN
 CMP #77,D3
 BEQ DOBELL
 CMP #75,D3
 BEQ DOREM
 CMP #76,D3
 BEQ DOREM
 CMP #95,D3
 BEQ DOPAUSE
 CMP #61,D3
 BEQ DOREPORT
 CMP #78,D3
 BEQ DOTITLE
 CMP #96,D3
 BEQ DOFORCE
 CMP #63,D3
 BEQ DOONERR
 CMP #60,D3
 BEQ DOUSER
 CMP #81,D3
 BEQ DOEDITOB
 CMP #25,D3
 BEQ DOSET
 CMP #66,D3
 BEQ DORETURN
 CMP #83,D3
 BEQ DOSYSTEM
 CMP #97,D3
 BEQ DOGEM
 CMP #82,D3
 BEQ DOGEM
 CMP #67,D3
 BEQ DORUN
 CMP #57,D3
 BEQ DOACTIVITY
 CMP #98,D3
 BEQ DOPAGER
 CMP #99,D3
 BEQ DOFILECOPY
 CMP #100,D3
 BEQ DOFILEDEL

 MOVE #290,D7
 CMP #83,D3  ;SYSTEM
 BEQ SQL_ERROR

 MOVE #291,D7
 JMP SQL_ERROR

*--------------Hide/Show Pager Icon--------------*

DOPAGER MOVE #1,PAGEICON
 JSR FINDWORD
 CMP #58,D3
 BEQ DOPAG2
 CMP #59,D3
 BNE SQL_ERROR
 CLR PAGEICON

 JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI
 MOVE.L PAGEADR,A0
 MOVE OB_X(A0),D0
 MOVE OB_Y(A0),D1
 MOVE D0,D2
 MOVE D1,D3
 ADD OB_WDTH(A0),D2
 ADD OB_HGHT(A0),D3
 SUB #1,D3
 JSR RECTANGLE
 JMP FINDTERM

DOPAG2 JSR UPDATE
 JMP FINDTERM

*--------------Force--------------*
DOFORCE MOVE #1,FORCED

 MOVE #1,CACHE
 JSR LDCACHE
 TST D0
 BMI SQL_ERROR
 JMP FINDTERM

FORCED DC 0

*--------------Reorganize--------------*
* Syntax: REORGANIZE tablename;

DOREORG JSR GETNAME
 TST D0
 BMI SQL_ERROR

 LEA TABLENM,A0
 JSR REORGANIZE
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

*--------------File Copy--------------*
* Syntax: COPY sourcefilename,destfilename;

DOFILECOPY MOVE #296,D7 ;Tablename
 MOVE #1,NAMEFLAG
 JSR GETNAME
 CLR NAMEFLAG
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 JSR FINDCHAR
 CMP.B #',',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE #79,D0
 LEA TABLENM,A0
DOFC100 MOVE.B (A0)+,D1
 CMP.B #'\',D1
 BEQ DOFC101
 TST.B D1
 BEQ DOFC103
 DBF D0,DOFC100

DOFC103 LEA TABLENM,A0
 JSR ADDPATH
 JMP DOFC104

DOFC101 LEA TABLENM,A0
DOFC104 MOVE #79,D0
 LEA TABLENM2,A1
DOFC102 MOVE.B (A0)+,(A1)+
 DBF D0,DOFC102

 MOVE #1,NAMEFLAG
 JSR GETNAME
 CLR NAMEFLAG
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 MOVE #79,D0
 LEA TABLENM,A0
DOFC105 MOVE.B (A0)+,D1
 CMP.B #'\',D1
 BEQ DOFC108
 TST.B D1
 BEQ DOFC106
 DBF D0,DOFC105

DOFC106 LEA TABLENM,A0
 JSR ADDPATH
 MOVE #79,D0
 LEA TABLENM,A1
DOFC107 MOVE.B (A0)+,(A1)+
 DBF D0,DOFC107

DOFC108 MOVE #233,D7

 LEA TABLENM,A0
 JSR F_DELETE
DOFC109 LEA TABLENM,A0
 JSR F_CREATE
 TST D0
 BPL DOFC110
 LEA TABLENM,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOFC109
 JMP SQL_ERROR

DOFC110 MOVE D0,FHANDLE

DOFC111 LEA TABLENM2,A0
 JSR F_OPEN
 TST D0
 BPL DOFC112
 LEA TABLENM2,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOFC111
 JMP SQL_ERROR

DOFC112 MOVE D0,FHANDLE2

DOFC113 MOVE FHANDLE2,A0
 MOVE.L Q_HEAP,A1
 MOVE.L Q_SIZE,D0
 JSR F_READ
 MOVE.L D0,DOFC_SIZE
 TST.L D0
 BEQ DOFC115
 BPL DOFC114
 LEA NOERRMES,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOFC113
 JMP SQL_ERROR

DOFC114 MOVE FHANDLE,A0
 MOVE.L Q_HEAP,A1
 MOVE.L DOFC_SIZE,D0
 JSR F_WRITE
 CMP.L DOFC_SIZE,D0
 BEQ DOFC113
 LEA NOERRMES,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOFC114
 JMP SQL_ERROR

DOFC115 MOVE FHANDLE,A0
 JSR F_CLOSE
 MOVE FHANDLE2,A0
 JSR F_CLOSE
 JMP FINDTERM

DOFC_SIZE DC.L 0

*--------------Append to--------------*
* Syntax: KILL filename;

DOFILEDEL MOVE #296,D7 ;Tablename
 MOVE #1,NAMEFLAG
 JSR GETNAME
 CLR NAMEFLAG
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 LEA TABLENM,A0
 MOVE #79,D0
 LEA TABLENM,A1
DOFD100 MOVE.B (A1)+,D1
 CMP.B #'\',D1
 BEQ DOFD102
 TST.B D1
 BEQ DOFD101
 DBF D0,DOFD100

DOFD101 LEA TABLENM,A0
 JSR ADDPATH

DOFD102 JSR F_DELETE
 JMP FINDTERM

*--------------Append to--------------*
* Syntax: APPEND TO tablename
*         SELECT field=expr FROM tablename2;

DOAPPEND MOVE #293,D7 ;Parse TO
 JSR FINDWORD
 CMP #52,D3
 BNE SQL_ERROR

 MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 MOVE #79,D0
 LEA TABLENM,A0
 LEA AP_NAME,A1
DOA_100 MOVE.B (A0)+,(A1)+
 DBF D0,DOA_100

 MOVE #1,AP_FLAG

 MOVE #293,D7 ;Parse SELECT
 JSR FINDWORD
 CMP #5,D3
 BNE SQL_ERROR

 JMP DOSELECT

DOS_APP MOVE.L AP_STR,A4  ;Insert a new record

 MOVE.L FVALU(A4),A0
 CLR.L D0
 MOVE FSIZE(A4),D0
 SUB #3,D0
APP_122 CLR.B (A0)+
 DBF D0,APP_122

 CLR.L D0
 MOVE FSIZE(A4),D0
 ADD.L FVALU(A4),D0
 SUB.L #2,D0
 MOVE.L D0,A0
 MOVE.B #13,(A0)
 MOVE.B #10,1(A0)

 TST FTYPE(A4)
 BEQ APP_126

 MOVE.L FINDX(A4),A0
 CLR.L D0
 MOVE FEXTR(A4),D0
 SUB #3,D0
APP_125 CLR.B (A0)+
 DBF D0,APP_125

 CLR.L D0
 MOVE FEXTR(A4),D0
 ADD.L FINDX(A4),D0
 SUB.L #2,D0
 MOVE.L D0,A0
 MOVE.B #13,(A0)
 MOVE.B #10,1(A0)

APP_126 MOVE.L STR_SEL,A4
 MOVE #293,D7

APP_200 CMP #1,FCONN(A4)
 BNE SQL_ERROR

 MOVE.L FVALU(A4),A2
 MOVE.L FINDX(A4),A3
 CLR.L D6
 MOVE FSIZE(A4),D6
 SUB #1,D6

APP_210 ADD.L #EV_FSZ,A4
 MOVE FCONN(A4),D0
 BEQ APP_202
 CMP #19,D0
 BNE APP_210

APP_202 TST FCALC(A4)
 BNE APP_213
 MOVE.L FNAME(A4),A0
 CMP #1,FTYPE(A4)
 BEQ APP_203
 CMP #3,FTYPE(A4)
 BEQ APP_203
APP_213 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ APP_203
 MOVE.L FVALU(A4),A0

APP_203 MOVE.L A0,A1
 MOVE D6,D2

APP_204 TST.B (A0)
 BEQ APP_205
 MOVE.B (A0)+,(A2)+
 DBF D6,APP_204
 JMP APP_215

APP_205 CLR.B (A2)+
 DBF D6,APP_205

APP_215 CMP.L #0,A3
 BEQ APP_217

APP_206 TST.B (A1)
 BEQ APP_207
 MOVE.B (A1)+,(A3)+
 DBF D2,APP_206
 JMP APP_217

APP_207 CLR.B (A3)+
 DBF D2,APP_207

APP_217 TST FCONN(A4)
 BEQ APP_300
 ADD.L #EV_FSZ,A4
 JMP APP_200

APP_300 MOVE.L AP_STR,A4
 MOVE FDISP(A4),A0
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL APP_302
 LEA APP_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

APP_302 TST FTYPE(A4)
 BEQ DOS_RCRS

 MOVE FIHND(A4),A0
 MOVE.L FINDX(A4),A1
 CLR D0
 MOVE FEXTR(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL DOS_RCRS
 LEA UPD_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

APP_DIS1 DC.B 'APPEND: Disk write error',0
 EVEN

*--------------Select--------------*
* Syntax: SELECT [CURRENT|[n]] expr,expr... FROM tablename [,tablename...]
*         [WHERE expr,expr...]
*         [ORDER BY tablename,tablename...]
*         [USE formatnumber]
*         [GROUP BY field,field...]

DOSELECT MOVE #$FFFF,REC_CNT
 CLR REC_CURNT

 JSR FINDWORD ;Parse CURRENT/NEXT/LAST/END
 CMP #72,D3
 BEQ DOS_CURNT
 CMP #55,D3
 BEQ DOS_NEXT
 CMP #56,D3
 BEQ DOS_LAST
 CMP #87,D3
 BEQ DOS_END
 MOVE FHOLDX,CURSX
 JMP DOS1

DOS_CURNT MOVE #1,REC_CURNT
 JMP DOS2
DOS_NEXT MOVE #2,REC_CURNT
 JMP DOS2
DOS_LAST MOVE #3,REC_CURNT
 JMP DOS2
DOS_END MOVE #4,REC_CURNT

DOS1 MOVE #246,D7  ;Parse [n]
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #'[',D0
 BNE DOS2
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JSR FINDVAL
 TST D0
 BEQ SQL_ERROR
 MOVE D0,REC_CNT
 MOVE #5,REC_CURNT
 MOVE #245,D7
 JSR FINDCHAR
 CMP.B #']',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

DOS2 JSR SELECT
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A2
DOS_TAGG TST FAGGR(A2)
 BNE DOS_TAG4
 CMP #1,FTYPE(A2)
 BEQ DOS_TAG4
 CMP #3,FTYPE(A2)
 BNE DOS_TAG2
DOS_TAG4 TST FCONN(A2)
 BNE DOS_TAG3
 MOVE #5,REC_CURNT
 MOVE #1,REC_CNT
 JMP DOS_TAG2
DOS_TAG3 ADD.L #EV_FSZ,A2
 JMP DOS_TAGG

DOS_TAG2 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL2,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0  ;Reset record pointers
 JSR RESETPTR

 MOVE REC_CURNT,D0
 CMP #1,D0
 BEQ DS_CURNT
 CMP #2,D0
 BEQ DS_NEXT
 CMP #3,D0
 BEQ DS_LAST
 CMP #4,D0
 BNE DOS_TIMD

 JSR F_SETDTA   ;End
 MOVE #230,D7
 MOVE.L STR_TBL,A4
 MOVE.L FVAL2(A4),A0
 JSR F_SFIRST
 TST D0
 BMI SQL_ERROR

 MOVE #234,D7
 MOVE.L FNAME(A4),A0
 CLR D1
 JSR CAL_ROW
 CMP #2,D0
 BEQ SQL_ERROR

 MOVE.L DTA+26,D1
 DIVU D0,D1
 MOVE D1,FRECN(A4)
 JMP DOS_TIME

DS_LAST MOVE #1,REC_CNT  ;Last
 MOVE.L STR_TBL,A0
 JSR LOADPTRS
 MOVE.L STR_TBL,A4
DS_LS2 TST FCONN(A4)
 BEQ DS_LS3
 ADD.L #EV_FSZ,A4
 JMP DS_LS2
DS_LS3 MOVE #312,D7
 CMP #2,FRECN(A4)
 BLE SQL_ERROR
 SUB #2,FRECN(A4)
 JMP DOS_TIME

DS_NEXT MOVE #1,REC_CNT  ;Next
 MOVE.L STR_TBL,A0
 JSR LOADPTRS
 JMP DOS_TIME

DS_CURNT MOVE #1,REC_CNT  ;Current
 MOVE.L STR_TBL,A0
 JSR LOADPTRS
 MOVE.L STR_TBL,A4
DS_NE2 TST FCONN(A4)
 BEQ DS_NE3
 ADD.L #EV_FSZ,A4
 JMP DS_NE2
DS_NE3 SUB #1,FRECN(A4)

DOS_TIME MOVE.L STR_TBL,A0
 MOVE INDXFLAG,D0
 JSR POINTER
 TST D0
 BMI SQL_ERROR

DOS_TIMD TST AP_FLAG
 BEQ DOS_NOAP

 MOVE.L AP_STR,A4
 SUB.L #EV_FSZ,A4
 CLR FCONN(A4)
 SUB #1,S_TBLCNT

 MOVE.L AP_STR,A4
 MOVE FDISP(A4),A0
 JSR F_END
 TST.L D0
 BPL APP_100
 MOVE.L FNAME(A4),A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

APP_100 DIVU FSIZE(A4),D0
 ADD #1,D0
 MOVE D0,FRECN(A4)

APP_600 TST FTYPE(A4)
 BEQ DOS_NOAP

 MOVE FIHND(A4),A0
 JSR F_END
 TST.L D0
 BPL DOS_NOAP
 MOVE.L FNAME(A4),A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DOS_NOAP CMP #2,DEVICE ;Open Mail Merge file?
 BEQ DOS_CROUT
 CMP #3,DEVICE
 BNE DOS_NCROUT

DOS_CROUT CLR -(A7)  ;F_CREATE
 MOVE.L #OUTDEVICE,-(A7)
 MOVE #60,-(A7)
 TRAP #1
 ADD.L #8,A7
 TST.L D0
 BPL DOS_SOUT
 LEA OUTDEVICE,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DOS_SOUT MOVE D0,OUTFILE

DOS_NCROUT CLR REC_FND
 MOVE #1,S_FIRST

DOS_LOOP JSR SELECTONE
 TST D0
 BPL DOS_OUT
 CMP #281,D7
 BEQ DOS_DONE
 JMP SQL_ERROR

DOS_OUT TST AP_FLAG
 BNE DOS_APP

 MOVE.L STR_SEL,A0
 JSR FINEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE FRMTNBR,D0
 JSR PRNTLINE

 MOVE #247,D7
 TST SHOWESC
 BNE SQL_ERROR

DOS_RCRS ADD #1,REC_FND

 TST REC_CURNT
 BEQ DOS_LOOP

 MOVE REC_CNT,D0
 CMP REC_FND,D0
 BNE DOS_LOOP

DOS_DONE TST AP_FLAG
 BEQ DOS_CLOS

 MOVE.L AP_STR,A4
 SUB.L #EV_FSZ,A4
 MOVE #19,FCONN(A4)
 ADD #1,S_TBLCNT

DOS_CLOS MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0 ;Save record pointers
 JSR RECPTRS

 CMP #2,DEVICE  ;Close Mail Merge device
 BEQ DOS_CDEVICE
 CMP #3,DEVICE
 BNE DOS_CNT
DOS_CDEVICE MOVE OUTFILE,A0
 JSR F_CLOSE

DOS_CNT MOVE #298,D7 ;No records found
 TST REC_FND
 BEQ SQL_ERROR

 JMP FINDTERM

DOS_MRGERR DC.B 'Cannot open Mail Merge file.',0
 EVEN

*--------------Delete--------------*
*Syntax: DELETE tablename [CURRENT]|[WHERE expr,expr...];

DODEL CLR REC_CNT
 CLR REC_FND
 CLR S_WCOUNT
 MOVE.L BUF_WHERE,BUF_W2

 MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 JSR CACHEUP ;Reload cache?

 MOVE #79,D0
 LEA TABLENM,A0
 LEA TABLENM2,A1
DEL_97 MOVE.B (A0)+,(A1)+
 DBF D0,DEL_97

 MOVE.L STR_SEL,A2
 MOVE.L STR_WHERE,A1
 MOVE.L STR_TBL,A4
 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
DEL_98 CLR.B (A0)+
 CLR.B (A1)+
 CLR.B (A2)+
 DBF D0,DEL_98
 MOVE.L #TABLENM2,FNAME(A4)
 MOVE.L BUF_TBL,BUF_TBL2
 MOVE #1,S_TBLCNT

 MOVE #293,D7  ;Current
 JSR FINDWORD
 CMP.B #72,D3
 BNE DEL_100
 MOVE #1,REC_CNT
 JMP DEL_101
DEL_100 MOVE FHOLDX,CURSX

DEL_101 JSR FINDWORD  ;Where
 CMP #26,D3
 BNE DEL_102

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_WHERE,A1
 MOVE #MAX_WHERE,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_W2
 MOVE D1,S_WCOUNT
 MOVE D2,S_WPAREN

DEL_102 MOVE.L STR_TBL,DEL_TBL

 MOVE.L STR_TBL,A1
 MOVE.L STR_WHERE,A0
 MOVE S_WCOUNT,D0
 MOVE #1,D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE #1,S_FIRST

 MOVE.L STR_TBL,A0  ;Reset record pointers
 JSR RESETPTR

 TST REC_CNT
 BEQ DEL_RST

 MOVE #1,REC_CNT  ;Current
 MOVE.L STR_TBL,A0
 JSR LOADPTRS
 MOVE.L STR_TBL,A0
 SUB #1,FRECN(A0)

DEL_RST MOVE.L STR_TBL,A0
 MOVE INDXFLAG,D0
 JSR POINTER
 TST D0
 BMI SQL_ERROR

DEL_LOOP TST REC_CNT
 BNE DEL_NCRNT
 TST S_WCOUNT
 BEQ DEL_ALL

DEL_NCRNT CLR D1
 TST INDXFLAG
 BEQ DEL_LIDX
 MOVE #1,D1
DEL_LIDX MOVE.L STR_TBL,A0
 MOVE S_TBLCNT,D0
 MOVE S_FIRST,D2
 CLR S_FIRST
 CLR D3
 JSR LOADRECORD
 TST D0
 BPL SQL_CHECK
 CMP #281,D7
 BEQ DEL_END
 JMP SQL_ERROR

SQL_CHECK TST S_WCOUNT
 BEQ DEL_120
 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 MOVE S_WCOUNT,D0
 MOVE S_WPAREN,D1
 CLR D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR
 BEQ DEL_LOOP

DEL_120 MOVE.L DEL_TBL,A4
 MOVE FDISP(A4),A0
 CLR.L D0
 MOVE FOBJN(A4),D0
 SUB #1,D0
 MULU FSIZE(A4),D0
 JSR F_SEEK
 TST.L D0
 BPL DEL_121
 LEA DEL_DIS2,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DEL_121 MOVE.L DEL_TBL,A4
 MOVE.L FVALU(A4),A0
 CLR.L D0
 MOVE FSIZE(A4),D0
 SUB #3,D0
DEL_122 CLR.B (A0)+
 DBF D0,DEL_122

 MOVE FDISP(A4),A0
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL DEL_123
 LEA DEL_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DEL_123 CMP #1,FTYPE(A4)
 BNE DEL_126

 MOVE FIHND(A4),A0
 CLR.L D0
 MOVE FOBJN(A4),D0
 SUB #1,D0
 MULU FEXTR(A4),D0
 JSR F_SEEK
 TST.L D0
 BPL DEL_124
 LEA DEL_DIS2,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DEL_124 MOVE.L FINDX(A4),A0
 CLR.L D0
 MOVE FEXTR(A4),D0
 SUB #3,D0
DEL_125 CLR.B (A0)+
 DBF D0,DEL_125

 MOVE FIHND(A4),A0
 MOVE.L FINDX(A4),A1
 CLR D0
 MOVE FEXTR(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL DEL_126
 LEA DEL_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

DEL_126 MOVE.L STR_TBL,A0
 CLR D0
 JSR POINTER
 TST D0
 BMI SQL_ERROR

 ADD #1,REC_FND
 MOVE REC_CNT,D0
 CMP REC_FND,D0
 BNE DEL_LOOP

DEL_END MOVE.L STR_TBL,A0 ;Save record pointers
 JSR RECPTRS

 MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 MOVE #298,D7 ;No records found
 TST REC_FND
 BEQ SQL_ERROR

 JMP FINDTERM

*---------Delete All---------

DEL_ALL MOVE.L STR_TBL,A0
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 MOVE #251,D7
 MOVE.L STR_TBL,A0
 MOVE.L FVAL2(A0),A0
 JSR F_DELETE
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0
 MOVE.L FVAL2(A0),A0
 JSR F_CREATE
 TST D0
 BMI SQL_ERROR

 MOVE D0,A0
 JSR F_CLOSE
 
 MOVE.L STR_TBL,A0
 CMP #1,FTYPE(A0)
 BNE FINDTERM

 MOVE.L FIFIL(A0),A0
 JSR F_DELETE
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0
 MOVE.L FIFIL(A0),A0
 JSR F_CREATE
 TST D0
 BMI SQL_ERROR

 MOVE D0,A0
 JSR F_CLOSE

 JMP FINDTERM

DEL_TBL DC.L 1 ;Table structure

DEL_DIS1 DC.B 'DELETE: Error writing record',0
DEL_DIS2 DC.B 'DELETE: Seeking file pointer',0
 EVEN

*--------------Sort--------------*
* Syntax: SORT tablename fieldname [DESC|NOCAPS],...;

DOSORT MOVE #293,D7
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A4

 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
DOSORT2 CLR.B (A0)+
 DBF D0,DOSORT2

 MOVE.L BUF_TBL,A3
 MOVE.L A3,FNAME(A4)

 MOVE #19,D0
 LEA TABLENM,A0
DOSORT3 TST.B (A0)
 BEQ DOSORT4
 MOVE.B (A0)+,(A3)+
 DBF D0,DOSORT3

DOSORT4 CLR.B (A3)+

 MOVE.L A3,BUF_TBL2
 MOVE #1,S_TBLCNT

 MOVE.L STR_ORD,A0  ;Get field expressions
 MOVE.L BUF_ORD,A1
 MOVE #MAX_SEL,D0
 JSR GETSORTED
 TST D0
 BMI SQL_ERROR
 MOVE #292,D7
 TST D1
 BEQ SQL_ERROR
 MOVE D1,S_OCOUNT
 CLR S_OPAREN

 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL2,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 CLR D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_ORD,A2
 CLR D1
 MOVE #1,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_ORD,A0
 MOVE.L STR_TBL,A1
 JSR SORT
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0
 JSR QS_SAVE
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

*--------------Update--------------*
*Syntax: UPDATE tablename [CURRENT] SET field=expr,field=expr...
*        [WHERE expr,expr...];

DOUPDATE CLR REC_CNT
 CLR REC_FND
 CLR S_WCOUNT
 MOVE.L BUF_WHERE,BUF_W2
 MOVE.L STR_TBL,UPD_TBL
 MOVE #1,S_TBLCNT

 MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 JSR CACHEUP ;Reload cache?

 MOVE #79,D0
 LEA TABLENM,A0
 LEA TABLENM2,A1
UPD_111 MOVE.B (A0)+,(A1)+
 DBF D0,UPD_111

 MOVE.L STR_TBL,A4
 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
UPD_98 CLR.B (A0)+
 DBF D0,UPD_98
 MOVE.L #TABLENM2,FNAME(A4)
 MOVE.L BUF_TBL,BUF_TBL2
 MOVE #1,S_TBLCNT

 MOVE #297,D7  ;Parse CURRENT/SET
 JSR FINDWORD
 CMP #25,D3
 BEQ UPD_SET
 CMP #72,D3
 BNE SQL_ERROR

 MOVE #1,REC_CNT  ;Current
 JSR FINDWORD
 CMP #25,D3
 BNE SQL_ERROR

UPD_SET MOVE.L STR_SEL,A0  ;Get field expressions
 MOVE.L BUF_SEL,A1
 MOVE #MAX_SEL,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_SEL2
 MOVE D1,S_FLDCNT
 MOVE D2,S_PAREN1

 JSR FINDWORD  ;Where
 CMP #26,D3
 BNE UPD_102

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_WHERE,A1
 MOVE #MAX_WHERE,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_W2
 MOVE D1,S_WCOUNT
 MOVE D2,S_WPAREN

UPD_102 MOVE.L STR_SEL,A0 ;Set system and user variables
 MOVE.L BUF_SEL2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_SEL2

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_W2

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 MOVE S_WCOUNT,D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI S_ERROR

 MOVE.L STR_SEL,A0 ;Process aggregates
 JSR DOAGGS
 TST D0
 BMI S_ERROR

 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE #1,S_FIRST

 MOVE.L STR_TBL,A0  ;Reset record pointers
 JSR RESETPTR

 TST REC_CNT
 BEQ UPD_RST

 MOVE #1,REC_CNT  ;Current
 MOVE.L STR_TBL,A0
 JSR LOADPTRS
 MOVE.L STR_TBL,A0
 SUB #1,FRECN(A0)

UPD_RST MOVE.L STR_TBL,A0
 MOVE INDXFLAG,D0
 JSR POINTER
 TST D0
 BMI SQL_ERROR

UPD_LOOP MOVE.L STR_TBL,A0  ;Load record
 MOVE S_TBLCNT,D0
 MOVE #1,D1
 MOVE S_FIRST,D2
 CLR S_FIRST
 CLR D3
 JSR LOADRECORD
 TST D0
 BPL UPD_CHECK
 CMP #281,D7
 BEQ UPD_END
 JMP SQL_ERROR

UPD_CHECK TST S_WCOUNT
 BEQ UPD_120

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 MOVE S_WCOUNT,D0
 MOVE S_WPAREN,D1
 CLR D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR
 BEQ UPD_LOOP

UPD_120 MOVE.L UPD_TBL,A4

 TST FCALC(A4)
 BEQ UPD_500

 JSR UPD_SEEK
 TST D0
 BMI SQL_ERROR

 MOVE FDISP(A4),A0  ;Read record
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 JSR F_READ
 TST.L D0
 BPL UPD_500
 LEA UPD_DIS3,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_500 TST FTYPE(A4)
 BEQ UPD_600

 JSR UPD_SEEKI ;Seek index file
 TST D0
 BMI SQL_ERROR

 MOVE FIHND(A4),A0  ;Read indexed record
 MOVE.L FINDX(A4),A1
 CLR D0
 MOVE FEXTR(A4),D0
 JSR F_READ
 TST.L D0
 BPL UPD_600
 LEA UPD_DIS3,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_600 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 MOVE S_FLDCNT,D0
 MOVE S_PAREN1,D1
 MOVE #1,D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A0
 JSR FINEXPRESS
 TST D0
 BMI SQL_ERROR

 JSR UPD_SEEK
 TST D0
 BMI SQL_ERROR

 MOVE FDISP(A4),A0
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL UPD_302
 LEA UPD_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_302 MOVE.L UPD_TBL,A4
 TST FTYPE(A4)
 BEQ UPD_305

 JSR UPD_SEEKI ;Seek index file
 TST D0
 BMI SQL_ERROR

 MOVE FIHND(A4),A0
 MOVE.L FINDX(A4),A1
 CLR D0
 MOVE FEXTR(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL UPD_305
 LEA UPD_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_305 MOVE #247,D7
 JSR KEYSTOP
 TST D0
 BNE SQL_ERROR

 ADD #1,REC_FND
 MOVE REC_CNT,D0
 CMP REC_FND,D0
 BNE UPD_LOOP

UPD_END MOVE.L STR_TBL,A0 ;Save record pointers
 JSR RECPTRS

 MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 MOVE #298,D7 ;No records found
 TST REC_FND
 BEQ SQL_ERROR

 JMP FINDTERM

UPD_SEEK MOVE.L UPD_TBL,A4 ;Seek file pointer
 MOVE FDISP(A4),A0
 CLR.L D0
 MOVE FRECN(A4),D0
 SUB #2,D0
 MULU FSIZE(A4),D0
 JSR F_SEEK
 TST.L D0
 BPL S_DONE
 LEA UPD_DIS2,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_SEEKI MOVE.L UPD_TBL,A4 ;Seek index file pointer
 MOVE FIHND(A4),A0
 CLR.L D0
 MOVE FRECN(A4),D0
 SUB #2,D0
 MULU FEXTR(A4),D0
 JSR F_SEEK
 TST.L D0
 BPL S_DONE
 LEA UPD_DIS2,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

UPD_TBL DC.L 1 ;Table structure

UPD_DIS1 DC.B 'UPDATE: Error writing record',0
UPD_DIS2 DC.B 'UPDATE: Seeking file pointer',0
UPD_DIS3 DC.B 'UPDATE: Error reading record',0
 EVEN

*--------------Insert--------------*
*Syntax: INSERT INTO tablename field=expr,field=expr...;

DOINSERT MOVE #293,D7 ;Into
 JSR FINDWORD
 CMP #23,D3
 BNE SQL_ERROR

 MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 JSR CACHEUP ;Reload cache?

 CLR REC_CNT
 CLR REC_FND
 CLR S_WCOUNT
 MOVE.L BUF_WHERE,BUF_W2

 MOVE.L STR_TBL,A4 ;Build table structure
 MOVE.L A4,UPD_TBL
 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
INS_106 CLR.B (A0)+
 DBF D0,INS_106

 MOVE.L BUF_TBL,A1
 MOVE.L A1,FNAME(A4)
 LEA TABLENM,A0
INS_106B MOVE.B (A0)+,D0
 MOVE.B D0,(A1)+
 TST.B D0
 BNE INS_106B
 MOVE.L A1,BUF_TBL2
 MOVE #1,S_TBLCNT

 MOVE.L STR_SEL,A0  ;Get field expressions
 MOVE.L BUF_SEL,A1
 MOVE #MAX_SEL,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_SEL2
 MOVE D1,S_FLDCNT
 MOVE D2,S_PAREN1

 MOVE.L STR_SEL,A0 ;Set system and user variables
 MOVE.L BUF_SEL2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_SEL2

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_W2

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 CLR D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 MOVE S_FLDCNT,D0
 MOVE S_PAREN1,D1
 MOVE #1,D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL2,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A4
 MOVE FDISP(A4),A0
 JSR F_END
 TST.L D0
 BPL INS_100
 MOVE.L FNAME(A4),A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

INS_100 DIVU FSIZE(A4),D0
 ADD #1,D0
 MOVE D0,FRECN(A4)

INS_600 TST FTYPE(A4)
 BEQ INS_601

 MOVE FIHND(A4),A0
 JSR F_END
 TST.L D0
 BPL INS_601
 MOVE.L FNAME(A4),A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

INS_601 MOVE.L FVALU(A4),A0
 CLR.L D0
 MOVE FSIZE(A4),D0
 SUB #3,D0
INS_122 CLR.B (A0)+
 DBF D0,INS_122

 CLR.L D0
 MOVE FSIZE(A4),D0
 ADD.L FVALU(A4),D0
 SUB.L #2,D0
 MOVE.L D0,A0
 MOVE.B #13,(A0)
 MOVE.B #10,1(A0)

 TST FTYPE(A4)
 BEQ INS_126

 MOVE.L FINDX(A4),A0
 CLR.L D0
 MOVE FEXTR(A4),D0
 SUB #3,D0
INS_125 CLR.B (A0)+
 DBF D0,INS_125

 CLR.L D0
 MOVE FEXTR(A4),D0
 ADD.L FINDX(A4),D0
 SUB.L #2,D0
 MOVE.L D0,A0
 MOVE.B #13,(A0)
 MOVE.B #10,1(A0)

INS_126 MOVE.L STR_SEL,A0
 JSR FINEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L UPD_TBL,A4
 MOVE FDISP(A4),A0
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL INS_302
 LEA INS_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

INS_302 TST FTYPE(A4)
 BEQ INS_END

 MOVE FIHND(A4),A0
 MOVE.L FINDX(A4),A1
 CLR D0
 MOVE FEXTR(A4),D0
 JSR F_WRITE
 TST.L D0
 BPL INS_END
 LEA UPD_DIS1,A0
 JSR DISK_ERR
 MOVE #294,D7
 JMP SQL_ERROR

INS_END MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

INS_DIS1 DC.B 'INSERT: Disk write error',0
 EVEN

*--------------Create Table--------------*
* Syntax: CREATE TABLE tablename field description,...;

DOCREATE LEA CR_NAME,A0
 LEA CR_PATH,A1
 LEA CR_FILE,A2
 LEA CR_FILE+30,A3
 MOVE #29,D0
DOCT_59 CLR.B (A0)+
 CLR.B (A1)+
 CLR.B (A2)+
 CLR.B (A3)+
 DBF D0,DOCT_59

 MOVE #291,D7 ;Parse for TABLE or INDEX
 JSR FINDWORD
 CMP #13,D3
 BEQ DOCRINDX
 CMP #12,D3
 BNE SQL_ERROR

 MOVE #296,D7 ;Tablename
 MOVE #1,NAMEFLAG
 JSR GETNAME
 CLR NAMEFLAG
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 LEA TABLENM,A0
 CLR D0
DOCT_60 ADD #1,D0
 TST.B (A0)+
 BNE DOCT_60
DOCT_61 CMP.B #'\',-(A0)
 BEQ DOCT_62
 SUB #1,D0
 BNE DOCT_61

DOCT_62 TST D0
 BEQ DOCT_62A
 ADD.L #1,A0
DOCT_62A LEA CR_NAME,A1
DOCT_63 TST.B (A0)
 BEQ DOCT_64
 MOVE.B (A0)+,(A1)+
 JMP DOCT_63

DOCT_64 LEA TABLENM,A0
 LEA CR_PATH,A1

 TST D0
 BNE DOCT_65
 LEA PATHNAME,A0
 MOVE #19,D0

DOCT_65 MOVE.B (A0)+,D1
 BEQ DOCT_65B
 CMP.B #' ',D1
 BEQ DOCT_65B
 MOVE.B D1,(A1)+
 SUB #1,D0
 BNE DOCT_65

DOCT_65B CLR.B (A1)

DOCT_66 MOVE #299,D7
 LEA TABLENM,A0
 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D5
DOCT_100 JSR MMATCHER
 TST D0
 BPL SQL_ERROR
 ADD.L #48,A1
 DBF D5,DOCT_100

 LEA CR_PATH,A0
 LEA CR_FILE,A1
DOCT_98 MOVE.B (A0)+,D0
 BEQ DOCT_98A
 JSR UPPER
 MOVE.B D0,(A1)+
 JMP DOCT_98

DOCT_98A LEA CR_NAME,A0
DOCT_98B MOVE.B (A0)+,D0
 BEQ DOCT_98C
 JSR UPPER
 MOVE.B D0,(A1)+
 JMP DOCT_98B

DOCT_98C MOVE.B #'.',(A1)+
 MOVE.B #'T',(A1)+
 MOVE.B #'B',(A1)+
 MOVE.B #'L',(A1)+
 CLR.B (A1)

 MOVE.L STR_SEL,A4
 MOVE.L BUF_SEL,A3

DOCT_LOOP MOVE #EV_FSZ-1,D0 ;Clear structure
 MOVE.L A4,A0
DOCT_99 CLR.B (A0)+
 DBF D0,DOCT_99

 MOVE #300,D7 ;Field Name
 JSR GETNAME
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 MOVE #304,D7 ;Field defined?
 MOVE.L STR_SEL,A2
DOCT_88 TST FCONN(A2)
 BEQ DOCT_89
 LEA TABLENM,A0
 MOVE.L FNAME(A2),A1
 JSR MMATCHER
 TST D0
 BPL SQL_ERROR
 ADD.L #EV_FSZ,A2
 JMP DOCT_88

DOCT_89 JSR GETDEF
 TST D0
 BMI SQL_ERROR

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ DOCT_200
 CMP.B #',',D0
 BNE SQL_ERROR

 JSR MOVERT
 TST D0
 BMI SQL_ERROR

DOCT_103 MOVE #19,FCONN(A4)
 ADD.L #EV_FSZ,A4
 JMP DOCT_LOOP

DOCT_200 MOVE #305,D7
DOCT_201 LEA CR_FILE,A0
 JSR F_CREATE
 TST.L D0
 BPL DOCT_202
 LEA CR_FILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCT_201
 JMP SQL_ERROR

DOCT_202 MOVE D0,A0
 JSR F_CLOSE

 MOVE #47,D0
 LEA TBLBUFRS,A0
DOCT_203 CLR.B (A0)+
 DBF D0,DOCT_203
 MOVE.B #13,TBLBUFRS+46
 MOVE.B #10,TBLBUFRS+47

 MOVE #19,D0
 LEA CR_NAME,A0
 LEA TBLBUFRS,A1
DOCT_204 TST.B (A0)
 BEQ DOCT_205
 MOVE.B (A0)+,(A1)+
 DBF D0,DOCT_204

DOCT_205 MOVE #19,D0
 LEA CR_PATH,A0
 LEA TBLBUFRS+20,A1
DOCT_206 TST.B (A0)
 BEQ DOCT_207
 MOVE.B (A0)+,(A1)+
 DBF D0,DOCT_206

DOCT_207 LEA TBLBUFRS+40,A0
 MOVE.B #' ',(A0)+
 MOVE.B #'0',(A0)+
 MOVE.B #'0',(A0)+
 MOVE.B #'0',(A0)+
 MOVE.B #'0',(A0)+
 MOVE.B #'0',(A0)+

DOCT_209 MOVE #294,D7   ;Save table definition
 LEA TNAME,A0
 JSR ADDPATH
 JSR F_OPENRW
 TST D0
 BPL DOCT_210
 LEA TNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCT_209
 JMP SQL_ERROR

DOCT_210 MOVE D0,FHANDLE

DOCT_211 MOVE FHANDLE,A0
 JSR F_END
 TST.L D0
 BPL DOCT_212
 LEA DOCT_DIS0,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCT_211
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP SQL_ERROR

DOCT_212 LEA TBLBUFRS,A1
 MOVE.L #48,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 CMP.L #48,D0
 BEQ DOCT_213
 LEA DOCT_DIS1,A0
 JSR DISK_ERR
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP SQL_ERROR

DOCT_213 MOVE FHANDLE,A0
 JSR F_CLOSE

 MOVE.L STR_SEL,A4
 CLR.L D0
DOCT_220 MOVE D0,FDISP(A4)
 ADD FSIZE(A4),D0
 TST FCONN(A4)
 BEQ DOCT_240
 ADD.L #EV_FSZ,A4
 JMP DOCT_220

DOCT_240 LEA FLDNAME,A0  ;Insert field definitions
 JSR ADDPATH
 JSR F_OPENRW
 TST D0
 BPL DOCT_230
 LEA FLDNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCT_240
 JMP SQL_ERROR

DOCT_230 MOVE D0,FHANDLE

DOCT_232 MOVE FHANDLE,A0
 JSR F_END
 TST.L D0
 BPL DOCT_231
 LEA DOCT_DIS0,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCT_232
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP SQL_ERROR

DOCT_231 MOVE.L STR_SEL,A4

DOCT_221 MOVE #64,D0
 LEA TBLBUFRS,A0
DOCT_223 CLR.B (A0)+
 DBF D0,DOCT_223
 MOVE.B #13,TBLBUFRS+63
 MOVE.B #10,TBLBUFRS+64

 MOVE #19,D0
 MOVE.L FNAME(A4),A0
 LEA TBLBUFRS,A1
DOCT_224 TST.B (A0)
 BEQ DOCT_225
 MOVE.B (A0)+,(A1)+
 DBF D0,DOCT_224

DOCT_225 MOVE #19,D0
 LEA CR_NAME,A0
 LEA TBLBUFRS+20,A1
DOCT_226 TST.B (A0)
 BEQ DOCT_227
 MOVE.B (A0)+,(A1)+
 DBF D0,DOCT_226

DOCT_227 MOVE FTYPE(A4),D0
 MOVE.B D0,TBLBUFRS+40

 MOVE.B #' ',TBLBUFRS+41
 MOVE FDISP(A4),D0
 LEA TBLBUFRS+42,A3
 JSR CONV2DEC

 MOVE.B #' ',TBLBUFRS+46
 MOVE FSIZE(A4),D0
 LEA TBLBUFRS+47,A3
 JSR CONV2DEC

 MOVE.B #' ',TBLBUFRS+51
 MOVE FEXTR(A4),D0
 ADD.B #'0',D0
 MOVE.B D0,TBLBUFRS+52

 LEA TBLBUFRS,A1
 MOVE.L #65,D0
 MOVE FHANDLE,A0
 JSR F_WRITE
 CMP.L #65,D0
 BEQ DOCT_228
 LEA DOCT_DIS1,A0
 JSR DISK_ERR
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP SQL_ERROR

DOCT_228 TST FCONN(A4)
 BEQ DOCT_DONE
 ADD.L #EV_FSZ,A4
 JMP DOCT_221

DOCT_DONE MOVE FHANDLE,A0
 JSR F_CLOSE

 MOVE #1,CACHE

 LEA CR_NAME,A0
 JSR REORGANIZE
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

DOCT_DIS0 DC.B 'CREATE: Disk search error',0
DOCT_DIS1 DC.B 'CREATE: Disk write error',0
 EVEN

*--------------Create Index--------------*
* Syntax: CREATE INDEX tablename field, field, ...;

DOCRINDX MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 MOVE #306,D7  ;Indexes already defined?
 LEA TABLENM,A0
 MOVE.L CACIND,A1
 ADD.L #20,A1
 MOVE #CACIDX-1,D5
DOCI_100 JSR MMATCHER
 TST D0
 BPL SQL_ERROR
 ADD.L #65,A1
 DBF D5,DOCI_100

 MOVE #307,D7  ;Table defined?
 LEA TABLENM,A0
 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D5
DOCI_101 JSR MMATCHER
 TST D0
 BPL DOCI_102
 ADD.L #48,A1
 DBF D5,DOCI_101
 JMP SQL_ERROR

DOCI_102 MOVE.L A1,A0  ;Build File Name
 ADD.L #20,A0
 LEA CR_FILE,A2
 MOVE #19,D1
DOCI_103 MOVE.B (A0)+,D0
 BEQ DOCI_104
 CMP.B #' ',D0
 BEQ DOCI_104
 MOVE.B D0,(A2)+
 DBF D1,DOCI_103

DOCI_104 MOVE.L A1,A0
 MOVE #19,D1
DOCI_105 MOVE.B (A0)+,D0
 BEQ DOCI_106
 CMP.B #' ',D0
 BEQ DOCI_106
 MOVE.B D0,(A2)+
 DBF D1,DOCI_105

DOCI_106 MOVE.B #'.',(A2)+
 MOVE.B #'I',(A2)+
 MOVE.B #'N',(A2)+
 MOVE.B #'D',(A2)+
 CLR.B (A2)+

 LEA CR_NAME,A2
 MOVE #19,D0
DOCI_107 MOVE.B (A1)+,(A2)+
 DBF D0,DOCI_107

 MOVE.L STR_SEL,A4
 MOVE.L BUF_SEL,A3

DOCI_LOOP MOVE #EV_FSZ-1,D0 ;Clear structure
 MOVE.L A4,A0
DOCI_99 CLR.B (A0)+
 DBF D0,DOCI_99

 MOVE #293,D7 ;Field name
 JSR GETNAME
 TST D0
 BMI SQL_ERROR
 JSR UPPERLOWER

 MOVE #309,D7 ;Field defined?
 MOVE.L STR_SEL,A2
DOCI_88 TST FCONN(A2)
 BEQ DOCI_89
 LEA TABLENM,A0
 MOVE.L FNAME(A2),A1
 JSR MMATCHER
 TST D0
 BPL SQL_ERROR
 ADD.L #EV_FSZ,A2
 JMP DOCI_88

DOCI_89 MOVE.L A3,FNAME(A4)

 LEA TABLENM,A0
DOCI_97 MOVE.B (A0)+,D0
 JSR UPPER
 MOVE.B D0,(A3)+
 TST.B D0
 BNE DOCI_97

 MOVE #308,D7  ;Find field definition
 MOVE.L CACHEF,A2
 MOVE #CACFLD-1,D5

DOCI_161 LEA CR_NAME,A0
 MOVE.L A2,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI DOCI_190

 LEA TABLENM,A0
 MOVE.L A2,A1
 JSR MMATCHER
 TST D0
 BPL DOCI_162

DOCI_190 ADD.L #65,A2
 DBF D5,DOCI_161
 JMP SQL_ERROR

DOCI_162 CLR D0
 MOVE.B 40(A2),D0
 MOVE D0,FTYPE(A4)

 MOVE.L A2,A0
 ADD.L #47,A0
 JSR CVAL
 MOVE D1,FSIZE(A4)

 CLR D0
 MOVE.B 52(A2),D0
 SUB.B #'0',D0
 MOVE D0,FEXTR(A4)

 MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ DOCI_200
 CMP.B #',',D0
 BNE SQL_ERROR

 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE #19,FCONN(A4)
 ADD.L #EV_FSZ,A4
 JMP DOCI_LOOP

DOCI_200 MOVE.L STR_SEL,A4
 CLR.L D0
DOCI_220 MOVE D0,FDISP(A4)
 ADD FSIZE(A4),D0
 TST FCONN(A4)
 BEQ DOCI_241
 ADD.L #EV_FSZ,A4
 JMP DOCI_220

DOCI_241 MOVE #310,D7  ;Create index file
DOCI_242 LEA CR_FILE,A0
 JSR F_CREATE
 TST.L D0
 BPL DOCI_243
 LEA CR_FILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCI_242
 JMP SQL_ERROR

DOCI_243 MOVE D0,A0
 JSR F_CLOSE

DOCI_240 LEA INDNAME,A0  ;Insert field definitions
 JSR ADDPATH
 JSR F_OPENRW
 TST D0
 BPL DOCT_230
 LEA INDNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DOCI_240
 JMP SQL_ERROR

*--------------Drop Table--------------*
* Syntax: DROP TABLE tablename;

DODROP MOVE #291,D7 ;Parse for TABLE or INDEX
 JSR FINDWORD
 CMP #13,D3
 BEQ DODROPI
 CMP #12,D3
 BNE SQL_ERROR

 MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 MOVE #307,D7
 LEA TABLENM,A0
 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D5
DT_100 JSR MMATCHER
 TST D0
 BPL DT_101
 ADD.L #48,A1
 DBF D5,DT_100
 JMP SQL_ERROR

DT_101 LEA CR_FILE,A2
 MOVE.L A1,A0
 ADD.L #20,A0
 MOVE #19,D0
DT_102 TST.B (A0)
 BEQ DT_103
 MOVE.B (A0)+,(A2)+
 DBF D0,DT_102

DT_103 MOVE #19,D0
DT_104 TST.B (A1)
 BEQ DT_105
 MOVE.B (A1)+,(A2)+
 DBF D0,DT_104

DT_105 MOVE.B #'.',(A2)+
 MOVE.B #'T',(A2)+
 MOVE.B #'B',(A2)+
 MOVE.B #'L',(A2)+
 CLR.B (A2)

 LEA CR_FILE,A0
 JSR F_DELETE

 JSR DROPSTUFF ;Drop indexes
 TST D0
 BMI SQL_ERROR

 LEA TABLENM,A0  ;Remove TABLES.TBL defs
 MOVE.L CACHET,A2
 MOVE #1,D5
DT_110 TST.B (A2)
 BEQ DT_112
 MOVE.L A2,A1
 JSR MMATCHER
 TST D0
 BMI DT_111

 MOVE #45,D1
 MOVE.L A2,A1
DT_113 CLR.B (A1)+
 DBF D1,DT_113

DT_111 ADD.L #48,A2
 ADD #1,D5
 CMP #CACTBL,D5
 BNE DT_110

DT_112 MOVE #294,D7
 LEA TNAME,A0
 JSR ADDPATH
 JSR F_CREATE
 TST.L D0
 BPL DT_300
 LEA TNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DT_112
 JMP D_ERROR

DT_300 MOVE D0,FHANDLE

DT_301 MOVE FHANDLE,A0
 MOVE.L CACHET,A1
 CLR.L D0
 MOVE D5,D0
 MULU #48,D0
 MOVE.L D0,D5
 JSR F_WRITE
 CMP.L D5,D0
 BEQ DT_308
 LEA DI_DIS0,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DT_301
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP D_ERROR

DT_308 MOVE FHANDLE,A0
 JSR F_CLOSE

 LEA TABLENM,A0  ;Remove FIELDS.TBL defs
 MOVE.L CACHEF,A2
 MOVE #1,D5

DT_302 TST.B (A2)
 BEQ DT_305
 MOVE.L A2,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI DT_304

 MOVE #62,D1
 MOVE.L A2,A1
DT_303 CLR.B (A1)+
 DBF D1,DT_303

DT_304 ADD.L #65,A2
 ADD #1,D5
 CMP #CACFLD,D5
 BNE DT_302

DT_305 MOVE #294,D7
 LEA FLDNAME,A0
 JSR ADDPATH
 JSR F_CREATE
 TST.L D0
 BPL DT_230
 LEA FLDNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DT_305
 JMP D_ERROR

DT_230 MOVE D0,FHANDLE

DT_231 MOVE FHANDLE,A0
 MOVE.L CACHEF,A1
 CLR.L D0
 MOVE D5,D0
 MULU #65,D0
 MOVE.L D0,D5
 JSR F_WRITE
 CMP.L D5,D0
 BEQ DT_240
 LEA DI_DIS0,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DT_231
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP D_ERROR

DT_240 MOVE FHANDLE,A0
 JSR F_CLOSE

 MOVE #1,CACHE

 LEA DT_NAME1,A0
 JSR REORGANIZE
 TST D0
 BMI SQL_ERROR

 LEA DT_NAME2,A0
 JSR REORGANIZE
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

DT_NAME1 DC.B 'TABLES',0
DT_NAME2 DC.B 'FIELDS',0
DT_NAME3 DC.B 'INDEXES',0
 EVEN

*--------------Drop Index--------------*
* Syntax: DROP INDEX tablename;

DODROPI MOVE #296,D7 ;Tablename
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 JSR DROPSTUFF
 TST D0
 BMI SQL_ERROR
 JMP FINDTERM

*-------Drop the defined indexes------

DROPSTUFF MOVE #311,D7
 LEA TABLENM,A0
 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D5
DI_100 JSR MMATCHER
 TST D0
 BPL DI_101
 ADD.L #48,A1
 DBF D5,DI_100
 JMP D_ERROR

DI_101 LEA CR_FILE,A2
 MOVE.L A1,A0
 ADD.L #20,A0
 MOVE #19,D0
DI_102 TST.B (A0)
 BEQ DI_103
 MOVE.B (A0)+,(A2)+
 DBF D0,DI_102

DI_103 MOVE #19,D0
DI_104 TST.B (A1)
 BEQ DI_105
 MOVE.B (A1)+,(A2)+
 DBF D0,DI_104

DI_105 MOVE.B #'.',(A2)+
 MOVE.B #'I',(A2)+
 MOVE.B #'N',(A2)+
 MOVE.B #'D',(A2)+
 CLR.B (A2)

 LEA CR_FILE,A0
 JSR F_DELETE

 LEA TABLENM,A0
 MOVE.L CACIND,A2
 MOVE #1,D5
DI_110 TST.B (A2)
 BEQ DI_112
 MOVE.L A2,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI DI_111

 MOVE #62,D1
 MOVE.L A2,A1
DI_113 CLR.B (A1)+
 DBF D1,DI_113

DI_111 ADD.L #65,A2
 ADD #1,D5
 CMP #CACIDX,D5
 BNE DI_110
 JMP D_DONE

DI_112 MOVE #294,D7
 LEA INDNAME,A0
 JSR ADDPATH
 JSR F_CREATE
 TST.L D0
 BPL DI_230
 LEA INDNAME,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DI_112
 JMP D_ERROR

DI_230 MOVE D0,FHANDLE

DI_231 MOVE FHANDLE,A0
 MOVE.L CACIND,A1
 CLR.L D0
 MOVE D5,D0
 MULU #65,D0
 MOVE.L D0,D5
 JSR F_WRITE
 CMP.L D5,D0
 BEQ DI_240
 LEA DI_DIS0,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ DI_231
 MOVE FHANDLE,A0
 JSR F_CLOSE
 JMP D_ERROR

DI_240 MOVE FHANDLE,A0
 JSR F_CLOSE

 MOVE #1,CACHE

 LEA DT_NAME3,A0
 JSR REORGANIZE
 TST D0
 BMI D_ERROR

D_DONE CLR D0
 RTS

D_ERROR MOVE #-1,D0
 RTS

DI_DIS0 DC.B 'DROP: Disk write error',0
 EVEN

*--------------Define--------------*
* Syntax: DEFINE VARIABLE varname type(size), ...;

DODEFINE MOVE #293,D7  ;Parse VARIABLE
 JSR FINDWORD
 CMP #90,D3
 BEQ DF_101
 CMP #89,D3
 BNE SQL_ERROR

DF_101 CLR.L D0
 MOVE VAR_COUNT,D0
 MULU #EV_FSZ,D0
 ADD.L STR_VAR,D0
 MOVE.L D0,A4
 MOVE.L BUF_VAR2,A3

DEF_LOOP MOVE #300,D7 ;Field Name
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 TST VAR_COUNT
 BEQ DEF_GOOD

 MOVE #313,D7
 MOVE.L STR_VAR,A2
 MOVE VAR_COUNT,D5
DEF_FIND MOVE.L FNAME(A2),A0
 LEA TABLENM,A1
 JSR MMATCHER
 TST D0
 BPL SQL_ERROR
 ADD.L #EV_FSZ,A2
 SUB #1,D5
 BNE DEF_FIND

DEF_GOOD JSR GETDEF

 MOVE.L A3,FVALU(A4)
 MOVE FSIZE(A4),D0
DEF_100 CLR.B (A3)+
 DBF D0,DEF_100
 CLR.B (A3)+
 MOVE.L A3,BUF_VAR2

 ADD #1,VAR_COUNT
 ADD.L #EV_FSZ,A4

 MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ DEF_DONE
 CMP.B #',',D0
 BNE SQL_ERROR

 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP DEF_LOOP

DEF_DONE JMP FINDTERM

*--------------Clear Variables--------------*
* Syntax: CLEAR VARIABLES;
*               SHOW;

DOCLEAR MOVE #293,D7  ;Parse VARIABLE

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BNE DOC_99

 TST OBJCNT
 BEQ FINDTERM
 TST OBJTER
 BEQ FINDTERM

 CLR COUNT
CLRED1 CLR.L D2
 MOVE COUNT,D2
 MULU #OBRECSZ,D2
 ADD.L #OBRECS,D2
 MOVE.L D2,A4
 TST OB_TYPE(A4)
 BNE CLRED2
 MOVE.L OB_TEREC(A4),A0
 MOVE.L HTEXT(A0),A0
 MOVE #100,D3
CLRED3 CLR.B (A0)+
 DBF D3,CLRED3
 MOVE.L OB_TEREC(A4),A0
 JSR TEACTIVE
 MOVE COUNT,D0
 JSR OBJ_DRAW
CLRED2 ADD #1,COUNT
 MOVE COUNT,D0
 CMP OBJCNT,D0
 BNE CLRED1
 JMP FINDTERM

DOC_99 JSR FINDWORD
 CMP #90,D3
 BEQ DOC_100
 CMP #92,D3
 BEQ DOCLEAR2
 CMP #89,D3
 BNE SQL_ERROR

DOC_100 CLR VAR_COUNT
 MOVE.L BUF_VAR,BUF_VAR2

 MOVE #MAX_VARS*EV_FSZ,D0
 MOVE.L STR_VAR,A0
DOC_101 CLR.B (A0)+
 DBF D0,DOC_101

 MOVE #SIZ_VAR,D0
 MOVE.L BUF_VAR,A0
DOC_102 CLR.B (A0)+
 DBF D0,DOC_102

 JMP FINDTERM

DOCLEAR2 CLR FRMTNBR  ;Clear show
 MOVE #1,PFIRST
 MOVE #1,PFIRST2
 CLR PYPOS
 CLR PXPOS
 JSR CLRPBUFF
 JMP FINDTERM

*--------------Let--------------*
* Syntax: LET fieldname=expression,...;

DOLET MOVE #293,D7
 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL,A1
 MOVE #MAX_SEL,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_SEL2
 MOVE D1,S_FLDCNT
 MOVE D2,S_PAREN1

 MOVE #293,D7
 TST D1
 BEQ SQL_ERROR

 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_SEL2

 MOVE.L STR_WHERE,A0
 CLR D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 MOVE S_FLDCNT,D0
 MOVE S_PAREN1,D1
 MOVE #1,D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A0
 JSR FINEXPRESS
 TST D0
 BMI SQL_ERROR
 JMP FINDTERM

*--------------Print--------------*
* Syntax: PRINT expr,expr,... [USE formatnumber];

DOPRINT MOVE #293,D7
 MOVE.L STR_SEL,A0  ;Get field expressions
 MOVE.L BUF_SEL,A1
 MOVE #MAX_SEL,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_SEL2
 MOVE D1,S_FLDCNT
 MOVE D2,S_PAREN1

 TST S_FLDCNT
 BEQ FINDTERM

 CLR FRMTNBR
 JSR FINDWORD
 CMP #53,D3 ;USE
 BNE DOPRNT2

 MOVE #244,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 JSR FINDVAL
 MOVE D0,FRMTNBR

DOPRNT2 MOVE.L STR_SEL,A0 ;Set system and user variables
 MOVE.L BUF_SEL2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_SEL2

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 CLR D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 MOVE S_FLDCNT,D0
 MOVE S_PAREN1,D1
 MOVE #1,D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE FRMTNBR,D0
 JSR PRNTLINE
 TST D0
 BMI SQL_ERROR

 MOVE #247,D7
 TST SHOWESC
 BNE SQL_ERROR
 JMP FINDTERM

*--------------Output To--------------*
* Syntax: OUTPUT TO device;
* Device:  0-Screen 1-Printer 2-File 3-Mail Merge
*          4-Form   5-Serial Port

DOOUTPUT MOVE #293,D7
 JSR FINDWORD  ;Parse TO
 CMP #52,D3
 BNE SQL_ERROR

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 JSR UPPER

 MOVE #314,D7

 MOVE #1,D1
 CMP.B #'P',D0
 BEQ OT_100
 MOVE #4,D1
 CMP.B #'F',D0
 BEQ OT_100
 MOVE #0,D1
 CMP.B #'S',D0
 BEQ OT_100
 MOVE #5,D1
 CMP.B #'R',D0
 BEQ OT_100
 MOVE #2,D1
 CMP.B #'A',D0
 BEQ OT_101
 CMP.B #'B',D0
 BEQ OT_101
 CMP.B #'C',D0
 BEQ OT_101
 CMP.B #'D',D0
 BEQ OT_101
 CMP.B #'E',D0
 BEQ OT_101
 CMP.B #'F',D0
 BEQ OT_101

 CMP.B #'M',D0  ;REGENT WORD II MERGE
 BNE SQL_ERROR
 JSR MOVERT
 JSR ED_CALC
 MOVE.B (A0),D0
 MOVE #3,D1

OT_101 MOVE D1,DEVICE

 MOVE #293,D7

 LEA OUTDEVICE,A1
 MOVE.B D0,(A1)+
 MOVE #99,D5
OT_102 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B #';',D0
 BEQ OUP103
 MOVE.B D0,(A1)+
 DBF D5,OT_102

OUP103 CLR.B (A1)+
 JMP FINDTERM

OT_100 MOVE D1,DEVICE
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 JMP FINDTERM

*--------------Format--------------*
* Syntax: FORMAT HEADER n: oper1,oper2,...;
*         FORMAT FOOTER n: oper1,oper2,...;
*         FORMAT BREAK n: oper1,oper2,... [CLEAR];
*         FORMAT SET variable=value;
* oper: %exprnumber(width,n,n') n=1 Word Wrap active, n'=# of lines

* PCON 0-END 1-10 FORMAT # 20-PARAMETERS
*  21-HEADER1 22-HEADER2 23-FOOTER1 24-FOOTER2
*  25+ BREAK POINT

* PTYP 1-99 FIELD #  100-SPCL 101-STRING 102-N$ 103-L$ 104-C$
*  105-R$ 106-B$ 107-E$ 108-U$ 109-N/A 110-P$ 111-N/A 112-FONT
*  113-TAB 114-D$ 115-T$ 116-@$ 117-CHECK

*------------------FORMAT RECORDS-------------------
PCON EQU 0  ;CONNECTOR
PTYP EQU 2  ;TYPE
PVAL EQU 4  ;STRING VALUE
PCOD EQU 8  ;HEX VALUE
PWID EQU 10 ;FIELD WIDTH
PWRP EQU 12 ;WORD WRAP 0-NOT ACTIVE
PLIN EQU 14 ;# OF MULTI-LINES

PSIZE EQU 16

*Errors
*330 Unknown format command
*331 Illegal format value
*332 Expecting a = symbol
*333 Expecting a : symbol
*334 Value must be greater than zero
*335 Too many format commands defined

DOFORMAT MOVE #330,D7
 JSR FINDWORD
 CMP #40,D3
 BEQ GHEADER
 CMP #41,D3
 BEQ GFOOTER
 CMP #91,D3
 BEQ GBREAK
 CMP #25,D3 ;Set
 BNE GFORMAT

* FORMAT SET

HS100 JSR FINDWORD
 CMP.B #42,D3
 BCS SQL_ERROR
 CMP.B #51,D3
 BCC SQL_ERROR
 SUB.B #42,D3
 AND.L #$FF,D3
 MULU #2,D3
 ADD.L #SETPAGE,D3
 MOVE.L D3,A4

 MOVE #332,D7
 JSR FINDCHAR
 CMP.B #'=',D0
 BNE SQL_ERROR
 MOVE #293,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JSR FINDVAL
 MOVE D0,(A4)

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #',',D0
 BNE GF_DONE
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP HS100

* FORMAT n: ...;

GFORMAT MOVE FHOLDX,CURSX
 MOVE #331,D7
 JSR FINDVAL
 CMP #20,D0
 BCC SQL_ERROR
 MOVE D0,HFTYPE
 JMP FORMIT

* FORMAT HEADER n: ...;

GHEADER MOVE #331,D7
 JSR FINDVAL
 CMP #3,D0
 BCC SQL_ERROR
 ADD #20,D0
 MOVE D0,HFTYPE
 JMP FORMIT

* FORMAT FOOTER n: ...;

GFOOTER MOVE #331,D7
 JSR FINDVAL
 CMP #3,D0
 BCC SQL_ERROR
 ADD #22,D0
 MOVE D0,HFTYPE
 JMP FORMIT

* FORMAT BREAK n: ...;

GBREAK MOVE #331,D7
 JSR FINDVAL
 ADD #24,D0
 MOVE D0,HFTYPE
 JMP FORMIT

* GET BODY OF FORMAT

FORMIT MOVE #333,D7
 JSR FINDCHAR
 CMP.B #':',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE HFTYPE,D0
 JSR GARBAGE

HF_LOOP JSR HFCALC

 CLR PWID(A4)
 CLR PWRP(A4)
 MOVE #100,PLIN(A4)

 JSR FINDWORD
 MOVE #112,HFTEMP
 CMP.B #54,D3
 BEQ HF130
 MOVE #100,HFTEMP
 CMP.B #39,D3
 BEQ HF130
 MOVE #117,HFTEMP
 CMP.B #80,D3
 BEQ HF1010
 MOVE #113,HFTEMP
 CMP.B #38,D3
 BNE HF101

HF130 MOVE #293,D7
 JSR FINDCHAR
 CMP.B #'(',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

HF103 MOVE #331,D7
 JSR FINDVAL
 CMP #256,D0
 BCC SQL_ERROR

 MOVE #334,D7
 CMP #112,HFTEMP
 BNE HXFTR800
 TST D0
 BEQ SQL_ERROR
 CMP #5,D0
 BCC SQL_ERROR

HXFTR800 MOVE D0,PCOD(A4)
 MOVE HFTYPE,PCON(A4)
 MOVE HFTEMP,PTYP(A4)

 MOVE #330,D7
 JSR FINDCHAR
 CMP.B #')',D0
 BEQ HF102
 CMP.B #',',D0
 BNE SQL_ERROR

 MOVE #293,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 ADD #1,PCOUNT
 JSR HFCALC
 CMP #PMAX,PCOUNT
 BNE HF103
 MOVE #335,D7
 JMP SQL_ERROR

HF1010 MOVE #293,D7  ;Check writing
 JSR FINDCHAR
 CMP.B #'(',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JSR FINDCHAR
 CMP.B #'%',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE #331,D7
 JSR FINDVAL
 CMP #256,D0
 BCC SQL_ERROR

 MOVE D0,PCOD(A4)
 MOVE HFTYPE,PCON(A4)
 MOVE HFTEMP,PTYP(A4)

 MOVE #293,D7
 JSR FINDCHAR
 CMP.B #')',D0
 BNE SQL_ERROR
 JMP HF102

HF101 MOVE FHOLDX,CURSX

 MOVE #330,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 JSR UPPER
 LSL #8,D0
 AND.L #$FF00,D0
 MOVE.B 1(A0),D0

 MOVE #102,D1
 CMP #'N$',D0
 BEQ HF110
 MOVE #103,D1
 CMP #'L$',D0
 BEQ HF110
 MOVE #104,D1
 CMP #'C$',D0
 BEQ HF110
 MOVE #105,D1
 CMP #'R$',D0
 BEQ HF110
 MOVE #106,D1
 CMP #'B$',D0
 BEQ HF110
 MOVE #107,D1
 CMP #'E$',D0
 BEQ HF110
 MOVE #108,D1
 CMP #'U$',D0
 BEQ HF110
 MOVE #110,D1
 CMP #'P$',D0
 BEQ HF110
 MOVE #114,D1
 CMP #'D$',D0
 BEQ HF110
 MOVE #115,D1
 CMP #'T$',D0
 BEQ HF110
 MOVE #116,D1
 CMP #'@$',D0
 BNE HF120

HF110 MOVE HFTYPE,PCON(A4)
 MOVE D1,PTYP(A4)

 MOVE #293,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP HF102

HF120 JSR FINDCHAR  ;String
 TST D0
 BMI SQL_ERROR
 CMP.B #39,D0  ;'
 BEQ HF200
 CMP.B #34,D0  ;"
 BNE HF121
HF200 MOVE.B D0,HFTERM

 MOVE.L PBUFPTR,PVAL(A4)
 MOVE #101,PTYP(A4)
 MOVE HFTYPE,PCON(A4)
 MOVE.L PBUFPTR,A3

HF201 JSR MOVERT
 TST D0
 BMI HF202
 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B HFTERM,D0
 BEQ HF202
 MOVE.B D0,(A3)+
 JMP HF201
HF202 CLR.B (A3)+
 MOVE.L A3,PBUFPTR
 JMP HF102

HF121 MOVE #293,D7  ;Print field expression
 JSR FINDCHAR
 CMP.B #'%',D0
 BNE SQL_ERROR

 MOVE #331,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JSR FINDVAL
 CMP #100,D0
 BCC SQL_ERROR
 MOVE D0,PTYP(A4)
 MOVE HFTYPE,PCON(A4)

 MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #'(',D0
 BNE HF_RCRS
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 MOVE #331,D7
 JSR FINDVAL
 TST D0
 BEQ SQL_ERROR
 MOVE D0,PWID(A4)
 MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #')',D0
 BEQ HF102
 CMP.B #',',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 MOVE #293,D7
 JSR FINDVAL
 TST D0
 BMI SQL_ERROR
 MOVE D0,PWRP(A4)
 JSR FINDCHAR
 CMP.B #')',D0
 BEQ HF102
 CMP.B #',',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 MOVE #293,D7
 JSR FINDVAL
 TST D0
 BMI SQL_ERROR
 MOVE D0,PLIN(A4)

HF102 MOVE #293,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

HF_RCRS MOVE #330,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ GF_DONE
 CMP.B #',',D0
 BNE GF_NCMA
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

GF_NCMA ADD #1,PCOUNT
 CMP #PMAX,PCOUNT
 BNE HF_LOOP

GF_DONE JMP FINDTERM

HFCALC CLR.L D0
 MOVE PCOUNT,D0
 MULU #PSIZE,D0
 ADD.L PBUFFER,D0
 MOVE.L D0,A4
 RTS

******************************************
* REMOVE TYPE ENTRIES FROM FORMAT BUFFER *
******************************************

GARBAGE MOVE D0,D6

 CLR.L D0
 MOVE.L PGARBAGE,A0
GAR99 CLR.B (A0)+
 ADD.L #1,D0
 CMP.L #PSIZE*PMAX,D0
 BNE GAR99

 CLR COUNT
 MOVE.L PBUFFER,A4
 MOVE.L PGARBAGE,A3
 MOVE.L PGARBUF,A2

GAR100 TST PCON(A4)
 BEQ GAR200
 CMP PCON(A4),D6
 BEQ GAR101

 MOVE PCON(A4),PCON(A3)
 MOVE PTYP(A4),PTYP(A3)
 MOVE PCOD(A4),PCOD(A3)
 MOVE PWID(A4),PWID(A3)
 MOVE PWRP(A4),PWRP(A3)
 MOVE PLIN(A4),PLIN(A3)

 TST.L PVAL(A4)
 BEQ GAR101A
 MOVE.L A2,PVAL(A3)
 MOVE.L PVAL(A4),A0
GAR102 MOVE.B (A0)+,D0
 MOVE.B D0,(A2)+
 TST.B D0
 BNE GAR102

GAR101A ADD.L #PSIZE,A3

GAR101 ADD.L #PSIZE,A4
 ADD #1,COUNT
 CMP #PMAX,COUNT
 BNE GAR100

GAR200 CLR.L D0
 MOVE.L PBUFFER,A0
GAR210 CLR.B (A0)+
 ADD #1,D0
 CMP #PSIZE*PMAX,D0
 BNE GAR210

 CLR PCOUNT
 MOVE.L PGARBAGE,A3
 MOVE.L PBUFFER,A4
 MOVE.L PBUF,A2

GAR201 MOVE PCON(A3),D0
 BEQ GAR300

 MOVE PCON(A3),PCON(A4)
 MOVE PTYP(A3),PTYP(A4)
 MOVE PCOD(A3),PCOD(A4)
 MOVE PWID(A3),PWID(A4)
 MOVE PWRP(A3),PWRP(A4)
 MOVE PLIN(A3),PLIN(A4)

 TST.L PVAL(A3)
 BEQ GAR202

 MOVE.L A2,PVAL(A4)
 MOVE.L PVAL(A3),A0
GAR203 MOVE.B (A0)+,D0
 MOVE.B D0,(A2)+
 TST.B D0
 BNE GAR203

GAR202 ADD.L #PSIZE,A4
 ADD.L #PSIZE,A3

 ADD #1,PCOUNT
 CMP #PMAX,PCOUNT
 BNE GAR201

GAR300 MOVE.L A2,PBUFPTR
GARDONE RTS

*--------------Show--------------*
* Syntax: SHOW;
*         SHOW PAGE n;

DOSHOW CLR D0
 JSR SHWMOUSE

 MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BNE SHOWLY

 JSR DOSHOWNUFF  ;Show screen device S: window

 MOVE #247,D7
 TST SHOWESC
 BNE SQL_ERROR
 JMP FINDTERM

SHOWLY JSR FINDWORD
 CMP #42,D3
 BNE SQL_ERROR

 MOVE #322,D7
 JSR FINDVAL
 TST D0
 BEQ SQL_ERROR
 CMP #4,D0
 BGT SQL_ERROR
 SUB #1,D0
 CMP PAGENUM,D0
 BEQ FINDTERM
 MOVE D0,PAGENUM

 JSR SETPAGER
 JSR CLS

 MOVE SQNCTYPE,-(A7)  ;Activate first edit field on new page
 MOVE #1,SQNCTYPE
 JSR FINDDEFLT
 ADD #1,D3
 MOVE D3,ACTIVE
 MOVE (A7)+,SQNCTYPE

PAGING DC $A00A
 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SHOWUP3
 JSR UPDATE
SHOWUP2 MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SHOWUP3
 TST HOLDW
 BEQ SHOWUP3
 TST HOLDH
 BEQ SHOWUP3
 JSR UPDATE
 JMP SHOWUP2
SHOWUP3 DC $A009
 JMP FINDTERM

*--------------Show S: Device Buffer--------------*

DOSHOWNUFF MOVE WINDFLAG,SHOWFLAG

 JSR CLOSEW
 JSR OPENSHOW
 JSR MENUSET5
 CLR D0
 JSR SHWMOUSE

 CLR SHOWX
 CLR SHOWY
 CLR SHOWESC

SHOWLOOP CLR D0
 JSR WIND_UPDATE
 JSR GT_EVENT
 MOVE #1,D0
 JSR WIND_UPDATE

 MOVE EVWHICH,D0
 AND #$10,D0
 BEQ SHOW2

 MOVE EVMESG+6,D1
 CMP WIHANDLE,D1
 BNE SHOWLOOP

 MOVE EVMESG,D0   ;Message event
 CMP #20,D0
 BEQ SHOWDRAW
 CMP #24,D0
 BEQ SHOWARROW
 CMP #25,D0
 BEQ SHOWHSLID
 CMP #26,D0
 BEQ SHOWVSLID
 JMP SHOWLOOP

SHOWDRAW DC $A00A
 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SHOWLOOP
 JSR SHOWING
 DC $A009
 JMP SHOWLOOP

SHOWARROW MOVE EVMESG+8,D0
 BEQ SHOWPGUP
 CMP #1,D0
 BEQ SHOWPGDN
 CMP #2,D0
 BEQ SHOWLNUP
 CMP #3,D0
 BEQ SHOWLNDN
 CMP #4,D0
 BEQ SHOWPGLFT
 CMP #5,D0
 BEQ SHOWPGRGT
 CMP #6,D0
 BEQ SHOWLFT
 CMP #7,D0
 BEQ SHOWRGT
 JMP SHOWLOOP

SHOWPGDN MOVE SHOWY,D0
 ADD #SHOWLINE,D0
 CMP #PRNTBLN-SHOWLINE,D0
 BLT SHOWPGY2
 MOVE #PRNTBLN-SHOWLINE,D0
SHOWPGY2 MOVE D0,SHOWY
 JMP SHOWIT

SHOWPGUP CMP #SHOWLINE,SHOWY
 BGT SHOWPGY3
 CLR SHOWY
 JMP SHOWIT
SHOWPGY3 MOVE SHOWY,D0
 SUB #SHOWLINE,D0
 MOVE D0,SHOWY
 JMP SHOWIT

SHOWLNDN MOVE SHOWY,D0
 ADD #1,D0
 CMP #PRNTBLN-SHOWLINE,D0
 BGT SHOWIT
 MOVE D0,SHOWY
 JMP SHOWIT

SHOWLNUP TST SHOWY
 BEQ SHOWLOOP
 SUB #1,SHOWY
 JMP SHOWIT

SHOWPGRGT MOVE SHOWX,D0
 ADD #SHOWCHAR,D0
 CMP #PRNTBCR-SHOWCHAR,D0
 BLT SHOWPGY4
 MOVE #PRNTBCR-SHOWCHAR,D0
SHOWPGY4 MOVE D0,SHOWX
 JMP SHOWIT

SHOWPGLFT CMP #SHOWCHAR,SHOWX
 BGT SHOWPGY5
 CLR SHOWX
 JMP SHOWIT
SHOWPGY5 MOVE SHOWX,D0
 SUB #SHOWCHAR,D0
 MOVE D0,SHOWX
 JMP SHOWIT

SHOWRGT MOVE SHOWX,D0
 ADD #1,D0
 CMP #PRNTBCR-SHOWCHAR,D0
 BGT SHOWIT
 MOVE D0,SHOWX
 JMP SHOWIT

SHOWLFT TST SHOWX
 BEQ SHOWLOOP
 SUB #1,SHOWX

SHOWIT MOVE WINDX,HOLDX
 MOVE WINDY,HOLDY
 MOVE WINDW,HOLDW
 MOVE WINDH,HOLDH
 JSR SHOWING
 JMP SHOWTHUMBS

SHOWHSLID CLR.L D1  ;Horizontal slider
 MOVE #PRNTBCR-1,D1
 CLR.L D0
 MOVE EVMESG+8,D0
 MULU D1,D0
 DIVU #1000,D0
 AND.L #$FFFF,D0
 MOVE D0,SHOWX
 JSR SHOWING
 JMP SHOWTHUMBS

SHOWVSLID CLR.L D1  ;Verticle slider
 MOVE #PRNTBLN-1,D1
 CLR.L D0
 MOVE EVMESG+8,D0
 MULU D1,D0
 DIVU #1000,D0
 AND.L #$FFFF,D0
 MOVE D0,SHOWY
 JSR SHOWING

SHOWTHUMBS MOVE #105,CONTRL
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #8,INTIN+2
 MOVE SHOWX,D0
 MULU #1000,D0
 DIVU #PRNTBCR-SHOWCHAR,D0
 MOVE D0,INTIN+4
 JSR AES

 MOVE #105,CONTRL
 MOVE #6,CONTRL+2
 MOVE #1,CONTRL+4
 CLR CONTRL+6
 CLR CONTRL+8
 MOVE WIHANDLE,INTIN
 MOVE #9,INTIN+2
 MOVE SHOWY,D0
 MULU #1000,D0
 DIVU #PRNTBLN-SHOWLINE,D0
 MOVE D0,INTIN+4
 JSR AES
 JMP SHOWLOOP

SHOW2 MOVE EVWHICH,D0
 AND #1,D0
 BEQ SHOWLOOP

 MOVE EVKEY,D0
 CMP.B #27,D0
 BNE SHOWQUIT
 MOVE #1,SHOWESC

SHOWQUIT JSR CLOSEW
 JSR OPENWIND
 JSR MENUSET6
 JSR MENUSET1

SHOWQUIT2 JSR GT_MESSAGE
 MOVE EVMESG+6,D1
 CMP WIHANDLE,D1
 BNE SHOWQUIT2
 CMP #20,EVMESG
 BEQ SHOWQUIT3

 MOVE EVWHICH,D0   ;Check for escape key
 AND #1,D0
 BEQ SHOWQUIT2
 MOVE EVKEY,D0
 CMP.B #27,D0
 BNE SHOWQUIT2
 MOVE #1,SHOWESC
 JMP SHOWQUIT2

SHOWQUIT3 CLR EVWHICH

 DC $A00A
 MOVE #11,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SHOW301
 JSR UPDATE
SHOW300 MOVE #12,INTIN+2
 JSR WIND_GET
 TST INTOUT
 BEQ SHOW301
 TST HOLDW
 BEQ SHOW301
 TST HOLDH
 BEQ SHOW301
 JSR UPDATE
 JMP SHOW300
SHOW301 DC $A009
 RTS

* Redraw show screen

SHOWING JSR NOCLIP
 JSR TRANSOFF
 CLR D0
 JSR SETCOLOR
 MOVE #1,D0
 JSR SETFILL
 CLR D0
 JSR FILLPERI

 CLR D0
 JSR GEMFX
 JSR TRANSOFF
 MOVE #9,D0
 CMP #2,GRMODE
 BNE SHOWING6
 MOVE #10,D0
SHOWING6 JSR GEMTSIZE
 MOVE #1,D0
 JSR GEMCOLOR

 CLR SHOWCNT

 MOVE #8,D0
 CMP #2,GRMODE
 BNE SHOWING7
 LSL #1,D0
SHOWING7 ADD WINDY,D0
 MOVE D0,SHOWY2

SHOWING2 MOVE WINDX,D0
 ADD #8,D0
 AND #$FFF8,D0
 MOVE D0,PTSIN
 MOVE SHOWY2,PTSIN+2

 CLR.L D0
 MOVE SHOWY,D0
 ADD SHOWCNT,D0
 MULU #PRNTBCR,D0
 ADD SHOWX,D0
 ADD.L PRNTBUFF,D0
 MOVE.L D0,A0

 LEA INTIN,A1
 CLR.L D1
SHOW101 CLR.L D0
 MOVE.B (A0)+,D0
 BEQ SHOW102
 MOVE D0,(A1)+
 ADD #1,D1
 CMP #SHOWCHAR,D1
 BNE SHOW101

SHOW102 CLR.B (A1)
 MOVE #8,CONTRL
 MOVE #1,CONTRL+2
 MOVE D1,CONTRL+6
 MOVE GRHANDLE,CONTRL+12
 JSR VDI

 MOVE #8,D0
 CMP #2,GRMODE
 BNE SHOWING8
 LSL #1,D0
SHOWING8 ADD D0,SHOWY2

 ADD #1,SHOWCNT
 CMP #SHOWLINE,SHOWCNT
 BNE SHOWING2
 JMP NOCLIP

SHOWCNT DC 0
SHOWX DC 0
SHOWX2 DC 0
SHOWY DC 0
SHOWY2 DC 0

*--------------Goto--------------*

DOGOTO MOVE CURSX,ERRORX

 MOVE #317,D7
 JSR GETNAME
 TST D0
 BMI SQL_ERROR2

 MOVE #244,D7
 JSR FINDCHAR
 CMP.B #';',D0
 BNE SQL_ERROR2

 MOVE #317,D7
 MOVE.L STR_LBL,A4
 CLR D5

DOGOTO1 MOVE.L FNAME(A4),A0
 LEA TABLENM,A1
 JSR MMATCHER
 TST D0
 BEQ DOGOTO2
 ADD.L #EV_FSZ,A4
 ADD #1,D5
 CMP FL_COUNT,D5
 BNE DOGOTO1
 JMP SQL_ERROR2

DOGOTO2 MOVE FPOSI(A4),CURSX
 JMP DOSEQUEL

*--------------If Then--------------*

DOIFTHEN MOVE #293,D7
 MOVE.L STR_WHERE,A0  ;Where
 MOVE.L BUF_WHERE,A1
 MOVE #MAX_WHERE,D0
 JSR GETEXPRESS
 TST D0
 BMI SQL_ERROR
 MOVE.L A0,BUF_W2
 MOVE D1,S_WCOUNT
 MOVE D2,S_WPAREN

 MOVE #318,D7 ;Then
 JSR FINDWORD
 CMP #65,D3
 BNE SQL_ERROR

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_W2

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 MOVE S_WCOUNT,D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 MOVE S_WCOUNT,D0
 MOVE S_WPAREN,D1
 CLR D2
 JSR EXPRESS
 TST D0
 BMI SQL_ERROR
 BNE DOGOTO

 MOVE #244,D7
IFTHEN2 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ FINDTERM
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP IFTHEN2

*--------------Rem/Remark--------------*

DOREM MOVE #244,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ FINDTERM
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP DOREM

*--------------Bell--------------*

DOBELL LEA BELCHR,A0
 JSR STRING
 JMP FINDTERM

BELCHR DC.B 7,0
 EVEN

*--------------Pause--------------*

DOPAUSE MOVE #302,D7
 JSR FINDVAL
 CMP #120,D0
 BGT SQL_ERROR
 MOVE D0,PAUSEVAL1

DOP1 MOVE #1000,PAUSEVAL2

DOP2 JSR KEYSTOP
 TST D0
 BNE FINDTERM

 SUB #1,PAUSEVAL2
 TST PAUSEVAL2
 BNE DOP2

 SUB #1,PAUSEVAL1
 TST PAUSEVAL1
 BNE DOP1

 JMP FINDTERM

PAUSEVAL1 DC 0
PAUSEVAL2 DC 0

*--------------Report--------------*

DOREPORT MOVE #293,D7

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR

 LEA INFOMES,A1
 MOVE #75,D5
DOREPT2 JSR ED_CALC
 MOVE.B (A0),D1
 BEQ DOREPT3
 CMP.B #';',D1
 BEQ DOREPT3
 MOVE.B D1,(A1)+
 JSR MOVERT
 DBF D5,DOREPT2
DOREPT3 CLR.B (A1)+

 LEA INFOMES,A0
 JSR SETMES
 JMP FINDTERM

*--------------Title--------------*

DOTITLE MOVE #293,D7

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR

 LEA OBJNAME,A1
 MOVE #75,D5
DOTIT2 JSR ED_CALC
 MOVE.B (A0),D1
 BEQ DOTIT3
 CMP.B #';',D1
 BEQ DOTIT3
 MOVE.B D1,(A1)+
 JSR MOVERT
 DBF D5,DOTIT2
DOTIT3 CLR.B (A1)+

 MOVE.L #OBJNAME,INTIN+4
 JSR SETTITLE

 JMP FINDTERM

*--------------Onerr--------------*

DOONERR MOVE #293,D7
 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR2

 MOVE CURSX,ONERRX

 JSR FINDWORD
 CMP #59,D3
 BEQ OE_OFF
 MOVE FHOLDX,CURSX

 MOVE #244,D7
OE_100 JSR ED_CALC
 MOVE.B (A0),D0
 BEQ SQL_ERROR2
 CMP.B #';',D0
 BEQ FINDTERM
 JSR MOVERT
 TST D0
 BMI SQL_ERROR2
 JMP OE_100

OE_OFF CLR ERRORX
 MOVE #-1,ONERRX
 JSR FINDTERM

*--------------User$--------------*

DOUSER CLR D0
 JSR SHWMOUSE
 JMP MAINLOOP

USER_ENTRY JMP FINDTERM

*--------------Edit--------------*

DOEDITOB MOVE #293,D7
 JSR FINDCHAR
 CMP.B #'%',D0
 BNE DO_EDN200

 MOVE #203,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE #209,D7
 JSR FINDCHAR
 CMP.B #'0',D0
 BLT SET_ED400
 CMP.B #'9',D0
 BLT DO_EDN200

* Find object name

SET_ED400 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR

 LEA TABLENM,A1
 MOVE #18,D4
SET_ED401 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B #' ',D0
 BEQ SET_ED402
 CMP.B #',',D0
 BEQ SET_ED402
 CMP.B #';',D0
 BEQ SET_ED402
 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 DBF D4,SET_ED401
SET_ED402 CLR.B (A1)

 TST OBJCNT
 BEQ SQL_ERROR

 LEA TABLENM,A1
 CLR D5
SET_ED410 CLR.L D0
 MOVE D5,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 MOVE.L OB_NAME(A2),A0
 JSR MMATCHER
 TST D0
 BPL SET_ED411
 ADD #1,D5
 CMP OBJCNT,D5
 BNE SET_ED410
 JMP SQL_ERROR

SET_ED411 MOVE D5,D0
 ADD #1,D0
 JMP DO_EDN201

DO_EDN200 MOVE #209,D7
 JSR FINDVAL
 CMP #1,D0
 BLT SQL_ERROR

DO_EDN201 CMP OBJCNT,D0
 BGT SQL_ERROR

 CLR.L D1
 MOVE D0,D1
 SUB #1,D1
 MULU #OBRECSZ,D1
 ADD.L #OBRECS,D1
 MOVE.L D1,A4
 TST OB_TYPE(A4)
 BNE SQL_ERROR

 MOVE D0,-(A7)
 MOVE OB_PAGE(A4),-(A7)

 TST ACTIVE
 BEQ DOED100
 CLR.L D0
 MOVE ACTIVE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A0
 TST OB_TYPE(A0)
 BNE DOED100
 MOVE.L OB_TEREC(A0),A0
 JSR TEDEACT

DOED100 MOVE (A7)+,D0
 MOVE (A7)+,ACTIVE
 CMP PAGENUM,D0
 BEQ FINDTERM
 MOVE D0,PAGENUM

 JSR SETPAGER
 JSR CLS
 JMP PAGER

*--------------Set--------------*
* Syntax: SET %objname|number DEC(n.e)|INT(n)|DATE|EDATE|SDATE|LDATE;

DOSET MOVE #293,D7
 JSR FINDCHAR
 CMP.B #'%',D0
 BNE SQL_ERROR

 MOVE #203,D7
 JSR MOVERT
 TST D0
 BMI SQL_ERROR

 MOVE #209,D7
 JSR FINDCHAR
 CMP.B #'0',D0
 BLT SET_400
 CMP.B #'9',D0
 BGT SET_400

 JSR FINDVAL
 CMP #1,D0
 BLT SQL_ERROR
 CMP OBJCNT,D0
 BGT SQL_ERROR
 SUB #1,D0
 CLR.L D1
 MOVE D0,D1
 MULU #OBRECSZ,D1
 ADD.L #OBRECS,D1
 MOVE.L D1,A2
 JMP SET_411

* Find object name

SET_400 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR

 LEA TABLENM,A1
 MOVE #18,D4
SET_401 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B #' ',D0
 BEQ SET_402
 CMP.B #',',D0
 BEQ SET_402
 CMP.B #';',D0
 BEQ SET_402
 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 DBF D4,SET_401
SET_402 CLR.B (A1)

 TST OBJCNT
 BEQ SQL_ERROR

 LEA TABLENM,A1
 CLR D5
SET_410 CLR.L D0
 MOVE D5,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 MOVE.L OB_NAME(A2),A0
 JSR MMATCHER
 TST D0
 BPL SET_411
 ADD #1,D5
 CMP OBJCNT,D5
 BNE SET_410
 JMP SQL_ERROR

SET_411 MOVE.L STR_SEL,A4
 JSR GETDEF2
 TST D0
 BMI SQL_ERROR

 MOVE FTYPE(A4),OB_DEF(A2)
 MOVE FSIZE(A4),OB_DEF2(A2)
 MOVE FEXTR(A4),OB_EXTR(A2)

 TST OB_TYPE(A2)
 BNE SET_420
 MOVE.L OB_TEREC(A2),A1
 MOVE FSIZE(A4),TELENGTH(A1)

 MOVE FTYPE(A4),D0
 CMP.B #'A',D0
 BEQ SET_419
 CMP.B #'E',D0
 BEQ SET_419
 CMP.B #'S',D0
 BEQ SET_419
 CMP.B #'L',D0
 BNE SET_420
SET_419 MOVE #8,TELENGTH(A1)
 MOVE #8,OB_DEF2(A2)
 CLR OB_EXTR(A2)

SET_420 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ FINDTERM
 CMP.B #',',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP DOSET

*--------------Return--------------*
DORETURN JMP DOQUIT

*--------------System--------------*
DOSYSTEM JMP DOQUIT2

*--------------GEM/Brun--------------*
DOGEM JSR FINDCHAR
 TST D0
 BMI SQL_ERROR
 CMP.B #';',D0
 BEQ DOSYSTEM

 MOVE #293,D7
 LEA TABLENM,A4
 MOVE #79,D5
DOGEM30 JSR ED_CALC
 MOVE.B (A0),D0
 BEQ SQL_ERROR
 CMP.B #' ',D0
 BEQ DORUN20
 CMP.B #';',D0
 BEQ DORUN20
 MOVE.B D0,(A4)+
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 DBF D5,DOGEM30

DORUN20 CLR.B (A4)+

 MOVE #11,D0
 LEA TABLENM,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
DOGEM31 MOVE.B (A0)+,(A1)+
 DBF D0,DOGEM31

 JSR FINDCHAR
 TST D0
 BMI SQL_ERROR

 MOVE #244,D7
 LEA FORMFILE,A1
DORUN4 JSR ED_CALC
 MOVE.B (A0),D0
 BEQ SQL_ERROR
 CMP.B #';',D0
 BEQ DORUNIT
 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP DORUN4
DORUNIT CLR.B (A1)

DORUNNING MOVE #121,CONTRL  ;Shell_write
 MOVE #3,CONTRL+2
 MOVE #1,CONTRL+4
 MOVE #2,CONTRL+6
 CLR CONTRL+8
 MOVE #1,INTIN
 MOVE #1,INTIN+2
 MOVE #1,INTIN+4
 JSR ADDPATH
 MOVE.L #TABLENM,ADDRIN
 MOVE.L #FORMFILE,ADDRIN+4
 JSR AES

 JMP DOQUIT2

*--------------Run--------------*
DORUN MOVE #293,D7
 JSR GETNAME
 TST D0
 BMI SQL_ERROR

 MOVE #11,D0
 LEA TABLENM,A0
 LEA FORMNAME,A1
 MOVE.B #12,(A1)+
DORUN10 MOVE.B (A0)+,(A1)+
 DBF D0,DORUN10

 LEA TABLENM,A0
 JSR ADDPATH
 MOVE #127,D0
 LEA FORMFILE,A1
DORUN8 MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D0
 BEQ DORUN9
 DBF D0,DORUN8
DORUN9 CLR.B (A1)

 JSR CLOSEW
 JMP LOADANDGO

*--------------Activity--------------*

DOACTIVITY MOVE #293,D7
 JSR FINDWORD
 CMP #58,D3  ;On
 BEQ DOACT2
 CMP #59,D3  ;Off
 BNE SQL_ERROR
 CLR ACTFLAG
 JMP FINDTERM
DOACT2 MOVE #1,ACTFLAG
 JMP FINDTERM

*--------------Group by--------------*
*--------------Dialog--------------*
*--------------Alert--------------*

*--------------Terminate a Command--------------*

FINDTERM MOVE #244,D7
 JSR FINDCHAR
 CMP.B #';',D0
 BNE SQL_ERROR
 JSR MOVERT
 TST D0
 BMI SQL_ERROR
 JMP DOSEQUEL

*--------------Finished--------------*

SQL_DONE CLR ERRORNUM
 CLR STATUS
 JMP DOPROCESS

*--------------Error Recovery--------------*

SQL_ERROR MOVE.L A0,ERRADR
 MOVE D7,ERRORNUM
 CLR SHOWESC

 MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI SQL_ERR2

 LEA SQLERRTBL,A0
SQL_ERR4 MOVE (A0)+,D0
 BEQ SQL_ERR2
 CMP D7,D0
 BNE SQL_ERR4

SQL_ERR3 TST ONERRX
 BMI SQL_ERR2
 MOVE ONERRX,CURSX
 JMP DOSQL3

SQL_ERROR2 MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS

SQL_ERR2 MOVE #-1,STATUS
 MOVE D7,ERRORNUM
 JMP DOPROCESS

* Any error codes in this table will cause the ONERR label
* to be jumped to.  If an error code is missing, the SQL Editor
* will be restarted, terminating the FORM.

SQLERRTBL DC 298,312,222,232,247,255,281,295,307,311
 DC 246,248,210,211,250,251,252,253,254,255,260,261,294
 DC 295,299,302,305,306,309,310,320,322,233,0

****************************
* INITIALIZE SQL PROCESSOR *
****************************

INITSQL JSR SETPRINT

 MOVE #1,S_TBLCNT  ;Init table structure
 MOVE.L STR_TBL,A0
 MOVE.L A0,A1
 MOVE #EV_FSZ-1,D0
IN_100 CLR.B (A1)+
 DBF D0,IN_100
 MOVE.L #IN_TBL,FNAME(A0)
 RTS

IN_TBL DC.B 'TABLES',0
 EVEN

****************************
* INIT PRINT FORMAT VALUES *
****************************

SETPRINT CLR DEVICE
 CLR FRMTNBR
 MOVE #1,PFIRST
 MOVE #1,PFIRST2
 CLR PYPOS
 CLR PXPOS
 CLR PCOUNT

 CLR.L D0
 MOVE.L PBUFFER,A0
 MOVE.L PGARBAGE,A1
SETP100 CLR.B (A0)+
 CLR.B (A1)+
 ADD #1,D0
 CMP #PSIZE*PMAX,D0
 BNE SETP100

 CLR.L D0
 MOVE.L PBUF,A0
 MOVE.L PGARBUF,A1
SETP200 CLR.B (A0)+
 CLR.B (A1)+
 ADD #1,D0
 CMP #PBSIZE-1,D0
 BNE SETP200

 MOVE.L PBUF,PBUFPTR

 LEA SETPVALS,A0
 LEA SETPAGE,A1
 MOVE #13,D0
SETP500 MOVE (A0)+,(A1)+
 DBF D0,SETP500

CLRPBUFF CLR.L D0
 MOVE.L PRNTBUFF,A0
CLRP1 MOVE.B #' ',(A0)+
 ADD #1,D0
 CMP #PRNTBLN*PRNTBCR,D0
 BNE CLRP1
 RTS

SETPVALS DC 1  ;PAGE
 DC 5  ;LEFT
 DC 200 ;RIGHT
 DC 3  ;TOP
 DC 3  ;BOT
 DC 1  ;SPACING
 DC 0  ;PAGE WAIT
 DC 1  ;LINE COUNTER
 DC 66 ;PAGE LENGTH
 DC 0,0,0,0,0

********************************************************
* PRINT A FORMATTED LINE TO THE SELECTED OUTPUT DEVICE *
* D0 = Format number                                   *
********************************************************

FORMAT EQU -2
FCOUNT EQU -4
PHOLD EQU -6

PRNTLINE LINK A6,#-6

 MOVE D0,FORMAT(A6)
 CLR FCOUNT(A6)

 CMP #4,DEVICE
 BEQ PT_DONE2

 TST D0
 BNE PT_LOOP
 CLR D0
 CLR D1
 CLR D2
 CLR D3
 JSR PFLFIELD
 JMP PT_DONE

PT_LOOP CLR.L D0
 MOVE FCOUNT(A6),D0
 MULU #PSIZE,D0
 ADD.L PBUFFER,D0
 MOVE.L D0,A4

 MOVE PCON(A4),D0
 TST D0
 BEQ PT_DONE
 CMP FORMAT(A6),D0
 BNE PT_RCRS3

 MOVE.L A4,-(A7)

 MOVE PTYP(A4),D0
 MOVE D0,PHOLD(A6)
 CMP #110,D0
 BEQ PT_200

 CMP #99,D0
 BCS PT_201
 CMP #100,D0
 BEQ PT_202
 CMP #101,D0
 BEQ PT_203
 CMP #117,D0
 BEQ PT_204
 CMP #102,D0
 BEQ PT_205
 CMP #103,D0
 BEQ PT_206

 CMP #112,D0
 BEQ PT_207
 CMP #113,D0
 BEQ PT_208
 CMP #114,D0
 BEQ PT_209
 CMP #115,D0
 BEQ PT_210
 CMP #116,D0
 BEQ PT_211

 CMP #106,D0
 BCS PT_ERROR
 CMP #109,D0
 BCC PT_ERROR
 SUB #106,D0
 JSR PFLBEU
 JMP PT_RCRS

PT_200 JSR PFLEJECT
 JMP PT_RCRS
PT_201 MOVE PWID(A4),D1
 MOVE PWRP(A4),D2
 MOVE PLIN(A4),D3
 JSR PFLFIELD
 JMP PT_RCRS
PT_202 JSR PFLSPCL
 JMP PT_RCRS
PT_203 JSR PFLSTR
 JMP PT_RCRS
PT_204 JSR PFLCHECK
 JMP PT_RCRS
PT_205 CMP #3,DEVICE
 BEQ PT_RCRS
 JSR PDOWN
 JMP PT_RCRS
PT_206 JSR PFLLINE
 JMP PT_RCRS
PT_207 JSR PFLFONT
 JMP PT_RCRS
PT_208 JSR PFLTAB
 JMP PT_RCRS
PT_209 JSR PFLDATE
 JMP PT_RCRS
PT_210 JSR PFLTIME
 JMP PT_RCRS
PT_211 JSR PFLPG

PT_RCRS ADD.L #4,A7

PT_RCRS3 MOVE #255,D7
 JSR KEYSTOP
 TST D0
 BNE PT_ERROR

 CMP #3,DEVICE  ;Mail Merge
 BNE PT_RCRS2
 CLR D0
 JSR OUTCHAR

PT_RCRS2 ADD #1,FCOUNT(A6)
 JMP PT_LOOP

PT_DONE CMP #110,PHOLD(A6)  ;Was P$ or N$ last command?
 BEQ PT_DONE2
 CMP #102,PHOLD(A6)
 BEQ PT_DONE2
 JSR PDOWN
PT_DONE2 UNLK A6
 CLR D0
 RTS

PT_ERROR UNLK A6
 MOVE #-1,D0
 RTS

*------------EJECT-------------
PFLEJECT CMP #3,DEVICE
 BEQ PF_RTS
 JSR PDOWN
 TST D0
 BPL PFLEJECT
 RTS

*-------------LINE-------------
PFLLINE LINK A6,#-4
 MOVE.L #PGNUMBUF,-4(A6) ;Find pointer to string

 MOVE SETLINE,D0
 LEA PGNUMBUF,A3
 JSR CONV2DEC
 MOVE.B #' ',PGNUMBUF+4
 CLR.B PGNUMBUF+5

 LEA PGNUMBUF,A0
 MOVE #3,D0
PFLLN1 CMP.B #'0',(A0)
 BNE PFLLN2
 MOVE.B #' ',(A0)+
 JMP PFLLN1

PFLLN2 MOVE.L -4(A6),A0
 MOVE.B (A0),D0
 BEQ PFLLN9
 ADD.L #1,-4(A6)
 JSR SENDCHAR
 JMP PFLLN2

PFLLN9 ADD #1,SETLINE
 UNLK A6
PF_RTS RTS

*------------FIELD------------
FLDADR EQU -4
FLDSZ EQU -6
FLDDEC EQU -8
EXPRNUM EQU -10
FLDFLAG EQU -12
FLDWID EQU -14
FLDWRP EQU -16
FLDCNT EQU -18
FLDCNT2 EQU -20
FLDCNT3 EQU -22
FLDCNT4 EQU -24
FLDLIN EQU -26
FLDADR2 EQU -30

PFLFIELD LINK A6,#-34

 MOVE D0,FLDFLAG(A6)
 MOVE D1,FLDWID(A6)
 MOVE D2,FLDWRP(A6)
 MOVE D3,FLDLIN(A6)

 TST D0
 BNE PF_ALL
 ADD #1,D0

PF_ALL MOVE D0,EXPRNUM(A6)

PF_FLOOP MOVE EXPRNUM(A6),D0

 MOVE.L STR_SEL,A2
PIZAZ1 MOVE FCONN(A2),D1
 BEQ PIZAZ2
 CMP #1,D1
 BEQ PIZAZ3
 CMP.B #19,D1
 BNE PIZAZ3
 SUB #1,D0
 TST D0
 BEQ PIZAZ4
PIZAZ3 ADD.L #EV_FSZ,A2
 JMP PIZAZ1
PIZAZ2 CMP #1,D0
 BNE PF_RETURN

PIZAZ4 MOVE #21,FLDSZ(A6)  ;Agg
 MOVE #10,FLDDEC(A6)
 MOVE.L FVAL2(A2),FLDADR(A6)
 TST FAGGR(A2)
 BNE PF_NUM

 MOVE FSIZE(A2),D2
 MOVE FEXTR(A2),D3

 CMP #2,FCALC(A2)
 BNE PIZAZ5

 MOVE #4000,D2

 MOVE.L FVAL2(A2),A1
 MOVE FTYPE(A2),D1
 CMP.B #'I',D1
 BEQ PIZAZ6
 CMP.B #'D',D1
 BEQ PIZAZ6
 CMP.B #3,D1
 BNE PFZZ_404
PIZAZ6 MOVE #21,D2
 MOVE #10,D3
 JMP PFZZ_404

PIZAZ5 MOVE.L FVALU(A2),A1

 MOVE FTYPE(A2),D0
 CMP.B #'A',D0
 BEQ PFZZ_404
 CMP.B #'E',D0
 BEQ PFZZ_404
 CMP.B #'S',D0
 BEQ PFZZ_404
 CMP.B #'L',D0
 BEQ PFZZ_404
 CMP.B #'D',D0
 BEQ PFZZ_404
 CMP.B #'I',D0
 BEQ PFZZ_404
 CMP.B #'C',D0
 BEQ PFZZ_404

 MOVE.L FNAME(A2),A1

PFZZ_404 MOVE.L A1,FLDADR(A6)
 MOVE D2,FLDSZ(A6)
 MOVE D3,FLDDEC(A6)

 MOVE FTYPE(A2),D0
 CMP.B #3,D0
 BEQ PF_NUM
 CMP.B #'I',D0
 BEQ PF_INT
 CMP.B #'D',D0
 BEQ PF_DEC

 CMP.B #1,D0
 BEQ PF_STR
 CMP #2,FCALC(A2)
 BEQ PF_STR

 MOVE.L FLDADR(A6),A0
 CMP.L #0,A0
 BEQ PF_FDN
 CMP.B #'/',(A0)+
 BEQ PF_STR
 CMP.B #'/',(A0)+
 BEQ PF_STR
 CMP.B #'/',(A0)+
 BEQ PF_STR

 CMP.B #'A',D0
 BEQ PF_DATE1
 CMP.B #'E',D0
 BEQ PF_DATE1
 CMP.B #'S',D0
 BEQ PF_DATE3
 CMP.B #'L',D0
 BEQ PF_DATE5

*------------Print a field--------------

PF_CHR MOVE PXPOS,FLDCNT3(A6)
 MOVE FLDSZ(A6),FLDCNT4(A6)

PFW_LOOP MOVE FLDWID(A6),D4
 BNE PFW_100
 MOVE FLDSZ(A6),D4

PFW_100 MOVE.L FLDADR(A6),A0
 MOVE.L A0,FLDADR2(A6)
 CLR D1
 MOVE FLDSZ(A6),FLDCNT(A6)

PFW_102 MOVE.B (A0)+,D0
 BEQ PFW_TERM

 TST FLDWRP(A6)
 BEQ PFW_109

 CMP.B #' ',D0
 BNE PFW_101
 MOVE D1,FLDCNT(A6)
 ADD #1,FLDCNT(A6)
 MOVE.L A0,FLDADR(A6)
 JMP PFW_109

PFW_101 CMP.B #13,D0
 BEQ PFW_PRINT

PFW_109 ADD #1,D1
 SUB #1,D4
 TST D4
 BNE PFW_102

 TST FLDWID(A6)
 BEQ PFW_TERM

PFW_PRINT TST FLDWRP(A6)
 BNE PFW_103
 MOVE D1,FLDCNT(A6)
 MOVE.L A0,FLDADR(A6)

PFW_103 JSR PFW_LINE

 TST FLDCNT4(A6)
 BEQ PFW_108

 SUB #1,FLDLIN(A6)
 TST FLDLIN(A6)
 BEQ PFW_108

 JSR PDOWN

PFW_104 MOVE PXPOS,D0
 CMP FLDCNT3(A6),D0
 BEQ PFW_LOOP
 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PFW_104

PFW_TERM CLR.L D0
 MOVE FLDCNT(A6),D0
 SUB D1,D0
 MOVE D0,FLDCNT2(A6)
 MOVE D1,FLDCNT(A6)
 JSR PFW_LINE

 TST FLDWID(A6)
 BNE PF_FDN
 JMP PFW_SPACE

PFW_LINE TST.L FLDADR2(A6)
 BEQ PF_FDN

PFW_LK106 MOVE.L FLDADR2(A6),A0  ;Print a line
 TST FLDCNT(A6)
 BEQ PFW_106
 MOVE.B (A0),D0
 JSR SENDCHAR
 SUB #1,FLDCNT(A6)
 ADD.L #1,FLDADR2(A6)
 SUB #1,FLDCNT4(A6)
 TST FLDCNT4(A6)
 BNE PFW_LK106
PFW_106 RTS

PFW_SPACE CMP #3,DEVICE
 BEQ PF_FDN

 SUB #1,FLDCNT2(A6)
 TST FLDCNT2(A6)
 BMI PFW_108
 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PFW_SPACE

PFW_108 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PF_FDN

*------------Print A String--------------

PF_STR TST.L FLDADR(A6)
 BEQ PF_FDN

 MOVE.L FLDADR(A6),A0
 CLR.L D0

PF_STR3 ADD #1,D0
 TST.B (A0)+
 BNE PF_STR3

 SUB.L #1,A0
PF_STR4 SUB #1,D0
 TST D0
 BEQ PF_STR2
 CMP.B #' ',-(A0)
 BEQ PF_STR4
 CLR.B 1(A0)

PF_STR2 MOVE.L FLDADR(A6),A0
 MOVE.B (A0),D0
 BEQ PF_STR5
 JSR SENDCHAR
 ADD.L #1,FLDADR(A6)
 JMP PF_STR2

PF_STR5 CMP #3,DEVICE
 BEQ PF_FDN

 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PF_FDN

*------------Print Date--------------

PF_DATE1 TST.L FLDADR(A6)
 BEQ PF_FDN

 MOVE.L FLDADR(A6),A0
 MOVE #9,D0
 TST.B (A0)
 BEQ NULFIELD
 CMP.B #' ',(A0)
 BEQ NULFIELD

 MOVE.B (A0),D0  ;Month
 JSR SENDCHAR
 MOVE.L FLDADR(A6),A0
 MOVE.B 1(A0),D0
 JSR SENDCHAR
 MOVE.B #'/',D0
 JSR SENDCHAR

 MOVE.L FLDADR(A6),A0  ;Day
 MOVE.B 2(A0),D0
 JSR SENDCHAR
 MOVE.L FLDADR(A6),A0
 MOVE.B 3(A0),D0
 JSR SENDCHAR
 MOVE.B #'/',D0
 JSR SENDCHAR

 MOVE.L FLDADR(A6),A0  ;Year
 MOVE.B 4(A0),D0
 JSR SENDCHAR
 MOVE.L FLDADR(A6),A0
 MOVE.B 5(A0),D0
 JSR SENDCHAR

 CMP #3,DEVICE
 BEQ PF_FDN
 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PF_FDN

PF_DATE3 TST.L FLDADR(A6)    ;Print Short Date
 BEQ PF_FDN

 MOVE #13,D0
 MOVE.L FLDADR(A6),A0
 TST.B (A0)
 BEQ NULFIELD
 CMP.B #' ',(A0)
 BEQ NULFIELD

 CMP.B #'D',EURO_DATE
 BNE PF_FDN_E2
 MOVE.B (A0),D0
 MOVE.B 1(A0),D1
 MOVE.B 2(A0),(A0)
 MOVE.B 3(A0),1(A0)
 MOVE.B D0,2(A0)
 MOVE.B D1,3(A0)

PF_FDN_E2 LEA PF_BUF,A2
 CLR.L D0
 MOVE.B (A0),D0
 SUB.B #'0',D0
 MULU #10,D0
 CLR.L D1
 MOVE.B 1(A0),D1
 SUB.B #'0',D1
 ADD D1,D0
 SUB #1,D0
 ADD #DTSDEF,D0
 MULU #OBSIZE,D0
 ADD.L STRINGADR,D0
 MOVE.L D0,A1
 MOVE.L OB_SPEC(A1),A1
 MOVE.B (A1)+,(A2)+
 MOVE.B (A1)+,(A2)+
 MOVE.B (A1)+,(A2)+
 MOVE.B (A1)+,(A2)+

 MOVE.B 2(A0),(A2)+
 MOVE.B 3(A0),(A2)+
 MOVE.B #',',(A2)+
 MOVE.B #' ',(A2)+
 MOVE.B #'1',(A2)+
 MOVE.B #'9',(A2)+
 MOVE.B 4(A0),(A2)+
 MOVE.B 5(A0),(A2)+
 MOVE.B #' ',(A2)+
 CLR.B (A2)
 JMP PF_PRINT

PF_DATE5 TST.L FLDADR(A6)     ;Print Long Date
 BEQ PF_FDN

 MOVE #19,D0
 MOVE.L FLDADR(A6),A0
 TST.B (A0)
 BEQ NULFIELD
 CMP.B #' ',(A0)
 BEQ NULFIELD

 CMP.B #'D',EURO_DATE
 BNE PF_FDN_E
 MOVE.B (A0),D0
 MOVE.B 1(A0),D1
 MOVE.B 2(A0),(A0)
 MOVE.B 3(A0),1(A0)
 MOVE.B D0,2(A0)
 MOVE.B D1,3(A0)

PF_FDN_E CLR.L D0
 MOVE.B (A0),D0
 SUB.B #'0',D0
 MULU #10,D0
 CLR.L D1
 MOVE.B 1(A0),D1
 SUB.B #'0',D1
 ADD D1,D0
 SUB #1,D0
 ADD #LDATES,D0
 MULU #OBSIZE,D0
 ADD.L STRINGADR,D0
 MOVE.L D0,A1
 MOVE.L OB_SPEC(A1),A1

 LEA PF_BUF,A2

PF_LONG3 TST.B (A1)
 BEQ PF_LONG2
 MOVE.B (A1)+,(A2)+
 JMP PF_LONG3

PF_LONG2 MOVE.B #' ',(A2)+
 MOVE.B 2(A0),(A2)+
 MOVE.B 3(A0),(A2)+
 MOVE.B #',',(A2)+
 MOVE.B #' ',(A2)+
 MOVE.B #'1',(A2)+
 MOVE.B #'9',(A2)+
 MOVE.B 4(A0),(A2)+
 MOVE.B 5(A0),(A2)+
 MOVE.B #' ',(A2)+
 CLR.B (A2)
 JMP PF_PRINT

MICKEYMOUSE DC.B '0000 0000',13,10,0
 EVEN

*----Print an Integer Field----

PF_INT MOVE.L FLDADR(A6),A0
 CMP.L #0,A0
 BEQ PF_FDN

 LEA PF_BUF,A2

 MOVE FLDSZ(A6),D0
 ADD #1,D0

 TST.B (A0)
 BEQ NULFIELD

 CMP.B #' ',(A0)+
 BEQ PF_N98
 MOVE.B #'-',(A2)+
 JMP PF_N99
PF_N98 MOVE.B #' ',(A2)+

PF_N99 CLR D6
 CLR D4
 MOVE FLDSZ(A6),D5
 SUB #2,D5
PF_N100 MOVE.B (A0)+,D0
 BEQ PF_N307
 CMP.B #'0',D0
 BNE PF_N101
 TST D4
 BNE PF_N401
 MOVE.B #' ',D0
 JMP PF_N401
PF_N101 MOVE #1,D6
 MOVE #1,D4
PF_N401 MOVE.B D0,(A2)+
PF_N102 DBF D5,PF_N100

PF_N307 CLR.B (A2)+
 TST D6
 BNE PF_PRINT
 MOVE.B #'0',-2(A2)
 JMP PF_PRINT

*----Print A Raw Number----

PF_NUM MOVE.L FLDADR(A6),A0
 CMP.L #0,A0
 BEQ PF_FDN

 LEA PF_BUF,A2

 MOVE FLDSZ(A6),D0
 ADD #1,D0
 TST.B (A0)
 BNE PFR_N80
 TST FLDDEC(A6)
 BEQ NULFIELD
 ADD #1,D0
 JMP NULFIELD

PFR_N80 CMP.B #' ',(A0)+
 BEQ PFR_N98
 MOVE.B #'-',(A2)+
 JMP PFR_N99
PFR_N98 MOVE.B #' ',(A2)+

PFR_N99 CLR D6
 CLR D4
 MOVE FLDSZ(A6),D5
 SUB #2,D5
 SUB FLDDEC(A6),D5
PFR_N100 MOVE.B (A0)+,D0
 BEQ PFR_N307
 CMP.B #'0',D0
 BNE PFR_N101
 TST D4
 BNE PFR_N401
 JMP PFR_N102
PFR_N101 MOVE #1,D6
 MOVE #1,D4
PFR_N401 MOVE.B D0,(A2)+
PFR_N102 DBF D5,PFR_N100

 MOVE.B #'.',(A2)+

 CLR.L D3
 MOVE FLDDEC(A6),D3
 MOVE D3,D5
 MOVE D3,D2

 TST D3
 BEQ PFR_N307

 MOVE.L A0,A1
 ADD.L D3,A1
 SUB #1,D3
PFR_N334 SUB #1,D2
 CMP.B #'0',-(A1)
 BNE PFR_N103
 DBF D3,PFR_N334
 JMP PFR_N307

PFR_N103 TST.B (A0)
 BEQ PFR_N307
 SUB #1,D5
 MOVE #1,D6
 MOVE.B (A0)+,(A2)+
 DBF D2,PFR_N103

PFR_N307 CLR.B (A2)
 JMP PF_PRINT

*----Print A Decimal Number----

PF_DEC MOVE.L FLDADR(A6),A0
 CMP.L #0,A0
 BEQ PF_FDN

 LEA PF_BUF,A2

 MOVE FLDSZ(A6),D0
 ADD #1,D0
 TST.B (A0)
 BNE PFD_N80
 TST FLDDEC(A6)
 BEQ NULFIELD
 ADD #1,D0
 JMP NULFIELD

PFD_N80 CMP.B #' ',(A0)+
 BEQ PFD_N98
 MOVE.B #'-',(A2)+
 JMP PFD_N99
PFD_N98 MOVE.B #' ',(A2)+

PFD_N99 CLR D6
 CLR D4
 MOVE FLDSZ(A6),D5
 SUB #2,D5
 SUB FLDDEC(A6),D5
PFD_N100 MOVE.B (A0)+,D0
 BEQ PFD_N307
 CMP.B #'0',D0
 BNE PFD_N101
 TST D4
 BNE PFD_N401
 MOVE.B #' ',D0
 JMP PFD_N401
PFD_N101 MOVE #1,D6
 MOVE #1,D4
PFD_N401 MOVE.B D0,(A2)+
PFD_N102 DBF D5,PFD_N100

 MOVE.B #'.',(A2)+

 CLR.L D3
 MOVE FLDDEC(A6),D3
 MOVE D3,D5
 MOVE D3,D2

 TST D3
 BEQ PFD_N305

 MOVE.L A0,A1
 ADD.L D3,A1
 SUB #1,D3
PFD_N334 SUB #1,D2
 CMP.B #'0',-(A1)
 BNE PFD_N103
 DBF D3,PFD_N334

 MOVE FLDDEC(A6),D3
 SUB #1,D3
PFND_105 MOVE.B #'0',(A2)+
 DBF D3,PFND_105
 JMP PFD_N307

PFD_N103 TST.B (A0)
 BEQ PFD_N305
 SUB #1,D5
 MOVE #1,D6
 MOVE.B (A0)+,(A2)+
 DBF D2,PFD_N103

PFD_N305 CMP #0,D5
 BLE PFD_N307
 SUB #1,D5
PFD_N308 MOVE.B #'0',(A2)+
 DBF D5,PFD_N308

PFD_N307 CLR.B (A2)
 JMP PF_PRINT

PF_TRAILING CMP #0,D5
 BLE PF_ZN307
 SUB #1,D5
PF_ZN308 MOVE.B (A0)+,(A2)+
 DBF D5,PF_ZN308
PF_ZN307 CLR.B (A2)

PF_PRINT MOVE.L #PF_BUF,FLDADR(A6)
PF_N306 MOVE.L FLDADR(A6),A0
 ADD.L #1,FLDADR(A6)
 MOVE.B (A0),D0
 BEQ PF_400
 JSR SENDCHAR
 JMP PF_N306

PF_400 CMP #3,DEVICE
 BEQ PF_FDN
 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PF_FDN

NULFIELD CMP #3,DEVICE
 BEQ PF_FDN
 MOVE D0,FLDSZ(A6)
NULF100 MOVE.B #' ',D0
 JSR SENDCHAR
 SUB #1,FLDSZ(A6)
 TST FLDSZ(A6)
 BNE NULF100

PF_FDN CMP #3,DEVICE
 BNE PF_FDN2
 CLR D0
 JSR SENDCHAR

PF_FDN2 ADD #1,EXPRNUM(A6)
 TST FLDFLAG(A6)
 BEQ PF_FLOOP

PF_RETURN UNLK A6
 RTS

PF_BUF DC.B ' 1234567890.1234567890 ',0
 EVEN

*-------SPECIAL CHARACTERS-----
PFLSPCL TST DEVICE
 BEQ PF_RTS
 MOVE.L 4(A7),A0
 MOVE PCOD(A0),D0
 JMP OUTCHAR

*----------STRING--------------
PFLSTR LINK A6,#-4
 MOVE.L 8(A6),A0        ;Find parameter pointer
 MOVE.L PVAL(A0),-4(A6) ;Find pointer to string

PFLSTR2 MOVE.L -4(A6),A0
 MOVE.B (A0),D0
 BEQ PFLSTR3
 JSR SENDCHAR
 ADD.L #1,-4(A6)
 JMP PFLSTR2

PFLSTR3 UNLK A6
 RTS

*----------CHECK WRITING FUNCTION-----------
PFLCHECK LINK A6,#-4
 MOVE.L 8(A6),A0
 MOVE PCOD(A0),D5

 MOVE.L STR_SEL,A2
PFLF_400 MOVE FCONN(A2),D0
 BEQ PFLF_402
 CMP #19,D0
 BEQ PFLF_402
 ADD.L #EV_FSZ,A2
 JMP PFLF_400

PFLF_402 SUB #1,D5
 BNE PFLF_400
 JMP PFLF_403

PFLF_401 CMP #1,D5
 BNE CW211

PFLF_403 MOVE.L FVAL2(A2),A1
 CMP #2,FCALC(A2)
 BEQ PFLF_404

 MOVE.L FNAME(A2),A1
 CMP #3,FTYPE(A2)
 BEQ PFLF_404

 MOVE.L FVALU(A2),A1
 CMP #'D',FTYPE(A2)
 BEQ PFLF_404
 CMP #'I',FTYPE(A2)
 BNE CW211

PFLF_404 MOVE.B #'0',CENTS    ;CLEAR VARIABLES
 MOVE.B #'0',CENTS+1
 CLR.L DOLLARS
 CLR.L DOLLARS+4
 CLR.B RESAMNT

 ADD.L #1,A1 ;Skip plus/minus
 MOVE FSIZE(A2),D4
 SUB FEXTR(A2),D4
 SUB #2,D4

CW103 CLR.L D0
 MOVE.B (A1)+,D0
 TST.B D0
 BEQ CW200
 CMP.B #'_',D0
 BEQ CW200
 CMP.B #'.',D0
 BEQ CW102
 CMP.B #'0',D0
 BCS CW200
 CMP.B #'9'+1,D0
 BCC CW200
 SUB.B #'0',D0

 MOVE #4,D1
 LEA DOLLARS,A0
CW101 MOVE.B 1(A0),(A0)+
 DBRA D1,CW101
 MOVE.B D0,DOLLARS+4

 DBF D4,CW103

CW102 MOVE.B (A1)+,D0
 CMP.B #'0',D0
 BCS CW200
 CMP.B #'9'+1,D0
 BCC CW200
 MOVE.B D0,CENTS

 MOVE.B (A1)+,D0
 CMP.B #'0',D0
 BCS CW200
 CMP.B #'9'+1,D0
 BCC CW200
 MOVE.B D0,CENTS+1

*-------CALCULATE RESULTS---------
CW200 CLR.L D1
 CLR.L D3
 MOVE #1,D5
 LEA DOLLARS,A1
 LEA RESAMNT,A2

 CLR.L D0          ;THOUSANDS
 MOVE.B (A1)+,D0
 TST.B D0
 BEQ CW202

 CMP #1,D0         ;1000-19000
 BNE CW201
 MULU #10,D0
 ADD.B (A1)+,D0
 JSR CWECHO
 MOVE #1,D3
 CLR D5
 JMP CW203

CW201 ADD #18,D0  ;20000-99000
 JSR CWECHO
 MOVE #1,D3
 CLR D5

CW202 CLR.L D0   ;1000-9000
 MOVE.B (A1)+,D0
 TST.B D0
 BEQ CW203
 JSR CWECHO
 MOVE #1,D3
 CLR D5

CW203 TST D3
 BEQ CW204
 MOVE #28,D0
 JSR CWECHO
 CLR D5

CW204 CLR D3   ;100-900
 CLR D0
 MOVE.B (A1)+,D0
 TST D0
 BEQ CW205
 JSR CWECHO
 MOVE #29,D0
 JSR CWECHO
 CLR D5

CW205 CLR.L D0      ;TENS
 MOVE.B (A1)+,D0
 TST.B D0
 BEQ CW207

 CMP.B #1,D0         ;1-19
 BNE CW206
 MOVE.B (A1)+,D0
 ADD #10,D0
 JSR CWECHO
 CLR D5
 JMP CW209

CW206 ADD #18,D0  ;20-99
 JSR CWECHO
 CLR D5
 TST.B (A1)
 BEQ CW209

CW207 CLR.L D0           ;1-9
 MOVE.B (A1)+,D0
 TST.B D0
 BNE CW210
 TST D5
 BEQ CW209
CW210 CMP #1,D0
 BEQ CW208
 CLR D5
CW208 JSR CWECHO

CW209 MOVE #32,D0  ;DOLLARS OR DOLLAR
 ADD D5,D0
 JSR CWECHO

 MOVE #31,D0
 JSR CWECHO

 MOVE.B CENTS,(A2)+
 MOVE.B CENTS+1,(A2)+
 MOVE #30,D0
 JSR CWECHO
 CLR.B (A2)

 MOVE.L #RESAMNT,-4(A6)
CW210X MOVE.L -4(A6),A0
 MOVE.B (A0),D0
 BEQ CW211
 JSR SENDCHAR
 ADD.L #1,-4(A6)
 JMP CW210X

CW211 UNLK A6
 RTS

CWECHO MULU #9,D0   ;COPY AMOUNT INTO RESAMT STRING
 ADD.L #ARRAY,D0
 MOVE.L D0,A0
 MOVE.L #8,D4
CW3002 CMP.B #' ',(A0)
 BEQ CW3003
 MOVE.B (A0)+,(A2)+
 DBRA D4,CW3002
CW3003 MOVE.B #' ',(A2)+
 RTS

ARRAY DC.B 'NO       '
 DC.B 'ONE      '
 DC.B 'TWO      '
 DC.B 'THREE    '
 DC.B 'FOUR     '
 DC.B 'FIVE     '
 DC.B 'SIX      '
 DC.B 'SEVEN    '
 DC.B 'EIGHT    '
 DC.B 'NINE     '
 DC.B 'TEN      '
 DC.B 'ELEVEN   '
 DC.B 'TWELVE   '
 DC.B 'THIRTEEN '
 DC.B 'FOURTEEN '
 DC.B 'FIFTEEN  '
 DC.B 'SIXTEEN  '
 DC.B 'SEVENTEEN'
 DC.B 'EIGHTEEN '
 DC.B 'NINETEEN '
 DC.B 'TWENTY   '
 DC.B 'THRITY   '
 DC.B 'FORTY    '
 DC.B 'FIFTY    '
 DC.B 'SIXTY    '
 DC.B 'SEVENTY  '
 DC.B 'EIGHTY   '
 DC.B 'NINETY   '
 DC.B 'THOUSAND '
 DC.B 'HUNDRED  '
 DC.B '/XX      '
 DC.B 'AND      '
 DC.B 'DOLLARS  '
 DC.B 'DOLLAR   '
 EVEN

*------------FONT--------------
PFLFONT TST DEVICE
 BEQ PF_RTS

 LINK A6,#-4
 MOVE 8(A6),A0
 MOVE PCOD(A0),D0
 ADD #5,D0
 JSR TRANSLAT
 MOVE.L A0,-4(A6)

PFLFONT2 MOVE.L -4(A6),A0
 MOVE.B (A0),D0
 CMP.B #-1,D0
 BEQ PFLFONT3
 JSR OUTCHAR
 ADD.L #1,-4(A6)
 JMP PFLFONT2

PFLFONT3 UNLK A6
 RTS

*------------TAB---------------
PFLTAB LINK A6,#-2
 MOVE.L 8(A6),A0
 MOVE PCOD(A0),-2(A6)

 MOVE.B #' ',D0
 JSR SENDCHAR

PFLTAB3 MOVE -2(A6),D0
 CMP PXPOS,D0
 BLE PFLTAB4
 MOVE.B #' ',D0
 JSR SENDCHAR
 JMP PFLTAB3

PFLTAB4 UNLK A6
 RTS

*----------DATE/TIME-----------
PFLTIME JSR CTIME
 JMP PFLDT3

PFLDATE JSR CDATE

PFLDT3 LINK A6,#-4
 MOVE.L #TIMEDATE,-4(A6)

PFLDT2 MOVE.L -4(A6),A0
 MOVE.B (A0),D0
 BEQ PFLDT4
 ADD.L #1,-4(A6)
 JSR SENDCHAR
 JMP PFLDT2

PFLDT4 UNLK A6
 RTS

*----BOLD/ELONG/UNDERLINE------
PFLBEU TST DEVICE
 BEQ PF_RTS

 MOVE #1,D2

 CLR.L D1
 MOVE D0,D1
 MULU #2,D1
 ADD.L #SETBOLD,D1
 MOVE.L D1,A0
 TST (A0)
 BEQ PFLBEU2
 ADD #3,D0
 CLR D2

PFLBEU2 MOVE D2,(A0)
 JSR TRANSLAT
 MOVE.L A0,PFLPTR

PFLBEU3 MOVE.L PFLPTR,A0
 MOVE.B (A0),D0
 CMP.B #255,D0
 BEQ PF_RTS
 JSR OUTCHAR
 ADD.L #1,PFLPTR
 JMP PFLBEU3

*---------PAGE #---------------
PFLPG LINK A6,#-6

 MOVE SETPAGE,D0
 LEA PGNUMBUF,A3
 JSR CONV2DEC
 CLR.B PGNUMBUF+4

 MOVE.L #PGNUMBUF,-4(A6)
 CLR -6(A6)

PFLPG1 MOVE.L -4(A6),A1
 ADD.L #1,-4(A6)
 MOVE.B (A1),D0
 BEQ PFLPG4
 CMP.B #'0',D0
 BNE PFLPG3
 TST -6(A6)
 BEQ PFLPG1
PFLPG3 MOVE #1,-6(A6)
PFLPG2 JSR SENDCHAR
 JMP PFLPG1

PFLPG4 UNLK A6
 RTS

**********************************
* SEND CHARACTER TO DISK/PRINTER *
**********************************

SENDCHAR LINK A6,#-2
 MOVE D0,-2(A6)

 CMP #3,DEVICE
 BEQ MLF102

 TST PFIRST
 BEQ SENDC1
 CLR PFIRST
 JSR PMARGIN

SENDC1 TST PFIRST2  ;DO LEFT INDENT
 BEQ MLF102
 CLR PFIRST2

 CLR PXPOS
 TST DEVICE
 BEQ MLF103
 CMP #3,DEVICE
 BNE MLF100
MLF103 MOVE SETLEFT,PXPOS
 JMP MLF102

MLF100 CLR.L D0
 MOVE SETLEFT,D0
 CMP PXPOS,D0
 BEQ MLF102
 ADD #1,PXPOS
 MOVE.B #' ',D0
 JSR OUTCHAR
 JMP MLF100

MLF102 MOVE -2(A6),D0
 JSR OUTCHAR

 CMP #3,DEVICE
 BEQ MLF999

 ADD #1,PXPOS
 MOVE PXPOS,D0
 CMP SETRIGHT,D0
 BLT MLF999
 JSR PDOWN

MLF999 UNLK A6
 RTS

*----------Output one raw character-----------

OUTCHAR CMP #4,DEVICE
 BEQ OUTCRTS

 TST DEVICE
 BEQ OUTC2
 CMP #2,DEVICE
 BEQ SENDFILE
 CMP #3,DEVICE
 BEQ SENDFILE
 JMP PRINTCHAR

SENDFILE MOVE.B D0,SENDHLD

 MOVE.L #SENDHLD,-(A7)  ;F_write
 MOVE.L #1,-(A7)
 MOVE OUTFILE,-(A7)
 MOVE #$40,-(A7)
 TRAP #1
 ADD.L #12,A7
 JMP ACTIVITY

OUTC2 CLR.L D1
 MOVE PYPOS,D1
 MULU #PRNTBCR,D1
 ADD PXPOS,D1
 ADD.L PRNTBUFF,D1
 MOVE.L D1,A0

 CMP.B #13,D0
 BEQ OUTCRTS
 CMP.B #10,D0
 BEQ OUTCRTS
 MOVE.B D0,(A0)

OUTCRTS RTS

*--------------PRINT TOP MARGIN--------------
PMARGIN CLR PYPOS
 MOVE #1,PFIRST2
 CLR PXPOS

 MOVE SETTOP,D0
 CMP #3,D0
 BLT PNTL81
 SUB #2,D0
 MOVE D0,LTEMP

PNTL80 ADD #1,PYPOS
 TST DEVICE
 BEQ PNTL82
 CMP #3,DEVICE
 BEQ PNTL82
 MOVE.B #13,D0
 JSR OUTCHAR
 MOVE.B #10,D0
 JSR OUTCHAR
PNTL82 SUB #1,LTEMP
 TST LTEMP
 BNE PNTL80

PNTL81 TST SETTOP
 BEQ PNTL999

 MOVE #21,D0   ;HEADER 1
 JSR PRNTLINE

 CMP #1,SETTOP
 BEQ PNTL999

 MOVE #22,D0   ;HEADER 2
 JSR PRNTLINE

PNTL999 RTS

*-------------MOVE CURSOR/CARRIAGE DOWN ONE LINE------------

PDOWN MOVE #1,PFIRST2
 CLR PXPOS

 MOVE SETSPC,PDNCNT
PDOWN11 ADD #1,PYPOS
 MOVE #13,D0
 JSR OUTCHAR
 MOVE #10,D0
 JSR OUTCHAR
 CLR.L D0
 MOVE SETLNGTH,D0
 SUB SETBOT,D0
 CMP PYPOS,D0
 BEQ PDOWN12
 SUB #1,PDNCNT
 TST PDNCNT
 BNE PDOWN11
 CLR D0
 RTS

PDOWN12 TST SETBOT
 BEQ PDOWN2

 MOVE #23,D0  ;FOOTER 1
 JSR PRNTLINE

 CMP #1,SETBOT
 BEQ PDOWN2

 MOVE #24,D0  ;FOOTER 2
 JSR PRNTLINE

PDOWN2 ADD #1,SETPAGE

 CMP #3,SETBOT  ;END OF PAGE
 BLT PDOWN21

 MOVE SETBOT,PDNCNT
 SUB #2,PDNCNT
PDOWN30 TST PDNCNT
 BEQ PDOWN21
 SUB #1,PDNCNT
 ADD #1,PYPOS
 TST DEVICE
 BEQ PDOWN30
 MOVE #13,D0
 JSR OUTCHAR
 MOVE #10,D0
 JSR OUTCHAR
 JMP PDOWN30

PDOWN21 MOVE #1,PFIRST

 TST DEVICE  ;Show screen buffer
 BNE PDOWN_1
 JSR DOSHOWNUFF
 JMP PDNOWAIT2

PDOWN_1 CMP #1,DEVICE
 BNE PDNOWAIT
 TST SETWAIT
 BEQ PDNOWAIT

 MOVE.L STRINGADR,A0
 ADD #PRESSIT*OBSIZE,A0
 MOVE.L OB_SPEC(A0),A0
 JSR SETMES

PDYSWAIT JSR WAIT_KEY
 CMP.B #27,D0
 BEQ PDNOWAIT2
 CMP.B #13,D0
 BNE PDYSWAIT

PDNOWAIT2 JSR CLRPBUFF
 ADD #1,SETPAGE
 MOVE #1,PFIRST

PDNOWAIT MOVE #-1,D0
 RTS

*****************************
* PRINTER DRIVER TANSLATION *
*****************************

* 0-BOLD ON
* 1-ELONGATE ON
* 2-UNDERLINE ON
* 3-BOLD OFF
* 4-ELONGATE OFF
* 5-UNDERLINE OFF
* 6-FONT 1
* 7-FONT 2
* 8-FONT 3
* 9-FONT 4

TRANSLAT LEA DRIVERS,A0
 AND.L #$FF,D0
 MULU #8,D0
 ADD.L D0,A0
 RTS

**********************************
* SEND CHARACTER TO PRINTER PORT *
* D0=CHARACTER (DOES CONVERSION) *
**********************************

PRINTCHAR MOVEM.L D1-D7/A0-A4,-(A7)

 TST INTLCODE
 BEQ PRCR200

 CLR.L D1
 LEA PRCRTBL,A0
PRCR100 TST.B (A0)+
 BNE PRCR100
 ADD #1,D1
 CMP INTLCODE,D1
 BNE PRCR100

PRCR101 TST.B (A0)
 BEQ PRCR200
 CMP.B (A0),D0
 BEQ PRCR199
 ADD.L #2,A0
 JMP PRCR101

PRCR199 MOVE.B 1(A0),D0

PRCR200 CMP #5,DEVICE
 BEQ PRCR201

 MOVE D0,-(A7)   ;PRINTER PORT
 MOVE #5,-(A7)
 TRAP #1
 ADD.L #4,A7
 MOVEM.L (A7)+,D1-D7/A0-A4
 RTS

PRCR201 MOVE D0,-(A7)   ;RS232 PORT
 MOVE #4,-(A7)
 TRAP #1
 ADD.L #4,A7
 MOVEM.L (A7)+,D1-D7/A0-A4
 RTS

PRCRTBL
 DC.B 0       ;USA
 DC.B 156,35  ;UK
 DC.B 0
 DC.B 221,64  ;GERMANY
 DC.B 142,91
 DC.B 153,92
 DC.B 154,93
 DC.B 132,123
 DC.B 148,124
 DC.B 129,125
 DC.B 158,126
 DC.B 225,126
 DC.B 0
 DC.B 146,91  ;DENMARK
 DC.B 178,92
 DC.B 143,93
 DC.B 145,123
 DC.B 179,124
 DC.B 134,125
 DC.B 0
 DC.B 133,64   ;FRANCE
 DC.B 248,91
 DC.B 135,92
 DC.B 221,93
 DC.B 130,123
 DC.B 151,124
 DC.B 138,125
 DC.B 185,126
 DC.B 0
 DC.B 144,64   ;SWEDEN
 DC.B 142,91
 DC.B 153,92
 DC.B 143,93
 DC.B 154,94
 DC.B 130,96
 DC.B 132,123
 DC.B 148,124
 DC.B 134,125
 DC.B 129,126
 DC.B 0
 DC.B 248,91   ;ITALY
 DC.B 130,93
 DC.B 151,96
 DC.B 133,123
 DC.B 149,124
 DC.B 138,125
 DC.B 141,126
 DC.B 0
 DC.B 173,91   ;SPAIN
 DC.B 165,92
 DC.B 168,93
 DC.B 185,123
 DC.B 164,124
 DC.B 0
 DC.B 157,92   ;JAPAN
 DC.B 0
 EVEN

**************************************
* Get a variable or field definition *
**************************************

GETDEF MOVE.L A3,FNAME(A4)

 LEA TABLENM,A0
DOCT_97 MOVE.B (A0)+,D0
 JSR UPPER
 MOVE.B D0,(A3)+
 TST.B D0
 BNE DOCT_97

GETDEF2 MOVE #293,D7
 JSR FINDWORD
 CMP #15,D3
 BEQ DOCT_C
 CMP #16,D3
 BEQ DOCT_I
 CMP #17,D3
 BEQ DOCT_D

 MOVE #6,FSIZE(A4)
 CMP #18,D3  ;Date
 BEQ DOCT_DT
 CMP #19,D3  ;Sdate
 BEQ DOCT_S
 CMP #20,D3  ;Edate
 BEQ DOCT_E
 CMP #22,D3  ;Ldate
 BNE GET_ERROR

 MOVE #'L',FTYPE(A4) ;Long date
 JMP DOCT_DN

DOCT_C MOVE #'C',FTYPE(A4) ;Character
 JMP DOCT_M

DOCT_I MOVE #'I',FTYPE(A4) ;Integer
 JMP DOCT_M

DOCT_D MOVE #'D',FTYPE(A4) ;Decimal
 JMP DOCT_M

DOCT_DT MOVE #'A',FTYPE(A4) ;Date
 JMP DOCT_DN

DOCT_S MOVE #'S',FTYPE(A4) ;Short date
 JMP DOCT_DN

DOCT_E MOVE #'E',FTYPE(A4) ;European date
 JMP DOCT_DN

DOCT_M JSR FINDCHAR  ;Get size & extender
 CMP.B #'(',D0
 BNE GET_ERROR

 JSR MOVERT
 TST D0
 BMI GET_ERROR

 JSR FINDVAL
 MOVE D0,FSIZE(A4)

 MOVE #302,D7
 TST D0
 BEQ GET_ERROR
 CMP #32000,D0
 BGT GET_ERROR

 CMP #'I',FTYPE(A4) ;Integer
 BEQ DOCT_NUM2
 CMP #'D',FTYPE(A4) ;Decimal
 BNE DOCT_NUM
DOCT_NUM2 ADD #1,FSIZE(A4)

DOCT_NUM MOVE #293,D7
 JSR FINDCHAR
 CMP.B #'.',D0
 BNE DOCT_102

 JSR MOVERT
 TST D0
 BMI GET_ERROR

 JSR FINDVAL
 MOVE D0,FEXTR(A4)

 MOVE #302,D7
 TST D0
 BEQ GET_ERROR
 CMP #32000,D0
 BGT GET_ERROR

 MOVE #303,D7
 CMP FSIZE(A4),D0
 BGE GET_ERROR

DOCT_102 MOVE #293,D7
 JSR FINDCHAR
 CMP.B #')',D0
 BNE GET_ERROR

 JSR MOVERT
 TST D0
 BMI GET_ERROR

DOCT_DN CLR D0
 RTS

GET_ERROR MOVE #-1,D0
 RTS

**************************************************
*              PARSE SELECT COMMAND              *
**************************************************

*Errors
* 240 Expecting a FROM clause
* 241 Too many tables defined, maximum is 8
* 242 No table(s) specified
* 243 Expressions are not allowed in the FROM clause
* 244 Expecting a semicolon ; to terminate a command
* 245 Bad syntax
* 246 Valid range is 1 to 32000 records
* 247 ESC key pressed
* 248 Table not defined
* 249 Cannot use * function within an APPEND command

SELECT CLR S_OCOUNT
 CLR S_WCOUNT
 CLR FRMTNBR

S_PRSE2 JSR FINDCHAR  ;Parse for *
 CMP.B #'*',D0
 BNE S_GETF

*----------Select *---------

S_GETALL MOVE #240,D7
 JSR MOVERT
 TST D0
 BMI S_ERROR

 JSR FINDWORD  ;Parse for FROM
 CMP #24,D3
 BNE S_ERROR

 MOVE.L STR_TBL,A0  ;Get table defs
 MOVE.L BUF_TBL,A1
 MOVE #MAX_TBL,D0
 JSR GETEXPRESS
 MOVE.L A0,BUF_TBL2
 TST D0
 BMI S_ERROR
 MOVE #242,D7
 TST D1
 BEQ S_ERROR
 MOVE #241,D7
 CMP #8,D1
 BGE S_ERROR
 MOVE D1,S_TBLCNT

S_YESCRNT MOVE #249,D7  ;Append?
 TST AP_FLAG
 BNE S_ERROR

 MOVE.L STR_SEL,A0
 MOVE.L #MAX_SEL*EV_FSZ,D0
 SUB #1,D0
S_CLR1 CLR.B (A0)+
 DBF D0,S_CLR1

 CLR S_FLDCNT
 CLR S_PAREN1
 MOVE.L STR_SEL,A2
 MOVE.L BUF_SEL,A3
 MOVE.L STR_TBL,A4

S_F10 MOVE.L A3,S_TABLE
 MOVE #18,D0
 MOVE.L FNAME(A4),A0
S_F11 TST.B (A0)
 BEQ S_F12
 MOVE.B (A0)+,(A3)+
 DBF D0,S_F11
S_F12 CLR.B (A3)+

 MOVE.L CACHEF,A0
 ADD.L #20,A0
 MOVE #CACFLD,D4
 CLR D6

S_F13 MOVE.L FNAME(A4),A1
 JSR MMATCHER
 TST D0
 BMI S_F16

 MOVE.L S_TABLE,FTABL(A2)
 MOVE.L A3,FNAME(A2)
 MOVE #19,FCONN(A2)
 MOVE #5,FTYPE(A2)
 MOVE #1,D6

 MOVE.L A0,A1
 SUB.L #20,A1
 MOVE #18,D0
S_F14 TST.B (A1)
 BEQ S_F15
 MOVE.B (A1)+,(A3)+
 DBF D0,S_F14
S_F15 CLR.B (A3)+

 ADD.L #EV_FSZ,A2
 ADD #1,S_FLDCNT

S_F16 ADD.L #65,A0
 SUB #1,D4
 BNE S_F13

 MOVE #248,D7
 TST D6
 BEQ S_ERROR

 TST FCONN(A4)
 BEQ S_F17
 ADD.L #EV_FSZ,A4
 JMP S_F10

S_F17 SUB.L #EV_FSZ,A2
 CLR FCONN(A2)
 MOVE.L A3,BUF_SEL2
 JMP S_MORE

*----------Select exp,exp FROM table---------

S_GETF MOVE.L STR_SEL,A0  ;Get field expressions
 MOVE.L BUF_SEL,A1
 MOVE #MAX_SEL,D0
 JSR GETEXPRESS
 TST D0
 BMI S_ERROR
 MOVE.L A0,BUF_SEL2
 MOVE D1,S_FLDCNT
 MOVE D2,S_PAREN1

 MOVE #240,D7
 JSR FINDWORD  ;Parse for FROM
 CMP #24,D3
 BNE S_ERROR

 MOVE.L STR_TBL,A0  ;Get table defs
 MOVE.L BUF_TBL,A1
 MOVE #MAX_TBL,D0
 JSR GETEXPRESS
 MOVE.L A0,BUF_TBL2
 TST D0
 BMI S_ERROR
 MOVE #242,D7
 TST D1
 BEQ S_ERROR
 MOVE #241,D7
 CMP #8,D1
 BGE S_ERROR
 MOVE D1,S_TBLCNT

S_YESC2 TST AP_FLAG  ;Append function?
 BEQ S_MORE

 MOVE #19,FCONN(A4)
 ADD.L #EV_FSZ,A4
 MOVE.L A4,A0

 MOVE #EV_FSZ-1,D0
S_APP101 CLR.B (A0)+
 DBF D0,S_APP101

 MOVE.L #AP_NAME,FNAME(A4)
 MOVE #5,FTYPE(A4)
 MOVE.L A4,AP_STR
 ADD #1,S_TBLCNT

 MOVE.L STR_SEL,A4
S_APP103 MOVE FCONN(A4),D0
 BEQ S_MORE
 CMP #1,D0
 BNE S_APP102
 MOVE.L #AP_NAME,FTABL(A4)
S_APP102 ADD.L #EV_FSZ,A4
 JMP S_APP103

*------Parse WHERE, ORDER, USE, GROUP commands--------

S_MORE JSR FINDCHAR
 CMP.B #';',D0
 BEQ S_READY

 MOVE #245,D7
 JSR FINDWORD
 CMP #26,D3 ;WHERE
 BEQ S_WHERE
 CMP #69,D3 ;ORDER
 BEQ S_ORDER
 CMP #53,D3 ;USE
 BEQ S_USE
 CMP #84,D3 ;GROUP
 BNE S_ERROR

S_GROUP TST D0
 JMP S_MORE

S_USE MOVE #244,D7
 JSR FINDCHAR
 TST D0
 BMI S_ERROR
 JSR FINDVAL
 MOVE D0,FRMTNBR
 JMP S_MORE

S_WHERE MOVE.L STR_WHERE,A0  ;Where
 MOVE.L BUF_WHERE,A1
 MOVE #MAX_WHERE,D0
 JSR GETEXPRESS
 TST D0
 BMI S_ERROR
 MOVE.L A0,BUF_W2
 MOVE D1,S_WCOUNT
 MOVE D2,S_WPAREN
 JMP S_MORE

S_ORDER JSR FINDWORD  ;Order by
 CMP #70,D3
 BNE S_ERROR

 MOVE.L STR_ORD,A0
 MOVE.L BUF_ORD,A1
 MOVE #MAX_ORD,D0
 JSR GETSORTED
 TST D0
 BMI S_ERROR
 MOVE D1,S_OCOUNT
 MOVE D2,S_OPAREN
 JMP S_MORE

*-----------Set Structure Pointers-----------

S_READY MOVE.L STR_SEL,A0 ;Set system and user variables
 MOVE.L BUF_SEL2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_SEL2

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 JSR LD_DTEUV
 MOVE.L A1,BUF_W2

 MOVE.L STR_WHERE,A0 ;Establish table buffers and pointers
 MOVE S_WCOUNT,D0
 MOVE.L STR_TBL,A1
 MOVE.L STR_SEL,A2
 CLR D1
 MOVE S_TBLCNT,D2
 JSR SETEXPRESS
 TST D0
 BMI S_ERROR

 MOVE.L STR_SEL,A0 ;Process aggregates
 JSR DOAGGS
 TST D0
 BMI S_ERROR

*-------------Process ORDER BY Phrase-------------

 CMP #5,REC_CURNT
 BEQ S_DOORD
 TST REC_CURNT
 BNE S_DONE

S_DOORD TST S_OCOUNT
 BEQ S_DONE

 MOVE.L STR_ORD,A0  ;Order by
 MOVE.L STR_TBL,A1
 JSR SORT
 TST D0
 BMI S_ERROR

S_DONE CLR D0
 RTS

S_ERROR MOVE #-1,D0
 RTS

****************************************
*            SELECT ONE ROW            *
****************************************

SELECTONE MOVE #255,D7
 JSR KEYSTOP
 TST D0
 BNE S_ERROR

 CLR D1
 TST INDXFLAG
 BEQ S_EXREC3
 MOVE #1,D1
S_EXREC3 MOVE.L STR_TBL,A0
 MOVE S_TBLCNT,D0
 MOVE S_FIRST,D2
 CLR S_FIRST
 CLR D3
 JSR LOADRECORD
 TST D0
 BMI S_ERROR

 TST S_WCOUNT
 BEQ S_GETREC

 MOVE.L STR_WHERE,A0
 MOVE.L BUF_W2,A1
 MOVE S_WCOUNT,D0
 MOVE S_WPAREN,D1
 CLR D2
 JSR EXPRESS
 TST D0
 BMI S_ERROR
 BEQ SELECTONE

S_GETREC TST INDXFLAG
 BNE S_EXREC2
 TST S_WCOUNT
 BEQ S_EXREC

S_EXREC2 MOVE.L STR_TBL,A0
 CLR D0
 JSR POINTER2
 TST D0
 BMI S_ERROR

 MOVE.L STR_TBL,A0
 MOVE S_TBLCNT,D0
 CLR D1
 MOVE #1,D2
 MOVE #1,D3
 JSR LOADRECORD
 TST D0
 BMI S_ERROR

 MOVE.L STR_TBL,A0
 CLR D0
 JSR POINTER
 TST D0
 BMI S_ERROR

S_EXREC MOVE.L STR_SEL,A0
 MOVE.L BUF_SEL2,A1
 MOVE S_FLDCNT,D0
 MOVE S_PAREN1,D1
 MOVE #1,D2
 JSR EXPRESS
 TST D0
 BMI S_ERROR
 CLR D0
 RTS

****************************************
* OPEN ALL DEFINED TABLES              *
* --------input----------------------- *
* A0 Pointer to table structure        *
* A1 Pointer to storage area           *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

*Errors
*260 Table not found
*261 Disk error

OPENTBLS MOVE.L A0,OP_TABLE
 MOVE.L A0,A4
 MOVE.L A1,A3

OP_LOOP CMP #1,FAGGR(A4)
 BEQ OP_RCRS

 MOVE.L FNAME(A4),A0

 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D4
OP_101 JSR MMATCHER
 TST D0
 BEQ OP_102
 ADD.L #48,A1
 DBF D4,OP_101
 MOVE #260,D7
 MOVE.L FNAME(A4),A0
 JMP R_ERROR

OP_102 MOVE.L A1,A2
 MOVE.L A1,A0
 ADD.L #20,A0

 MOVE.L A3,FVAL2(A4)

 MOVE #18,D0
OP_110 TST.B (A0)
 BEQ OP_103
 MOVE.B (A0)+,(A3)+
 DBF D0,OP_110

OP_103 MOVE #18,D0

OP_104 TST.B (A1)
 BEQ OP_105
 MOVE.B (A1)+,(A3)+
 DBF D0,OP_104

OP_105 MOVE.B #'.',(A3)+
 MOVE.B #'T',(A3)+
 MOVE.B #'B',(A3)+
 MOVE.B #'L',(A3)+
 CLR.B (A3)+

OP_150 TST FBOOL(A4)  ;Sorted table in memory
 BNE OP_300

 MOVE.L FVAL2(A4),A0
 JSR F_OPENRW
 TST D0
 BPL OP_200
 MOVE.L FVAL2(A4),A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ OP_150
 MOVE #261,D7
 JMP OP_ERROR

OP_200 MOVE D0,FDISP(A4)
 MOVE #1,FAGGR(A4)

OP_300 CMP #1,FTYPE(A4)  ;Open index file
 BNE OP_RCRS

 MOVE.L A2,A1
 MOVE.L A2,A0
 ADD.L #20,A0

 MOVE.L A3,FIFIL(A4)

 MOVE #18,D0
OP_202 TST.B (A0)
 BEQ OP_203
 MOVE.B (A0)+,(A3)+
 DBF D0,OP_202

OP_203 MOVE #18,D0
OP_204 TST.B (A1)
 BEQ OP_205
 MOVE.B (A1)+,(A3)+
 DBF D0,OP_204

OP_205 MOVE.B #'.',(A3)+
 MOVE.B #'I',(A3)+
 MOVE.B #'N',(A3)+
 MOVE.B #'D',(A3)+
 CLR.B (A3)+

OP_206 TST FBOOL(A4)  ;Sorted table in memory
 BNE OP_RCRS

 MOVE.L FIFIL(A4),A0
 JSR F_OPENRW
 TST D0
 BPL OP_207
 MOVE.L FVALU(A4),A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ OP_206
 MOVE #261,D7

 MOVE.L FDISP(A4),D0
 JSR F_CLOSE
 CLR FAGGR(A4)
 JMP OP_ERROR

OP_207 MOVE D0,FIHND(A4)

OP_RCRS TST FCONN(A4)
 BEQ OP_DONE
 ADD.L #EV_FSZ,A4
 JMP OP_LOOP

OP_ERROR MOVE.L OP_TABLE,A0
 JMP CLOSTBLS

OP_DONE CLR D0
 RTS

OP_TABLE DC.L 0 ;Structure pointer

****************************************
* RESET ALL TABLE POINTERS             *
* --------input----------------------- *
* A0 Pointer to table structure        *
****************************************

RESETPTR MOVE #1,FRECN(A0)
 TST FCONN(A0)
 BEQ RE_DONE
 ADD.L #EV_FSZ,A0
 JMP RESETPTR

RE_DONE CLR D0
 RTS

****************************************
* LOAD ONE RECORD                      *
* --------input----------------------- *
* A0 Pointer to table structure        *
* D0 # of tables defined               *
* D1 1-Load first where records        *
* D2 1-Force load of first record      *
* D3 1-Don't update record pointer     *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

*Load errors
*281 No more records found

LOADRECORD MOVE.L A0,GR_STRCT
 MOVE D0,GR_TBLCNT
 MOVE D1,GR_FLAG
 MOVE D2,GR_FIRST
 MOVE D3,GR_REC
 CLR GR_FLAG2
 CLR GR_FLAG3

GR_100 CLR.L D0
 MOVE GR_TBLCNT,D0
 SUB #1,D0
 MULU #EV_FSZ,D0
 ADD.L GR_STRCT,D0
 MOVE.L D0,A4

GR_101 MOVE FDISP(A4),A0  ;Load table record
 MOVE.L FVALU(A4),A1
 CLR.L D0
 MOVE FSIZE(A4),D0

 TST GR_FLAG
 BEQ GR_102
 TST FCALC(A4)
 BEQ GR_102

GR_107 MOVE FIHND(A4),A0  ;Load index record
 MOVE.L FINDX(A4),A1
 CLR.L D0
 MOVE FEXTR(A4),D0

GR_102 MOVE.L A1,GR_MEM
 MOVE.L A0,GR_HANDLE
 MOVE.L D0,GR_SIZE

 TST GR_FIRST
 BEQ GR_103
 TST GR_FLAG3
 BEQ GR_103
 CLR GR_FLAG3
 CLR GR_FLAG2
 ADD #1,FRECN(A4)
 ADD #1,FOBJN(A4)
 CLR.L D0
 MOVE FRECN(A4),D0
 SUB #1,D0
 MULU FSIZE(A4),D0
 JSR F_SEEK
 TST.L D0
 BMI GR_ERROR

GR_103 TST FBOOL(A4) ;Sorted in-memory table
 BEQ GR_200
 CLR.L D1

 MOVE FRECN(A4),D1
 TST GR_REC
 BEQ GR_202B
 MOVE FOBJN(A4),D1

GR_202B MOVE D1,FOBJN(A4)
 SUB #1,D1
 CMP FPARN(A4),D1
 BGE GR_201
 MULU #4,D1
 ADD.L Q_HEAP,D1
 MOVE.L D1,A2
 MOVE.L (A2),A2
 MOVE D0,D1
 SUB #1,D1
GR_202 MOVE.B (A2)+,(A1)+
 DBF D1,GR_202
 JMP GR_105

GR_200 MOVE.L GR_MEM,A1
 MOVE.L GR_HANDLE,A0
 MOVE.L GR_SIZE,D0
 JSR F_READ
 CMP.L GR_SIZE,D0
 BEQ GR_105
 TST.L D0
 BMI GR_ERR1

GR_201 MOVE #281,D7
 CMP #1,GR_TBLCNT
 BLE GR_ERROR

 TST FBOOL(A4)
 BNE GR_210
 MOVE.L GR_HANDLE,A0  ;End of file
 JSR F_START
 TST.L D0
 BMI GR_ERR2

GR_210 TST GR_REC
 BNE GR_211
 MOVE #1,FRECN(A4)
 CLR FOBJN(A4)
GR_211 MOVE #1,GR_FLAG2
 JMP GR_101

GR_105 TST GR_REC
 BNE GR_106B
 MOVE FRECN(A4),FOBJN(A4)
 ADD #1,FRECN(A4)

GR_106B MOVE.L GR_MEM,A0
 MOVE.L GR_SIZE,D5
 SUB #3,D5   ;Null field?
GR_104 TST.B (A0)+
 BNE GR_106
 DBF D5,GR_104
 JMP GR_101

GR_106 TST GR_FIRST
 BNE GR_112
 TST GR_FLAG2
 BEQ GR_DONE
 MOVE #281,D7
GR_112 CMP #1,GR_TBLCNT
 BEQ GR_DONE
 SUB #1,GR_TBLCNT
 MOVE GR_FLAG2,GR_FLAG3
 CLR GR_FLAG2
 JMP GR_100

GR_DONE CLR D0
 RTS

GR_ERR1 LEA GR_DIS1,A0
 JSR DISK_ERR
 JMP GR_ERROR

GR_ERR2 LEA GR_DIS2,A0
 JSR DISK_ERR

GR_ERROR MOVE #-1,D0
 RTS

GR_DIS1 DC.B 'LOAD: Disk Read Error',0
GR_DIS2 DC.B 'LOAD: Position file pointer',0
 EVEN

****************************************
* SET FILE POINTERS                    *
* --------input----------------------- *
* A0 Pointer to table structure        *
* D0 1-Index pointers                  *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

*Pointer errors
*280 Disk I/O error seeking through table file

POINTER2 MOVE.L A0,A4
 MOVE D0,P_FLAG
 MOVE #1,P_FLAG2
 JMP P_LOOP

POINTER MOVE.L A0,A4
 MOVE D0,P_FLAG
 CLR P_FLAG2

P_LOOP MOVE #280,D7

 TST FBOOL(A4)
 BNE P_RCRS

 CLR.L D0
 MOVE FOBJN(A4),D0
 TST P_FLAG2
 BNE P_SKIP
 MOVE FRECN(A4),D0
P_SKIP SUB #1,D0
 MULU FSIZE(A4),D0
 MOVE FDISP(A4),A0

 TST P_FLAG
 BEQ P_OK
 TST FTYPE(A4)
 BEQ P_OK

 CLR.L D0
 MOVE FRECN(A4),D0
 SUB #1,D0
 MULU FEXTR(A4),D0
 MOVE FIHND(A4),A0

P_OK JSR F_SEEK
 TST.L D0
 BMI P_ERROR

P_RCRS TST FCONN(A4)
 BEQ P_DONE
 ADD.L #EV_FSZ,A4
 JMP P_LOOP

P_DONE CLR D0
 RTS

P_ERROR MOVE #-1,D0
 RTS

P_FLAG DC 0
P_FLAG2 DC 0

****************************************
* CLOSE ALL DEFINED TABLES             *
* --------input----------------------- *
* A0 Pointer to table structure        *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

*Close file errors
*270 Disk error

CLOSTBLS MOVE.L A0,A4

CL_LOOP TST FAGGR(A4)
 BEQ CL_RCRS
 CLR FAGGR(A4)
 MOVE FDISP(A4),A0
 JSR F_CLOSE
 TST D0
 BMI CL_ERROR

 TST FTYPE(A4)
 BEQ CL_RCRS
 MOVE FIHND(A4),A0
 JSR F_CLOSE
CL_RCRS TST FCONN(A4)
 BEQ CL_DONE
 ADD.L #EV_FSZ,A4
 JMP CL_LOOP
CL_DONE CLR D0
 RTS
CL_ERROR MOVE #-1,D0
 RTS

****************************************
* SAVE TABLE RECORD POINTERS           *
* --------input----------------------- *
* A0 Pointer to order by structure     *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

RECPTRS MOVE.L A0,A4

SR_LOOP MOVE.L FNAME(A4),A1
 MOVE.L CACHET,A0
 MOVE #CACTBL-1,D5

SR_100 JSR MMATCHER
 TST D0
 BMI SR_101
 MOVE FRECN(A4),40(A0)
 JMP SR_102

SR_101 ADD.L #48,A0
 DBF D5,SR_100

SR_102 TST FCONN(A4)
 BEQ SR_DONE
 ADD.L #EV_FSZ,A4
 JMP SR_LOOP

SR_DONE CLR D0
 RTS

****************************************
* LOAD TABLE RECORD POINTERS           *
* --------input----------------------- *
* A0 Pointer to order by structure     *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

LOADPTRS MOVE.L A0,A4

LR_LOOP MOVE.L FNAME(A4),A1
 MOVE.L CACHET,A0
 MOVE #CACTBL-1,D5

LR_100 JSR MMATCHER
 TST D0
 BMI LR_101
 MOVE 40(A0),D0
 CMP #1,S_TBLCNT
 BEQ LR_102
 SUB #1,D0
LR_102 TST D0
 BNE LR_103
 MOVE #1,D0
LR_103 MOVE D0,FRECN(A4)

LR_101 ADD.L #48,A0
 DBF D5,LR_100

 TST FCONN(A4)
 BEQ LR_DONE
 ADD.L #EV_FSZ,A4
 JMP LR_LOOP

LR_DONE CMP #1,S_TBLCNT
 BEQ LR_104
 ADD #1,FRECN(A4)

LR_104 CLR D0
 RTS

****************************************
* ORDER BY PROCESSING                  *
* --------input----------------------- *
* A0 Pointer to order by structure     *
* A1 Pointer to table def structure    *
* --------output---------------------- *
* D0 -1 if error D7 = Error Code       *
****************************************

*-----QuickSort Parameter Block-----

QTYPE EQU 0 ;Field Type
QDISP EQU 2 ;Displacement
QSIZE EQU 4 ;Size
QDESC EQU 6 ;Descending order
QCAPS EQU 8 ;Ignore capitalization

QSZ EQU 10  ;Parameter block size

*Sort Errors
*230 Table disk file not found
*231 Table is too large to sort
*232 Escape key pressed
*233 Disk I/O error
*234 There are no field definitions for this table
*235 Could not create temporary files
*236 Table not defined
*237 Field not defined

SORT MOVE.L A0,Q_ORD
 MOVE.L A1,Q_TBL

*--------Assign Default Table Name---------

QT_100 TST.L FTABL(A0)
 BNE QT_101
 MOVE.L SET_DEFLT,FTABL(A0)
QT_101 TST FCONN(A0)
 BEQ QT_200
 ADD.L #EV_FSZ,A0
 JMP QT_100

*--------Assign Field Definitions----------

QT_200 MOVE.L Q_TBL,A2

QT_201 MOVE.L Q_ORD,A3

QT_202 MOVE.L CACHEF,A4
 MOVE #CACFLD,D4

QT_203 MOVE.L A4,A0
 ADD.L #20,A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI QT_204

 MOVE.L A4,A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI QT_204

 CLR D0  ;Load field info
 MOVE.B 40(A4),D0
 MOVE D0,FTYPE(A3)

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE D1,FDISP(A3)

 MOVE.L A4,A0
 ADD.L #47,A0
 JSR CVAL
 MOVE D1,FSIZE(A3)

QT_204 ADD.L #65,A4
 SUB #1,D4
 BNE QT_203

 TST FCONN(A3)
 BEQ QT_205
 ADD.L #EV_FSZ,A3
 JMP QT_202

QT_205 TST FCONN(A2)
 BEQ QT_300
 ADD.L #EV_FSZ,A2
 JMP QT_201

*-------Establish Parameter Block---------

QT_300 LEA Q_PARAM,A4
 MOVE.L Q_TBL,A3
 MOVE.L Q_ORD,A2
 CLR D5

QT_302 MOVE.L FNAME(A3),A0
 MOVE.L FTABL(A2),A1
 JSR MMATCHER
 TST D0
 BMI QT_303

 MOVE #237,D7
 MOVE.L CACHEF,A0
 ADD.L #20,A0
 MOVE #CACFLD-1,D4
QT_CKFLD MOVE.L FTABL(A2),A1
 JSR MMATCHER
 TST D0
 BEQ QT_FLD2
 ADD.L #65,A0
 DBF D4,QT_CKFLD
 JMP Q_ERROR

QT_FLD2 MOVE.L FNAME(A2),A1
 SUB.L #20,A0
 JSR MMATCHER
 TST D0
 BEQ QT_PARMA
 ADD.L #20+65,A0
 DBF D4,QT_CKFLD
 JMP Q_ERROR

QT_PARMA MOVE FTYPE(A2),QTYPE(A4)
 MOVE FDISP(A2),QDISP(A4)
 MOVE FSIZE(A2),QSIZE(A4)
 MOVE FRECN(A2),QDESC(A4)
 MOVE FIFIL(A2),QCAPS(A4)

 ADD.L #QSZ,A4
 MOVE #1,D5

QT_303 TST FCONN(A2)
 BEQ QT_304
 ADD.L #EV_FSZ,A2
 JMP QT_302

QT_304 TST D5
 BEQ QT_305

 CLR QTYPE(A4)

 MOVE #1,D0
 TST FCONN(A2)
 BNE QT_306
 CLR D0
QT_306 MOVE.L FNAME(A3),A0
 MOVE FTYPE(A3),D1 ;Indexed table flag
 JSR Q_SORT
 TST D0
 BMI QT_ERROR
 BNE QT_305

 MOVE.L Q_TBL,A3
 MOVE #1,FBOOL(A3)
 MOVE D1,FPARN(A3)

QT_305 MOVE.L Q_TBL,A3
 TST FCONN(A3)
 BEQ QT_DONE
 ADD.L #EV_FSZ,A3
 MOVE.L A3,Q_TBL
 JMP QT_300

QT_DONE CLR D0
 RTS

QT_ERROR MOVE #-1,D0
 RTS

****************************************
* SORT A TABLE                         *
* D0 = 1 Force file to disk            *
* A0 = Table name                      *
* D1 = 1 Table is indexed              *
* --Returns--                          *
* D0 = 0 - Pointer is to pointer table *
*      1 - Sorted info saved to table  *
* D1 = # of records                    *
* A1 = Pointer                         *
****************************************

Q_SORT MOVE D0,Q_FLAG
 MOVE D1,Q_INDEX
 MOVE.L A0,Q_NAME

 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D4
Q_S10 JSR MMATCHER
 TST D0
 BEQ Q_S11
 ADD.L #48,A1
 DBF D4,Q_S10
 MOVE #236,D7
 JMP Q_ERROR

Q_S11 ADD.L #20,A1

 LEA Q_TABL,A2
 LEA Q_PATH,A3
 MOVE #18,D0
Q_12 TST.B (A1)
 BEQ Q_13
 MOVE.B (A1),(A3)+
 MOVE.B (A1)+,(A2)+
 DBF D0,Q_12

Q_13 CLR.B (A3)

 MOVE #12,D0
 MOVE.L Q_NAME,A1
Q_14 TST.B (A1)
 BEQ Q_15
 MOVE.B (A1)+,(A2)+
 DBF D0,Q_14

Q_15 MOVE.B #'.',(A2)+
 MOVE.B #'T',(A2)+
 MOVE.B #'B',(A2)+
 MOVE.B #'L',(A2)+
 CLR.B (A2)

 JSR F_SETDTA
 MOVE #230,D7
 LEA Q_TABL,A0
 JSR F_SFIRST
 TST D0
 BMI Q_ERROR

* Calculate # of records to sort in memory =
* (Filesize/(Recordsize+10+4))/(heapsize/(Recordsize+10+4))
* 10 - Stack space  4 - Pointer table space

 MOVE #234,D7
 MOVE.L Q_NAME,A0
 CLR D1
 JSR CAL_ROW
 MOVE D0,Q_RECSZ
 CMP #2,D0
 BEQ Q_ERROR

 MOVE.L DTA+26,D1
 TST.L D1
 BEQ Q_ERROR
 AND.L #$FFFF,D0
 DIVU D0,D1
 MOVE D1,Q_TTLRECS

 AND.L #$FFFF,D0
 ADD #14,D0
 MOVE.L Q_SIZE,D1
 DIVU D0,D1
 AND.L #$FFFF,D1
 MOVE.L D1,Q_MAXREC

 CLR.L D0
 MOVE Q_TTLRECS,D0
 CMP.L Q_MAXREC,D0
 BCS Q_102
 MOVE #1,Q_INMEM

Q_102 LEA Q_TABL,A0
 JSR F_OPEN
 MOVE D0,FHNDL

 TST D0
 BPL Q_103
 LEA Q_TABL,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_102
 MOVE #230,D7
 JMP Q_ERROR

Q_103 CLR Q_BLOCK

*----------Sort a block------------

Q_LOOP CLR.L D0   ;Where do we load the data?
 MOVE Q_TTLRECS,D0
 TST Q_INMEM
 BEQ Q_105
 MOVE.L Q_MAXREC,D0
Q_105 MULU #4,D0
 ADD.L #4,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A1

 MOVE.L Q_HEAP,A0  ;Init the pointer table
 CLR.L D2
 MOVE Q_RECSZ,D2
 CLR.L D1
 MOVE Q_TTLRECS,D1
 TST Q_INMEM
 BEQ Q_106
 MOVE.L Q_MAXREC,D1
Q_106 MOVE.L D0,(A0)+
 ADD.L D2,D0
 SUB.L #1,D1
 TST.L D1
 BPL Q_106

 MOVE.L Q_MAXREC,D0  ;Read the data
 MULU Q_RECSZ,D0
 MOVE FHNDL,A0
 JSR F_READ
 TST.L D0
 BEQ Q_LEVEL2
 BPL Q_108

 LEA Q_DIS1,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_LOOP
 MOVE FHNDL,A0
 JSR F_CLOSE
 MOVE #233,D7
 JMP Q_ERROR

Q_108 DIVU Q_RECSZ,D0
 MOVE D0,Q_RECS

 AND.L #$FFFF,D0
 SUB #1,D0
 MOVE D0,-(A7)
 MOVE D0,-(A7)
 CLR -(A7)
 MOVE.L Q_HEAP,-(A7)
 JSR QUICK_SORT
 ADD.L #10,A7

 MOVE #255,D7
 JSR KEYSTOP
 TST D0
 BNE Q_DISKER

 TST Q_INMEM
 BEQ Q_107

*----Save block to temporary file-----

Q_701 CLR.L D0
 MOVE Q_BLOCK,D0
 MULU #14,D0
 ADD.L #QS_NAME,D0
 MOVE.L D0,A0
 MOVE.L D0,A2
 JSR Q_ADDPTH
 JSR F_CREATE
 MOVE D0,Q_FTEMP
 TST D0
 BPL Q_700

 MOVE.L A2,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_701
 MOVE #235,D7
 JMP Q_ERROR

Q_700 CLR Q_COUNT
 MOVE.L Q_HEAP,Q_POINT

Q_200 MOVE.L Q_POINT,A1
 MOVE.L (A1),A1
 ADD.L #4,Q_POINT
 CLR.L D0
 MOVE Q_RECSZ,D0
 MOVE.L D0,D6
 MOVE Q_FTEMP,A0
 JSR F_WRITE
 TST.L D0
 BMI Q_702
 CMP.L D6,D0
 BEQ Q_201

Q_702 LEA Q_DIS2,A0
 JSR DISK_ERR

 MOVE Q_FTEMP,A0
 JSR F_CLOSE
 MOVE FHNDL,A0
 JSR F_CLOSE
 MOVE #233,D7
 JMP Q_DISKER

Q_201 ADD #1,Q_COUNT
 MOVE Q_COUNT,D0
 CMP Q_RECS,D0
 BNE Q_200

 MOVE Q_FTEMP,A0
 JSR F_CLOSE

 MOVE #232,D7
 JSR KEYSTOP
 TST D0
 BNE Q_DISKER

Q_NESC MOVE #231,D7
 ADD #1,Q_BLOCK
 CMP #8,Q_BLOCK
 BNE Q_LOOP
 JMP Q_ERROR

*--------Sort temporary files----------

Q_LEVEL2 MOVE FHNDL,A0
 JSR F_CLOSE

Q_303 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR F_CREATE
 MOVE D0,FHNDL
 TST D0
 BPL Q_302

 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_303
 MOVE #233,D7
 JMP Q_DISKER

Q_302 MOVE #7,D0
 LEA Q_FDONE,A0
 LEA Q_HANDLE,A1
Q_300 CLR (A0)+
 MOVE #-1,(A1)+
 DBF D0,Q_300

 CLR Q_COUNT
Q_301 CLR.L D0
 MOVE Q_COUNT,D0
 MULU #14,D0
 ADD.L #QS_NAME,D0
 MOVE.L D0,A0
 MOVE.L D0,Q_ERRNM
 JSR Q_ADDPTH
 JSR F_OPEN
 TST D0
 BPL Q_304

 MOVE.L Q_ERRNM,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_301
 MOVE #233,D7
 JMP Q_DISKER

Q_304 CLR.L D1
 MOVE Q_COUNT,D1
 LSL #1,D1
 ADD.L #Q_HANDLE,D1
 MOVE.L D1,A0
 MOVE D0,(A0)

 ADD #1,Q_COUNT
 MOVE Q_COUNT,D0
 CMP Q_BLOCK,D0
 BNE Q_301

*-------Read records from temporary files-------

 CLR.L D0
 MOVE Q_RECSZ,D0
 ADD #5,D0
 AND #$FFFE,D0
 MOVE D0,Q_EVEN

 CLR Q_COUNT

Q_430 CLR.L D0
 MOVE Q_COUNT,D0
 LSL #1,D0
 ADD.L #Q_HANDLE,D0
 MOVE.L D0,A1
 MOVE (A1),D0
 MOVE D0,A0

 CLR.L D0
 MOVE Q_EVEN,D0
 MULU Q_COUNT,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE Q_RECSZ,D0
 MOVE.L D0,D5
 JSR F_READ
 CMP.L D0,D5
 BEQ Q_432

 LEA Q_DIS1,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_430
 JSR Q_CLOSE
 MOVE FHNDL,A0
 JSR F_CLOSE
 MOVE #233,D7
 JMP Q_DISKER

Q_432 ADD #1,Q_COUNT
 MOVE Q_COUNT,D0
 CMP Q_BLOCK,D0
 BNE Q_430

*-------Find greatest/least record-------

Q_SISORT CLR Q_SEQ
 LEA Q_SEQ,A0
 LEA Q_FDONE,A1
 CLR D0
Q_451 TST (A1)+
 BNE Q_452
 MOVE D0,(A0)+
Q_452 ADD #1,D0
 CMP #8,D0
 BNE Q_451

 CMP #1,Q_BLOCK
 BLE Q_407

 MOVE #1,Q_J  ;DO Q_J=2 TO N

Q_DO12 CLR.L D0   ;A=ARR(Q_J)
 MOVE Q_J,D0
 LSL #1,D0
 ADD.L #Q_SEQ,D0
 MOVE.L D0,A0
 MOVE (A0),Q_A

 MOVE Q_J,Q_I     ;DO I=J-1 TO 1 STEP -1
 SUB #1,Q_I

Q_DO11 CLR.L D0   ;IF ARR(I)<=A THEN Q_10
 MOVE Q_I,D0
 LSL #1,D0
 ADD.L #Q_SEQ,D0
 MOVE.L D0,A0
 CLR.L D0
 MOVE (A0),D0
 MULU Q_EVEN,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE Q_A,D0
 MULU Q_EVEN,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A1

 JSR LITLSORT
 TST D0
 BEQ Q_10

 CLR.L D0   ;ARR(I+1)=ARR(I)
 MOVE Q_I,D0
 LSL #1,D0
 ADD.L #Q_SEQ,D0
 MOVE.L D0,A0
 MOVE (A0),2(A0)

 TST Q_I
 BEQ Q_DO11B
 SUB #1,Q_I
 JMP Q_DO11

Q_DO11B CLR Q_I  ;I=0
 CLR.L D0
 JMP Q_11

Q_10 CLR.L D0  ;ARR(I+1)=A
 MOVE Q_I,D0
 ADD #1,D0
Q_11 LSL #1,D0
 ADD.L #Q_SEQ,D0
 MOVE.L D0,A0
 MOVE Q_A,(A0)

 ADD #1,Q_J
 MOVE Q_J,D0
 CMP Q_BLOCK,D0
 BNE Q_DO12

*---------Save greatest record--------

Q_407 MOVE #232,D7  ;ESC Key pressed?
 JSR KEYSTOP
 TST D0
 BNE Q_DISKER

Q_460 CLR.L D0
 MOVE Q_SEQ,D0
 MULU Q_EVEN,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A1

 MOVE FHNDL,A0
 CLR.L D0
 MOVE Q_RECSZ,D0
 MOVE.L D0,D6
 JSR F_WRITE
 CMP.L D6,D0
 BEQ Q_461

 LEA Q_DIS2,A0
 JSR DISK_ERR
 MOVE FHNDL,A0
 JSR F_CLOSE
 JMP Q_DISKER

Q_461 CLR.L D0
 MOVE Q_SEQ,D0
 LSL #1,D0
 ADD.L #Q_HANDLE,D0
 MOVE.L D0,A0
 CLR.L D0
 MOVE (A0),D0
 MOVE D0,A0

 CLR.L D0
 MOVE Q_SEQ,D0
 MULU Q_EVEN,D0
 ADD.L Q_HEAP,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE Q_RECSZ,D0
 MOVE.L D0,D6
 JSR F_READ
 CMP.L D6,D0
 BEQ Q_SISORT

 CLR.L D0
 MOVE Q_SEQ,D0
 LSL #1,D0
 ADD.L #Q_FDONE,D0
 MOVE.L D0,A0
 MOVE #1,(A0)

 SUB #1,Q_BLOCK
 TST Q_BLOCK
 BNE Q_SISORT

*--------CLOSE ALL FILES------

Q_FINAL MOVE FHNDL,A0
 JSR F_CLOSE
 JSR Q_CLOSE
 JMP Q_REP1

*---------CLOSE & DELETE ALL TEMPORARY FILES----------

Q_CLOSE CLR Q_COUNT
Q_501 CLR.L D1
 MOVE Q_COUNT,D1
 LSL #1,D1
 ADD.L #Q_HANDLE,D1
 MOVE.L D1,A0
 MOVE (A0),D0
 TST D0
 BMI Q_503
 MOVE D0,A0
 JSR F_CLOSE
Q_503 ADD #1,Q_COUNT
 CMP #8,Q_COUNT
 BNE Q_501

 CLR Q_COUNT
Q_502 CLR.L D0
 MOVE Q_COUNT,D0
 MULU #14,D0
 ADD.L #QS_NAME,D0
 MOVE.L D0,A0
 JSR Q_ADDPTH
 JSR F_DELETE
 ADD #1,Q_COUNT
 CMP #8,Q_COUNT
 BNE Q_502
 RTS

*------All records fit into memory-----

Q_107 MOVE FHNDL,A0
 JSR F_CLOSE

 TST Q_FLAG
 BEQ Q_MEMORY

Q_DE3 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR F_CREATE
 MOVE D0,FHNDL
 TST D0
 BPL Q_DE2

 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_DE3
 JMP Q_DISKER

Q_DE2 CLR Q_COUNT
 MOVE.L Q_HEAP,A4

Q_500 MOVE.L (A4)+,A1
 CLR.L D0
 MOVE Q_RECSZ,D0
 MOVE.L D0,D5
 MOVE FHNDL,A0
 JSR F_WRITE
 CMP.L D5,D0
 BNE Q_DICK
 TST.L D0
 BPL Q_NDKER

Q_DICK LEA Q_DIS2,A0
 JSR DISK_ERR
 JMP Q_DISKER

Q_NDKER ADD #1,Q_COUNT
 MOVE Q_COUNT,D0
 CMP Q_RECS,D0
 BNE Q_500

 MOVE FHNDL,A0
 JSR F_CLOSE

Q_REP1 LEA Q_TABL,A0
 JSR F_DELETE
 TST D0
 BPL Q_REP2

 LEA Q_TABL,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ Q_REP1
 JMP Q_DISKER

Q_REP2 LEA QS_FIN,A0
 JSR Q_ADDPTH
 MOVE.L A0,A1
 LEA Q_TABL,A0
 JSR F_RENAME
 TST D0
 BPL Q_REP3

 LEA Q_DIS3,A0
 JSR DISK_ERR
 JMP Q_DISKER

Q_REP3 TST Q_INDEX
 BEQ Q_REP4
 MOVE.L Q_NAME,A0
 JSR REORGANIZE
 TST D0
 BMI Q_ERROR

Q_REP4 MOVE Q_TTLRECS,D1
 MOVE #1,D0
 RTS

Q_MEMORY MOVE.L Q_HEAP,A0
 MOVE Q_TTLRECS,D1
 CLR D0
 RTS

Q_ADDPTH LEA PTHNM,A2  ;Add path to file name
 LEA Q_PATH,A3
 MOVE #20,D0
Q_ADD2 TST.B (A3)
 BEQ Q_ADD3
 MOVE.B (A3)+,(A2)+
 DBF D0,Q_ADD2
Q_ADD3 MOVE #20,D0
Q_ADD4 TST.B (A0)
 BEQ Q_ADD5
 MOVE.B (A0)+,(A2)+
 DBF D0,Q_ADD4
Q_ADD5 CLR.B (A2)+
 LEA PTHNM,A0
 RTS

Q_DISKER JSR Q_CLOSE

Q_ERROR MOVE #-1,D0
 RTS

Q_DIS1 DC.B 'Sort: Disk Read Error',0
Q_DIS2 DC.B 'Sort: Disk Write Error',0
Q_DIS3 DC.B 'Sort: Could not rename files',0
 EVEN

*************************************
* QUICK SORT                        *
* by Charles Johnson 12/3/87        *
* Modified by Frank Cohen 12/9/87   *
* --------------------------------- *
* Enter with the following on stack *
* # of records, -(A7)               *
* End Rec #,-(a7)                   *
* Start Rec #,-(a7)                 *
* Adr of table in memory,-(A7)      *
*************************************

QUICK_SORT link a6,#-8
 move 12(a6),-2(a6) ; low=start
 move 14(a6),-4(a6) ; high=end
 clr d0
 move 12(a6),d0
 add 14(a6),d0
 lsr #1,d0
 lsl #2,d0
 move.l 8(a6),a0
 add d0,a0
 move.l (a0),-8(a6) ; list_separator
l2 jmp l5
l6 add #1,-2(a6)
l5 move -2(a6),d0 ; Low
 lsl #2,d0
 move.l 8(a6),a0  ; Add to start of array
 add d0,a0
 move.l (a0),-(a7)    ; Push this pointer on the stack
 move.l -8(a6),-(a7)  ; list_separator
 jsr COMP_ASCEN
 add #8,a7
 tst d0
 bne l6
l7 jmp l8
l9 subq #1,-4(a6)
l8 move.l -8(a6),-(a7)
 move -4(a6),d0
 lsl #2,d0
 move.l 8(a6),a0
 add d0,a0
 move.l (a0),-(a7)
 jsr COMP_ASCEN
 add #8,a7
 tst d0
 bne l9

l10 move -2(a6),d0
 cmp -4(a6),d0
 bge l11
 move -4(a6),d0
 subq #1,-4(a6)
 lsl #2,d0
 move.l 8(a6),a0
 add d0,a0

 move -2(a6),d0
 add #1,-2(a6)
 lsl #2,d0
 move.l 8(a6),a1
 add d0,a1

 move.l (a0),d0    ; Exchange pointers
 move.l (a1),(a0)
 move.l d0,(a1)
 jmp l12

l11 move -2(a6),d0
 cmp -4(a6),d0
 bne l13
 add #1,-2(a6)
l13 tst d0
l12 tst d0
l3 move -2(a6),d0
 cmp -4(a6),d0
 ble l2
l4 move 12(a6),d0
 cmp -4(a6),d0
 bge l14
 move -4(a6),-(a7)
 move 12(a6),-(a7)
 move.l 8(a6),-(a7)
 jsr QUICK_SORT
 add #8,a7
l14 move -2(a6),d0
 cmp 14(a6),d0
 bge l15
 move 14(a6),-(a7)
 move -2(a6),-(a7)
 move.l 8(a6),-(a7)
 jsr QUICK_SORT
 add #8,a7
l15 tst d0
l1 unlk a6
 rts

********************
* SORT TWO RECORDS *
********************

LITLSORT MOVE.L A0,COMPA0
 MOVE.L A1,COMPA1
 JMP CO_STRT

COMP_ASCEN MOVE.L 4(A7),COMPA0
 MOVE.L 8(A7),COMPA1

CO_STRT LEA Q_PARAM,A4

CO_LOOP MOVE.L COMPA0,A0
 MOVE.L COMPA1,A1

 CLR.L D0
 MOVE QDISP(A4),D0
 ADD.L D0,A0
 ADD.L D0,A1

 MOVE QSIZE(A4),D1

 MOVE QTYPE(A4),D0
 CMP.B #'C',D0
 BEQ CO_TXT
 CMP.B #'D',D0
 BEQ CO_NUM
 CMP.B #'I',D0
 BEQ CO_NUM

CO_DATE TST QDESC(A4)
 BNE CO_DATE2

 MOVE.B 4(A1),D0
 CMP.B 4(A0),D0
 BLT CO_SWAP
 BGT CO_OK
 MOVE.B 5(A1),D0
 CMP.B 5(A0),D0
 BLT CO_SWAP
 BGT CO_OK

 MOVE.B (A1),D0
 CMP.B (A0),D0
 BLT CO_SWAP
 BGT CO_OK
 MOVE.B 1(A1),D0
 CMP.B 1(A0),D0
 BLT CO_SWAP
 BGT CO_OK

 MOVE.B 2(A1),D0
 CMP.B 2(A0),D0
 BLT CO_SWAP
 BGT CO_OK
 MOVE.B 3(A1),D0
 CMP.B 3(A0),D0
 BLT CO_SWAP
 BGT CO_OK
 JMP CO_NEXT

CO_DATE2 MOVE.B 4(A1),D0
 CMP.B 4(A0),D0
 BLT CO_SWAP
 BGT CO_OK
 MOVE.B 5(A1),D0
 CMP.B 5(A0),D0
 BGT CO_SWAP
 BLT CO_OK

 MOVE.B (A1),D0
 CMP.B (A0),D0
 BGT CO_SWAP
 BLT CO_OK
 MOVE.B 1(A1),D0
 CMP.B 1(A0),D0
 BGT CO_SWAP
 BLT CO_OK

 MOVE.B 2(A1),D0
 CMP.B 2(A0),D0
 BGT CO_SWAP
 BLT CO_OK
 MOVE.B 3(A1),D0
 CMP.B 3(A0),D0
 BGT CO_SWAP
 BLT CO_OK
 JMP CO_NEXT

CO_NUM TST QDESC(A4)
 BEQ CO_NUM1

CO_NUM2 CMP.B (A0)+,(A1)+
 BGT CO_SWAP
 BLT CO_OK
 SUB #1,D1
 BNE CO_NUM2
 JMP CO_NEXT

CO_NUM1 CMP.B (A0)+,(A1)+
 BLT CO_SWAP
 BGT CO_OK
 SUB #1,D1
 BNE CO_NUM1
 JMP CO_NEXT

CO_TXT TST QCAPS(A4)
 BNE CO_TXT2
 TST QDESC(A4)
 BNE CO_TXT3

CO_100 CMP.B (A0)+,(A1)+
 BLT CO_SWAP
 BGT CO_OK
 SUB #1,D1
 TST D1
 BNE CO_100
 JMP CO_NEXT

CO_TXT3 CMP.B (A0)+,(A1)+   ;Descending order
 BGT CO_SWAP
 BLT CO_OK
 SUB #1,D1
 TST D1
 BNE CO_TXT3
 JMP CO_NEXT

CO_TXT2 TST QDESC(A4)  ;Ignore caps
 BNE CO_TXT4

CO_1 MOVE.B (A0)+,D0
 CMP.B #'a',D0
 BLT CO_2
 CMP.B #'z',D0
 BGT CO_2
 SUB.B #32,D0

CO_2 MOVE.B (A1)+,D2
 CMP.B #'a',D2
 BLT CO_3
 CMP.B #'z',D2
 BGT CO_3
 SUB.B #32,D2

CO_3 CMP.B D0,D2
 BLT CO_SWAP
 BGT CO_OK
 SUB #1,D1
 TST D1
 BNE CO_1
 JMP CO_NEXT

CO_TXT4 MOVE.B (A0)+,D0 ;Descending order Ignore caps
 CMP.B #'a',D0
 BLT CO_8
 CMP.B #'z',D0
 BGT CO_8
 SUB.B #32,D0

CO_8 MOVE.B (A1)+,D2
 CMP.B #'a',D2
 BLT CO_9
 CMP.B #'z',D2
 BGT CO_9
 SUB.B #32,D2

CO_9 CMP.B D0,D2
 BGT CO_SWAP
 BLT CO_OK
 SUB #1,D1
 TST D1
 BNE CO_TXT4

CO_NEXT ADD.L #QSZ,A4
 TST (A4)
 BNE CO_LOOP

CO_OK CLR D0
 RTS
CO_SWAP MOVE #1,D0
 RTS

QS_NAME DC.B 'SORTING1.$$$',0,0
 DC.B 'SORTING2.$$$',0,0
 DC.B 'SORTING3.$$$',0,0
 DC.B 'SORTING4.$$$',0,0
 DC.B 'SORTING5.$$$',0,0
 DC.B 'SORTING6.$$$',0,0
 DC.B 'SORTING7.$$$',0,0
 DC.B 'SORTING8.$$$',0,0
QS_FIN DC.B 'SORTED.$$$',0,0
 EVEN

**************************************
* SAVE SORTED TABLE TO DISK          *
* A0 = Ptr to Table structure        *
* ---returns------------------------ *
* D0 = -1 if error D7 = error code   *
**************************************

*233 Disk I/O error

QS_SAVE MOVE.L A0,A4

 TST FBOOL(A4)
 BEQ QS_SDONE

QS_S100 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR F_CREATE
 MOVE D0,FHNDL
 TST D0
 BPL QS_S101

 LEA QS_FIN,A0
 JSR Q_ADDPTH
 JSR DISK_ERR
 CMP #-2,D0
 BEQ QS_S100
 JMP Q_DISKER

QS_S101 CLR Q_COUNT
 MOVE.L Q_HEAP,A3
 MOVE FPARN(A4),Q_RECS
 MOVE #233,D7

QS_S102 MOVE.L (A3)+,A1
 CLR.L D0
 MOVE FSIZE(A4),D0
 MOVE.L D0,D6
 MOVE FHNDL,A0
 JSR F_WRITE
 CMP.L D6,D0
 BEQ QS_S103

 LEA Q_DIS2,A0
 JSR DISK_ERR
 MOVE FHNDL,A0
 JSR F_CLOSE
 JMP QS_SERR

QS_S103 ADD #1,Q_COUNT
 MOVE Q_COUNT,D0
 CMP Q_RECS,D0
 BNE QS_S102

 MOVE FHNDL,A0
 JSR F_CLOSE

QS_S104 MOVE.L FVAL2(A4),A0
 JSR F_DELETE
 TST D0
 BPL QS_S105
 LEA Q_TABL,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ QS_S104
 JMP Q_DISKER

QS_S105 LEA QS_FIN,A0
 JSR Q_ADDPTH
 MOVE.L A0,A1
 MOVE.L FVAL2(A4),A0
 JSR F_RENAME
 TST D0
 BPL QS_S106

 LEA Q_DIS3,A0
 JSR DISK_ERR
 JMP Q_DISKER

QS_S106 CLR FBOOL(A4)
 CLR FAGGR(A4)

 TST FTYPE(A4)
 BEQ QS_SDONE

 MOVE.L FNAME(A4),A0
 JSR REORGANIZE
 TST D0
 BMI Q_ERROR

QS_SDONE CLR D0
 RTS

QS_SERR MOVE #-1,D0
 RTS

**************************************
* REORGANIZE A TABLE & REBUILD INDEX *
* A0 = Table name                    *
* ---returns------------------------ *
* D0 = -1 if error D7 = error code   *
**************************************

*Errors
* 250 Table not found
* 251 Disk I/O Error
* 252 No field definitions found for that table
* 253 Table disk file not found
* 254 Index disk file not found
* 255 ESC key pressed

REORGANIZE MOVE.L A0,R_TABLE

 JSR LDCACHE
 TST D0
 BMI R_ERROR

 MOVE.L CACHET,A1
 MOVE #CACTBL-1,D4
 MOVE.L R_TABLE,A0
R_10 JSR MMATCHER
 TST D0
 BEQ R_11
 ADD.L #48,A1
 DBF D4,R_10
 MOVE #250,D7
 JMP R_ERROR

R_11 ADD.L #20,A1
 MOVE.L A1,A4

 LEA R_FILE,A2
 LEA R_INDEX,A3
 MOVE #18,D0
R_12 TST.B (A1)
 BEQ R_13
 MOVE.B (A1),(A2)+
 MOVE.B (A1)+,(A3)+
 DBF D0,R_12

R_13 MOVE #12,D0
 MOVE.L R_TABLE,A1
R_14 TST.B (A1)
 BEQ R_15
 MOVE.B (A1),(A2)+
 MOVE.B (A1)+,(A3)+
 DBF D0,R_14

R_15 MOVE.B #'.',(A2)+
 MOVE.B #'T',(A2)+
 MOVE.B #'B',(A2)+
 MOVE.B #'L',(A2)+
 CLR.B (A2)

 MOVE.B #'.',(A3)+
 MOVE.B #'I',(A3)+
 MOVE.B #'N',(A3)+
 MOVE.B #'D',(A3)+
 CLR.B (A3)

 LEA R_TFILE,A2
 LEA R_TIFILE,A3
 MOVE #18,D0
R_20 TST.B (A4)
 BEQ R_21
 CMP.B #' ',(A4)
 BEQ R_21
 MOVE.B (A4),(A2)+
 MOVE.B (A4),(A3)+
 ADD.L #1,A4
 DBF D0,R_20

R_21 LEA R_TEMPF,A0
 LEA R_TEMPI,A1
 MOVE #18,D0
R_22 MOVE.B (A0)+,(A2)+
 MOVE.B (A1)+,(A3)+
 DBF D0,R_22

 CLR D1
 MOVE.L R_TABLE,A0
 JSR CAL_ROW
 MOVE #252,D7
 CMP #2,D0
 BEQ R_ERROR
 MOVE D0,R_SIZE

 CLR R_SIZE2
 MOVE #1,D1
 MOVE.L R_TABLE,A0
 JSR CAL_ROW
 CMP #2,D0
 BEQ R_NOINDX
 MOVE D0,R_SIZE2

*--------Assign Field Definitions----------

R_NOINDX CLR R_FLDCNT
 MOVE.L STR_REOR,A3

R_201 MOVE.L CACHEF,A4
 MOVE #CACFLD,D4

R_203 MOVE.L A4,A0
 ADD.L #20,A0
 MOVE.L R_TABLE,A1
 JSR MMATCHER
 TST D0
 BMI R_204

 ADD #1,R_FLDCNT
 MOVE.L A1,FTABL(A3)
 MOVE.L A4,FNAME(A3)

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE D1,FDISP(A3)

 MOVE.L A4,A0
 ADD.L #47,A0
 JSR CVAL
 MOVE D1,FSIZE(A3)

 CLR D0
 MOVE.B 52(A4),D0
 SUB.B #'0',D0
 MOVE D0,FEXTR(A3)

 ADD.L #EV_FSZ,A3

R_204 ADD.L #65,A4
 SUB #1,D4
 BNE R_203

*-------Assign Index Definitions-------

 TST R_SIZE2
 BEQ R_NOPE

 MOVE.L STR_INDX,A3
 CLR R_INDCNT

R_301 MOVE.L CACIND,A4
 MOVE #CACIDX,D4

R_303 MOVE.L A4,A0
 ADD.L #20,A0
 MOVE.L R_TABLE,A1
 JSR MMATCHER
 TST D0
 BMI R_304

 ADD #1,R_INDCNT
 MOVE.L A1,FTABL(A3)
 MOVE.L A4,FNAME(A3)

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE D1,FDISP(A3)

 ADD.L #EV_FSZ,A3

R_304 ADD.L #65,A4
 SUB #1,D4
 BNE R_303

*-------Do some computn'--------

R_NOPE CLR.L D0
 MOVE R_SIZE,D0
 MULU #2,D0
 ADD R_SIZE2,D0
 MOVE.L Q_SIZE,D1
 DIVU D0,D1
 MOVE D1,R_MAXREC

 JSR F_SETDTA
 MOVE #253,D7
 LEA R_FILE,A0
 JSR F_SFIRST
 TST D0
 BMI R_ERROR
 MOVE.L DTA+26,D0
 DIVU R_SIZE,D0
 MOVE D0,R_TTLRECS

*---------Open Tables & Load---------

R_OPAGN MOVE #251,D7
 LEA R_FILE,A0
 JSR F_OPENRW
 TST D0
 BPL R_OPEND
 LEA R_FILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_OPAGN
 JMP R_ERROR

R_OPEND MOVE D0,FHNDL

R_CRTAGN LEA R_TFILE,A0
 JSR F_CREATE
 TST D0
 BPL R_CRTMP
 LEA R_TFILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_CRTAGN
 MOVE FHNDL,A0
 JSR F_CLOSE
 JMP R_ERROR

R_CRTMP MOVE D0,FHNDL+2

 TST R_SIZE2
 BEQ R_NOCRT

R_CRAGN LEA R_TIFILE,A0
 JSR F_CREATE
 TST D0
 BPL R_CRIT
 LEA R_INDEX,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_CRAGN

 MOVE FHNDL,A0
 JSR F_CLOSE
 MOVE FHNDL+2,A0
 JSR F_CLOSE
 JMP R_ERROR

R_CRIT MOVE D0,FHNDL+4

*---------Parse tables--------

R_NOCRT CLR R_FINRECS

 MOVE.L Q_HEAP,A1
 MOVE FHNDL,A0
 CLR.L D0
 MOVE R_MAXREC,D0
 MULU R_SIZE,D0
 JSR F_READ
 TST.L D0
 BPL R_PARSE
 LEA R_DIS1,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_NOCRT
 JSR R_CLOSER
 JMP R_ERROR

R_PARSE TST.L D0
 BEQ R_END
 MOVE.L D0,D1

 DIVU R_SIZE,D0
 MOVE D0,R_RECS

 OR.L #1,D1
 AND.L #$FFFFFFFE,D1
 MOVE.L D1,D2
 ADD.L Q_HEAP,D1
 MOVE.L D1,R_DESTPTR  ;Table destination pointer
 MOVE.L D1,R_DESTPTR+4

 ADD.L D2,D1
 MOVE.L D1,R_INDXPTR  ;Index destination pointer
 MOVE.L D1,R_INDXPTR+4

 MOVE.L Q_HEAP,R_SOURCE ;Source pointer

*-----------Remove Deleted Records------------

R_LOOP MOVE.L R_SOURCE,A0
 MOVE R_SIZE,D0
 SUB #3,D0
R_CHECK TST.B (A0)+
 BNE R_SCORED
 DBF D0,R_CHECK
 JMP R_FAILED

* Remove trailing spaces from character fields

R_SCORED MOVE R_FLDCNT,D2
 MOVE.L STR_REOR,A3

R_RS99 CLR.L D0
 MOVE FDISP(A3),D0
 ADD FSIZE(A3),D0
 ADD.L R_SOURCE,D0
 MOVE.L D0,A0
 CLR.L D0
 MOVE FSIZE(A3),D0
 SUB #1,D0

R_RS100 CMP.B #' ',-(A0)
 BNE R_RS101
 CLR.B (A0)
 DBF D0,R_RS100

R_RS101 ADD.L #EV_FSZ,A3
 SUB #1,D2
 BNE R_RS99

* Copy field to destination buffer

 MOVE.L R_SOURCE,A0
 MOVE.L R_DESTPTR,A1
 MOVE R_SIZE,D0
 SUB #1,D0
R_MOVE MOVE.B (A0)+,(A1)+
 DBF D0,R_MOVE

 ADD #1,R_FINRECS

 CLR.L D0
 MOVE R_SIZE,D0
 ADD.L R_DESTPTR,D0
 MOVE.L D0,R_DESTPTR

 TST R_SIZE2
 BEQ R_FAILED

 CLR.L D0
 MOVE R_SIZE2,D0
 SUB #2,D0
 ADD.L R_INDXPTR,D0
 MOVE.L D0,A0
 MOVE.B #13,(A0)
 MOVE.B #10,1(A0)

 MOVE.L STR_REOR,A2
 MOVE R_FLDCNT,D5

R_NEXT MOVE.L STR_INDX,A3
 MOVE R_INDCNT,D4

R_NUTR MOVE.L FNAME(A2),A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI R_INDAGN

 CLR.L D0
 MOVE FDISP(A2),D0
 ADD.L R_SOURCE,D0
 MOVE.L D0,A0

 CLR.L D0
 MOVE FDISP(A3),D0
 ADD.L R_INDXPTR,D0
 MOVE.L D0,A1

 CLR.L D0
 MOVE FSIZE(A2),D0
 SUB #1,D0
R_MOVE2 MOVE.B (A0)+,(A1)+
 DBF D0,R_MOVE2
 JMP R_NXTFLD

R_INDAGN ADD.L #EV_FSZ,A3
 SUB #1,D4
 BNE R_NUTR

R_NXTFLD ADD.L #EV_FSZ,A2
 SUB #1,D5
 BNE R_NEXT

 MOVE #255,D7  ;ESC Key pressed?
 JSR KEYSTOP
 TST D0
 BEQ R_NESC2
 JSR R_CLOSER
 JMP R_ERROR

R_NESC2 CLR.L D0
 MOVE R_SIZE2,D0
 ADD.L R_INDXPTR,D0
 MOVE.L D0,R_INDXPTR

R_FAILED CLR.L D0
 MOVE R_SIZE,D0
 ADD.L R_SOURCE,D0
 MOVE.L D0,R_SOURCE

 SUB #1,R_RECS
 TST R_RECS
 BNE R_LOOP

 MOVE.L R_DESTPTR+4,A1
 MOVE FHNDL+2,A0
 CLR.L D0
 MOVE R_FINRECS,D0
 MULU R_SIZE,D0
 JSR F_WRITE
 TST.L D0
 BPL R_WTBL
 LEA R_DIS1,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_NOCRT
 JSR R_CLOSER
 JMP R_ERROR

R_WTBL TST R_SIZE2
 BEQ R_NOCRT

 MOVE.L R_INDXPTR+4,A1
 MOVE FHNDL+4,A0
 CLR.L D0
 MOVE R_FINRECS,D0
 MULU R_SIZE2,D0
 JSR F_WRITE
 TST.L D0
 BPL R_NOCRT
 LEA R_DIS1,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_NOCRT
 JSR R_CLOSER
 JMP R_ERROR

R_END JSR R_CLOSER

R_FINAL1 LEA R_FILE,A0  ;Delete original table
 JSR F_DELETE
 TST D0
 BPL R_FINAL2
 LEA R_FILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_FINAL1
 JMP R_ERROR

R_FINAL2 TST R_SIZE2
 BEQ R_FINAL3

 LEA R_INDEX,A0  ;Delete index table
 JSR F_DELETE
 TST D0
 BPL R_FINAL3
 LEA R_FILE,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_FINAL2
 JMP R_ERROR

R_FINAL3 LEA R_FILE,A0
 LEA R_TFILE,A1
 JSR F_RENAME
 TST D0
 BPL R_FINAL4

 LEA R_DIS3,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_FINAL3
 JMP R_ERROR

R_FINAL4 TST R_SIZE2
 BEQ R_DONE

 LEA R_INDEX,A0
 LEA R_TIFILE,A1
 JSR F_RENAME
 TST D0
 BPL R_DONE

 LEA R_DIS3,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ R_FINAL4
 JMP R_ERROR

R_CLOSER MOVE FHNDL,A0
 JSR F_CLOSE
 MOVE FHNDL+2,A0
 JSR F_CLOSE
 TST R_SIZE2
 BEQ R_DONE
 MOVE FHNDL+4,A0
 JMP F_CLOSE

R_DONE CLR D0
 RTS

R_ERROR MOVE #-1,D0
 RTS

R_DIS1 DC.B 'Reorganize: Disk Read Error',0
R_DIS2 DC.B 'Reorganize: Disk Write Error',0
R_DIS3 DC.B 'Reorganize: Renaming files',0
R_TEMPF DC.B 'REORGT.$$$',0
R_TEMPI DC.B 'REORGI.$$$',0
 EVEN

*************************************
* EXPRESSION EVALUATOR              *
* --Inputs--                        *
* A0 = Ptr to expression structure  *
* A1 = Ptr to expression storage    *
* D0 Maximum # of structures        *
* D1 Highest parenthesis level      *
* D2 1-Level 1 operations only      *
* --Returns--                       *
* D0 = -1 IF ERROR D7= ERROR #      *
* D0 returns 1 for true 0 for false *
* A0 = New ptr to expr storage      *
*************************************

* STRUCTURE EQUATES

FNAME EQU 0  ; FIELD NAME
FTABL EQU 4  ; TABLE NAME
FTYPE EQU 8  ; TYPE
FDISP EQU 10 ; DISPLACEMENT
FSIZE EQU 12 ; SIZE
FEXTR EQU 14 ; DECIMAL SIZE
FVALU EQU 16 ; FIELD CONTENTS
FVAL2 EQU 20 ; EVALUATED FIELD CONTENTS
FCONN EQU 24 ; CONNECTOR 0=LAST EXPRESSION
FPARN EQU 26 ; PARENTHESIS LEVEL
FAGGR EQU 28 ; AGGREGATE FUNCTION NUMBER
FPOSI EQU 30 ; CHAR POSITION IN PROCEDURAL PROGRAM
FCALC EQU 32 ; CALCULATED FLAG
FBOOL EQU 34 ; CALCULATED BOOLEAN VALUE
FINDX EQU 36 ; POINTER TO INDEX DISK BUFFER
FIFIL EQU 40 ; INDEX FILE NAME
FIHND EQU 44 ; INDEX FILE HANDLE
FRECN EQU 46 ; RECORD NUMBER
FRFND EQU 48 ; RECORDS FOUND
FOBJN EQU 50 ; OBJECT #

EV_FSZ EQU 52 ; SIZE OF ONE EXPRESSION STRUCTURE

*Expression evaluator errors
* 220 String subtraction, multiplication, division not allowed
* 221 Internal error, connector type illegal
* 222 Divide by zero
* 223 Bad expression
* 224 These data types are mismatched for this operation
* 225 Cannot divide or multiply dates
* 226 Date addition may only be with integer numbers
* 227 Dates may only be compared to other dates or character fields
* 228 Cannot use this function with a date field

EXPRESS MOVE D0,EX_MAX
 MOVE D1,EX_PAREN
 MOVE D1,EX_PRN2
 MOVE D2,EX_FLAG
 MOVE.L A0,EX_STRCT
 MOVE.L A1,A3
 SUB.L #EV_FSZ,A0

EX_90 ADD.L #EV_FSZ,A0  ;Reset flags
 CLR FCALC(A0)
 CLR FBOOL(A0)
 TST FCONN(A0)
 BNE EX_90

*-----------LEVEL 1-----------

EX_LOOP1 MOVE.L EX_STRCT,A4
 MOVE EX_PRN2,EX_PRN3

EX_91 MOVE EX_PRN3,D1
 MOVE FCONN(A4),D0
 BEQ EX_93
 CMP #2,D0
 BCS EX_RCRS1
 CMP #6,D0
 BCC EX_RCRS1
 CMP #1,FCALC(A4)
 BEQ EX_RCRS1

 CMP FPARN(A4),D1
 BGT EX_RCRS1

 MOVE #223,D7
 MOVE.L A4,A2
EX_94 ADD.L #EV_FSZ,A2
 CMP #1,FCALC(A2)
 BNE EX_95
 TST FCONN(A2)
 BEQ EX_ERROR
 JMP EX_94

EX_95 CMP FPARN(A2),D1
 BLE EX_PROC1

EX_RCRS1 ADD.L #EV_FSZ,A4
 JMP EX_91

EX_AGN MOVE.L A2,A4
 JMP EX_91

EX_93 TST EX_PRN2
 BEQ EX_LEVL2
 SUB #1,EX_PRN2
 JMP EX_LOOP1

EX_PROC1 MOVE FTYPE(A4),D1

 TST FAGGR(A4)
 BNE EX_NUM2

 CMP #1,D1
 BEQ EX_STR
 CMP.B #'C',D1
 BEQ EX_STR

 CMP #3,D1
 BEQ EX_NUM
 CMP.B #'D',D1
 BEQ EX_NUM
 CMP.B #'I',D1
 BEQ EX_NUM

 CMP.B #'A',D1
 BEQ EX_DAT
 CMP.B #'E',D1
 BEQ EX_DAT
 CMP.B #'S',D1
 BEQ EX_DAT
 CMP.B #'L',D1
 BEQ EX_DAT

 MOVE #1,D7
 JMP EX_ERROR

*---------STRING OPERATION--------

EX_STR MOVE #224,D7
 MOVE FTYPE(A2),D2
 CMP.B #1,D2
 BEQ EX_STRG
 CMP.B #'C',D2
 BNE EX_ERROR2

EX_STRG MOVE #220,D7
 CMP #2,D0
 BNE EX_ERROR

 MOVE.L A3,EX_HOLD

 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_204
 MOVE.L FNAME(A4),A0
 CMP #1,FTYPE(A4)
 BEQ EX_204
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3

 MOVE.L A0,A1
 CLR D4
 SUB #1,D3
EX_201 TST.B (A1)+
 BEQ EX_204
 ADD #1,D4
 DBF D3,EX_201

EX_202 CMP.B #' ',-(A1)
 BNE EX_203
 SUB #1,D4
 BNE EX_202
 JMP EX_206

EX_203 SUB #1,D4
 TST D4
 BEQ EX_206
EX_203B MOVE.B (A0)+,(A3)+
 DBF D4,EX_203B
 JMP EX_206

EX_204 MOVE #4000,D1
EX_205 TST.B (A0)
 BEQ EX_206
 MOVE.B (A0)+,(A3)+
 DBF D1,EX_205

EX_206 MOVE.L FVAL2(A2),A0
 CMP #2,FCALC(A2)
 BEQ EX_214
 MOVE.L FNAME(A2),A0
 CMP #1,FTYPE(A2)
 BEQ EX_214
 MOVE.L FVALU(A2),A0
 MOVE FSIZE(A2),D3
 CMP #1,FTYPE(A2)
 BEQ EX_214

 MOVE.L A0,A1
 CLR D4
 SUB #1,D3
EX_211 TST.B (A1)+
 BEQ EX_214
 ADD #1,D4
 DBF D3,EX_211

EX_212 CMP.B #' ',-(A1)
 BNE EX_213
 SUB #1,D4
 BNE EX_212
 JMP EX_216

EX_213 SUB #1,D4
EX_213B MOVE.B (A0)+,(A3)+
 DBF D4,EX_213B
 JMP EX_216

EX_214 MOVE #4000,D1
EX_215 TST.B (A0)
 BEQ EX_216
 MOVE.B (A0)+,(A3)+
 DBF D1,EX_215

EX_216 CLR.B (A3)+

 MOVE #1,FCALC(A4)
 MOVE #2,FCALC(A2)
 MOVE.L EX_HOLD,FVAL2(A2)
 JMP EX_AGN

*-------NUMERIC OPERATION--------

EX_NUM MOVE #224,D7
 MOVE FTYPE(A2),D0
 CMP #3,D0
 BEQ EX_NUM2
 CMP #'D',D0
 BEQ EX_NUM2
 CMP #'I',D0
 BNE EX_ERROR2

EX_NUM2 LEA CALCA,A0
 MOVE #31,D0
EX_NUM2C CLR.L (A0)+
 DBF D0,EX_NUM2C

 LEA CALCA,A1
 MOVE.L FVAL2(A4),A0

 TST FAGGR(A4)
 BNE EX_301
 CMP #2,FCALC(A4)
 BEQ EX_301

 MOVE.L FNAME(A4),A0
 CMP #3,FTYPE(A4)
 BEQ EX_301

 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D5
 JMP EX_302

EX_301 JSR EX_NUMP
 MOVE D0,D5

EX_302 LEA CALCB,A1

 MOVE.L FVAL2(A2),A0
 TST FAGGR(A2)
 BNE EX_304
 CMP #2,FCALC(A2)
 BEQ EX_304

 MOVE.L FNAME(A2),A0
 CMP #3,FTYPE(A2)
 BEQ EX_304

 MOVE.L FVALU(A2),A0
 MOVE FSIZE(A2),D3
 MOVE FEXTR(A2),D4
 JSR EX_NUMF
 MOVE D0,D6
 JMP EX_305

EX_304 JSR EX_NUMP
 MOVE D0,D6

EX_305 MOVE FCONN(A4),D0
 CMP #2,D0
 BEQ EX_ADD
 CMP #3,D0
 BEQ EX_SUB
 CMP #4,D0
 BEQ EX_MUL
 CMP #5,D0
 BEQ EX_DIV
 MOVE #221,D7
 JMP EX_ERROR

EX_ADD JSR ADDITION
 JMP EX_368

EX_SUB JSR SUBTRACT
 JMP EX_368

EX_MUL JSR MULTIPLY
 JMP EX_368

EX_DIV CLR D7
 JSR DIVIDE
 TST D7
 BNE EX_ERROR

EX_368 MOVE.L A3,FVAL2(A2)
 MOVE #2,FCALC(A2)
 MOVE #1,FCALC(A4)

 MOVE.B #' ',D0
 TST D6
 BPL EX_369
 MOVE.B #'-',D0
EX_369 MOVE.B D0,(A3)+

 LEA CALCD,A0
 MOVE #19,D1
EX_370 MOVE.B (A0)+,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)+
 DBF D1,EX_370
 CLR.B (A3)+
 JMP EX_AGN

EX_NUMP TST.B (A0)  ;Prepare number
 BEQ EX_352
 CLR D0
 CMP.B #' ',(A0)+
 BEQ EX_350
 MOVE #-1,D0
EX_350 MOVE #19,D3
EX_351 MOVE.B (A0)+,D2
 SUB.B #'0',D2
 MOVE.B D2,(A1)+
 DBF D3,EX_351
EX_352 RTS

EX_NUMF TST.B (A0)  ;Prepare numeric field
 BEQ EX_365

 CLR D0
 CMP.B #' ',(A0)+
 BEQ EX_360
 MOVE #-1,D0

EX_360 SUB #1,D3

 SUB D4,D3
 MOVE.L #10,D2
 SUB D3,D2
 ADD.L D2,A1

EX_362 MOVE.B (A0)+,D2
 BEQ EX_365
 SUB.B #'0',D2
 MOVE.B D2,(A1)+
 SUB #1,D3
 BNE EX_362

 TST D4
 BEQ EX_365

EX_364 MOVE.B (A0)+,D3
 BEQ EX_365
 SUB.B #'0',D3
 MOVE.B D3,(A1)+
 SUB #1,D4
 BNE EX_364

EX_365 RTS

*--------DATE OPERATION-------

EX_DAT MOVE #225,D7
 MOVE FCONN(A4),D0
 CMP #2,D0
 BEQ EX_DADD
 CMP #3,D0
 BNE EX_ERROR

 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_410
 MOVE.L FVALU(A4),A0
 MOVE FTYPE(A4),D1
 CMP.B #'A',D1
 BEQ EX_410
 CMP.B #'E',D1
 BEQ EX_410
 CMP.B #'S',D1
 BEQ EX_410
 CMP.B #'L',D1
 BEQ EX_410

 MOVE.L FNAME(A4),A0
 JSR DODATE
 JMP EX_411

EX_410 JSR DODATE

EX_411 MOVE D2,EX_MONTH
 MOVE D3,EX_DAY
 MOVE D4,EX_YEAR

 MOVE FTYPE(A2),D1
 CMP.B #'A',D1
 BEQ EX_420
 CMP.B #'E',D1
 BEQ EX_420
 CMP.B #'S',D1
 BEQ EX_420
 CMP.B #'L',D1
 BNE EX_412

* DATE - DATE

EX_420 MOVE.L FVALU(A2),A0
 CMP #2,FCALC(A2)
 BNE EX_421
 MOVE.L FVAL2(A2),A0
EX_421 JSR DODATE

 CLR.L D1
 MOVE.B #' ',D6
 MOVE EX_YEAR,D0
 CMP D4,D0
 BGT EX_440
 BLT EX_441
 MOVE EX_MONTH,D0
 CMP D2,D0
 BGT EX_440
 BLT EX_441
 MOVE EX_DAY,D0
 CMP D3,D0
 BGT EX_440
 BEQ EX_442
EX_441 MOVE EX_YEAR,D0
 MOVE D4,EX_YEAR
 MOVE D0,D4
 MOVE EX_MONTH,D0
 MOVE D2,EX_MONTH
 MOVE D0,D2
 MOVE EX_DAY,D0
 MOVE D3,EX_DAY
 MOVE D0,D3
 MOVE.B #'-',D6

EX_440 MOVE EX_YEAR,D0
 SUB D4,D0
 MULU #365,D0
 MOVE D0,D1

 MOVE EX_MONTH,D0
 SUB D2,D0
 MULU #31,D0
 ADD D0,D1

 MOVE EX_DAY,D0
 SUB D3,D0
 ADD D0,D1

EX_442 MOVE #16,FCONN(A4)
 MOVE.L A3,FNAME(A2)
 CLR FCALC(A2)
 MOVE #3,FTYPE(A2)
 MOVE #21,FSIZE(A2)
 MOVE #10,FEXTR(A2)

 MOVE.B D6,(A3)+
 MOVE #5,D2
EX_422 MOVE.B #'0',(A3)+
 DBF D2,EX_422
 MOVE D1,D0
 JSR CONV2DEC
 ADD #4,A3
 MOVE #9,D2
EX_423 MOVE.B #'0',(A3)+
 DBF D2,EX_423
 CLR.B (A3)+
 JMP EX_AGN

*  DATE - integer

EX_412 MOVE #226,D7
 MOVE.L FVAL2(A2),A0
 CMP #2,FCALC(A2)
 BEQ EX_412A
 MOVE.L FVALU(A2),A0
 MOVE FTYPE(A2),D1
 CMP.B #'I',D1
 BEQ EX_412A
 CMP.B #3,D1
 BNE EX_ERROR
 MOVE.L FNAME(A2),A0

EX_412A JSR EX_CON2
 CMP.B #'-',D3
 BEQ EX_403

EX_413 CLR.L D2
 CLR.L D3
 CLR.L D4
 TST D1
 BEQ EX_DECON
 MOVE EX_DAY,D2
 MOVE EX_MONTH,D3
 MOVE EX_YEAR,D4

 LEA DTTBL,A0
 ADD.L D3,A0
 TST D1
 BEQ EX_406
EX_415 SUB #1,D2
 BNE EX_417

 SUB.L #1,A0
 SUB #1,D3
 BNE EX_416

 MOVE #12,D3
 SUB #1,D4
 LEA DTTBL+12,A0

EX_416 MOVE.B (A0),D2

EX_417 SUB #1,D1
 BNE EX_415

 CMP.B #'D',EURO_DATE
 BNE EX_418
 MOVE D2,D0
 MOVE D3,D2
 MOVE D0,D3

EX_418 MOVE D2,EX_DAY
 MOVE D3,EX_MONTH
 MOVE D4,EX_YEAR
 JMP EX_DECON

* DATE + number

EX_DADD MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_400
 MOVE.L FVALU(A4),A0
 MOVE FTYPE(A4),D1
 CMP.B #'A',D1
 BEQ EX_400
 CMP.B #'E',D1
 BEQ EX_400
 CMP.B #'S',D1
 BEQ EX_400
 CMP.B #'L',D1
 BEQ EX_400
 MOVE.L FNAME(A4),A0
EX_400 JSR DODATE
 MOVE D2,EX_MONTH
 MOVE D3,EX_DAY
 MOVE D4,EX_YEAR

 MOVE #226,D7
 MOVE.L FVAL2(A2),A0
 CMP #2,FCALC(A2)
 BEQ EX_402
 MOVE.L FVALU(A2),A0
 MOVE FTYPE(A2),D1
 CMP.B #'I',D1
 BEQ EX_402
 CMP.B #3,D1
 BNE EX_ERROR
 MOVE.L FNAME(A2),A0
EX_402 JSR EX_CON2

 CMP.B #'-',D3
 BEQ EX_413

EX_403 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE EX_DAY,D2
 MOVE EX_MONTH,D3
 MOVE EX_YEAR,D4

 LEA DTTBL,A0
 ADD.L D3,A0
 TST D1
 BEQ EX_DECON
 MOVE.B (A0),D0
EX_405 ADD #1,D2
 CMP.B D0,D2
 BLE EX_406

 MOVE #1,D2
 ADD #1,A0

 ADD #1,D3
 CMP #12,D3
 BLE EX_407

 MOVE #1,D3
 LEA DTTBL+1,A0
 ADD #1,D4

EX_407 MOVE.B (A0),D0

EX_406 SUB #1,D1
 BNE EX_405

 CMP.B #'D',EURO_DATE
 BNE EX_419
 MOVE D2,D0
 MOVE D3,D2
 MOVE D0,D3

EX_419 MOVE D2,EX_DAY
 MOVE D3,EX_MONTH
 MOVE D4,EX_YEAR

EX_DECON MOVE FTYPE(A4),FTYPE(A2)
 MOVE #6,FSIZE(A2)
 MOVE #1,FCALC(A4)
 MOVE.L A3,FVAL2(A2)
 MOVE #2,FCALC(A2)

 MOVE EX_MONTH,D0
 JSR EX_DTCN
 MOVE EX_DAY,D0
 JSR EX_DTCN
 MOVE EX_YEAR,D0
 JSR EX_DTCN
 CLR.B (A3)+
 JMP EX_AGN

EX_DTCN AND.L #$FFFF,D0
 DIVU #10,D0
 MOVE.L D0,D1
 AND.L #15,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)+

 SWAP D1
 AND.L #$FFFF,D1
 AND.L #15,D1
 ADD.B #'0',D1
 MOVE.B D1,(A3)+
 RTS

EX_NUMS DC 1000,100,10,1
DTTBL DC.B 0,31,28,31,30,31,30,31,31,30,31,30,31
 EVEN

EX_CON2 MOVE.B (A0)+,D3

 LEA EX_NUMS,A1
 MOVE FSIZE(A2),D0
 SUB FEXTR(A2),D0
 SUB #2,D0
 CLR.L EX_DATA

EX_430 MOVE.L EX_DATA,D1
 LSL.L #8,D1
 MOVE.L D1,EX_DATA

 MOVE.B (A0)+,D1
 SUB.B #'0',D1
 MOVE.B D1,EX_DATA+3

 DBF D0,EX_430

 MOVE #3,D2
 LEA EX_DATA,A0
 LEA EX_NUMS,A1
 CLR.L D1
EX_432 CLR.L D0
 MOVE.B (A0)+,D0
 MULU (A1)+,D0
 ADD D0,D1
 DBF D2,EX_432
 RTS

*----------FIND DATE VALUE----------
* ENTER WITH A0 POINTING TO STRING
* Returns: D2=Month, D3=Day, D4=Year

DODATE CLR.L D0
 CLR.L D1
 CLR.L D2
 CLR.L D3
 CLR.L D4
 MOVE.B (A0)+,D0
 MOVE.B (A0)+,D1

 TST.B D0
 BEQ UND99
 TST.B D1
 BEQ UND99

 CMP.B #'/',D1
 BNE UND22
 MOVE.B D0,D1
 JMP UND23

UND22 SUB.B #'0',D0
 MULU #10,D0
 ADD D0,D2
UND23 SUB.B #'0',D1
 ADD D1,D2

 TST.B (A0)
 BEQ UND99

 CMP.B #'/',(A0)
 BNE UND44
 ADD #1,A0

UND44 CLR.L D0
 CLR.L D1
 MOVE.B (A0)+,D0
 MOVE.B (A0)+,D1

 TST.B D0
 BEQ UND99
 TST.B D1
 BEQ UND99

 CMP.B #'/',D1
 BNE UND55
 MOVE.B D0,D1
 JMP UND56

UND55 SUB.B #'0',D0
 MULU #10,D0
 ADD D0,D3
UND56 SUB.B #'0',D1
 ADD D1,D3

 TST.B (A0)
 BEQ UND99

 CMP.B #'/',(A0)
 BNE UND66
 ADD #1,A0

UND66 CLR.L D0
 CLR.L D1
 MOVE.B (A0)+,D0
 MOVE.B (A0)+,D1

 TST.B D0
 BEQ UND99
 TST.B D1
 BEQ UND99

 SUB.B #'0',D0
 MULU #10,D0
 ADD D0,D4
 SUB.B #'0',D1
 ADD D1,D4

UND99 CMP.B #'D',EURO_DATE
 BNE UNDIES
 MOVE D2,D0
 MOVE D3,D2
 MOVE D0,D3

UNDIES RTS

*---------LEVEL 2---------

* 1= 6> 7< 8!= 9>= 10<= 14^ 15!^ 17~ 18!~

EX_LEVL2 TST EX_FLAG
 BNE EX_EXIT

 MOVE EX_PAREN,EX_PRN2

EX_LOOP2 MOVE.L EX_STRCT,A4
 MOVE EX_PRN2,EX_PRN3

EX_291 MOVE EX_PRN3,D1
 MOVE FCONN(A4),D0
 BEQ EX_293
 CMP #1,FCALC(A4)
 BEQ EX_RCRS2

 CMP #1,D0
 BEQ EX_605
 CMP #6,D0
 BEQ EX_605
 CMP #7,D0
 BEQ EX_605
 CMP #8,D0
 BEQ EX_605
 CMP #9,D0
 BEQ EX_605
 CMP #10,D0
 BEQ EX_605
 CMP #14,D0
 BEQ EX_605
 CMP #15,D0
 BEQ EX_605
 CMP #17,D0
 BEQ EX_605
 CMP #18,D0
 BNE EX_RCRS2

EX_605 CMP FPARN(A4),D1
 BGT EX_RCRS2

 MOVE #223,D7
 MOVE.L A4,A2
EX_294 ADD.L #EV_FSZ,A2
 CMP #1,FCALC(A2)
 BNE EX_295
 TST FCONN(A2)
 BEQ EX_ERROR
 JMP EX_294

EX_295 CMP FPARN(A2),D1
 BLE EX_PROC2

EX_RCRS2 ADD.L #EV_FSZ,A4
 JMP EX_291

EX_AGN2 MOVE.L A2,A4

 TST EX_LKFLG
 BEQ EX_291
 MOVE FBOOL(A4),D0
 EOR #1,D0
 MOVE D0,FBOOL(A4)
 CLR EX_LKFLG
 JMP EX_291

EX_293 TST EX_PRN2
 BEQ EX_LEVL3
 SUB #1,EX_PRN2
 JMP EX_LOOP2

EX_PROC2 MOVE FTYPE(A4),D1
 CMP #1,D1
 BEQ EX_STR2
 CMP.B #'C',D1
 BEQ EX_STR2

 CMP #3,D1
 BEQ EX_NUML2
 CMP.B #'D',D1
 BEQ EX_NUML2
 CMP.B #'I',D1
 BEQ EX_NUML2

 CMP.B #'A',D1
 BEQ EX_DATL2
 CMP.B #'E',D1
 BEQ EX_DATL2
 CMP.B #'S',D1
 BEQ EX_DATL2
 CMP.B #'L',D1
 BEQ EX_DATL2

 MOVE #1,D7
 JMP EX_ERROR

*-------STRING OPERATION-------

EX_STR2 MOVE #4000,D2
 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_620
 MOVE.L FNAME(A4),A0
 CMP #1,D1
 BEQ EX_620
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D2

EX_620 MOVE.L A2,-(A7)
 MOVE.L A0,A2
 MOVE D2,D5
 CLR D4

EX_622 TST.B (A2)+
 BEQ EX_624
 ADD #1,D4
 SUB #1,D5
 BNE EX_622

EX_623 SUB #1,D4
 CMP.B #' ',-(A2)
 BEQ EX_623
 ADD #1,D4
 ADD #1,A2
 CLR.B (A2)

EX_624 MOVE D4,D2
 MOVE.L (A7)+,A2

 MOVE #224,D7
 MOVE FTYPE(A2),D0
 CMP.B #1,D0
 BEQ EX_6244
 CMP.B #'C',D0
 BNE EX_ERROR2

EX_6244 MOVE #4000,D3
 MOVE.L FVAL2(A2),A1
 CMP #2,FCALC(A2)
 BEQ EX_621
 MOVE.L FNAME(A2),A1
 CMP #1,FTYPE(A2)
 BEQ EX_621
 MOVE.L FVALU(A2),A1
 MOVE FSIZE(A2),D3

EX_621 MOVE.L A2,-(A7)
 MOVE.L A1,A2
 MOVE D3,D5
 CLR D4

EX_625 TST.B (A2)+
 BEQ EX_627
 ADD #1,D4
 SUB #1,D5
 BNE EX_625

EX_626 SUB #1,D4
 CMP.B #' ',-(A2)
 BEQ EX_626
 ADD #1,D4
 ADD #1,A2
 CLR.B (A2)

EX_627 MOVE D4,D3
 MOVE.L (A7)+,A2

 MOVE #223,D7
 MOVE FCONN(A4),D0
 CMP #1,D0
 BEQ EX_STREQ
 CMP #6,D0
 BEQ EX_STRGT
 CMP #7,D0
 BEQ EX_STRLT
 CMP #8,D0
 BEQ EX_STRNE
 CMP #9,D0
 BEQ EX_STRGE
 CMP #10,D0
 BEQ EX_STRLE
 CMP #14,D0
 BEQ EX_LIKE
 CMP #15,D0
 BEQ EX_NLIKE
 CMP #17,D0
 BEQ EX_CNTAIN
 CMP #18,D0
 BNE EX_ERROR

 MOVE #1,EX_LKFLG  ;Does not contain

EX_CNTAIN MOVE.L A1,EX_HOLD  ;Contains
 MOVE D3,D4

EX_CUP14 MOVE.L EX_HOLD,A1
 MOVE D4,D3

EX_CN2 MOVE.B (A1)+,D1
 BEQ EX_EQU

 CMP.B #'a',D1
 BLT EX_CUP03
 CMP.B #'z',D1
 BGT EX_CUP03
 SUB.B #32,D1

EX_CUP03 MOVE.B (A0)+,D0
 BEQ EX_AGN2

 CMP.B #'a',D0
 BLT EX_CUP04
 CMP.B #'z',D0
 BGT EX_CUP04
 SUB.B #32,D0

EX_CUP04 CMP.B D0,D1
 BNE EX_CUP14

 SUB #1,D3
 TST D3
 BEQ EX_EQU
 SUB #1,D2
 TST D2
 BEQ EX_AGN2
 JMP EX_CN2


EX_NLIKE MOVE #1,EX_LKFLG  ;Is not like

EX_LIKE TST.B (A0)  ;Like
 BEQ EX_AGN2
 TST.B (A1)
 BEQ EX_AGN2

EX_LK2 MOVE.B (A1)+,D1
 BEQ EX_LK6
 CMP.B #'*',D1
 BEQ EX_EQU
 CMP.B #'?',D1
 BEQ EX_LK5Z

 CMP.B #'a',D1
 BCS EX_LK3
 CMP.B #'z'+1,D1
 BCC EX_LK3
 SUB.B #32,D1

EX_LK3 MOVE.B (A0)+,D0
 BEQ EX_LK7

 CMP.B #'a',D0
 BCS EX_LK4
 CMP.B #'z'+1,D0
 BCC EX_LK4
 SUB.B #32,D0

EX_LK4 CMP.B D0,D1
 BNE EX_AGN2

EX_LK5 SUB #1,D2
 TST D2
 BEQ EX_LK8
 SUB #1,D3
 TST D3
 BEQ EX_AGN2
 JMP EX_LK2

EX_LK6 TST.B (A0)
 BEQ EX_EQU
 JMP EX_AGN2

EX_LK7 CMP.B #'*',(A1)
 BEQ EX_EQU
 JMP EX_AGN2

EX_LK8 CMP #1,D3
 BEQ EX_EQU
 CMP.B #'*',(A1)
 BEQ EX_EQU
 JMP EX_AGN2

EX_LK5Z MOVE.B (A0),D1
 CMP.B #'a',D1
 BCS EX_LK3
 CMP.B #'z'+1,D1
 BCC EX_LK3
 SUB.B #32,D1
 JMP EX_LK3


EX_STRNE MOVE #1,EX_LKFLG  ;Is not equal

EX_STREQ CMP D2,D3
 BNE EX_AGN2
 TST D2
 BEQ EX_EQU

EX_STRA3 MOVE.B (A0)+,D0  ;Equal
 CMP.B (A1)+,D0
 BNE EX_AGN2
 SUB #1,D2
 TST D2
 BNE EX_STRA3
 JMP EX_EQU


EX_STRLT CMP D3,D2  ;Less than
 BLT EX_EQU
 BGT EX_AGN2
 TST D2
 BEQ EX_AGN2
 TST D3
 BEQ EX_AGN2

EX_LT2 MOVE.B (A0)+,D0
 SUB #1,D2
 TST D2
 BEQ EX_AGN2
 CMP.B (A1)+,D0
 BEQ EX_LT2
 BGT EX_AGN2
 BRA EX_EQU


EX_STRGT TST D2  ;Greater than
 BEQ EX_AGN2
 TST D3
 BEQ EX_EQU

EX_GT2 MOVE.B (A0)+,D0
 SUB #1,D2
 TST D2
 BEQ EX_AGN2
 CMP.B (A1)+,D0
 BEQ EX_GT2
 BLT EX_AGN2
 BRA EX_EQU


EX_STRGE TST D2  ;Greater than or equal
 BEQ EX_AGN2
 TST D3
 BEQ EX_EQU

EX_GE2 MOVE.B (A0)+,D0
 SUB #1,D2
 TST D2
 BEQ EX_EQU
 CMP.B (A1)+,D0
 BEQ EX_GE2
 BLT EX_AGN2
 BRA EX_EQU


EX_STRLE TST D3  ;Less than or equal
 BEQ EX_AGN2
 TST D2
 BEQ EX_AGN2

EX_LE2 MOVE.B (A0)+,D0
 SUB #1,D2
 TST D2
 BEQ EX_EQU
 CMP.B (A1)+,D0
 BEQ EX_LE2
 BGT EX_AGN2
 BRA EX_EQU

*---------NUMERIC OPERATION----------

EX_NUML2 MOVE #224,D7
 MOVE FTYPE(A2),D0
 CMP #3,D0
 BEQ EX_NUM20
 CMP #'D',D0
 BEQ EX_NUM20
 CMP #'I',D0
 BNE EX_ERROR2

EX_NUM20 LEA CALCA,A0
 MOVE #31,D0
EX_NUM21 CLR.L (A0)+
 DBF D0,EX_NUM21

 LEA CALCA,A1

 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_901

 MOVE.L FNAME(A4),A0
 CMP #3,FTYPE(A4)
 BEQ EX_901

 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D5
 JMP EX_902

EX_901 JSR EX_NUMP
 MOVE D0,D5

EX_902 LEA CALCB,A1

 MOVE.L FVAL2(A2),A0
 CMP #2,FCALC(A2)
 BEQ EX_904

 MOVE.L FNAME(A2),A0
 CMP #3,FTYPE(A2)
 BEQ EX_904

 MOVE.L FVALU(A2),A0
 MOVE FSIZE(A2),D3
 MOVE FEXTR(A2),D4
 JSR EX_NUMF
 MOVE D0,D6
 JMP EX_905

EX_904 JSR EX_NUMP
 MOVE D0,D6

EX_905 LEA CALCA,A0
 LEA CALCB,A1
 MOVE #21,D2

 MOVE #224,D7
 MOVE FCONN(A4),D0
 CMP #6,D0
 BEQ EX_NMGT
 CMP #7,D0
 BEQ EX_NMLT
 CMP #9,D0
 BEQ EX_NMGE
 CMP #10,D0
 BEQ EX_NMLE
 CMP #1,D0
 BEQ EX_NMEQ
 CMP #8,D0
 BNE EX_ERROR2

 MOVE #1,EX_LKFLG  ;Is not equal

EX_NMEQ MOVE.L CALCA,D0
 CMP.L CALCB,D0
 BNE EX_AGN2

 MOVE.L CALCA,D0
 CMP.L CALCB,D0
 BNE EX_AGN2
 MOVE.L CALCA+4,D0
 CMP.L CALCB+4,D0
 BNE EX_AGN2
 MOVE.L CALCA+8,D0
 CMP.L CALCB+8,D0
 BNE EX_AGN2
 MOVE.L CALCA+12,D0
 CMP.L CALCB+12,D0
 BNE EX_AGN2
 MOVE.L CALCA+16,D0
 CMP.L CALCB+16,D0
 BNE EX_AGN2
 JMP EX_EQU


EX_NMLT TST D6  ;Less than
 BEQ EX_NMLT5
 TST D5
 BEQ EX_AGN2
 BRA EX_NMGT4
EX_NMLT5 TST D5
 BNE EX_EQU

EX_NMLT4 SUB #1,D2
 TST D2
 BEQ EX_AGN2
 MOVE.B (A0)+,D0
 CMP.B (A1)+,D0
 BEQ EX_NMLT4
 BGT EX_AGN2
 BRA EX_EQU


EX_NMGT TST D5  ;Greater than
 BEQ EX_NMGT5
 TST D6
 BEQ EX_AGN2
 BRA EX_NMLT4
EX_NMGT5 TST D6
 BNE EX_EQU

EX_NMGT4 SUB #1,D2
 TST D2
 BEQ EX_AGN2
 MOVE.B (A0)+,D0
 CMP.B (A1)+,D0
 BEQ EX_NMGT4
 BLT EX_AGN2
 BRA EX_EQU


EX_NMGE TST D5  ;Greater than or equal
 BEQ EX_NMGE5
 TST D6
 BEQ EX_AGN2
 BRA EX_NMGE4
EX_NMGE5 TST D6
 BNE EX_EQU

EX_NMGE4 SUB #1,D2
 TST D2
 BEQ EX_EQU
 MOVE.B (A0)+,D0
 CMP.B (A1)+,D0
 BEQ EX_NMGE4
 BLT EX_AGN2
 BRA EX_EQU


EX_NMLE TST D5  ;Less than or equal
 BEQ EX_NMLE5
 TST D6
 BEQ EX_AGN2
 BRA EX_NMLE4
EX_NMLE5 TST D6
 BNE EX_EQU

EX_NMLE4 MOVE.B (A0)+,D0  ;Greater than or equal
 SUB #1,D2
 TST D2
 BEQ EX_EQU
 CMP.B (A1)+,D0
 BEQ EX_NMLE4
 BGT EX_AGN2
 BRA EX_EQU

*---------DATE OPERATION---------

EX_DATL2 MOVE #224,D7
 MOVE.L FVAL2(A4),A0
 CMP #2,FCALC(A4)
 BEQ EX_950
 MOVE.L FVALU(A4),A0
 CMP.B #'A',D1
 BEQ EX_950
 CMP.B #'E',D1
 BEQ EX_950
 CMP.B #'S',D1
 BEQ EX_950
 CMP.B #'L',D1
 BEQ EX_950
 CMP #'C',D1
 BEQ EX_950
 CMP #1,D1
 BNE EX_ERROR2

 MOVE.L FNAME(A4),A0
 JSR DODATE
 CMP #'E',FTYPE(A4)
 BNE EX_952
 EXG D2,D3
 JMP EX_952

EX_950 JSR DODATE

EX_952 MOVE D2,EX_MONTH
 MOVE D3,EX_DAY
 MOVE D4,EX_YEAR

 MOVE.L FVAL2(A2),A0
 CMP #2,FCALC(A2)
 BEQ EX_953
 MOVE.L FVALU(A2),A0
 MOVE FTYPE(A2),D1
 CMP.B #'A',D1
 BEQ EX_953
 CMP.B #'E',D1
 BEQ EX_953
 CMP.B #'S',D1
 BEQ EX_953
 CMP.B #'L',D1
 BEQ EX_953
 CMP #'C',D1
 BEQ EX_953
 CMP #1,D1
 BNE EX_ERROR

 MOVE.L FNAME(A2),A0
 JSR DODATE
 CMP #'E',FTYPE(A4)
 BNE EX_954
 EXG D2,D3
 JMP EX_954

EX_953 JSR DODATE

EX_954 MOVE #228,D7
 MOVE FCONN(A4),D0
 CMP.B #1,D0
 BEQ EX_DTEQ
 CMP.B #6,D0
 BEQ EX_DTGT
 CMP.B #7,D0
 BEQ EX_DTLT
 CMP.B #9,D0
 BEQ EX_DTGE
 CMP.B #10,D0
 BEQ EX_DTLE
 CMP.B #8,D0
 BNE EX_ERROR

 MOVE #1,EX_LKFLG  ;Is not equal

EX_DTEQ CMP EX_MONTH,D2
 BNE EX_AGN2
 CMP EX_DAY,D3
 BNE EX_AGN2
 CMP EX_YEAR,D4
 BNE EX_AGN2
 BRA EX_EQU

EX_DTGT CMP EX_YEAR,D4
 BGT EX_AGN2
 BLT EX_EQU
 CMP EX_MONTH,D2
 BGT EX_AGN2
 BLT EX_EQU
 CMP EX_DAY,D3
 BGE EX_AGN2
 BLT EX_EQU

EX_DTLT CMP EX_YEAR,D4
 BGT EX_EQU
 BLT EX_AGN2
 CMP EX_MONTH,D2
 BGT EX_EQU
 BLT EX_AGN2
 CMP EX_DAY,D3
 BGT EX_EQU
 BLE EX_AGN2


EX_DTGE CMP EX_YEAR,D4
 BEQ EX_DT2
 BGT EX_AGN2
 BLT EX_EQU
EX_DT2 CMP EX_MONTH,D2
 BEQ EX_DT3
 BGT EX_AGN2
 BLT EX_EQU
EX_DT3 CMP EX_DAY,D3
 BLE EX_EQU
 BRA EX_AGN2


EX_DTLE CMP EX_YEAR,D4
 BEQ EX_DT4
 BGT EX_EQU
 BLT EX_AGN2
EX_DT4 CMP EX_MONTH,D2
 BEQ EX_DT5
 BGT EX_EQU
 BLT EX_AGN2
EX_DT5 CMP EX_DAY,D3
 BLE EX_EQU
 BRA EX_EQU


EX_EQU MOVE #1,FBOOL(A2)
 JMP EX_AGN2

*------------LEVEL 3-----------

EX_LEVL3 MOVE EX_PAREN,EX_PRN2

EX_LOOP3 MOVE.L EX_STRCT,A4
 MOVE EX_PRN2,EX_PRN3

EX_DOIT3 MOVE EX_PRN3,D1
 MOVE FCONN(A4),D0
 BEQ EX_3LEVL
 CMP #1,FCALC(A4)
 BEQ EX_3RCRS

 CMP.B #11,D0
 BEQ EX_3TST
 CMP.B #12,D0
 BNE EX_3RCRS

EX_3TST CMP FPARN(A4),D1
 BGT EX_3RCRS

 MOVE #223,D7
 MOVE.L A4,A2

EX_394 ADD.L #EV_FSZ,A2
 MOVE FCONN(A2),D0
 CMP #11,D0
 BEQ EX_398
 CMP #12,D0
 BEQ EX_398
 TST D0
 BNE EX_394
 CMP #1,FCALC(A2)
 BEQ EX_3LEVL
 JMP EX_395

EX_398 CMP #1,FCALC(A2)
 BEQ EX_394

EX_395 CMP FPARN(A2),D1
 BGT EX_3CONT

EX_397 CMP #11,FCONN(A4)
 BEQ EX_AND

 TST FBOOL(A4)  ;OR
 BNE EX_3EQU
 TST FBOOL(A2)
 BNE EX_3EQU
 JMP EX_396

EX_AND TST FBOOL(A4) ;AND
 BEQ EX_396
 TST FBOOL(A2)
 BNE EX_3EQU

EX_396 MOVE #1,FCALC(A4)
 CLR FBOOL(A2)
 JMP EX_3CONT

EX_3EQU MOVE #1,FCALC(A4)
 MOVE #1,FBOOL(A2)

EX_3CONT MOVE.L A2,A4
 JMP EX_DOIT3

EX_3RCRS ADD.L #EV_FSZ,A4
 JMP EX_DOIT3

EX_3LEVL TST EX_PRN2
 BEQ EX_DONE
 SUB #1,EX_PRN2
 JMP EX_LOOP3

EX_DONE MOVE FBOOL(A2),D0
 RTS

EX_ERROR2 MOVE.L FNAME(A4),A0

EX_ERROR MOVE #-1,D0
 RTS

EX_EXIT CLR D0
 RTS

*********************************
* ADD FIELDS A0 AND A1          *
*********************************

ADDITION MOVEM.L A0-A2,-(A7)

 LEA CALCA,A0
 LEA CALCB,A1
 MOVE.L #19,D0
ADDIT10 MOVE.B (A0)+,D1
 MOVE.B (A1)+,D2
 CMP.B D1,D2
 BEQ MORE
 BCS ADDIT11

 MOVE.L #3,D2
 LEA CALCA,A0
 LEA CALCB,A1
ADDIT12 MOVE.L (A0),D0
 MOVE.L (A1),D1
 MOVE.L D0,(A1)+
 MOVE.L D1,(A0)+
 DBF D2,ADDIT12
 EXG D5,D6
 JMP ADDIT11

MORE DBF D0,ADDIT10

ADDIT11 MOVE D5,D0
 MOVE D6,D1
 TST D0
 BPL ADDIT13
 MOVE #-1,D6
 TST D1
 BMI ADDING
 JMP SUBING

ADDIT13 CLR.L D6
 TST D1
 BMI SUBING

ADDING LEA CALCA+20,A0
 LEA CALCB+20,A1
 LEA CALCD+20,A2
Z720 MOVE.B -(A0),D4
 ADD.B -(A1),D4
 MOVE.B D4,-(A2)
 CMP.B #10,D4
 BCS Z723
 SUB.B #10,(A2)
 ADD.B #1,-(A0)
 ADD #1,A0
Z723 CMP.L #CALCA,A0
 BNE Z720
 MOVEM.L (A7)+,A0-A2
 RTS

*****************************
* SUBTRACT FIELDS A0 AND A1 *
*****************************

SUBTRACT MOVEM.L A0-A2,-(A7)
 TST D6
 BMI SUBIT33
 MOVE #-1,D6
 JMP SUBIT34
SUBIT33 CLR.L D6

SUBIT34 LEA CALCA,A0
 LEA CALCB,A1
 MOVE.L #19,D0
SUBIT10 MOVE.B (A0)+,D1
 MOVE.B (A1)+,D2
 CMP.B D1,D2
 BEQ SMORE
 BCS SUBIT11

 MOVE.L #4,D2
 LEA CALCA,A0
 LEA CALCB,A1
SUBIT12 MOVE.L (A0),D0
 MOVE.L (A1),D1
 MOVE.L D0,(A1)+
 MOVE.L D1,(A0)+
 DBF D2,SUBIT12
 EXG D5,D6
 JMP SUBIT11

SMORE DBF D0,SUBIT10

SUBIT11 MOVE D5,D0
 MOVE D6,D1

 TST D5
 BPL SUBIT13
 MOVE #-1,D5
 MOVE #-1,D6
 TST D1
 BPL SUBING
 JMP ADDING

SUBIT13 CLR.L D5
 CLR.L D6
 TST D1
 BPL ADDING

SUBING LEA CALCA+20,A0
 LEA CALCB+20,A1
 LEA CALCD+20,A2
Z728 MOVE.B -(A0),-(A2)
 MOVE.B (A2),D4
 SUB.B -(A1),D4
 MOVE.B D4,(A2)
 BPL Z900
 ADD.B #10,(A2)
 SUB.B #1,-(A0)
 ADD #1,A0
Z900 CMP.L #CALCA,A0
 BNE Z728
 MOVEM.L (A7)+,A0-A2
 RTS

*****************************
* MULTIPLY FIELDS A0 AND A1 *
*****************************

MULTIPLY MOVEM.L A0-A2,-(A7)
 MOVE D5,D0
 MOVE D6,D1
 CLR.L D6
 TST D0
 BPL MUL101
 TST D1
 BMI MUL100
 MOVE #-1,D6
 JMP MUL100

MUL101 TST D1
 BPL MUL100
 MOVE #-1,D6

MUL100 LEA CALCB+19,A1
Z912 LEA CALCA+19,A0
Z913 MOVE.L #CALCB+19,D0
 SUB.L A1,D0
 ADD.L #CALCA+19,D0
 SUB.L A0,D0
 SUB #10,D0
 BCS Z922
 CMP #20,D0
 BCC Z922
 LEA CALCD+19,A2
 SUB D0,A2
 CLR.L D0
 CLR.L D1
 MOVE.B (A0),D0
 MOVE.B (A1),D1
 MULU D1,D0
 ADD.B (A2),D0
 MOVE.B D0,(A2)
Z916 CMP.B #10,(A2)
 BCS Z922
 SUB.B #10,(A2)
 ADD.B #1,-(A2)
 ADD #1,A2
 JMP Z916

Z922 SUB #1,A0
 CMP.L #CALCA,A0
 BCC Z913
 SUB #1,A1
 CMP.L #CALCB,A1
 BCC Z912
 MOVEM.L (A7)+,A0-A2
 RTS

***************************
* DIVIDE FIELDS A0 AND A1 *
***************************

DIVIDE MOVEM.L A0-A2,-(A7)
 MOVE.L #5,D0
 LEA CALCB,A1
DIVIT60 TST.L (A1)+
 BNE DIVIT61
 DBF D0,DIVIT60

 MOVE #222,D7 ;Divide by zero
 MOVEM.L (A7)+,A0-A2
 RTS

DIVIT61 MOVE D5,D0
 MOVE D6,D1
 CLR.L D6
 TST D0
 BPL DIV101
 TST D1
 BMI DIV100
 MOVE #-1,D6
 JMP DIV100

DIV101 TST D1
 BPL DIV100
 MOVE #-1,D6

DIV100 LEA CALCD+9,A0
Z939 TST.B CALCB
 BNE Z940
 CMP.L CALCD,A0
 BEQ Z9999
 SUB #1,A0
 LEA CALCB,A1
Z939A MOVE.B 1(A1),(A1)+
 CMP.L #CALCB+19,A1
 BNE Z939A
 CLR.B (A1)
 JMP Z939
Z940 MOVE.L CALCA,CALCC
 MOVE.L CALCA+4,CALCC+4
 MOVE.L CALCA+8,CALCC+8
 MOVE.L CALCA+12,CALCC+12
 MOVE.L CALCA+16,CALCC+16
Z945 LEA CALCB+20,A1
 LEA CALCC+20,A2
Z950 CLR D1
 MOVE.B -(A2),D0
 SUB.B -(A1),D0
 MOVE.B D0,(A2)
 BPL Z956
 MOVE #1,D1
 ADD.B #10,(A2)
 SUB.B #1,-(A2)
 ADD #1,A2
Z956 CMP.L #CALCB,A1
 BNE Z950
 TST D1
 BNE Z1007
 MOVE.L CALCC,CALCA
 MOVE.L CALCC+4,CALCA+4
 MOVE.L CALCC+8,CALCA+8
 MOVE.L CALCC+12,CALCA+12
 MOVE.L CALCC+16,CALCA+16
 ADD.B #1,(A0)
 JMP Z945
Z1007 ADD #1,A0
 CMP.L #CALCD+20,A0
 BEQ Z9999
 TST.B CALCA
 BNE Z1013
 LEA CALCA,A1
Z1008 MOVE.B 1(A1),(A1)+
 CMP.L #CALCA+19,A1
 BNE Z1008
 CLR.B (A1)
 JMP Z940
Z1013 LEA CALCB+19,A1
 LEA CALCB+20,A2
Z1018 MOVE.B -(A1),-(A2)
 CMP.L #CALCB,A1
 BNE Z1018
 CLR.B (A1)
 JMP Z940

Z9999 MOVEM.L (A7)+,A0-A2
 RTS

*************************************
* LOAD FIELD AND VARIABLE DEFS      *
* --Inputs--                        *
* A0 = Where structure              *
* A1 = Table structure              *
* A2 = Field structure              *
* D0 # of Where expressions         *
* D1 1-Assign table & where info    *
* D2 # of Table expressions         *
* --Returns--                       *
* D0 = -1 IF ERROR D7= ERROR #      *
*************************************

* ERRORS
* 210 Field not defined (A0 points to field name)
* 211 Table not defined (A0 points to table name)
* 212 Variable not defined (A0 points to variable name)

SETEXPRESS MOVE.L A0,SE_WHERE
 MOVE D0,SE_WCNT
 MOVE D1,SE_LEVEL
 MOVE D2,SE_TBLCNT
 MOVE.L A1,SE_TBL
 MOVE.L A2,SE_SEL

*-----------Assign Variable Definitions-----------*

 MOVE.L SE_SEL,A4

SE_VAR1 MOVE VAR_COUNT,D5
 BEQ SE_TNVRS
 MOVE.L STR_VAR,A3

 TST.L FTABL(A4)
 BNE SE_VAR4

SE_VAR2 MOVE.L FNAME(A4),A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_VAR3

 MOVE FSIZE(A3),FSIZE(A4)
 MOVE FEXTR(A3),FEXTR(A4)
 MOVE FTYPE(A3),FTYPE(A4)
 MOVE.L FVALU(A3),FVALU(A4)
 JMP SE_VAR4

SE_VAR3 ADD.L #EV_FSZ,A3
 SUB #1,D5
 BNE SE_VAR2

SE_VAR4 TST FCONN(A4)
 BEQ SE_VAR5
 ADD.L #EV_FSZ,A4
 JMP SE_VAR1

SE_VAR5 TST SE_WCNT  ;Where structure
 BEQ SE_TNVRS

 MOVE.L SE_WHERE,A4

SE_VAR11 MOVE VAR_COUNT,D5
 MOVE.L STR_VAR,A3

 TST.L FTABL(A4)
 BNE SE_VAR13

SE_VAR12 MOVE.L FNAME(A4),A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_VAR13

 MOVE FSIZE(A3),FSIZE(A4)
 MOVE FEXTR(A3),FEXTR(A4)
 MOVE FTYPE(A3),FTYPE(A4)
 MOVE.L FVALU(A3),FVALU(A4)
 JMP SE_VAR14

SE_VAR13 ADD.L #EV_FSZ,A3
 SUB #1,D5
 BNE SE_VAR12

SE_VAR14 TST FCONN(A4)
 BEQ SE_TNVRS
 ADD.L #EV_FSZ,A4
 JMP SE_VAR11

*-----------ASSIGN TABLE DISK I/O BUFFERS-----------

SE_TNVRS MOVE.L SE_TBL,A4
 MOVE.L FNAME(A4),SET_DEFLT
 MOVE.L #TBLBUFRS,SE_BUFF

SE_T100 MOVE #211,D7
 MOVE.L FNAME(A4),A0
 CLR D1
 JSR CAL_ROW
 CMP #2,D0
 BNE SE_T102
 MOVE #211,D7
 MOVE.L FNAME(A4),A0
 JMP SE_ERROR
SE_T102 MOVE D0,FSIZE(A4)
 MOVE.L SE_BUFF,FVALU(A4)
 MOVE.L SE_BUFF,D1
 ADD.L D0,D1
 ADD.L #8,D1
 AND.L #$FFFFFFFE,D1
 MOVE.L D1,SE_BUFF

 CLR FTYPE(A4)
 MOVE.L FNAME(A4),A0
 MOVE #1,D1
 JSR CAL_ROW
 CMP #2,D0
 BLE SE_T101
 MOVE D0,FEXTR(A4)
 MOVE #1,FTYPE(A4)
 MOVE.L SE_BUFF,FINDX(A4)
 MOVE.L SE_BUFF,D1
 ADD.L D0,D1
 ADD.L #8,D1
 AND.L #$FFFFFFFE,D1
 MOVE.L D1,SE_BUFF

SE_T101 TST FCONN(A4)
 BEQ SE_T199
 ADD.L #EV_FSZ,A4
 JMP SE_T100

*-----------SET DEFAULT TABLE NAME-----------

SE_T199 TST SE_LEVEL
 BNE SE_T210

 MOVE.L SE_SEL,A4
SE_T200 TST.L FTABL(A4)
 BNE SE_T201
 CMP #5,FTYPE(A4)
 BNE SE_T201
 MOVE.L SET_DEFLT,FTABL(A4)
SE_T201 TST FCONN(A4)
 BEQ SE_T210
 ADD.L #EV_FSZ,A4
 JMP SE_T200

SE_T210 TST SE_WCNT
 BEQ SE_T400
 MOVE.L SE_WHERE,A4
SE_T202 TST.L FTABL(A4)
 BNE SE_T203
 MOVE.L SET_DEFLT,FTABL(A4)
SE_T203 TST FCONN(A4)
 BEQ SE_T400
 ADD.L #EV_FSZ,A4
 JMP SE_T202

*----------DETERMINE IF INDEXED OPERATION-----------

SE_T400 CLR INDXFLAG

 TST SE_WCNT
 BEQ SE_FLIN

 MOVE.L SE_TBL,A2

SE_TLP MOVE.L SE_WHERE,A3

 CLR SE_FLAG
 CLR FCALC(A2)

SE_T401 TST FTYPE(A2)
 BEQ SE_T405

 TST FOBJN(A3)
 BNE SE_T404
 CMP #5,FTYPE(A3)
 BNE SE_T404

 MOVE.L FNAME(A2),A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_T404

 MOVE.L CACIND,A4
 MOVE #CACIDX,D4

SE_T402 MOVE.L FNAME(A2),A0
 MOVE.L A4,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI SE_T403

 MOVE.L FNAME(A3),A0
 MOVE.L A4,A1
 JSR MMATCHER
 TST D0
 BMI SE_T403

 MOVE #1,SE_FLAG
 JMP SE_T404

SE_T403 ADD.L #65,A4
 SUB #1,D4
 BNE SE_T402
 JMP SE_T405

SE_T404 TST FCONN(A3)
 BEQ SE_T420
 ADD.L #EV_FSZ,A3
 JMP SE_T401

SE_T420 TST SE_FLAG
 BEQ SE_T405
 MOVE #1,FCALC(A2)
 MOVE #1,INDXFLAG

SE_T405 TST FCONN(A2)
 BEQ SE_PTRS
 ADD #EV_FSZ,A2
 JMP SE_TLP

*------------SET INDEXED WHERE POINTERS-----------

SE_PTRS MOVE.L SE_TBL,A2

SE_PLP MOVE.L SE_WHERE,A3

SE_P401 TST FCALC(A2)
 BEQ SE_P405
 TST FOBJN(A3)
 BNE SE_P404
 CMP #5,FTYPE(A3)
 BNE SE_P404

 MOVE.L FNAME(A2),A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_P404

 MOVE.L CACIND,A4
 MOVE #CACIDX,D4

SE_P402 MOVE.L FNAME(A2),A0
 MOVE.L A4,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI SE_P403

 MOVE.L FNAME(A3),A0
 MOVE.L A4,A1
 JSR MMATCHER
 TST D0
 BMI SE_P403

 JSR SE_SET2
 JMP SE_P404

SE_P403 ADD.L #65,A4
 SUB #1,D4
 BNE SE_P402
 JMP SE_P405

SE_P404 TST FCONN(A3)
 BEQ SE_P405
 ADD.L #EV_FSZ,A3
 JMP SE_P401

SE_P405 TST FCONN(A2)
 BEQ SE_NIW
 ADD #EV_FSZ,A2
 JMP SE_PLP

*-------SET NON INDEXED WHERE POINTERS TO DISK BUFFERS--------

SE_NIW MOVE.L SE_TBL,A2

SE_PILP MOVE.L SE_WHERE,A3

SE_PI401 TST FCALC(A2)
 BNE SE_PI405
 TST FOBJN(A3)
 BNE SE_PI404
 CMP #5,FTYPE(A3)
 BNE SE_PI404

 MOVE.L FNAME(A2),A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_PI404

 MOVE.L CACHEF,A4
 MOVE #CACFLD,D4

SE_PI402 MOVE.L FNAME(A2),A0
 MOVE.L A4,A1
 ADD.L #20,A1
 JSR MMATCHER
 TST D0
 BMI SE_PI403

 MOVE.L FNAME(A3),A0
 MOVE.L A4,A1
 JSR MMATCHER
 TST D0
 BMI SE_PI403

 JSR SE_SETUP
 JMP SE_PI404

SE_PI403 ADD.L #65,A4
 SUB #1,D4
 BNE SE_PI402

 MOVE #210,D7
 MOVE.L FNAME(A3),A0
 JMP SE_ERROR

SE_PI404 TST FCONN(A3)
 BEQ SE_PI405
 ADD.L #EV_FSZ,A3
 JMP SE_PI401

SE_PI405 TST FCONN(A2)
 BEQ SE_FLIN
 ADD #EV_FSZ,A2
 JMP SE_PILP

*---------Set field pointers---------

SE_FLIN TST SE_LEVEL
 BNE SE_DONE

 MOVE.L SE_TBL,A2

SE_F107 MOVE.L SE_SEL,A3

SE_F100 TST FOBJN(A3)
 BNE SE_F109
 CMP #5,FTYPE(A3)
 BNE SE_F109

 MOVE.L FNAME(A2),A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F109

SE_F101 MOVE.L CACHEF,A4
 MOVE #CACFLD,D4

SE_F102 MOVE.L A4,A0
 ADD.L #20,A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F103

 MOVE.L A4,A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F103

 JSR SE_SETUP
 JMP SE_F109

SE_F103 ADD.L #65,A4
 SUB #1,D4
 BNE SE_F102

 MOVE.L FNAME(A3),A0
 MOVE #210,D7
 JMP SE_ERROR

SE_F109 TST FCONN(A3)
 BEQ SE_108
 ADD.L #EV_FSZ,A3
 JMP SE_F100

SE_108 TST FCONN(A2)
 BEQ SE_KROQ
 ADD.L #EV_FSZ,A2
 JMP SE_F107

*----------Set index pointers----------

SE_KROQ MOVE.L SE_TBL,A2

SE_F207 MOVE.L SE_SEL,A3

SE_F200 MOVE FTYPE(A3),D0
 CMP.B #'A',D0
 BEQ SE_F218
 CMP.B #'E',D0
 BEQ SE_F218
 CMP.B #'S',D0
 BEQ SE_F218
 CMP.B #'L',D0
 BEQ SE_F218
 CMP.B #'D',D0
 BEQ SE_F218
 CMP.B #'I',D0
 BEQ SE_F218
 CMP.B #'C',D0
 BNE SE_F209

SE_F218 MOVE.L FNAME(A2),A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F209

SE_F201 MOVE.L CACIND,A4
 MOVE #CACIDX,D4

SE_F202 MOVE.L A4,A0
 ADD.L #20,A0
 MOVE.L FTABL(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F203

 MOVE.L A4,A0
 MOVE.L FNAME(A3),A1
 JSR MMATCHER
 TST D0
 BMI SE_F203

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE.L FINDX(A2),D2
 ADD.L D1,D2
 MOVE.L D2,FINDX(A3)

 JMP SE_F209

SE_F203 ADD.L #65,A4
 SUB #1,D4
 BNE SE_F202

SE_F209 TST FCONN(A3)
 BEQ SE_208
 ADD.L #EV_FSZ,A3
 JMP SE_F200

SE_208 TST FCONN(A2)
 BEQ SE_400
 ADD.L #EV_FSZ,A2
 JMP SE_F207

* Check for unknown fields

SE_400 MOVE.L SE_SEL,A4

SE_401 TST FOBJN(A4)
 BNE SE_402
 CMP #5,FTYPE(A4)
 BNE SE_402

SE_AGG6 MOVE.L FNAME(A4),A0
 MOVE #210,D7
 JMP SE_ERROR

SE_402 TST FCONN(A4)
 BEQ SE_DONE
 ADD.L #EV_FSZ,A4
 JMP SE_401

SE_DONE CLR D0
 RTS

SE_ERROR MOVE #-1,D0
 RTS

SE_SETUP CLR D0  ;Load field info
 MOVE.B 40(A4),D0
 MOVE D0,FTYPE(A3)

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE D1,FDISP(A3)

 ADD.L FVALU(A2),D1
 MOVE.L D1,FVALU(A3)

 MOVE.L A4,A0
 ADD.L #47,A0
 JSR CVAL
 MOVE D1,FSIZE(A3)

 CLR D0
 MOVE.B 52(A4),D0
 SUB.B #'0',D0
 MOVE D0,FEXTR(A3)
 RTS

SE_SET2 CLR D0  ;Load index field info
 MOVE.B 40(A4),D0
 MOVE D0,FTYPE(A3)

 MOVE.L A4,A0
 ADD.L #42,A0
 JSR CVAL
 MOVE D1,FDISP(A3)

 MOVE.L FINDX(A2),D2
 ADD.L D1,D2
 MOVE.L D2,FVALU(A3)

 MOVE.L A4,A0
 ADD.L #47,A0
 JSR CVAL
 MOVE D1,FSIZE(A3)

 CLR D0
 MOVE.B 52(A4),D0
 SUB.B #'0',D0
 MOVE D0,FEXTR(A3)
 RTS

*************************************
* LOAD DATE/TIME/ERR/USER/VARS      *
* --Inputs--                        *
* A0 = PTR TO EXPRESSION STRUCTURE  *
* A1 = Ptr to expression storage    *
* --Returns--                       *
* A1 = New ptr to expr storage      *
* D0 = -1 IF ERROR D7= ERROR #      *
*************************************

LD_DTEUV MOVE.L A0,A4
 MOVE.L A1,A3

LD_LOOP MOVE.L FNAME(A4),A0
 LEA CKDT,A1
 JSR MMATCHER
 TST D0
 BPL LD_DATE

 LEA CKTM,A1
 JSR MMATCHER
 TST D0
 BPL LD_TIME

 LEA CKER,A1
 JSR MMATCHER
 TST D0
 BPL LD_ERR

 LEA USECK,A1
 JSR MMATCHER
 TST D0
 BPL LD_USER

LD_RCRS TST FCONN(A4)
 BEQ LD_DONE
 ADD.L #EV_FSZ,A4
 JMP LD_LOOP

LD_DONE MOVE.L A3,A1
 CLR D0
 RTS

LD_DATE JSR CDATE
 MOVE.L A3,FVALU(A4)
 MOVE #'A',FTYPE(A4)
 MOVE #6,FSIZE(A4)
 LEA TIMEDATE,A0
 MOVE.B (A0)+,(A3)+
 MOVE.B (A0)+,(A3)+
 ADD #1,A0
 MOVE.B (A0)+,(A3)+
 MOVE.B (A0)+,(A3)+
 ADD #1,A0
 MOVE.B (A0)+,(A3)+
 MOVE.B (A0)+,(A3)+
 CLR.B (A3)+
 JMP LD_RCRS

LD_TIME JSR CTIME
 MOVE.L A3,FVALU(A4)
 MOVE #'C',FTYPE(A4)
 CLR D0
 LEA TIMEDATE,A0
LD_T10 TST.B (A0)
 BEQ LD_T11
 MOVE.B (A0)+,(A3)+
 ADD #1,D0
 JMP LD_T10
LD_T11 CLR.B (A3)+
 MOVE D0,FSIZE(A4)
 ADD #2,FSIZE(A4)
 JMP LD_RCRS

LD_ERR MOVE.L A3,FVALU(A4)
 MOVE #'I',FTYPE(A4)
 MOVE #11,FSIZE(A4)
 CLR FEXTR(A4)

 MOVE.B #' ',(A3)+
 MOVE #5,D0
LD_E2 MOVE.B #'0',(A3)+
 DBF D0,LD_E2

 MOVE ERRORNUM,D0
 JSR CONV2DEC
 ADD.L #4,A3
 CLR.B (A3)+
 JMP LD_RCRS

LD_USER MOVE.L A3,FVALU(A4)
 MOVE #'I',FTYPE(A4)
 MOVE #11,FSIZE(A4)
 CLR FEXTR(A4)

 MOVE.B #' ',(A3)+
 MOVE #5,D0
LD_U2 MOVE.B #'0',(A3)+
 DBF D0,LD_U2

 MOVE USERNUM,D0
 JSR CONV2DEC
 ADD.L #4,A3
 CLR.B (A3)+
 JMP LD_RCRS

CKDT DC.B 'DATE$',0
CKTM DC.B 'TIME$',0
CKER DC.B 'ERR$',0
USECK DC.B 'USER$',0
 EVEN

USERNUM DC 0

*************************************
* PARSE LABELS                      *
* --Inputs--                        *
* A0 = PTR TO EXPRESSION STRUCTURE  *
* A1 = Ptr to expression storage    *
* --Returns--                       *
* D0 = -1 IF ERROR D7= ERROR #      *
*************************************

FINDLABELS MOVE.L A0,A4
 MOVE.L A1,A3
 MOVE.L A0,FL_ADR
 CLR CURSX
 CLR FL_COUNT
 MOVE #316,D7

FL_100 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
FL_200 CLR.B (A0)+
 DBF D0,FL_200

 JSR ED_CALC
 TST.B (A0)
 BEQ FL_DONE

 JSR FINDCHAR
 TST D0
 BMI FL_DONE

 MOVE.L A3,FNAME(A4)
 MOVE CURSX,FPOSI(A4)

 MOVE CURSX,ERRORX

 JSR GETNAME
 TST D0
 BMI FL_DONE

 JSR FINDCHAR
 TST D0
 BMI FL_DONE
 CMP.B #':',D0
 BNE FL_104

 MOVE #319,D7
 TST FL_COUNT
 BEQ FL_300
 MOVE.L FL_ADR,A2
 CLR D5
FL_301 MOVE.L FNAME(A2),A0
 LEA TABLENM,A1
 JSR MATCHER
 TST D0
 BEQ FL_ERROR
 ADD.L #EV_FSZ,A2
 ADD #1,D5
 CMP FL_COUNT,D5
 BNE FL_301

FL_300 LEA TABLENM,A0
FL_101 TST.B (A0)
 BEQ FL_102
 MOVE.B (A0)+,(A3)+
 JMP FL_101
FL_102 CLR.B (A3)+

 ADD.L #EV_FSZ,A4
 ADD #1,FL_COUNT

FL_103 JSR MOVERT
 TST D0
 BMI FL_DONE
FL_104 JSR FINDCHAR
 TST D0
 BMI FL_DONE
 CMP.B #';',D0
 BNE FL_103

 JSR MOVERT
 TST D0
 BPL FL_100

FL_DONE CLR.L D0
 RTS

FL_ERROR MOVE #-1,D0
 RTS

*************************************
* PARSE AN EXPRESSION               *
* --Inputs--                        *
* A0 = PTR TO EXPRESSION STRUCTURE  *
* A1 = Ptr to expression storage    *
* D0 = Maximum # of structures      *
* --Returns--                       *
* A0 = New ptr to expr storage      *
* D0 = -1 IF ERROR D7= ERROR #      *
* D1 # OF EXPRESSIONS               *
* D2 # LARGEST PARENTHESIS GROUP    *
*************************************

*-----------FCONN-------------
*  0  END  1  =     2  +
*  3  -    4  *     5  /
*  6  >    7  <     8  !=
*  9  >=   10 <=    11 AND
*  12 OR   13 !     14 LIKE
*  15 !^   16 SKIP  17 ~
*  18 !~   19 ,

*FTYPE
* 1 STRING
* 2 VARIABLE
* 3 NUMBER
* 4 AGGREGATE
* 5 FIELD
* D DECIMAL VALUE
* I INTEGER VALUE
* C CHARACTER STRING
* A DATE VALUE
* E EUROPEAN DATE
* F GEM FIELD

* ERRORS
* 200 Too many right parenthesis
* 201 Aggregate field not correct
* 202 Bad expression
* 203 Bad GEM Object number or name
* 204 Expecting more operands in this expression
* 205 Illegal function
* 206 Expecting a semicolon
* 207 Not enough left parenthesis
* 208 Value too large
* 209 GEM Object in the current form has not been defined

*FAGGR 0-NONE 1-AVG 2-SUM 3 -MIN 4-MAX 5-COUNT

GETEXPRESS MOVE.L A0,GE_STRCT
 MOVE.L A1,GE_BUFF
 MOVE D0,GE_MAX

 CLR GE_COUNT
 CLR GE_CNT3
 CLR GE_PARN
 CLR GE_PMAX
 MOVE.L GE_BUFF,A3

GE_LOOP CLR.L D0
 MOVE GE_COUNT,D0
 MULU #EV_FSZ,D0
 ADD.L GE_STRCT,D0
 MOVE.L D0,A4

 MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
GE_100 CLR.B (A0)+
 DBF D0,GE_100

 MOVE #1,FTYPE(A4)
 CLR.L FTABL(A4)

GE_101 JSR FINDCHAR
 TST D0
 BMI GE_DONE

 MOVE CURSX,FPOSI(A4)

 MOVE #202,D7
 JSR GE_GETC
 CMP.B #'(',D0
 BNE GE_200
 ADD #1,GE_PARN

 MOVE GE_PARN,D0
 CMP GE_PMAX,D0
 BLT GE_201
 MOVE D0,GE_PMAX

GE_201 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_101

GE_200 JSR FINDWORD
 CMP #53,D3 ;USE
 BEQ GE_AGG2
 CMP #65,D3 ;THEN
 BEQ GE_AGG2
 CMP #69,D3 ;ORDER
 BEQ GE_AGG2
 CMP #84,D3 ;GROUP
 BNE GE_AGG
GE_AGG2 MOVE FHOLDX,CURSX
 JMP GE_DONE

*------AGGREGATE-------

GE_AGG CMP #32,D3
 BCS GE_NOAG
 CMP #38,D3
 BCC GE_NOAG
 SUB #31,D3
 MOVE D3,FAGGR(A4)

 MOVE #201,D7
 JSR FINDCHAR
 TST D0
 BMI GE_ERROR
 CMP.B #'(',D0
 BNE GE_ERROR

 MOVE.L A3,FNAME(A4)
 MOVE #5,FTYPE(A4)
 CLR FRFND(A4)

 MOVE #201,D7
 MOVE.L #19,D6
GE_301 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JSR FINDCHAR
 TST D0
 BMI GE_ERROR
 CMP.B #':',D0
 BEQ GE_303
 CMP.B #')',D0
 BEQ GE_302
 MOVE.B D0,(A3)+
 DBF D6,GE_301

GE_302 CLR.B (A3)+
 JSR MOVERT
 TST D0
 BMI GE_ERROR

 MOVE.L A3,FVAL2(A4)
 MOVE.B #' ',(A3)+
 MOVE #19,D0
GE_304 MOVE.B #'0',(A3)+
 DBF D0,GE_304
 CLR.B (A3)+
 JMP GE_CONN

GE_303 CLR.B (A3)+
 MOVE.L FNAME(A4),FTABL(A4)
 MOVE.L A3,FNAME(A4)
 JMP GE_301

GE_NOAG MOVE FHOLDX,CURSX

*------NUMBER-------

 JSR GE_GETC
 CMP.B #'-',D0
 BEQ GE_NUM
 CMP.B #'.',D0
 BEQ GE_NUM
 CMP.B #'0',D0
 BCS GE_NONUM
 CMP.B #'9'+1,D0
 BCC GE_NONUM

GE_NUM MOVE.L A3,FNAME(A4)
 MOVE #3,FTYPE(A4)
 MOVE #21,FSIZE(A4)
 MOVE #10,FEXTR(A4)

 MOVE #202,D7

 MOVE.B #' ',(A3)
 CMP.B #'-',D0
 BNE GE_NUM1
 MOVE.B D0,(A3)
 JSR MOVERT
 TST D0
 BMI GE_ERROR
GE_NUM1 ADD #1,A3

 CLR D2
 JSR GE_GETC

GE_NUM2 MOVE.B (A0)+,D0
 CMP.B #'.',D0
 BEQ GE_NUM4
 CMP.B #'0',D0
 BCS GE_NUM4
 CMP.B #'9'+1,D0
 BCC GE_NUM4
 ADD #1,D2
 CMP #10,D2
 BNE GE_NUM2
 DBF D2,GE_NUM2
 MOVE #208,D7
 JMP GE_ERROR

GE_NUM4 MOVE #9,D3
 SUB D2,D3

GE_NUM4A MOVE.B #'0',(A3)+
 DBF D3,GE_NUM4A

 MOVE #206,D7

GE_NUM5 JSR GE_GETC
 CMP.B #'.',D0
 BEQ GE_NUM9
 CMP.B #'0',D0
 BCS GE_NUM6
 CMP.B #'9'+1,D0
 BCC GE_NUM6

 MOVE.B D0,(A3)+
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 SUB #1,D3
 BNE GE_NUM5
 JMP GE_NUM6

GE_NUM9 JSR MOVERT
 TST D0
 BMI GE_ERROR

GE_NUM6 MOVE #9,D1
GE_NUM7 JSR GE_GETC
 CMP.B #'0',D0
 BCS GE_NUM8
 CMP.B #'9'+1,D0
 BCC GE_NUM8
 MOVE.B D0,(A3)+
GE_NUM7A JSR MOVERT
 TST D0
 BMI GE_ERROR
 DBF D1,GE_NUM7
 JMP GE_CONN

GE_NUM8 MOVE.B #'0',(A3)+
 DBF D1,GE_NUM8
 CLR.B (A3)+
 JMP GE_CONN

*------GEM OBJECT-------

GE_NONUM CMP.B #'%',D0
 BNE GE_NOGEM

 MOVE #203,D7
 JSR MOVERT
 TST D0
 BMI GE_ERROR

 CLR USERFLAG
 MOVE #209,D7
 JSR GE_GETC
 CMP.B #'@',D0
 BNE GE_400NF

 MOVE #203,D7
 MOVE #1,USERFLAG
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_400

GE_400NF CMP.B #'0',D0
 BLT GE_400
 CMP.B #'9',D0
 BGT GE_400

 JSR FINDVAL
 CMP #1,D0
 BLT GE_ERROR
 SUB #1,D0
 CMP OBJCNT,D0
 BGT GE_ERROR
 MOVE D0,D5
 AND.L #$FFFF,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 JMP GE_411

* Find object name

GE_400 JSR FINDCHAR
 TST D0
 BMI GE_ERROR

 LEA TABLENM,A1
 MOVE #18,D4
GE_401 JSR GE_GETC
 JSR UPPER
 CMP.B #'A',D0
 BLT GE_403
 CMP.B #'Z',D0
 BGT GE_402
 JMP GE_404
GE_403 CMP.B #'0',D0
 BLT GE_402
 CMP.B #'9',D0
 BGT GE_402
GE_404 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 DBF D4,GE_401
GE_402 CLR.B (A1)

 TST OBJCNT
 BEQ GE_ERROR

 LEA TABLENM,A0
 CLR D5
GE_410 CLR.L D0
 MOVE D5,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 MOVE.L OB_NAME(A2),A1
 JSR MMATCHER
 TST D0
 BEQ GE_411
 ADD #1,D5
 CMP OBJCNT,D5
 BNE GE_410
 JMP GE_ERROR

GE_411 TST USERFLAG
 BNE GE_480

 MOVE D5,D0
 ADD #1,D0
 MOVE D0,FOBJN(A4)

 MOVE OB_DEF(A2),FTYPE(A4)
 MOVE OB_DEF2(A2),FSIZE(A4)
 MOVE OB_EXTR(A2),FEXTR(A4)

 TST OB_TYPE(A2)
 BNE GE_420
 MOVE.L OB_TEREC(A2),A1
 MOVE.L HTEXT(A1),FVALU(A4)
 MOVE TELENGTH(A1),FSIZE(A4)
 JMP GE_421

GE_420 MOVE.L OB_BUTNM(A2),FVALU(A4)
 MOVE #75,FSIZE(A4)

GE_421 MOVE OB_DEF(A2),D0
 CMP.B #'I',D0
 BEQ GE_4INT
 CMP.B #'D',D0
 BNE GE_CONN

GE_4INT MOVE.L FVALU(A4),A0
 MOVE.L A3,FNAME(A4)
 MOVE #3,FTYPE(A4)
 MOVE #21,FSIZE(A4)
 MOVE #10,FEXTR(A4)

 MOVE #202,D7
 MOVE.B #' ',D0
 CMP.B #'-',(A0)
 BNE GEX_NUM1
 MOVE.B #'-',D0
 ADD #1,A0
GEX_NUM1 MOVE.B D0,(A3)+

 CLR D2
 MOVE.L A0,A1
GEX_NUM2 MOVE.B (A0)+,D0
 CMP.B #'.',D0
 BEQ GEX_NUM4
 CMP.B #'0',D0
 BCS GEX_NUM4
 CMP.B #'9'+1,D0
 BCC GEX_NUM4
 ADD #1,D2
 CMP #10,D2
 BNE GEX_NUM2
 DBF D2,GEX_NUM2
 MOVE #208,D7
 JMP GE_ERROR

GEX_NUM4 MOVE #9,D3
 SUB D2,D3

GEX_NUM4A MOVE.B #'0',(A3)+
 DBF D3,GEX_NUM4A

 MOVE #206,D7

GEX_NUM5 MOVE.B (A1)+,D0
 CMP.B #'.',D0
 BEQ GEX_NUM6
 CMP.B #'0',D0
 BCS GEX_NUM6
 CMP.B #'9'+1,D0
 BCC GEX_NUM6
 MOVE.B D0,(A3)+
 SUB #1,D3
 BNE GEX_NUM5

GEX_NUM6 MOVE #9,D1
GEX_NUM7 MOVE.B (A1)+,D0
 CMP.B #'0',D0
 BCS GEX_NUM8
 CMP.B #'9'+1,D0
 BCC GEX_NUM8
 MOVE.B D0,(A3)+
GEX_NUM7A DBF D1,GEX_NUM7
 JMP GE_CONN

GEX_NUM8 MOVE.B #'0',(A3)+
 DBF D1,GEX_NUM8
 CLR.B (A3)+
 JMP GE_CONN

GE_480 MOVE.L A3,FNAME(A4)
 MOVE #3,FTYPE(A4)
 MOVE #21,FSIZE(A4)
 MOVE #10,FEXTR(A4)

 MOVE.B #' ',(A3)+

 MOVE #5,D0
GE_481 MOVE.B #'0',(A3)+
 DBF D0,GE_481

 MOVE D5,D0
 ADD #1,D0
 JSR CONV2DEC

 ADD #4,A3

 MOVE #9,D0
GE_482 MOVE.B #'0',(A3)+
 DBF D0,GE_482

 CLR.B (A3)+
 JMP GE_CONN

*------STRING-------

GE_NOGEM CMP.B #39,D0 ;Single quote
 BEQ GE_STRING
 CMP.B #34,D0 ;Double quote
 BNE GE_NOSTR

GE_STRING MOVE.B D0,GE_TERM
 MOVE #1,FTYPE(A4)
 MOVE.L A3,FNAME(A4)
 MOVE #202,D7

GE_500 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JSR GE_GETC
 CMP.B GE_TERM,D0
 BEQ GE_501
 MOVE.B D0,(A3)+
 JMP GE_500

GE_501 CLR.B (A3)+
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_CONN

*------FIELD-------

GE_NOSTR MOVE.L A3,FNAME(A4)
 MOVE #5,FTYPE(A4)

GE_600 JSR GE_GETC
 CMP.B #':',D0
 BEQ GE_602
 CMP.B #';',D0
 BEQ GE_601
 CMP.B #')',D0
 BEQ GE_601
 CMP.B #' ',D0
 BEQ GE_601
 CMP.B #'=',D0
 BEQ GE_601
 CMP.B #'+',D0
 BEQ GE_601
 CMP.B #'^',D0
 BEQ GE_601
 CMP.B #44,D0  ;Comma
 BEQ GE_604
 CMP.B #'~',D0
 BEQ GE_601
 CMP.B #'-',D0
 BEQ GE_601
 CMP.B #'*',D0
 BEQ GE_601
 CMP.B #'/',D0
 BEQ GE_601
 CMP.B #'!',D0
 BEQ GE_601
 CMP.B #'>',D0
 BEQ GE_601
 CMP.B #'<',D0
 BEQ GE_601
 MOVE.B D0,(A3)+

GE_603 MOVE #202,D7
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_600

GE_602 CLR.B (A3)+
 MOVE.L FNAME(A4),FTABL(A4)
 MOVE.L A3,FNAME(A4)
 JMP GE_603

GE_604 MOVE #200,D7
 TST GE_PARN
 BNE GE_ERROR

GE_601 CLR.B (A3)+

*---------FIND CONNECTOR---------

GE_CONN ADD #1,GE_CNT3
 MOVE GE_PARN,FPARN(A4)

GE_CONN2 MOVE #204,D7
 JSR FINDCHAR
 TST D0
 BMI GE_ERROR

 CLR GE_FLAG
 JSR FINDWORD
 CMP.B #24,D3 ;FROM
 BEQ GE_701
 CMP.B #26,D3 ;WHERE
 BEQ GE_701
 CMP.B #53,D3 ;USE
 BEQ GE_701
 CMP.B #65,D3 ;THEN
 BEQ GE_701
 CMP.B #69,D3 ;ORDER
 BEQ GE_701
 CMP #84,D3 ;GROUP
 BNE GE_702
GE_701 MOVE FHOLDX,CURSX
 MOVE #1,GE_FLAG
 CLR D1
 JMP GE_800

GE_702 MOVE #11,D1  ;AND/OR
 CMP.B #27,D3
 BEQ GE_703
 MOVE #12,D1
 CMP.B #28,D3
 BNE GE_704
GE_703 MOVE D1,FCONN(A4)
 JMP GE_800

GE_704 MOVE FHOLDX,CURSX

GE_802 MOVE #205,D7
 JSR GE_GETC
 CMP.B #')',D0
 BNE GE_801

 MOVE #200,D7
 TST GE_PARN
 BEQ GE_ERROR
 SUB #1,GE_PARN
 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_CONN2

GE_801 CLR D1
 CMP.B #';',D0
 BEQ GE_800
 MOVE #1,D1
 CMP.B #'=',D0
 BEQ GE_800
 MOVE #2,D1
 CMP.B #'+',D0
 BEQ GE_800
 MOVE #3,D1
 CMP.B #'-',D0
 BEQ GE_800
 MOVE #4,D1
 CMP.B #'*',D0
 BEQ GE_800
 MOVE #5,D1
 CMP.B #'/',D0
 BEQ GE_800
 MOVE #14,D1
 CMP.B #'^',D0
 BEQ GE_800
 MOVE #19,D1
 CMP.B #44,D0 ;Comma
 BEQ GE_800
 MOVE #17,D1
 CMP.B #'~',D0
 BEQ GE_800

 MOVE #8,D1
 CMP.B #'!',D0
 BNE GE_710

 MOVE #205,D7
 JSR ED_CALC
 CLR D0
 MOVE.B 1(A0),D0
 MOVE #8,D1
 CMP.B #'=',D0
 BEQ GE_711
 MOVE #18,D1
 CMP.B #'~',D0
 BEQ GE_711
 MOVE #15,D1
 CMP.B #'^',D0
 BNE GE_ERROR
GE_711 JSR MOVERT
 TST D0
 BMI GE_ERROR
 JMP GE_800

GE_710 MOVE #202,D7
 MOVE #6,D1
 CMP.B #'>',D0
 BEQ GE_720
 MOVE #7,D1
 CMP.B #'<',D0
 BNE GE_ERROR

GE_720 JSR ED_CALC
 MOVE.B 1(A0),D0
 CMP.B #'=',D0
 BNE GE_800
 ADD #3,D1
 JSR MOVERT
 TST D0
 BMI GE_ERROR

GE_800 MOVE D1,FCONN(A4)
 JSR MOVERT
 TST D0
 BMI GE_ERROR

 TST D1
 BEQ GE_DONE
 TST GE_FLAG
 BNE GE_DONE

 ADD #1,GE_COUNT
 MOVE GE_COUNT,D0
 CMP GE_MAX,D0
 BNE GE_LOOP

GE_DONE MOVE #207,D7
 TST GE_PARN
 BNE GE_ERROR

 MOVE.L A3,A0
 MOVE FHOLDX,CURSX
 MOVE GE_CNT3,D1
 MOVE GE_PMAX,D2
 CLR D0
 RTS

GE_ERROR MOVE #-1,D0
 RTS

GE_GETC JSR ED_CALC
 CLR D0
 MOVE.B (A0),D0
 RTS

*********************************
* Find Sort/Order by Parameters *
* A0 = Order by Structure Ptr   *
* A1 = Buffer Ptr               *
* ---returns---                 *
* D1 = # of params              *
*********************************

GETSORTED MOVE.L A0,A4
 MOVE.L A1,A3
 CLR GETSCOUNT

GS_LOOP MOVE.L A4,A0
 MOVE #EV_FSZ-1,D0
GS_100 CLR.B (A0)+
 DBF D0,GS_100

 MOVE #293,D7
 JSR GETNAME
 TST D0
 BMI GS_ERROR

 ADD #1,GETSCOUNT

 MOVE.L A3,FNAME(A4)

 MOVE #19,D0
 LEA TABLENM,A0
GS_101 MOVE.B (A0)+,(A3)+
 DBF D0,GS_101

GS_LITL MOVE #293,D7
 JSR FINDWORD
 CMP #93,D3  ;DESC
 BEQ GS_200
 CMP #94,D3  ;NOCAPS
 BEQ GS_201
 MOVE FHOLDX,CURSX
 JSR FINDCHAR
 CMP.B #',',D0
 BEQ GS_300
 CMP.B #';',D0
 BEQ GS_DONE
 JMP GS_ERROR

GS_201 MOVE #1,FIFIL(A4)
 JMP GS_400
GS_200 MOVE #1,FRECN(A4)

GS_400 JSR FINDCHAR
 CMP.B #',',D0
 BEQ GS_300
 CMP.B #';',D0
 BEQ GS_DONE
 JMP GS_LITL

GS_300 MOVE #293,D7
 JSR MOVERT
 TST D0
 BMI GS_ERROR
 MOVE #19,FCONN(A4)
 ADD.L #EV_FSZ,A4
 JMP GS_LOOP

GS_EX MOVE FHOLDX,CURSX

GS_DONE MOVE GETSCOUNT,D1
 CLR D0
 RTS

GS_ERROR MOVE #-1,D0
 RTS

GETSCOUNT DC 0

*************************************
* FINALIZE EXPRESSIONS              *
* --Inputs--                        *
* A0 = PTR TO EXPRESSION STRUCTURE  *
* --Returns--                       *
* A0 = New ptr to expr storage      *
* D0 = -1 IF ERROR D7= ERROR #      *
*************************************

*Errors
*320 Field or variable not defined
*321 Field type mismatch
*322 Value to small or large

FINEXPRESS MOVE.L A0,A4
 MOVE #293,D7

FE_200 MOVE FCONN(A4),D0   ;Find destination variable
 BEQ FE_DONE
 CMP #1,D0
 BEQ FE_201
 ADD.L #EV_FSZ,A4
 JMP FE_200

FE_201 MOVE FOBJN(A4),FE_MODE

 MOVE #320,D7
 TST.L FVALU(A4)
 BNE FE_199
 MOVE.L FNAME(A4),A0
 JMP FE_ERROR

FE_199 MOVE.L FVALU(A4),A2
 MOVE.L FINDX(A4),A3
 TST.L FINDX(A4)
 BNE FE_230
 MOVE.L A2,A3
FE_230 MOVE FSIZE(A4),D6
 MOVE FTYPE(A4),D5
 MOVE FEXTR(A4),D4

FE_210 ADD.L #EV_FSZ,A4
 MOVE FCONN(A4),D0
 BEQ FE_202
 CMP #19,D0
 BNE FE_210

FE_202 MOVE.L FVAL2(A4),A0 ;Agg
 TST FAGGR(A4)
 BEQ FE_223
 MOVE #'D',FTYPE(A4)
 JMP FE_222

FE_223 CMP #2,FCALC(A4)   ;Find source variable
 BNE FE_220
 MOVE.L FVAL2(A4),A0
 MOVE #4000,FESRCSZ
 CLR FESRCEX
 CMP #'I',FTYPE(A4)
 BEQ FE_222
 CMP #'D',FTYPE(A4)
 BEQ FE_222
 CMP #3,FTYPE(A4)
 BNE FE_203
FE_222 MOVE #21,FESRCSZ
 MOVE #10,FESRCEX
 JMP FE_203

FE_220 MOVE.L FVALU(A4),A0
 MOVE FTYPE(A4),D0
 CMP.B #'A',D0
 BEQ FE_203
 CMP.B #'E',D0
 BEQ FE_203
 CMP.B #'S',D0
 BEQ FE_203
 CMP.B #'L',D0
 BEQ FE_203
 CMP.B #'I',D0
 BEQ FE_221
 CMP.B #'D',D0
 BEQ FE_221
 CMP.B #'C',D0
 BEQ FE_203

 MOVE.L FNAME(A4),A0
 CMP #3,D0
 BEQ FE_221
 CMP #1,D0
 BNE FE_203
FE_221 MOVE FSIZE(A4),FESRCSZ
 MOVE FEXTR(A4),FESRCEX

FE_203 MOVE #320,D7
 CMP.L #0,A0
 BEQ FE_204

 MOVE #321,D7    ;Where do we go?
 CMP.B #'C',D5
 BEQ FE_CHAR
 CMP.B #1,D5
 BEQ FE_CHAR
 CMP.B #'I',D5
 BEQ FE_NUM
 CMP.B #'D',D5
 BEQ FE_NUM
 CMP.B #3,D5
 BEQ FE_NUMZ
 CMP.B #'A',D5
 BEQ FE_DATE
 CMP.B #'E',D5
 BEQ FE_DATE
 CMP.B #'S',D5
 BEQ FE_DATE
 CMP.B #'L',D5
 BEQ FE_DATE

FE_204 MOVE.L FNAME(A4),A0
 JMP FE_ERROR

*--------------Numbers--------------

FE_NUMZ CLR FEN_INTVAR
 JMP FE_NUMZ2

FE_NUM MOVE #1,FEN_INTVAR

FE_NUMZ2 CLR FE_NUMFLG2

 MOVE #321,D7
 MOVE FTYPE(A4),D0
 TST FE_MODE
 BEQ FE_NUMNL2
 CMP.B #1,D0
 BEQ FE_NUMNL3
 CMP.B #'C',D0
 BNE FE_NUMNL2
FE_NUMNL3 CLR.L D0
 MOVE FE_MODE,D0
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 CLR.L FE_ADR
 MOVE.L OB_BUTNM(A2),A1
 TST OB_TYPE(A2)
 BNE FE_NUMNL4
 MOVE.L OB_TEREC(A2),A1
 MOVE.L A1,FE_ADR
 MOVE.L HTEXT(A1),A1
FE_NUMNL4 MOVE #500,D0
FE_NUMNL5 MOVE.B (A0)+,D1
 MOVE.B D1,(A1)+
 TST.B D1
 BEQ FE_SHOW
 DBF D0,FE_NUMNL5
 CLR.B (A1)
 JMP FE_SHOW

FE_NUMNL2 CMP.B #'D',D0
 BEQ FE_NUMZ4
 CMP.B #'I',D0
 BEQ FE_NUMZ4
 CMP.B #3,D0
 BEQ FE_NUMZ3
 MOVE.L FNAME(A4),A0
 JMP FE_ERROR

FE_NUMZ4 MOVE #1,FE_NUMFLG
 JMP FE_NUMZ5

FE_NUMZ3 CLR FE_NUMFLG

FE_NUMZ5 CLR.L D0
 MOVE FE_MODE,D0
 BEQ FE_NUMNRML
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 CLR.L FE_ADR
 MOVE OB_EXTR(A2),FE_NUMFLG2

 MOVE.L OB_BUTNM(A2),A1
 TST OB_TYPE(A2)
 BNE FE_NUMQ2
 MOVE.L OB_TEREC(A2),A1
 MOVE.L A1,FE_ADR
 MOVE.L HTEXT(A1),A1

FE_NUMQ2 TST.B (A0)
 BEQ FEN_ZN307

 MOVE.B (A0)+,D0
 CMP.B #' ',D0
 BEQ FE_NUMOB1
 MOVE.B #'-',(A1)+

FE_NUMOB1 CLR D6
 CLR D4
 MOVE FESRCSZ,D5
 SUB #2,D5
 SUB FESRCEX,D5

FEN_N100 MOVE.B (A0)+,D0
 CMP.B #'0',D0
 BNE FEN_N101
 TST D4
 BEQ FEN_N102
FEN_N101 MOVE #1,D6
 MOVE #1,D4
FEN_N401 MOVE.B D0,(A1)+
FEN_N102 DBF D5,FEN_N100

 CLR.L D3
 MOVE FESRCEX,D3
 MOVE D3,D5
 MOVE D3,D2
 BEQ FEN_N305
 MOVE.B #'.',(A1)+

 TST FE_NUMFLG2
 BNE FEN_N103B

 TST FEN_INTVAR
 BNE FEN_TRAILING

 MOVE.L A0,A2
 ADD.L D3,A2
 SUB #1,D3
FEN_N334 SUB #1,D2
 CMP.B #'0',-(A2)
 BNE FEN_N103
 DBF D3,FEN_N334
 JMP FEN_N305

FEN_N103B MOVE FE_NUMFLG2,D2
 SUB #1,D2

FEN_N103 TST.B (A0)
 BEQ FEN_N305
 SUB #1,D5
 MOVE #1,D6
 MOVE.B (A0)+,(A1)+
 DBF D2,FEN_N103

FEN_N305 CLR.B (A1)

 TST D6
 BNE FE_SHOW
 MOVE.B #'0',-1(A1)
 JMP FE_SHOW

FEN_TRAILING CMP #0,D5
 BLE FEN_ZN307
 SUB #1,D5
FEN_ZN308 MOVE.B (A0)+,(A1)+
 DBF D5,FEN_ZN308
FEN_ZN307 CLR.B (A1)
 JMP FE_SHOW

FE_NUMNRML TST.B (A0)  ;Variable or Field (Not GEM object)
 BEQ FE_NUMNULL

 MOVE.B (A0),(A2)+
 MOVE.B (A0)+,(A3)+

 MOVE FESRCSZ,D1
 CMP D1,D6
 BEQ FE_NUM4
 BGT FE_NUM2

 CLR.L D0
 MOVE D1,D0
 SUB FESRCEX,D0
 MOVE D6,D2
 SUB D4,D2
 SUB D2,D0
 ADD.L D0,A0

FE_NUM7 SUB #2,D6
FE_NUM8 MOVE.B (A0),(A2)+
 MOVE.B (A0)+,(A3)+
 DBF D6,FE_NUM8
 JMP FE_RCRS

FE_NUM2 MOVE D6,D0
 SUB D4,D0

 MOVE D1,D2
 SUB FESRCEX,D2

 SUB D2,D0
 TST D0
 BEQ FE_NUM4
 SUB #1,D0
FE_NUM3 MOVE.B #'0',(A2)+
 MOVE.B #'0',(A3)+
 DBF D0,FE_NUM3

FE_NUM4 SUB #2,D1
FE_NUM5 MOVE.B (A0),(A2)+
 MOVE.B (A0)+,(A3)+
 DBF D1,FE_NUM5
 JMP FE_RCRS

FE_NUMNULL CMP #1,D6
 BLT FE_RCRS
 MOVE.B #' ',(A2)+
 MOVE.B #' ',(A3)+
 SUB #1,D6
FE_NUMNULL2 MOVE.B #'0',(A2)+
 MOVE.B #'0',(A3)+
 DBF D6,FE_NUMNULL2
 JMP FE_RCRS

*--------------Dates--------------

FE_DATE MOVE.B (A0)+,D0  ;Date
 MOVE.B (A0)+,D1
 CMP.B #'/',D1
 BNE FE_405
 MOVE.B #'0',FDATE
 MOVE.B D0,FDATE+1
 JMP FE_406

FE_405 MOVE.B D0,FDATE
 MOVE.B D1,FDATE+1

 CMP.B #'/',(A0)
 BNE FE_406
 ADD.L #1,A0

FE_406 MOVE.B (A0)+,D0
 MOVE.B (A0)+,D1
 CMP.B #'/',D1
 BNE FE_407
 MOVE.B #'0',FDATE+2
 MOVE.B D0,FDATE+3
 JMP FE_408

FE_407 MOVE.B D0,FDATE+2
 MOVE.B D1,FDATE+3

 CMP.B #'/',(A0)
 BNE FE_408
 ADD.L #1,A0

FE_408 MOVE.B (A0)+,FDATE+4
 MOVE.B (A0)+,FDATE+5

 MOVE #321,D7
 CLR.L D0
 MOVE FE_MODE,D0
 BEQ FE_DATENRML
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 MOVE.L OB_BUTNM(A2),A1
 CLR.L FE_ADR
 TST OB_TYPE(A2)
 BEQ FE_DTQ
 CMP #4,OB_TYPE(A2)
 BGE FE_204
 JMP FE_DTQ2
FE_DTQ MOVE.L OB_TEREC(A2),A1
 MOVE.L A1,FE_ADR
 MOVE.L HTEXT(A1),A1

FE_DTQ2 MOVE.B FDATE,(A1)+
 MOVE.B FDATE+1,(A1)+
 MOVE.B #'/',(A1)+
 MOVE.B FDATE+2,(A1)+
 MOVE.B FDATE+3,(A1)+
 MOVE.B #'/',(A1)+
 MOVE.B FDATE+4,(A1)+
 MOVE.B FDATE+5,(A1)+
 CLR.B (A1)
 JMP FE_SHOW

FE_DATENRML MOVE #5,D0
 LEA FDATE,A0
FE_410 MOVE.B (A0)+,D1
 MOVE.B D1,(A2)+
 MOVE.B D1,(A3)+
 DBF D0,FE_410
 JMP FE_RCRS

*--------------Text--------------

FE_CHAR MOVE #321,D7
 CLR.L D0
 MOVE FE_MODE,D0
 BEQ FE_CNRML
 SUB #1,D0
 MULU #OBRECSZ,D0
 ADD.L #OBRECS,D0
 MOVE.L D0,A2
 MOVE.L OB_BUTNM(A2),A1
 CLR.L FE_ADR
 TST OB_TYPE(A2)
 BEQ FE_CRQ
 CMP #4,OB_TYPE(A2)
 BGE FE_204
 JMP FE_CRQ2
FE_CRQ MOVE.L OB_TEREC(A2),A1
 MOVE.L A1,FE_ADR

 MOVE TELENGTH(A1),D0
 SUB #1,D0
 MOVE.L HTEXT(A1),A1
FE_CRQ3 CLR.B (A1)+
 DBF D0,FE_CRQ3

 MOVE.L FE_ADR,A1
 MOVE.L HTEXT(A1),A1

 MOVE FTYPE(A4),D0
 CMP.B #'D',D0
 BEQ FE_NUMQ2
 CMP.B #'I',D0
 BEQ FE_NUMQ2
 CMP.B #3,D0
 BEQ FE_NUMQ2

FE_CRQ2 TST D6
 BNE FE_CHAR12
 MOVE #500,D6

FE_CHAR12 SUB #1,D6  ;Character field
 MOVE FSIZE(A4),D1
FE_CHAR10 MOVE.B (A0)+,D0
 MOVE.B D0,(A1)+
 TST.B D0
 BEQ FE_SHOW 
 SUB #1,D1
 TST D1
 BEQ FE_CHAR20
 DBF D6,FE_CHAR10
FE_CHAR20 CLR.B (A1)+

FE_SHOW MOVE.L A4,-(A7)
 TST.L FE_ADR
 BEQ FE_CRSHOW2
 MOVE.L FE_ADR,A0
 JSR TEACTIVE
FE_CRSHOW2 MOVE FE_MODE,D0
 SUB #1,D0
 JSR OBJ_DRAW
 MOVE.L (A7)+,A4
 JMP FE_RCRS

FE_CNRML SUB #1,D6  ;Character field
 MOVE FSIZE(A4),D1
FE_CHAR2 TST.B (A0)
 BEQ FE_CHAR3
 MOVE.B (A0)+,D0
 MOVE.B D0,(A2)+
 MOVE.B D0,(A3)+
 SUB #1,D1
 BEQ FE_CHAR3
 DBF D6,FE_CHAR2
 JMP FE_RCRS
FE_CHAR3 CLR.B (A2)+
 CLR.B (A3)+
 DBF D6,FE_CHAR3

FE_RCRS TST FCONN(A4)
 BEQ FE_DONE
 ADD.L #EV_FSZ,A4
 JMP FE_200

FE_DONE CLR D0
 RTS

FE_ERROR MOVE #-1,D0
 RTS

FE_MODE DC 0
FE_ADR DC.L 0
FEN_INTVAR DC 0
FE_NUMFLG DC 0
FE_NUMFLG2 DC 0

*************************************
* PROCESS AGGREGATE EXPRESSIONS     *
* --Inputs--                        *
* A0 = PTR TO EXPRESSION STRUCTURE  *
* --Returns--                       *
* D0 = Error value                  *
*************************************

*Errors
*340 This Aggregate function works on numeric fields only

DOAGGS MOVE.L A0,DA_ADR

DA_100 TST FAGGR(A0)
 BNE DA_101
 TST FCONN(A0)
 BEQ DA_DONE
 ADD.L #EV_FSZ,A0
 JMP DA_100

DA_101 MOVE #1,DA_FIRST

 MOVE.L STR_TBL,A0  ;Open all tables
 MOVE.L BUF_TBL2,A1
 JSR OPENTBLS
 TST D0
 BMI SQL_ERROR

 MOVE.L STR_TBL,A0  ;Reset record pointers
 JSR RESETPTR

 CLR REC_FND
 MOVE #1,S_FIRST

DA_LOOP JSR SELECTONE  ;Find record
 TST D0
 BPL DA_FOUND
 CMP #281,D7
 BNE SQL_ERROR
 TST REC_FND
 BNE DA_FIN
 MOVE #298,D7
 JMP DA_ERROR

DA_FOUND ADD #1,REC_FND

 MOVE.L DA_ADR,A4
DA_200 TST FAGGR(A4)
 BEQ DA_RCRS

 MOVE #2,FCALC(A4)
 JSR CLEARCALC

 MOVE FAGGR(A4),D0
 CMP #5,D0
 BEQ DA_COUNT

 CMP #'I',FTYPE(A4)
 BEQ DA_GDTYPE
 CMP #'D',FTYPE(A4)
 BEQ DA_GDTYPE
 MOVE #340,D7
 JMP DA_ERROR

DA_GDTYPE CMP #1,D0
 BEQ DA_SUM
 CMP #2,D0
 BEQ DA_SUM
 CMP #3,D0
 BEQ DA_MIN
 CMP #4,D0
 BEQ DA_MAX

*-----------Count------------

DA_COUNT MOVE.L FVALU(A4),A0
 TST.B (A0)
 BEQ DA_RCRS
 ADD #1,FRFND(A4)

 LEA CALCA,A1
 MOVE.L FVAL2(A4),A0
 JSR EX_NUMP

 CLR D5
 CLR D6

 LEA CALCB,A1
 MOVE #19,D1
DA_CNT2 CLR.B (A1)+
 DBF D1,DA_CNT2
 MOVE.B #1,CALCB+9

 JSR ADDITION
 JMP DA_UNPARSE

*-----Minimum-----

DA_MIN MOVE.L FVALU(A4),A0
 TST.B (A0)
 BEQ DA_RCRS

 TST DA_FIRST
 BNE DA_DOFRST

 LEA CALCA,A1
 MOVE.L FVAL2(A4),A0
 JSR EX_NUMP
 MOVE D0,D5

 LEA CALCB,A1
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D6

 TST D5
 BPL DA_MIN2
 TST D6
 BMI DA_RCRS
 JMP DA_MIN3
DA_MIN2 TST D6
 BMI DA_SWAP

DA_MIN3 MOVE #19,D5
 LEA CALCA,A2
 LEA CALCB,A3
DA_MIN4 MOVE.B (A2)+,D1
 CMP.B (A3)+,D1
 BLT DA_RCRS
 BGT DA_SWAP
 DBF D5,DA_MIN4
 JMP DA_RCRS

*-----------Maximum----------

DA_MAX MOVE.L FVALU(A4),A0
 TST.B (A0)
 BEQ DA_RCRS

 TST DA_FIRST
 BEQ DA_MINZT

DA_DOFRST CLR DA_FIRST
 LEA CALCD,A1
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D6
 JMP DA_UNPARSE

DA_MINZT LEA CALCA,A1
 MOVE.L FVAL2(A4),A0
 JSR EX_NUMP
 MOVE D0,D5

 LEA CALCB,A1
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D6

 TST D5
 BPL DA_MAX2
 TST D6
 BPL DA_SWAP
 JMP DA_MAX3
DA_MAX2 TST D6
 BMI DA_RCRS

DA_MAX3 MOVE #19,D5
 LEA CALCA,A2
 LEA CALCB,A3
DA_MAX4 MOVE.B (A2)+,D1
 CMP.B (A3)+,D1
 BGT DA_RCRS
 BLT DA_SWAP
 DBF D5,DA_MAX4
 JMP DA_RCRS

DA_SWAP MOVE.L FVAL2(A4),A3
 MOVE.B #' ',D0
 TST D6
 BPL DA_SWAP2
 MOVE.B #'-',D0
DA_SWAP2 MOVE.B D0,(A3)+

 LEA CALCB,A0
 MOVE #19,D1
DA_SWAP3 MOVE.B (A0)+,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)+
 DBF D1,DA_SWAP3
 CLR.B (A3)+
 MOVE #2,FCALC(A4)
 JMP DA_RCRS

*---------SUM/AVG---------

DA_SUM MOVE.L FVALU(A4),A0
 TST.B (A0)
 BEQ DA_RCRS
 ADD #1,FRFND(A4)

 LEA CALCA,A1
 MOVE.L FVAL2(A4),A0
 JSR EX_NUMP
 MOVE D0,D5

 LEA CALCB,A1
 MOVE.L FVALU(A4),A0
 MOVE FSIZE(A4),D3
 MOVE FEXTR(A4),D4
 JSR EX_NUMF
 MOVE D0,D6

 JSR ADDITION

DA_UNPARSE JSR DA_UNLOAD

DA_RCRS TST FCONN(A4)
 BEQ DA_LOOP
 ADD.L #EV_FSZ,A4
 JMP DA_200

DA_FIN MOVE.L STR_TBL,A0  ;Close tables
 JSR CLOSTBLS
 TST D0
 BMI DA_ERROR

 MOVE.L DA_ADR,A4  ;Finish averages
DA_400 CMP #1,FAGGR(A4)
 BNE DA_499

 JSR CLEARCALC

 LEA CALCA,A1
 MOVE.L FVAL2(A4),A0
 JSR EX_NUMP
 MOVE D0,D5

 CLR D6
 LEA CALCB+6,A3
 MOVE FRFND(A4),D0
 BEQ DA_401

 JSR CONV2DEC
 SUB.B #'0',(A3)
 SUB.B #'0',1(A3)
 SUB.B #'0',2(A3)
 SUB.B #'0',3(A3)

 JSR DIVIDE

DA_401 JSR DA_UNLOAD

DA_499 TST FCONN(A4)
 BEQ DA_DONE
 ADD.L #EV_FSZ,A4
 JMP DA_400

DA_DONE CLR D0
 RTS

DA_ERROR MOVE #-1,D0
 RTS

CLEARCALC CLR.L CALCB
 CLR.L CALCB+4
 CLR.L CALCB+8
 CLR.L CALCB+12
 CLR.L CALCB+16

 CLR.L CALCC
 CLR.L CALCC+4
 CLR.L CALCC+8
 CLR.L CALCC+12
 CLR.L CALCC+16

 CLR.L CALCD
 CLR.L CALCD+4
 CLR.L CALCD+8
 CLR.L CALCD+12
 CLR.L CALCD+16
 RTS

DA_UNLOAD MOVE.L FVAL2(A4),A3
 MOVE.B #' ',D0
 TST D6
 BPL DA_SUM2
 MOVE.B #'-',D0
DA_SUM2 MOVE.B D0,(A3)+

 LEA CALCD,A0
 MOVE #19,D1
DA_SUM3 MOVE.B (A0)+,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)+
 DBF D1,DA_SUM3
 CLR.B (A3)+

 MOVE #2,FCALC(A4)
 RTS

*********************
* ESCAPE KEY SENSOR *
*********************

KEYSTOP MOVE #11,-(A7)
 TRAP #1
 ADD #2,A7
 TST D0
 BEQ DONTSTOP

 JSR WAIT_KEY
 CMP.B #27,D0
 BNE DONTSTOP
 MOVE #1,D0
 RTS
DONTSTOP CLR.L D0
 RTS

***********************
* CALCULATE ROW SIZES *
* A0 = Table name     *
* D1 = 1 - Indexes    *
* --Returns---        *
* D0 = Rowsize        *
***********************

CAL_ROW MOVE.L A0,A3
 CLR.L D3
 CLR.L D5

 MOVE.L #CACFLD,D4
 MOVE.L CACHEF,D2
 TST D1
 BEQ CAL_100
 MOVE.L #CACIDX,D4
 MOVE.L CACIND,D2

CAL_100 CLR.L D0
 MOVE D5,D0
 MULU #65,D0
 ADD.L D2,D0
 MOVE.L D0,A2

 ADD.L #20,D0
 MOVE.L D0,A1

 MOVE.L A3,A0
 JSR MMATCHER
 TST D0
 BMI CAL_105

 MOVE.L A2,A0
 ADD.L #47,A0
 JSR CVAL
 ADD D1,D3

CAL_105 ADD #1,D5

 SUB #1,D4
 BNE CAL_100

 ADD #2,D3
 MOVE D3,D0
 AND.L #$FFFF,D0
 RTS

*********************************
* LOAD CACHE BUFFERS            *
*********************************

LDCACHE TST CACHE
 BEQ LDC_999
 CLR CACHE

 MOVE #48*CACTBL,D0
 SUB #1,D0
 MOVE.L CACHET,A0
LDC_100 CLR.B (A0)+
 DBF D0,LDC_100

 MOVE #65*CACFLD,D0
 SUB #1,D0
 MOVE.L CACHEF,A0
LDC_101 CLR.B (A0)+
 DBF D0,LDC_101

 MOVE #65*CACIDX,D0
 SUB #1,D0
 MOVE.L CACIND,A0
LDC_102 CLR.B (A0)+
 DBF D0,LDC_102

 LEA FLDNAME,A0   ;LOAD FIELDS
 JSR ADDPATH
 MOVE.L A0,A4
 JSR F_OPEN
 TST D0
 BPL LDC_103
 LEA FLDNAME,A0
 JSR ADDPATH
 JSR DISK_ERR
 JMP QUIT2

LDC_103 MOVE D0,FHNDL

 MOVE FHNDL,A0
 MOVE.L #65*CACFLD,D0
 MOVE.L CACHEF,A1
 JSR F_READ
 TST.L D0
 BMI LDC_106

 MOVE FHNDL,A0
 JSR F_CLOSE

 LEA INDNAME,A0  ;LOAD INDEXES
 JSR ADDPATH
 MOVE.L A0,A4
 JSR F_OPEN
 TST D0
 BPL LDC_104
 LEA INDNAME,A0
 JSR ADDPATH
 JSR DISK_ERR
 JMP QUIT2

LDC_104 MOVE FHNDL,A0
 MOVE.L #65*CACIDX,D0
 MOVE.L CACIND,A1
 JSR F_READ
 TST.L D0
 BMI LDC_106

 MOVE FHNDL,A0
 JSR F_CLOSE

 LEA TNAME,A0 ;LOAD TABLE INFO
 JSR ADDPATH
 MOVE.L A0,A4
 JSR F_OPEN
 TST D0
 BPL LDC_105
 LEA TNAME,A0
 JSR ADDPATH
 JSR DISK_ERR
 JMP QUIT2

LDC_105 MOVE FHNDL,A0
 MOVE.L #48*CACTBL,D0
 MOVE.L CACHET,A1
 JSR F_READ
 TST.L D0
 BMI LDC_106

 MOVE FHNDL,A0
 JSR F_CLOSE

 MOVE #CACTBL,D2
 MOVE.L CACHET,A1
 MOVE.L #48,D3
 JSR LDC_SCOR
 MOVE #CACFLD,D2
 MOVE.L CACHEF,A1
 MOVE.L #65,D3
 JSR LDC_SCOR
 MOVE #CACIDX,D2
 MOVE.L CACIND,A1
 MOVE.L #65,D3
 JSR LDC_SCOR

LDC_999 CLR D0
 RTS

LDC_106 MOVE #1,CACHE
 MOVE.L A4,A0
 JSR DISK_ERR
 CMP #-2,D0
 BEQ LDCACHE

 MOVE #-1,D0
 RTS

LDC_SCOR MOVE.L A1,A2
 JSR LDC_SC2
 MOVE.L A1,A2
 ADD.L #20,A2
 JSR LDC_SC2
 ADD.L D3,A1
 SUB #1,D2
 BNE LDC_SCOR
 RTS

LDC_SC2 MOVE #18,D0
LDC_200 TST.B (A2)
 BEQ LDC_201
 CMP.B #' ',(A2)
 BEQ LDC_201
 ADD #1,A2
 DBF D0,LDC_200
LDC_201 CLR.B (A2)
 RTS

TNAME DC.B 'TABLES.TBL',0
FLDNAME DC.B 'FIELDS.TBL',0
INDNAME DC.B 'INDEXES.TBL',0
 EVEN

************************************
* TEST FOR RELOAD OF CACHE BUFFERS *
************************************

CACHEUP MOVE.L #TABLENM,A0
 LEA CTNAME,A1
 JSR MMATCHER
 TST D0
 BPL CACHEYS
 LEA CFLDNAME,A1
 JSR MMATCHER
 TST D0
 BPL CACHEYS
 LEA CINDNAME,A1
 JSR MMATCHER
 TST D0
 BMI CACHENO
CACHEYS MOVE #1,CACHE
CACHENO RTS

CTNAME DC.B 'TABLES',0
CFLDNAME DC.B 'FIELDS',0
CINDNAME DC.B 'INDEXES',0
 EVEN

**********************************
* MOVE CURSOR RIGHT ONE POSITION *
* RETURNS D0 = -1 ON ERROR       *
**********************************

MOVERT ADD #1,CURSX
 CLR.L D0
 RTS

******************************
* CHECK FOR MATCHING STRINGS *
* A0 POINTS TO FIRST         *
* A1 POINTS TO SECOND        *
* D0 RETURNS MINUS IF NO     *
******************************

MATCHER CMP.L #0,A0
 BEQ MATBAD
 CMP.L #0,A1
 BEQ MATBAD

 MOVE.L A0,MHOLD1
 MOVE.L A1,MHOLD2

MAT1 TST.B (A0)
 BEQ MAT2
 MOVE.B (A0)+,D0
 CMP.B (A1)+,D0
 BEQ MAT1
 JMP MAT3

MAT2 TST.B (A1)
 BNE MAT3
 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
 CLR D0
 RTS

MAT3 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
MATBAD MOVE #-1,D0
 RTS

* CHECK FOR MATCH REGARDLESS OF CASE

MMATCHER CMP.L #0,A0
 BEQ MATBAD
 CMP.L #0,A1
 BEQ MATBAD

 MOVE.L A0,MHOLD1
 MOVE.L A1,MHOLD2

XMAT1 TST.B (A0)
 BEQ XMAT2
 MOVE.B (A0)+,D0
 CMP.B #'a',D0
 BCS XEM1
 CMP.B #'z'+1,D0
 BCC XEM1
 SUB.B #32,D0

XEM1 MOVE.B (A1)+,D1
 CMP.B #'a',D1
 BCS XEM2
 CMP.B #'z'+1,D1
 BCC XEM2
 SUB.B #32,D1
XEM2 CMP.B D0,D1
 BEQ XMAT1
 JMP XMAT3

XMAT2 TST.B (A1)
 BNE XMAT3
 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
 CLR D0
 RTS

XMAT3 MOVE.L MHOLD1,A0
 MOVE.L MHOLD2,A1
 JMP MATBAD

MHOLD1 DC.L 0
MHOLD2 DC.L 0

**************
* PARSE NAME *
**************

GETNAME MOVE #245,D7
 MOVE CURSX,FHOLDX

 LEA TABLENM,A1
 JSR FINDCHAR
 TST D0
 BMI GTN_ERROR

 MOVE #18,D4
 TST NAMEFLAG
 BEQ DOR_100
 MOVE #60,D4

DOR_100 JSR ED_CALC
 MOVE.B (A0),D0
 BEQ GTN_ERROR
 CMP.B #44,D0
 BEQ DOR_101
 CMP.B #' ',D0
 BEQ DOR_101
 CMP.B #';',D0
 BEQ DOR_101

 TST NAMEFLAG
 BNE DOR_102
 CMP.B #':',D0
 BEQ DOR_101

DOR_102 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI GTN_ERROR
 DBF D4,DOR_100

DOR_101 CLR.B (A1)
 CLR D0
 RTS
GTN_ERROR MOVE #-1,D0
 RTS

*******************************
* FORCE TABLENM TO UPPER CASE *
*******************************

UPPERLOWER MOVE #79,D0
 LEA TABLENM,A0
UC_100 MOVE.B (A0),D1
 CMP.B #'a',D1
 BLT UC_101
 CMP.B #'z',D1
 BGT UC_101
 SUB.B #32,D1
UC_101 MOVE.B D1,(A0)+
 DBF D0,UC_100
 RTS

*************************************
* FORCE VALUE IN D0 INTO UPPER CASE *
*************************************

UPPER CMP.B #'a',D0
 BLT UPPER2
 CMP.B #'z',D0
 BGT UPPER2
 SUB.B #32,D0
UPPER2 RTS

************************
* FIND VALUE AT CURSOR *
************************

FINDVAL JSR FINDCHAR
 CLR.L FVLDATA
 MOVE #4,FVCNT

FVL100 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B #48,D0
 BCS FVL101
 CMP.B #58,D0
 BCC FVL101

 MOVE.L FVLDATA,D1
 LSL.L #8,D1
 MOVE.L D1,FVLDATA
 MOVE.B D0,FVLDATA+3
 SUB.B #'0',FVLDATA+3

 JSR MOVERT
 TST D0
 BMI FVL101

 SUB #1,FVCNT
 BNE FVL100

FVL101 CLR.L D0
 CLR.L D1
 MOVE.B FVLDATA,D1
 MULU #1000,D1
 ADD D1,D0
 CLR.L D1
 MOVE.B FVLDATA+1,D1
 MULU #100,D1
 ADD D1,D0
 CLR.L D1
 MOVE.B FVLDATA+2,D1
 MULU #10,D1
 ADD D1,D0
 CLR.L D1
 MOVE.B FVLDATA+3,D1
 ADD D1,D0
 RTS

FVLDATA DC.L 0
FVCNT DC 0

***********************
* CALC BUFFER ADDRESS *
***********************

ED_CALC CLR.L D0
 MOVE CURSX,D0
 ADD.L EDMEM2,D0
 MOVE.L D0,A0
 RTS

***************************
* FIND THE NEXT CHARACTER *
*  RETURNS VALUE IN D0    *
***************************

FINDCHAR JSR ED_CALC
 CMP.B #' ',(A0)
 BEQ FC3

 TST.B (A0)
 BNE FDDONE
 MOVE #-1,D0
 RTS

FC3 JSR MOVERT
 TST D0
 BPL FINDCHAR

FDDONE CLR.L D0
 MOVE.B (A0),D0
 RTS

******************************
* FIND COMMAND WORD          *
* D3 RETURNS IDENTIFIED WORD *
* D3 = -1 UNKNOWN WORD       *
******************************

FINDWORD MOVE CURSX,FHOLDX

 JSR FINDCHAR
 TST D0
 BMI FWBAD

 LEA COMBUF,A1
 MOVE.L #11,D1
FW100 JSR ED_CALC
 MOVE.B (A0),D0
 CMP.B #'a',D0
 BCS FW_120
 CMP.B #'z'+1,D0
 BCC FW_120
 SUB.B #32,D0

FW_120 CMP.B #'$',D0
 BEQ FW102
FW101 CMP.B #'A',D0
 BCS FW103
 CMP.B #'Z'+1,D0
 BCC FW103
FW102 MOVE.B D0,(A1)+
 JSR MOVERT
 TST D0
 BMI FW103
 DBF D1,FW100

FW103 CLR.B (A1)

 CLR FWCOUNT
 LEA COMM1,A0
 LEA COMBUF,A1

FW104 JSR MMATCHER
 TST D0
 BPL FWGOOD

 ADD #1,FWCOUNT

FW105 TST.B (A0)+
 BNE FW105

 TST.B (A0)
 BNE FW104

FWBAD MOVE FHOLDX,CURSX
 MOVE #-1,D3
 RTS

FWGOOD CLR.L D3
 MOVE FWCOUNT,D3
 RTS

COMM1 DC.B 'CREATE',0 ;0
 DC.B 'MODIFY',0 ;1
 DC.B 'DEFINE',0 ;2
 DC.B 'DROP',0 ;3
 DC.B 'REORGANIZE',0 ;4
 DC.B 'SELECT',0 ;5
 DC.B 'ASSIGN',0 ;6
 DC.B 'INSERT',0 ;7
 DC.B 'DELETE',0 ;8
 DC.B 'UPDATE',0 ;9
 DC.B 'FORMAT',0 ;10
 DC.B 'PRINT',0 ;11
 DC.B 'TABLE',0 ;12
 DC.B 'INDEX',0 ;13
 DC.B 'VIEW',0 ;14
 DC.B 'CHAR',0 ;15
 DC.B 'INT',0 ;16
 DC.B 'DEC',0 ;17
 DC.B 'DATE',0 ;18
 DC.B 'SDATE',0 ;19
 DC.B 'EDATE',0 ;20
 DC.B 'JDATE',0 ;21
 DC.B 'LDATE',0 ;22
 DC.B 'INTO',0 ;23
 DC.B 'FROM',0 ;24
 DC.B 'SET',0 ;25
 DC.B 'WHERE',0 ;26
 DC.B 'AND',0 ;27
 DC.B 'OR',0 ;28
 DC.B 'NOT',0 ;29
 DC.B 'LIKE',0 ;30
 DC.B 'NOTLIKE',0 ;31
 DC.B 'AVG',0 ;32
 DC.B 'SUM',0 ;33
 DC.B 'MIN',0 ;34
 DC.B 'MAX',0 ;35
 DC.B 'COUNT',0 ;36
 DC.B 'NCOUNT',0 ;37
 DC.B 'TAB',0 ;38
 DC.B 'SPCL',0 ;39
 DC.B 'HEADER',0 ;40
 DC.B 'FOOTER',0 ;41
 DC.B 'PAGE',0 ;42
 DC.B 'LEFT',0 ;43
 DC.B 'RIGHT',0 ;44
 DC.B 'TOP',0 ;45
 DC.B 'BOTTOM',0 ;46
 DC.B 'SPACING',0 ;47
 DC.B 'WAIT',0 ;48
 DC.B 'LINE',0 ;49
 DC.B 'LENGTH',0 ;50
 DC.B 'OUTPUT',0 ;51
 DC.B 'TO',0 ;52
 DC.B 'USE',0 ;53
 DC.B 'FONT',0 ;54
 DC.B 'NEXT',0 ;55
 DC.B 'LAST',0 ;56
 DC.B 'ACTIVITY',0 ;57
 DC.B 'ON',0 ;58
 DC.B 'OFF',0 ;59
 DC.B 'USER$',0 ;60
 DC.B 'REPORT',0 ;61
 DC.B 'GOTO',0 ;62
 DC.B 'ONERR',0 ;63
 DC.B 'IF',0 ;64
 DC.B 'THEN',0 ;65
 DC.B 'RETURN',0 ;66
 DC.B 'RUN',0 ;67
 DC.B 'CLEAR',0 ;68
 DC.B 'ORDER',0 ;69
 DC.B 'BY',0 ;70
 DC.B 'LET',0 ;71
 DC.B 'CURRENT',0 ;72
 DC.B 'DATE$',0 ;73
 DC.B 'TIME$',0 ;74
 DC.B 'REM',0 ;75
 DC.B 'REMARK',0 ;76
 DC.B 'BELL',0 ;77
 DC.B 'TITLE',0 ;78
 DC.B 'APPEND',0 ;79
 DC.B 'CHECK',0 ;80
 DC.B 'EDIT',0 ;81
 DC.B 'BRUN',0 ;82
 DC.B 'SYSTEM',0 ;83
 DC.B 'GROUP',0 ;84
 DC.B 'BY',0 ;85
 DC.B 'SORT',0 ;86
 DC.B 'END',0 ;87
 DC.B 'A',0 ;88
 DC.B 'VARIABLE',0 ;89
 DC.B 'VARIABLES',0 ;90
 DC.B 'BREAK',0 ;91
 DC.B 'SHOW',0 ;92
 DC.B 'DESC',0 ;93
 DC.B 'NOCAPS',0 ;94
 DC.B 'PAUSE',0 ;95
 DC.B 'FORCE',0 ;96
 DC.B 'GEM',0 ;97
 DC.B 'PAGER',0 ;98
 DC.B 'COPY',0 ;99
 DC.B 'KILL',0 ;100
 DC.B 0
 EVEN

**************************
* CREATE AND OPEN FILE   *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_CREATE CLR -(A7)
 MOVE.L A0,-(A7)
 MOVE #60,-(A7)
 TRAP #1
 ADD #8,A7
 JMP ACTIVITY

**************************
* RENAME A FILE          *
* A0 NEW FILE NAME       *
* A1 OLD FILE NAME       *
* D0 RETURNS HANDLE      *
**************************

F_RENAME MOVE.L A0,-(A7)
 MOVE.L A1,-(A7)
 CLR -(A7)
 MOVE #86,-(A7)
 TRAP #1
 ADD.L #12,A7
 JMP ACTIVITY

**************************
* DELETE FILE            *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_DELETE MOVE.L A0,-(A7)
 MOVE #65,-(A7)
 TRAP #1
 ADD #6,A7
 JMP ACTIVITY

**************************
* SET DTA BUFFER ADRESS  *
* A0 POINTS TO BUFFER    *
**************************

F_SETDTA MOVE.L #DTA,-(A7)
 MOVE #26,-(A7)
 TRAP #1
 ADD.L #6,A7
 RTS

**************************
* FIND FIRST FILE DEF    *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_SFIRST CLR -(A7)
 MOVE.L A0,-(A7)
 MOVE #78,-(A7)
 TRAP #1
 ADD #8,A7
 JMP ACTIVITY

**************************
* OPEN DISK FILE         *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_OPEN MOVE #0,-(A7)
 MOVE.L A0,-(A7)
 MOVE #$3D,-(A7)
 TRAP #1
 ADD #8,A7
 JMP ACTIVITY

**************************
* OPEN DISK FILE (R/W)   *
* A0 POINTS TO FILE NAME *
* D0 RETURNS HANDLE      *
**************************

F_OPENRW MOVE #2,-(A7)
 MOVE.L A0,-(A7)
 MOVE #$3D,-(A7)
 TRAP #1
 ADD #8,A7
 JMP ACTIVITY

*************************
* MOVE TO START OF FILE *
* A0 = FILE HANDLE      *
*************************

F_START CLR -(A7)  ;F_seek
 MOVE A0,-(A7)
 CLR.L -(A7)
 MOVE #66,-(A7)
 TRAP #1
 ADD.L #10,A7
 JMP ACTIVITY

*************************
* SEEK FILE POINTER     *
* A0 = FILE HANDLE      *
* D0 = BYTE OFFSET      *
*************************

F_SEEK CLR -(A7)
 MOVE A0,-(A7)
 MOVE.L D0,-(A7)
 MOVE #66,-(A7)
 TRAP #1
 ADD.L #10,A7
 JMP ACTIVITY

*************************
* SEEK TO END OF FILE   *
* A0 = FILE HANDLE      *
* D0 = RETURN # OF BYTES*
*************************

F_END MOVE #2,-(A7)
 MOVE A0,-(A7)
 CLR.L -(A7)
 MOVE #66,-(A7)
 TRAP #1
 ADD.L #10,A7
 JMP ACTIVITY

*************************
* READ DISK FILE        *
* A0 = FILE HANDLE      *
* A1 = WHERE TO LOAD IT *
* D0 = NUMBER OF BYTES  *
*************************

F_READ MOVE.L A1,-(A7)
 MOVE.L D0,-(A7)
 MOVE A0,-(A7)
 MOVE #$3F,-(A7)
 TRAP #1
 ADD #12,A7
 JMP ACTIVITY

*************************
* WRITE DISK FILE       *
* A0 = FILE HANDLE      *
* A1 = BUFFER ADRESS    *
* D0 = NUMBER OF BYTES  *
*************************

F_WRITE MOVE.L A1,-(A7)
 MOVE.L D0,-(A7)
 MOVE A0,-(A7)
 MOVE #$40,-(A7)
 TRAP #1
 ADD #12,A7
 JMP ACTIVITY

*********************
* CLOSE DISK FILE   *
* A0 = FILE HANDLE  *
* D0 = ERROR CODE   *
*********************

F_CLOSE MOVE A0,-(A7)
 MOVE #$3E,-(A7)
 TRAP #1
 ADD #4,A7
 JMP ACTIVITY

**********************
* Show Disk Activity *
**********************

ACTIVITY TST ACTFLAG
 BEQ NOACT
 MOVEM.L D0-D3/A0-A2,-(A7)

 DC $A00A
 ADD #1,ACTNUM
 MOVE ACTNUM,D0
 AND.L #$7,D0
 MULU #74,D0
 ADD.L #ACTIMGS,D0
 MOVE.L D0,ACTVDI+4

 MOVE #111,CONTRL
 CLR CONTRL+2
 MOVE #37,CONTRL+6
 MOVE GRHANDLE,CONTRL+12

 MOVE.L #ACTVDI,D1
 MOVE.L #$73,D0
 TRAP #2
 DC $A009

 MOVEM.L (A7)+,D0-D3/A0-A2

NOACT RTS

ACTNUM DC 0
ACTFLAG DC 1

ACTVDI DC.L CONTRL,ACTIMGS,PTSIN,INTOUT,PTSOUT

ACTIMGS
 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63
 DC.B 255,31,255,255,252,134,132,141,12,154,28,180,52,232,108,208,212,161
 DC.B 164,195,68,134,132,141,12,154,28,180,52,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255
 DC.B 31,255,255,252,141,12,154,28,180,52,232,108,208,212,161,164,195,68
 DC.B 134,132,141,12,154,28,180,52,232,108,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 63,255,31,255,255,252,154,28,180,52,232,108,208,212,161,164,195,68
 DC.B 134,132,141,12,154,28,180,52,232,108,208,212,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 255,63,255,31,255,255,252,180,52,232,108,208,212,161,164,195,68
 DC.B 134,132,141,12,154,28,180,52,232,108,208,212,161,164,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 63,255,31,255,255,252,232,108,209,212,161,164,195,68,134,132,141,12
 DC.B 154,28,180,52,232,108,208,212,161,164,195,68,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 255,63,255,31,255,255,252,208,212,161,164,195,68,134,132,141,12
 DC.B 154,28,180,52,232,108,208,212,161,164,195,68,134,132,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 63,255,31,255,255,252,163,164,195,68,134,132,141,12,154,28,180,52
 DC.B 232,108,208,212,161,164,195,68,134,132,141,12,255,252,0,0,0,0

 DC.B 0,7,0,8,0,2,0,0,0,1,255,252,255,254,255,255,255,255,255,255,255
 DC.B 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 DC.B 255,63,255,31,255,255,252,195,68,134,132,141,12,154,28,180,52,232
 DC.B 108,208,212,161,164,195,68,134,132,141,12,154,28,255,252,0,0,0,0

************************************
* CONVERT THE VALUE IN D0 TO ASCII *
* A3 POINTS TO ASCII BUFFER        *
************************************

CONV2DEC AND.L #$FFFF,D0
 DIVU #1000,D0
 MOVE.L D0,D1
 AND.L #15,D0
 ADD.B #'0',D0
 MOVE.B D0,(A3)

 SWAP D1
 AND.L #$FFFF,D1
 DIVU #100,D1
 MOVE.L D1,D0
 AND.L #15,D1
 ADD.B #'0',D1
 MOVE.B D1,1(A3)

 SWAP D0
 AND.L #$FFFF,D0
 DIVU #10,D0
 MOVE.L D0,D1
 AND.L #15,D0
 ADD.B #'0',D0
 MOVE.B D0,2(A3)

 SWAP D1
 AND.L #$FFFF,D1
 AND.L #15,D1
 ADD.B #'0',D1
 MOVE.B D1,3(A3)
 RTS

*-----------------GET DATE-----------------

CDATE MOVE #42,-(A7)
 TRAP #1
 ADD #2,A7

 LEA TIMEDATE,A0
 MOVE D0,D1
 LSR.L #5,D1
 AND.L #$0F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #'/',(A0)+

 MOVE D0,D1
 AND.L #$1F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #'/',(A0)+

 MOVE D0,D1
 LSR.L #8,D1
 LSR.L #1,D1
 AND.L #$7F,D1
 ADD #80,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #' ',(A0)+
 CLR.B (A0)

 CMP.B #'D',EURO_DATE
 BNE CDATE_DONE

 MOVE.B TIMEDATE,D0
 MOVE.B TIMEDATE+1,D1
 MOVE.B TIMEDATE+3,TIMEDATE
 MOVE.B TIMEDATE+4,TIMEDATE+1
 MOVE.B D0,TIMEDATE+3
 MOVE.B D1,TIMEDATE+4

CDATE_DONE RTS

*-----------------GET TIME-----------------

CTIME MOVE #44,-(A7)
 TRAP #1
 ADD #2,A7

 LEA TIMEDATE,A0
 MOVE D0,D1
 LSR.L #8,D1
 LSR.L #3,D1
 AND.L #$1F,D1

 MOVE.B #'A',D2
 TST D1
 BNE CTIME4
 MOVE #12,D1
 JMP CTIME2

CTIME4 CMP #13,D1
 BCS CTIME2
 MOVE.B #'P',D2
 SUB #12,D1

CTIME2 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 MOVE.B #':',(A0)+

 MOVE D0,D1
 LSR.L #5,D1
 AND.L #$3F,D1
 DIVU #10,D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+
 SWAP D1
 ADD.B #'0',D1
 MOVE.B D1,(A0)+

 MOVE.B #' ',(A0)+
 MOVE.B D2,(A0)+
 MOVE.B #'M',(A0)+
 MOVE.B #' ',(A0)+
 CLR.B (A0)
 RTS

**************************************
* CONVERT 4 DIGIT ASCII TO HEX VALUE *
* A0 POINTS TO ASCII D1 RETURNS VAL  *
**************************************

CVAL CLR.L D0
 CLR.L D1
 MOVE.B (A0)+,D0
 SUB.B #'0',D0
 MULU #1000,D0
 ADD D0,D1
 CLR.L D0
 MOVE.B (A0)+,D0
 SUB.B #'0',D0
 MULU #100,D0
 ADD D0,D1
 CLR.L D0
 MOVE.B (A0)+,D0
 SUB.B #'0',D0
 MULU #10,D0
 ADD D0,D1
 CLR.L D0
 MOVE.B (A0)+,D0
 SUB.B #'0',D0
 ADD D0,D1
 AND.L #$FFFF,D1
 RTS

*------------DISPLAY CONTENTS OF STRUCTURE------------

DISPLAY MOVE.L A0,DIS_ADR
 MOVE D0,DIS_CNT
 TST D0
 BEQ DISPDONE
 CLR COUNT

 LEA DIS0,A0
 JSR STRING
 LEA DIS9,A0
 JSR STRING

DISLOOP CLR.L D0
 MOVE COUNT,D0
 MULU #EV_FSZ,D0
 ADD.L DIS_ADR,D0
 MOVE.L D0,A4

 LEA DIS1,A0
 JSR STRING
 MOVE.L FNAME(A4),A0
 CMP.L #0,A0
 BEQ DISL2
 JSR STRING
DISL2 LEA DIS9,A0
 JSR STRING

 LEA DIS2,A0
 JSR STRING
 MOVE.L FTABL(A4),A0
 CMP.L #0,A0
 BEQ DISL3
 JSR STRING
DISL3 LEA DIS9,A0
 JSR STRING

 LEA DIS3,A0
 JSR STRING
 MOVE.L FVALU(A4),A0
 CMP.L #0,A0
 BEQ DISL4
 JSR STRING
DISL4 LEA DIS9,A0
 JSR STRING

 LEA DIS5,A0
 JSR STRING
 MOVE.L FVAL2(A4),A0
 CMP.L #0,A0
 BEQ DISL6
 JSR STRING
DISL6 LEA DIS9,A0
 JSR STRING

 LEA DISL,A0
 JSR STRING
 MOVE.L FINDX(A4),A0
 CMP.L #0,A0
 BEQ DISL60
 JSR STRING
DISL60 LEA DIS9,A0
 JSR STRING

 LEA DISF,A0
 JSR STRING
 MOVE.L FIFIL(A4),A0
 CMP.L #0,A0
 BEQ DISL61
 JSR STRING
DISL61 LEA DIS9,A0
 JSR STRING

 LEA DIS7,A0
 JSR STRING

 LEA DIS8,A3
 MOVE FTYPE(A4),D0
 JSR DISLCV
 MOVE FDISP(A4),D0
 JSR DISLCV
 MOVE FSIZE(A4),D0
 JSR DISLCV
 MOVE FEXTR(A4),D0
 JSR DISLCV
 MOVE FCONN(A4),D0
 JSR DISLCV
 MOVE FPARN(A4),D0
 JSR DISLCV
 MOVE FAGGR(A4),D0
 JSR DISLCV
 MOVE FPOSI(A4),D0
 JSR DISLCV
 MOVE FCALC(A4),D0
 JSR DISLCV
 MOVE FBOOL(A4),D0
 JSR DISLCV
 MOVE FRECN(A4),D0
 JSR DISLCV
 MOVE FOBJN(A4),D0
 JSR DISLCV
 LEA DIS8,A0
 JSR STRING

 LEA DIS9,A0
 JSR STRING

 ADD #1,COUNT
 MOVE COUNT,D0
 CMP DIS_CNT,D0
 BNE DISLOOP
 LEA DIS9,A0
 JMP STRING

DISLCV MOVE D0,D1
 LSR #4,D1
 LSR #4,D1
 LSR #4,D1
 AND.L #15,D1
 JSR DISLCV2

 MOVE D0,D1
 LSR #4,D1
 LSR #4,D1
 AND.L #15,D1
 JSR DISLCV2

 MOVE D0,D1
 LSR #4,D1
 AND.L #15,D1
 JSR DISLCV2

 MOVE D0,D1
 AND.L #15,D1
 JSR DISLCV2

 ADD #2,A3
DISPDONE RTS

DISLCV2 CMP.B #10,D1
 BCC PT1
 ADD.B #'0',D1
 JMP PT2
PT1 SUB.B #10,D1
 ADD.B #'A',D1
PT2 MOVE.B D1,(A3)+
 RTS

DIS_ADR DC.L 0
DIS_CNT DC 0

DIS0 DC.B 'Evaluated Expression Structure',13,10,0
DIS1 DC.B 'FNAME=',0
DIS2 DC.B 'FTABL=',0
DIS3 DC.B 'FVALU=',0
DIS5 DC.B 'FVAL2=',0
DISL DC.B 'FINDX=',0
DISF DC.B 'FIFIL=',0
DIS7 DC.B 'FTYPE FDISP FSIZE FEXTR FCONN FPARN FAGGR FPOSI FCALC '
     DC.B 'FBOOL FRECN FOBJN'
     DC.B 13,10,0
DIS8 DC.B '                                                      '
     DC.B '                  '
     DC.B 13,10,0
DIS10 DC.B 'PCON  PTYP  PCOD  PWID  PWRP   ',13,10,0
DIS9 DC.B 13,10,0
 EVEN

G_TREE DC.L STRINGS,STRINGADR
 DC.L ABOUTDLG,ABOUTDI
 DC.L DISKERR,ERRDLG
 DC.L SAVEDLG,SAVEADR
 DC.L PSTATUS,PRINTREE
 DC.L PAGER,PAGEADR
 DC.L SUREDLG,SUREADR
 DC.L SAVEFRM,FORMADR
 DC.L BADFORM,BADADR
 DC.L CONVERT,CONVADR
 DC.L MONO,MONOADR
 DC.L IOERRS,IOERRADR
 DC.L RUNTIME,RUNADR
 DC.L -1
 DC.L SQLCLR,SQLCLRADR
 DC.L NCMES,NCMESADR
 DC.L NMEMMES,NMEMMESADR
 DC.L MODMES,MODMESADR
 DC.L -1

*******************************************
*                BSS AREA                 *
*******************************************

 BSS

*-------------GEM PARAMETER BLOCKS--------------

GEMSTART DS 1
CONTRL DS 1
OPCODE EQU CONTRL
SINTIN DS 1
SINTOUT DS 1
SADDRIN DS 1
SADDROUT DS.L 5
GLOBAL DS 1
APCOUNT DS 1
APID DS 1
APPRIVATE DS.L 1
APPTREE DS.L 1
AP1RESV DS.L 1
AP2RESV DS.L 1
AP3RESV DS.L 1
AP4RESV DS.L 1
INTIN DS.B 512
PTSIN DS.L 32
INTOUT DS.L 32
PTSOUT DS.L 32
ADDRIN DS.L 32
ADDROUT DS.L 32
GEMEND DS 1

GRHANDLE DS 1
DRHANDLE DS 1

*------------NON GEM VARIABLES-----------

CURSX DS 1  ;Cursor & Error handling vars
ERRORX DS 1
STATUS DS 1
ERRORNUM DS 1
ERRADR DS.L 1
ONERRX DS 1
HELPER DS 1
HELPER2 DS 1

SCREEN DS.L 1

NAMEFLAG DS 1
TABLENM DS.B 80  ;Table name storage
TABLENM2 DS.B 80
 EVEN

DTA DS.B 44 ;Disk transfer storage area
 EVEN

REC_CNT DS 1 ;# of records to read
REC_FND DS 1 ;Records found
REC_CURNT DS 1 ;Current record flag

*-------------BUFFER POINTERS-------------
STR_SEL DS.L 1 ;Fields
BUF_SEL DS.L 1
BUF_SEL2 DS.L 1

STR_AGG DS.L 1 ;Aggregates
BUF_AGG DS.L 1
BUF_AGG2 DS.L 1

STR_TBL DS.L 1 ;Tables
BUF_TBL DS.L 1
BUF_TBL2 DS.L 1

STR_WHERE DS.L 1 ;Where
BUF_WHERE DS.L 1
BUF_W2 DS.L 1

STR_ORD DS.L 1 ;Order by
BUF_ORD DS.L 1

STR_GRP DS.L 1 ;Group by
BUF_GRP DS.L 1

STR_REOR DS.L 1 ;Reorganize
STR_INDX DS.L 1

STR_VAR DS.L 1 ;Variables
BUF_VAR DS.L 1
BUF_VAR2 DS.L 1

STR_FRMT DS.L 1 ;Format
BUF_FRMT DS.L 1

STR_LBL DS.L 1 ;Label storage
BUF_LBL DS.L 1

*--------------Table Buffers---------------
INDXFLAG DS 1
SET_DEFLT DS.L 1
TBLBUFRS DS.B BUFSIZE
 EVEN

*---------------PATH VARIABLES-------------
FHANDLE DS 1
FHANDLE2 DS 1
PTHNM DS.B 40
PATHNAME DS.B 40
 EVEN

*-----------QUICK SORT VARIABLES----------
Q_ORD DS.L 1
Q_TBL DS.L 1
Q_TABLE DS.L 1
Q_PARAM DS.B MAX_ORD*QSZ
 EVEN

Q_NAME DS.L 1 ;Table name pointer
Q_FLAG DS 1 ;Flag
Q_INDEX DS 1 ;Table is indexed
Q_HEAP DS.L 1  ;Sorting buffer
Q_SIZE DS.L 1  ;Size of buffer
Q_RECSZ DS 1   ;Record size
Q_TTLRECS DS 1 ;Total # of records in a table
Q_MAXREC DS.L 1 ;Maximum number of records that will fit into Q_HEAP
Q_RECS DS 1 ;# of records in memory
Q_INMEM DS 1 ;In memory sort flag
Q_COUNT DS 1 ;Counter
Q_BLOCK DS 1 ;Block counter
Q_BLOCK2 DS 1
Q_EVEN DS 1 ;Modified record size
Q_HANDLE DS 8 ;File handles
Q_FDONE DS 8 ;File data done flags
Q_FTEMP DS 1 ;Temporary file handle
Q_SEQ DS.L 8 ;Sequence storage
Q_TABL DS.B 50 ;File name
Q_PATH DS.B 40 ;Temporary file path
Q_ERRNM DS.L 1 ;Temporary file pointer
Q_POINT DS.L 1 ;Temporary pointer

Q_I DS 1
Q_J DS 1
Q_A DS 1

COMPA0 DS.L 1 ;Storage
COMPA1 DS.L 1

*------Expression Parser Variables-------
GE_STRCT DS.L 1 ;Structure Storage
GE_BUFF DS.L 1  ;Variable Storage
GE_PARN DS 1 ;Parenthesis counter
GE_TERM DS 1 ;String termination char
GE_FLAG DS 1 ;Termination flag
GE_COUNT DS 1 ;Counter
GE_CNT2 DS 1 ;Secondary Counter
GE_CNT3 DS 1
GE_PMAX DS 1 ;Max parenthesis storage
GE_MAX DS 1 ;Maxiumum structure
USERFLAG DS 1
 EVEN

*---------Cache Memory Variables---------
CACHET DS.L 1 ;Pointer to table info
CACHEF DS.L 1 ;Field info
CACIND DS.L 1 ;Index info
CACHE DS 1 ;Flag
FHNDL DS 8 ;File handles

*---------Find Word Variables----------
COMBUF DS.B 20
FHOLDX DS 1
FWCOUNT DS 1

*------Information Finder Variables-------
SE_STRCT DS.L 1
SE_COUNT DS 1 ;Counter
SE_CNT2 DS 1  ;Secondary counter
SE_INDEX DS 1 ;Index flag
SE_MAX DS 1   ;Maximum structure
SE_WHERE DS.L 1 ;Pointers
SE_TBL DS.L 1
SE_SEL DS.L 1
SE_WCNT DS 1
SE_TBLCNT DS 1 ;# of tables
SE_BUFF DS.L 1 ;Buffer
SE_FLAG DS 1 ;Index flag
SE_LEVEL DS 1 ;Table & Where flag

*---------Expression Evaluator Variables---------
EURO_DATE DS 1 ;European dates being used if 'D'
EX_STRCT DS.L 1
EX_HOLD DS.L 1
EX_COUNT DS 1
EX_MAX DS 1
EX_PAREN DS 1
EX_PRN2 DS 1
EX_PRN3 DS 1
EX_MONTH DS 1
EX_DAY DS 1
EX_YEAR DS 1
EX_DATA DS.L 1
EX_LKFLG DS 1
EX_FLAG DS 1
CALCA DS.B 32 ;Math processor variables
CALCB DS.B 32
CALCC DS.B 32
CALCD DS.B 32
 EVEN

*------------Select Variables-------------
S_TBLCNT DS 1 ;# of tables defined
S_FLDCNT DS 1 ;# of fields defined
S_PAREN1 DS 1 ;Parenthesis defined
S_PAREN2 DS 1
S_TABLE DS.L 1 ;Table pointer
S_WCOUNT DS 1 ;Where expr
S_WPAREN DS 1 ;Parenthesis
S_OCOUNT DS 1 ;Order by stuff
S_OPAREN DS 1
S_FIRST DS 1 ;Load first flag
FRMTNBR DS 1 ;Use format number

*------------Reorganize Variables-------------
R_TABLE DS.L 1 ;Table name
R_SIZE DS 1 ;Record size
R_SIZE2 DS 1 ;Index record size
R_FILE DS.B 40 ;Table file name
R_INDEX DS.B 40 ;Index file name
R_TFILE DS.B 40 ;Temporary file name
R_TIFILE DS.B 40 ;Index temporary file name
R_RECS DS 1 ;Record count
R_TTLRECS DS 1 ;Total records in table
R_MAXREC DS 1 ;Maximum # of records that will fit into memory
R_FINRECS DS 1 ;Destination record count
R_DESTPTR DS.L 2 ;Table destination pointer
R_INDXPTR DS.L 2 ;Index destination pointer
R_SOURCE DS.L 1 ;Source pointer
R_INDCNT DS 1 ;# of indexed fields
R_FLDCNT DS 1 ;# of fields

*-----------Record Loader Variables------------
GR_STRCT DS.L 1 ;Table structure
GR_TBLCNT DS 1 ;# of tables
GR_FLAG DS 1 ;Read table only flag
GR_FLAG2 DS 1 ;Skip to next level
GR_FLAG3 DS 1 ;Skip to next level
GR_FIRST DS 1 ;First record flag
GR_REC DS 1 ;No update pointer flag
GR_MEM DS.L 1 ;Memory pointer
GR_HANDLE DS.L 1 ;File handle
GR_SIZE DS.L 1 ;Record size

*----------Append To Variables----------
AP_FLAG DS 1 ;Flag
AP_STR DS.L 1 ;Table structure pointer
AP_NAME DS.B 80 ;Destination table name
 EVEN

*-----------Create/Delete Variables------------
CR_NAME DS.B 30 ;Table name
CR_PATH DS.B 30 ;Path name
CR_FILE DS.B 60 ;File name
 EVEN

*--------------Variable Variables------------
VAR_COUNT DS 1 ;# of vars defined

*--------------Finalize Variables------------
FESRCSZ DS 1 ;Source size
FESRCEX DS 1 ;Source extr
FDATE DS.B 10 ;Date field storage

*--------------Label Definition Variables------------
FL_COUNT DS 1
FL_ADR DS.L 1

*--------------Aggregate Variables------------
DA_FIRST DS 1 ;Flag
DA_ADR DS.L 1

*--------------Output Variables------------
DEVICE DS 1  ;Output device
OUTDEVICE DS.B 100  ;Output file name
 EVEN

SETPAGE DS 1  ;Page #
SETLEFT DS 1  ;Left margin
SETRIGHT DS 1 ;Right margin
SETTOP DS 1   ;Top margin
SETBOT DS 1   ;Bottom margin
SETSPC DS 1   ;Line spacing
SETWAIT DS 1  ;Page wait
SETLINE DS 1  ;Current line #
SETLNGTH DS 1 ;Page length
SETBLKRT DS 1 ;Not used
SETBOLD DS 1  ;Bold flag
SETELONG DS 1 ;Elongate flag
SETUNDER DS 1 ;Underline flag
SETFONT DS 1  ;Font number

PBUFFER DS.L 1 ;Format structures
PBUF DS.L 1  ;Format string storage
PGARBAGE DS.L 1 ;Garbage collection
PGARBUF DS.L 1
PBUFPTR DS.L 1 ;Buffer pointer
PRNTBUFF DS.L 1 ;Page buffer location
PF_INTVAR DS 1 ;Flag

DOLLARS DS.B 10 ;Checkwriting function
CENTS DS 1
RESAMNT DS.B 128
 EVEN

PAGEICON DS 1  ;Page icon hide flag
PCOUNT DS 1 ;# of format records
PFIRST DS 1 ;Flag
PFIRST2 DS 1 ;Flag
PDNFLAG DS 1
PDNCNT DS 1
HFTYPE DS 1 ;Temporary
HFTERM DS 1
HFTEMP DS 1
PXPOS DS 1 ;Print cursor location
PYPOS DS 1
SENDHLD DS 1 ;Storage
PFLPTR DS.L 1 ;Pointer
OUTFILE DS 1 ;File handle
LTEMP DS 1

TIMEDATE DS.B 24  ;Holds time/date image
PGNUMBUF DS.B 12  ;Holds page number image
 EVEN

**************************************************************
*             TextEdit Library BSS variables                 *
**************************************************************

SCRAP DS.L 1 ;SCRAP BUFFER LOCATION
SCRAPSZ DS 1 ;SCRAP BUFFER SIZE
TEMPADR DS.L 1
TEMPADR2 DS.L 1
TECOUNT DS 1
TEMPHOLD DS 1
TEMPKEY DS 1
TEMPKEY2 DS 1
TEXHOLD DS 1
TEYHOLD DS 1
TEANCHOR DS 1
TEADR DS.L 1
TEFLAG DS 1
TESTART DS 1
TESTART2 DS 1
TEEOF DS 1
 EVEN

**************************************************************
*          End of TextEdit Library BSS Variables             *
**************************************************************

*------------NON SQL VARIABLES-----------

MENUADR DS.L 1  ;MENUBAR TREE ADDRESS
PAGEADR DS.L 1  ;PAGE TOKEN
SCROLL DS.L 1   ;TEdit Scroll buffer

INFOMES DS.B 80
 EVEN

WINDFLAG DS 1
SHOWFLAG DS 1
SHOWESC DS 1

FORMDIAL DS.L 1
FORMEDIT DS 1
SAVERTRN DS 1
BUTADR DS.L 1

DIALX DS 1
DIALY DS 1
DIALW DS 1
DIALH DS 1

HOLDX DS 1
HOLDY DS 1
HOLDW DS 1
HOLDH DS 1

SQNCTYPE DS 1

OBJCNT DS 1
OBJADR DS.L 1
OBJADR2 DS.L 1
OBJADR3 DS.L 1
OBJNUM DS 1
OBJTYP DS 1
COUNT DS 1
COUNT2 DS 1
FINDOBJ DS 1
CUTCOUNT DS 1
CUT2 DS 1
CUTADR DS.L 1

TREKADR DS.L 1
TREKCNT DS 1
TREKCNT2 DS 1

TECTEMP DS 1
TECTEMP2 DS 1
TECTEMP3 DS 1
LINENUM DS 1
BOTNUM DS 1
VIEWNUM DS 1
TEYLOC DS 1
VIEWCNT DS 1
OLDSLID DS 1
PAGENUM DS 1
PRINTNUM DS 1
TIMEOUT DS.L 1

SAVEFLAG DS 1
CLIPFLAG DS 1
SAVELEN DS.L 1
NAMEBUFF DS.L 1
TEMP DS.L 1
TEMP2 DS 1

CLICK2 DS 1
CLICK4 DS 1
CLICK12 DS 1

COLOR1 DS 1
COLOR2 DS 1
FILLPAT DS 1
LINEWID DS 1
TXTSIZE DS 1
TXTFX DS 1

OBJX DS 1
OBJY DS 1
OBJW DS 1
OBJH DS 1

 DS.L 3

GRMODE DS 1  ;GRAPHIC MODE

INPATH DS.B 128 ;F_sel path
INFILE DS.B 128 ;F_sel filename
SAVEFILE DS.B 128
PRCDFILE DS.B 128 ;Procedure Filename
PROGFILE DS.B 128 ;Program filename
FORMFILE DS.B 128 ;Form Filename
 EVEN

CUTBUFF DS.L 1 ;Cut/Copy/Past buffer
CUTFLAG DS 1 ;Cut function flag
LDFLAG DS 1
SVFLAG DS 1
OBJMEM DS.L 1 ;Object memory pointer
OBJICN DS.L 1 ;Icon buffer
ICONUM DS 1  ;Icon counter
OBJTER DS 1  ;TERec counter
TEMEM DS.L 1 ;TERec text buffer
 EVEN

DMORG DS 4  ;Drawing marker

LOADBUFF DS.L 1  ;Disk load buffer
LOADSIZE DS.L 1  ;Size of buffer

MFDB DS 10 ;Memory form definition block
MFDB2 DS 10

WINDX DS 1
WINDY DS 1
WINDW DS 1
WINDH DS 1
WIHANDLE DS 1

ABOUTDI DS.L 1
LANDTREE DS.L 1
ERRDLG DS.L 1
SAVEADR DS.L 1
FORMADR DS.L 1
BADADR DS.L 1
CONVADR DS.L 1
MONOADR DS.L 1
IOERRADR DS.L 1
STRINGADR DS.L 1
PRINTREE DS.L 1
SUREADR DS.L 1
SQLCLRADR DS.L 1
NCMESADR DS.L 1
MODMESADR DS.L 1
NMEMMESADR DS.L 1
NOPATHADR DS.L 1
RUNADR DS.L 1

INTLCODE DS 1
OLDINTL DS 1
WRAPFLAG DS 1
SCORFLAG DS 1
CARETFLG DS 1
SHRINK DS 4

OBJNAME DS.B 80

DRIVERS DS.B 128  ;Printer driver variables
TEMPDRIV DS.B 128
DRIVNAME DS.B 128
PRNTFILE DS.B 128
 EVEN

OBRECS DS.B OBRECSZ*MAXOB ;Object records
 EVEN

TERECS DS.B TERECSIZE*MAXEDIT ;TERecs
 DS.B 512
 EVEN
EDSIZE DS.L 1
EDMEM DS.L 1
EDMEM2 DS.L 1
TEREC2 DS.B TERECSIZE
 EVEN

WORDBRK DS 1
OUTFLAG DS 1  ;Object draw flag
SHIFTED DS 1  ;Shift key press
BUTNW DS 1
BUTNH DS 1
BUTNSEL DS 1
KEYFLAG DS 1
ACTIVE DS 1
ACTVAR DS 1
ACTVAR2 DS 1

TAILFLAG DS 1
COMDBUFF DS.B 128
COMTAIL DS.B 128
FILENAME DS.B 128
FORMNAME DS.B 64
 EVEN

*------Resource file Equates------

ABOUTDLG = 0;  REM ---TREE---
MABTCONT = 2;  REM ---OBJECT in TREE #0---
SAVEDLG = 1;  REM ---TREE---
SAVENAME = 2;  REM ---OBJECT in TREE #1---
DISKERR = 2;  REM ---TREE---
ERRETRY = 6;  REM ---OBJECT in TREE #2---
ERCANCEL = 7;  REM ---OBJECT in TREE #2---
ERMES = 8;  REM ---OBJECT in TREE #2---
SVCANCEL = 6;  REM ---OBJECT in TREE #1---
SVOK = 7;  REM ---OBJECT in TREE #1---
ERMES2 = 9;  REM ---OBJECT in TREE #2---
PSTATUS = 3;  REM ---TREE---
PCANCEL = 6;  REM ---OBJECT in TREE #3---
POK = 7;  REM ---OBJECT in TREE #3---
PAGER = 4;  REM ---TREE---
PGONE = 1;  REM ---OBJECT in TREE #4---
PGTWO = 2;  REM ---OBJECT in TREE #4---
PGTHREE = 3;  REM ---OBJECT in TREE #4---
PGFOUR = 4;  REM ---OBJECT in TREE #4---
SUREDLG = 5;  REM ---TREE---
SUREYES = 3;  REM ---OBJECT in TREE #5---
SURENO = 4;  REM ---OBJECT in TREE #5---
SURECNL = 5;  REM ---OBJECT in TREE #5---
BADFORM = 6;  REM ---TREE---
BDCNCL = 5;  REM ---OBJECT in TREE #6---
CONVERT = 7;  REM ---TREE---
CONVYES = 6;  REM ---OBJECT in TREE #7---
SAVEFRM = 8;  REM ---TREE---
SVFROK = 4;  REM ---OBJECT in TREE #8---
SVFRCNCL = 3;  REM ---OBJECT in TREE #8---
SVFRNAME = 1;  REM ---OBJECT in TREE #8---
ICON2 = 4;  REM ---OBJECT in TREE #2---
ICON3 = 1;  REM ---OBJECT in TREE #3---
ICON4 = 1;  REM ---OBJECT in TREE #7---
ICON5 = 2;  REM ---OBJECT in TREE #8---
ICON6 = 1;  REM ---OBJECT in TREE #6---
MONO = 9;  REM ---TREE---
MOBBOX2 = 1;  REM ---OBJECT in TREE #9---
MCIRCLE = 2;  REM ---OBJECT in TREE #9---
MOBICON2 = 3;  REM ---OBJECT in TREE #9---
MICON2 = 4;  REM ---OBJECT in TREE #9---
MICON3 = 5;  REM ---OBJECT in TREE #9---
MICON46 = 6;  REM ---OBJECT in TREE #9---
MICON5 = 7;  REM ---OBJECT in TREE #9---
MICON7 = 8;  REM ---OBJECT in TREE #9---
MICON1 = 9;  REM ---OBJECT in TREE #9---
MENUBAR = 10;  REM ---TREE---
IABOUT = 10;  REM ---OBJECT in TREE #10---
IDESK = 3;  REM ---OBJECT in TREE #10---
IFILE = 4;  REM ---OBJECT in TREE #10---
IPRINTER = 6;  REM ---OBJECT in TREE #10---
ITRANSFR = 7;  REM ---OBJECT in TREE #10---
IQUIT = 19;  REM ---OBJECT in TREE #10---
SELPRNTR = 25;  REM ---OBJECT in TREE #10---
PRNTR = 27;  REM ---OBJECT in TREE #10---
USA = 29;  REM ---OBJECT in TREE #10---
ENGLAND = 30;  REM ---OBJECT in TREE #10---
GERMANY = 31;  REM ---OBJECT in TREE #10---
DENMARK = 32;  REM ---OBJECT in TREE #10---
FRANCE = 33;  REM ---OBJECT in TREE #10---
SWEDEN = 34;  REM ---OBJECT in TREE #10---
ITALY = 35;  REM ---OBJECT in TREE #10---
SPAIN = 36;  REM ---OBJECT in TREE #10---
JAPAN = 37;  REM ---OBJECT in TREE #10---
IEDIT = 5;  REM ---OBJECT in TREE #10---
ICUT = 21;  REM ---OBJECT in TREE #10---
ICOPY = 22;  REM ---OBJECT in TREE #10---
IPASTE = 23;  REM ---OBJECT in TREE #10---
STRINGS = 11;  REM ---TREE---
ROBJNAM = 1;  REM ---OBJECT in TREE #11---
PROCNAME = 3;  REM ---OBJECT in TREE #11---
SHOWNAME = 4;  REM ---OBJECT in TREE #11---
PROCMES1 = 5;  REM ---OBJECT in TREE #11---
PROCMES2 = 6;  REM ---OBJECT in TREE #11---
ERRORMES = 7;  REM ---OBJECT in TREE #11---
ERRMES2 = 8;  REM ---OBJECT in TREE #11---
DTSDEF = 9;  REM ---OBJECT in TREE #11---
LDATES = 21;  REM ---OBJECT in TREE #11---
PRESSIT = 33;  REM ---OBJECT in TREE #11---
IOERRS = 12;  REM ---TREE---
IOERR1 = 1;  REM ---OBJECT in TREE #12---
IOERR2 = 18;  REM ---OBJECT in TREE #12---
IOERR3 = 27;  REM ---OBJECT in TREE #12---
IOERR4 = 28;  REM ---OBJECT in TREE #12---
IOERR5 = 29;  REM ---OBJECT in TREE #12---
IOERR6 = 33;  REM ---OBJECT in TREE #12---
SQLCLR = 0;  REM ---STRING---
NCMES = 1;  REM ---STRING---
NMEMMES = 2;  REM ---STRING---
MODMES = 3;  REM ---STRING---
PRNAMZ = 2;  REM ---OBJECT in TREE #11---
FLDMESB = 34;  REM ---OBJECT in TREE #11---
FLDMESC = 35;  REM ---OBJECT in TREE #11---
FLDMESX = 36;  REM ---OBJECT in TREE #11---
RUNTIME = 13;  REM ---TREE---
RUNNAME = 1;  REM ---OBJECT in TREE #13---
OPT1 = 39;  REM ---OBJECT in TREE #10---
OPT2 = 40;  REM ---OBJECT in TREE #10---
OPT3 = 41;  REM ---OBJECT in TREE #10---
OPT4 = 42;  REM ---OBJECT in TREE #10---
OPT5 = 43;  REM ---OBJECT in TREE #10---
OPT6 = 44;  REM ---OBJECT in TREE #10---
OPT7 = 45;  REM ---OBJECT in TREE #10---
OPT8 = 46;  REM ---OBJECT in TREE #10---
OPT9 = 47;  REM ---OBJECT in TREE #10---
OPT10 = 48;  REM ---OBJECT in TREE #10---
OPT11 = 49;  REM ---OBJECT in TREE #10---
OPT12 = 50;  REM ---OBJECT in TREE #10---
OPT13 = 51;  REM ---OBJECT in TREE #10---
OPT14 = 52;  REM ---OBJECT in TREE #10---
OPT15 = 53;  REM ---OBJECT in TREE #10---

 END
