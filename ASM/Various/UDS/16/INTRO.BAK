***************************************************************************
*		Background dist by OB of Anatomica 23/8 1992		  *
***************************************************************************

	jsr	setsuper
	jsr	setscreen
	jsr	prerotate
	jsr	prescroll

	jsr	music

*	-------> F„rg interuptet
	move.w	#37,-(sp)
	trap	#14
	addq.l	#2,sp

	move.l	#save,a0
	move.b	$fffa1b,(a0)+
	move.b	$fffa09,(a0)+
	move.l	$120,(a0)+
	move.b	$fffa07,(a0)+
	move.b	$fffa13,(a0)+
	move.b	$fffa21,(a0)+
	move.b	$fffa1b,(a0)+

	clr.b	$fffa1b
	and.b	#$df,$fffa09
	move.l	#rast5,$120
	bset	#0,$fffa07
	bset	#0,$fffa13
	move.b	#0,$fffa21
	move.b	#8,$fffa1b

	clr.w	d7
	move.l	#rasters,a4
	move.w	(a4)+,$ff8242

	move.l	$70.w,oldvbi
	move.l	#newvbi,$70.w

	move.l	#bild+34,a0
	move.l	#$30000,a1
	move.w	#8000,d0
copy:	move.l	(a0)+,(a1)+
	dbf.w	d0,copy

	move.l	#bild+34,a0
	move.l	#$30000+32000,a1
	move.w	#8000,d0
copy2:	move.l	(a0)+,(a1)+
	dbf.w	d0,copy2

	move.w	#$0,$ff8240
	move.w	#$446,$ff8242
	move.w	#$335,$ff8244
	move.w	#$224,$ff8246
	move.w	#$303,$ff8248
	move.w	#$446,$ff824a
	move.w	#$335,$ff824c
	move.w	#$224,$ff824e
	move.w	#$777,$ff8250
	move.w	#$777,$ff8252
	move.w	#$777,$ff8254
	move.w	#$777,$ff8256
	move.w	#$777,$ff8258
	move.w	#$777,$ff825a
	move.w	#$777,$ff825c
	move.w	#$777,$ff825e

	move.w	#0,d2

***************************************************************************
mainloop:
	jsr	waitvbl
	jsr	screenswap

	cmp.b	#$39,$fffc02
	beq	slut

	addq	#1,distmove	; distens snabbhet
	cmp	#719,distmove
	ble	nosinwrap
	move.w	#0,distmove
nosinwrap:
	move.w	#199,d0		;h”jd p† dist i yled
	move.w	#0,d5
	move.w	ymove,d4
	addq	#2,ymove
	cmp	#16,ymove
	bne	ymovech
	move.w	#0,ymove
ymovech:
	move.l	#$30002,a1
	add.w	srnp,a1
	move.l	#rotback,a0
	move.w	d4,d6
	mulu.w	#32,d6
	add.w	d6,a0
	move.l	#sin,a2
	add.w	distmove,a2
loop:
	addq	#1,d5		; b”jdhet (vackert ord !!!)
	move.b	(a2,d5),d3
	move.w	(a0,d3),d1

	move.w	d1,2(a1)
	move.w	d1,10(a1)
	move.w	d1,18(a1)
	move.w	d1,26(a1)
	move.w	d1,34(a1)
	move.w	d1,42(a1)
	move.w	d1,50(a1)
	move.w	d1,58(a1)
	move.w	d1,66(a1)
	move.w	d1,74(a1)
	move.w	d1,82(a1)
	move.w	d1,90(a1)
	move.w	d1,98(a1)
	move.w	d1,106(a1)
	move.w	d1,114(a1)
	move.w	d1,122(a1)
	move.w	d1,130(a1)
	move.w	d1,138(a1)
	move.w	d1,146(a1)
	move.w	d1,154(a1)

	add.w	#32,a0
	add.w	#160,a1
	addq.w	#1,d4
	cmp.w	#16,d4
	bne	nobrickwrap
	clr.w	d4
	move.l	#rotback,a0
nobrickwrap:
	dbf.w	d0,loop


	move.l	#$30006,a0
	add.w	srnp,a0
	move.w	#99,d0
left:
	move.w	144(a0),152(a0)
	move.w	136(a0),144(a0)
	move.w	128(a0),136(a0)
	move.w	120(a0),128(a0)
	move.w	112(a0),120(a0)
	move.w	104(a0),112(a0)
	move.w	96(a0),104(a0)
	move.w	88(a0),96(a0)
	move.w	80(a0),88(a0)
	move.w	72(a0),80(a0)
	move.w	64(a0),72(a0)
	move.w	56(a0),64(a0)
	move.w	48(a0),56(a0)
	move.w	40(a0),48(a0)
	move.w	32(a0),40(a0)
	move.w	24(a0),32(a0)
	move.w	16(a0),24(a0)
	move.w	8(a0),16(a0)
	move.w	(a0),8(a0)
	move.w	144+160(a0),152+160(a0)
	move.w	136+160(a0),144+160(a0)
	move.w	128+160(a0),136+160(a0)
	move.w	120+160(a0),128+160(a0)
	move.w	112+160(a0),120+160(a0)
	move.w	104+160(a0),112+160(a0)
	move.w	96+160(a0),104+160(a0)
	move.w	88+160(a0),96+160(a0)
	move.w	80+160(a0),88+160(a0)
	move.w	72+160(a0),80+160(a0)
	move.w	64+160(a0),72+160(a0)
	move.w	56+160(a0),64+160(a0)
	move.w	48+160(a0),56+160(a0)
	move.w	40+160(a0),48+160(a0)
	move.w	32+160(a0),40+160(a0)
	move.w	24+160(a0),32+160(a0)
	move.w	16+160(a0),24+160(a0)
	move.w	8+160(a0),16+160(a0)
	move.w	160(a0),8+160(a0)
	add.w	#320,a0
	dbf.w	d0,left

	move.l	#$30006,a0
	add.w	srnp,a0
	move.l	#$40000,a1
	add.w	#2,t
	cmp.w	#1400*16,t
	bne	nowrap
	move.w	#0,t
nowrap:
	add.w	t,a1

	add.w	#4,p2
	cmp.w	#718,p2
	bls	hsnw
	move.w	#0,p2
hsnw:
	move.l	#gunga,a3
	add.w	p2,a3
	move.w	(a3),d4
	add.w	#100,d4
	mulu.w	#2,d4
	add.w	d4,a1
	
	move.w	#49,d0
scroll:
	move.w	(a1)+,(a0)
	move.w	(a1)+,160(a0)
	move.w	(a1)+,320(a0)
	move.w	(a1)+,480(a0)
	add.w	#640,a0
	dbf.w	d0,scroll

	jmp	mainloop
***************************************************************************
setsuper:
	clr.l	-(sp)			
	move.w	#$20,-(sp)
	trap	#1
	addq.l	#6,sp
	move.l	d0,savesuper
	rts
***************************************************************************
endsuper:
	move.l	savesuper,-(sp)
	move.w	#$20,-(sp)
	trap	#1
	addq.l	#6,sp
	rts
***************************************************************************
newvbi:
	sub.b	#2,h
	cmp.b	#0,h
	bne	noh
	move.b	#16,h
	add.w	#2,f
	cmp.w	#54*2,f
	bne	noh
	move.w	#0,f
noh:
	clr.b	$fffa1b
	move.b	h,$fffa21
	move.b	#8,$fffa1b

	move.l	#rast5,$120

	movem.l	d0-d6/a0-a3,-(sp)
	jsr	music+8
	movem.l	(sp)+,d0-d6/a0-a3
	move.w	#1,vbiflag

	move.w	#0,d7
	move.l	#rasters,a4
	add.w	f,a4
	move.w	(a4)+,$ff8248

	rte
***************************************************************************
rast5:
	clr.b	$fffa1b
	bclr	#0,$fffffa0f.w
	move.b	#16,$fffa21
	move.b	#8,$fffa1b

	addq.w	#1,d7
	cmp.w	#14,d7
	beq	end
	move.w	(a4)+,$ff8248

	move.l	#rast5,$120
	rte
end:
	move.l	#rast6,$120
	rte
***************************************************************************
rast6:
	clr.b	$fffa1b
	bclr	#0,$fffffa0f.w
	move.b	#8,$fffa1b

	move.w	(a4)+,$ff8248

	rte
***************************************************************************
***************************************************************************
waitvbl:
	cmpi.w	#1,vbiflag
	bne	waitvbl
	move.w	#0,vbiflag
	rts 
***************************************************************************
setscreen:
	move.w	#0,-(sp)
	move.l	#$30000,-(sp)
	move.l	#$30000,-(sp)
	move.w	#$5,-(sp)
	trap	#14
	add.l	#12,sp
	rts
***************************************************************************
prerotate:
	move.l	#back,a0
	move.l	#rotback,a1
	move.w	#15,d1
lines:
	move.w	#15,d0
rotate:
	move.w	2(a0),(a1)
	move.w	2(a0),d2
	ror.w	#1,d2
	move.w	d2,2(a0)
	addq	#2,a1

	dbf.w	d0,rotate

	add.w	#2,a0
	dbf.w	d1,lines
	rts
***************************************************************************
slut:
	move.l	oldvbi,$70.w

	move.w	#37,-(sp)
	trap	#14
	addq.l	#2,sp

	clr.b	$fffa1b
	bset	#0,$fffa07
	bset	#0,$fffa13
	move.b	#0,$fffa21

	move.w	#0,-(sp)
	move.l	#$70000,-(sp)
	move.l	#$70000,-(sp)
	move.w	#$5,-(sp)
	trap	#14
	add.l	#12,sp

	move	#$8800,a0
	move.l	#$08000000,(a0)
	move.l	#$09000000,(a0)
	move.l	#$0a000000,(a0)
	move.b	#7,$484.w

	move.l	#save,a0
	move.b	(a0)+,$fffa1b
	move.b	(a0)+,$fffa09
	move.l	(a0)+,$120
	move.b	(a0)+,$fffa07
	move.b	(a0)+,$fffa13
	move.b	(a0)+,$fffa21
	move.b	(a0)+,$fffa1b

	move.w	#$777,$ff8240
	move.w	#$700,$ff8242
	move.w	#$35,$ff8244
	move.w	#$0,$ff8246
	move.w	#0,$ff8248
	move.w	#0,$ff824a
	move.w	#0,$ff824c
	move.w	#0,$ff824e
	move.w	#0,$ff8250
	move.w	#0,$ff8252
	move.w	#0,$ff8254
	move.w	#0,$ff8256
	move.w	#0,$ff8258
	move.w	#0,$ff825a
	move.w	#0,$ff825c
	move.w	#0,$ff825e

	move.l	savesuper,-(sp)
	move.w	#$20,-(sp)
	trap	#1
	addq.l	#6,sp

	move.l	#str„ng2,-(sp)
	move.w	#0,-(sp)
	move.w	#25,-(sp)
	trap	#14
	addq.l	#8,sp

	clr.w	-(sp)
	trap	#1
***************************************************************************
***************************************************************************
screenswap:
	add.w	#32000,srnp
	cmp.w	#64000,srnp
	bne	jhopp2
	move.w	#0,srnp
	move.w	#32000,osrnp
	bra	jhopp3
jhopp2:
	move.w	#0,osrnp
jhopp3:
	move.l	#$30000,d2
	add.w	srnp,d2
	lsr.l	#8,d2
	move.b	d2,$ff8203
	lsr.l	#8,d2
	move.b	d2,$ff8201
	rts
***************************************************************************
prescroll:
	move.l	#$40000,a1
	move.l	#text,a2
	move.w	#665,d1
scr:
	move.l	#font,a0
	clr.w	d0
	move.b	(a2)+,d0
	sub.w	#32,d0
	mulu.w	#64,d0
	add.w	d0,a0

	move.w	(a0),(a1)+
	move.w	4(a0),(a1)+
	move.w	8(a0),(a1)+
	move.w	12(a0),(a1)+
	move.w	16(a0),(a1)+
	move.w	20(a0),(a1)+
	move.w	24(a0),(a1)+
	move.w	28(a0),(a1)+
	move.w	32(a0),(a1)+
	move.w	36(a0),(a1)+
	move.w	40(a0),(a1)+
	move.w	44(a0),(a1)+
	move.w	48(a0),(a1)+
	move.w	52(a0),(a1)+
	move.w	56(a0),(a1)+
	move.w	60(a0),(a1)+

	dbf.w	d1,scr
	rts	
***************************************************************************
savesuper:	dc.l	0
vbiflag:	dc.w	0
oldvbi:		dc.l	0
ymove:		dc.w	0
distmove:	dc.w	0

sin:		include "a:\bigdist.dat"
	even
back:
		dc.w	%0000000000000000
		dc.w	%0000000100000000
		dc.w	%0000001110000000
		dc.w	%0000011111000000
		dc.w	%0000111111100000
		dc.w	%0001111111110000
		dc.w	%0011111111111000
		dc.w	%0111111111111100
		dc.w	%1111111111111110
		dc.w	%0111111111111100
		dc.w	%0011111111111000
		dc.w	%0001111111110000
		dc.w	%0000111111100000
		dc.w	%0000011111000000
		dc.w	%0000001110000000
		dc.w	%0000000100000000

font:		incbin	"a:\lordy.fnt"
	even
p:		dc.w	0
t:		dc.w	0
srnp:		dc.w	0
osrnp:		dc.w	0
text:		dc.b	"                                                SORRY FOR USING THIS OLD INTRO ONCE AGAIN BUT I HAVE NO TIME TO WRITE A NEW SCREEN...       THE CREDITS     ALL CODING AND DESIGNING AND GFX BY OB OF ANATOMICA         FONT BY "
		DC.B	" LORD OF CAC         MUSIC BY BLUE NUN OF ANATOMICA              SHORT GREETS TO        CRYSTALIC       POWERSONIC        FRIENDSHIP        BRAINIACS          ROGZ          IMAGINA          TOP NOTCH           NEW CORE    "
		DC.B	"          TOYS         UNIQUE          ZEAL         CYBERNETICS          DHS         WILDFIRE            THE CYBERPUNKS        TOXIC        I GOT TO QUIT NOW....         STAY COOL................................................"
		dc.b	"                                                                    "
	even
p2:		dc.w	0
gunga:		include	"a:\3d.cos"
	even
bild:		incbin	"a:\2bitana.pi1"
	even
music:		incbin	"a:\anatomic.thk"
	even
rasters:	dc.w	$011,$002,$003,$004,$005,$006,$007,$107,$207,$307,$407,$507,$607,$707,$617,$527,$437,$347,$257,$167,$077,$066,$055,$044,$033,$022,$011,$000,$100,$200,$300,$400,$500,$600,$700,$710,$720,$730,$740,$750,$760,$770,$670,$570,$470,$370
		dc.w	$270,$170,$070,$060,$050,$040,$030,$020,$011,$002,$003,$004,$005,$006,$007,$107,$207,$307,$407,$507,$607,$707,$617,$527
f:		dc.w	0
str„ng:		dc.b	$12
str„ng2:	dc.b	$8
h:		dc.b	8
	section bss
rotback:	ds.w	256
save:		ds.b	10
	end
