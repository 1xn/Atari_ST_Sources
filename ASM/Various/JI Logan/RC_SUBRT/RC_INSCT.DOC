SUB-ROUTINE NAME      rc_insct.sr
BRIEF DESCRIPTION     Calculates the intersection of two rectangles and sets
                        the coordinates of the first rectangle to the overlap
                        coordinates
USE                   Used when redrawing window rectangle list
FILENAME              RC_INSCT.S
OTHER RESOURCES       None
LANGUAGE              Assembler (Devpac)
AUTHOR                JI Logan

ENTRY PARAMETERS      a0 points to array of 4 words containing the x origin,
                        y origin, width and height of rectangle to be clipped
                      a1 points to array of 4 words containing the x origin,
                        y origin, width and height of fixed rectangle

EXIT PARAMETERS       If rectangles overlapped, array pointed to by a0
                        contains x,y,w,h of overlap rectangle and d0 =  0
                      If no overlap, arrays are unchanged and d0 = -1

DETAILS - See diagram below.

At rc_int_x, variable rectangle's x origin is placed in d0 and compared to
fixed x. If variable x is less than fixed x (rectangles 1, 2 and 6), fixed x
is placed in d0.

At rc_int_xw, variable (x origin + width) is placed in d2 and compared to
fixed (x + w). If variable (x + w) is greater than fix (x + w) (rectangles
4, 5 and 6), fixed (x + w) is placed in d2.

{Overlap on y axis is dealt with at rc_int_y and rc_int_yh}

At rc_tst_int, the clipped x, y, x+w and y+h are in d0-3. d0 (clip x) is
subtracted from d2 (clip x+w). For rectangles 1 and 5, the result is less
than 0. For rectangle 1 this is because clip x was made bigger than clip x+w.
For rectangle 5 clip x+w was made smaller than clip x. Results less than 0
mean no overlap and this is flagged. Results greater than 0 mean there was
overlap and this is flagged and the variable array updated by moving d0-3
to it. A result equal to 0 (ie overlap rectangle with a dimension of 0),is
counted as no overlap. Funny things happen when such a rectangle is redrawn.

{Overlap on y axis is dealt with in a similar way}


Example

do_redraw   graf_mouse     #256                    mouse off
            wind_update    #1                      begin update
            move.l         evnt_buff+8,rdr_x       get redraw xy
            move.l         evnt_buff+12,rdr_w      and wh
            wind_get       rtn_wind,#11            first rectangle
.loop       movem.w        int_out+2,d0-3          get rectangle xywh
            movem.w        d0-3,clp_x              store in temporary array
            add.w          d2,d3                   (w + h = 0) means
            beq            .end                    no more rectangles
            rc_insct       clp_x,dsk_x             clip overlap with desk
            bne            .nextrect               d0 zero if no overlap
            rc_insct       clp_x,rdr_x             clip overlap with redraw
            bne            .nextrect               d0 zero if no overlap
            objc_draw      crnt_tree,#root,#8,clp_x,clp_y,clp_w,clp_h
.nextrect   wind_get       rtn_wind,#12            next rectangle
            bra            .loop
.end        wind_update    #0                      end update
            graf_mouse     #257                    mouse on
            rts


                   fx,fy _______________________________ fx+fw
                         |                               |
    vx,vy _______ vx+vw  |             FIXED             |      _______
         |1      |       |                               |     |5      |
         |       |       |                               |     |       |
         |_______|       |                               |     |_______|
      vy+vh           ___|___        _______          ___|___
                     |2  |   |      |3      |        |4  |   |
                     |   |   |      |       |        |   |   |
                     |___|___|      |_______|        |___|___|
                         |                               |
                     ____|_______________________________|____
                    |6   |                               |    |
                    |    |                               |    |
                    |____|_______________________________|____|
                         |                               |
                         |_______________________________|
                      fy+fh
