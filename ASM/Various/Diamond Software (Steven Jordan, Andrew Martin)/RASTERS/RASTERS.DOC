
     Subject : Colourful Rasters Explanation
     By      : Steven Jordan of Diamond Software
     Date    : 9th June 1994

     Ok, here's a quick  explanation  of  how  you  can  have more then one
     colour bar (42 in fact!) on a line by only using just one Timer B!

     I am assuming that you know  a  bit  about  interrupts. If you don't I
     think that someone will do doing  some explanations about them soon in
     Ictari, if nobody does then I'll do one.

     The VBL Part:
     -------------

     In our VBL we just need to setup the timer B. This is done like this

        clr.b   $fffffa1b       ;stop timer b
        move.b  #7,$fffffa21    ;the scanline
        move.b  #8,$fffffa1b    ;start timer b
        move.l  #tb1,$120       ;the timer b stuff

     Then we just exit by the normal RTE command.


     Timer B Part:
     -------------
     The first thing we need to  do  is stop  all other interrupts, this is
     done by the normal

        move    #$2700,sr

     Now we've stopped  all  interrupts  we  can  now  set-up  all our data
     registers. But, before we can  really  start  our colourful rasters we
     must first make sure that we start all the colour changes on the start
     of a scanline. To do this we  need  to  use  the low byte of the video
     screen counter! This  is  $ffff8209.  This  little  address counts the
     number of bytes we  are  across  the  screen.  So  when  the result of
     $ffff8209 is zero it means that we are on the start of a scanline. But
     you should remember that when the  result  gets  to 255, then the next
     will be zero because it's a byte address!

     The routine can be done like this :-

             moveq.w #16,d1          ;needed for timing
             moveq.w #0,d0           ;clear d0
     .video  move.b  (a2),d0         ;get the video counter
             beq.s   .video          ;make sure it's 0 first
             sub.w   d0,d1           ;get the correct place
             lsl.w   d1,d0           ;pause to get the right place

     After we've got the result we  can  then  add the result to our colour
     routine and execute it. (a3 contains the colour routine).

             move.b  (a2),d0         ;get the low byte of video counter
             adda.l  d0,a3           ;add it to our colour routine
             jmp     (a3)            ;execute the colour routine

     Ok, we're on  the  start  of  the  scanline,  so  let's  do our colour
     routine. First we  need  to   pause   for   a  while  so  the  colours
     will  stop flickering! About 160 or so  'nops' should  do the job (and
     still be on the start of the scanline).

     To draw all 42 colours on one scanline is very, very easy :-


     The important thing to remember  is   that   all  the  colours and the
     border colour ($fff8240) are in  registers   or  it  simply won't work
     and just draw one colour per line!

     So we now have all our  important  data  in  the registers, we just do
     what you always do to set a colour :-

             move    (a0)+,(a1)

     a0 - Colour table
     a1 - Where the colours are going ($fff8240 - border)

     The above command can now just be  repeated for the number of lines to
     draw *  42.  42  because  that's  how  many  colours  we  can  have on
     one line.

     And finally return from the interrupt by an RTE and that's it!!

     One final word - you must make sure  that in the VBL you set the timer
     B scanline to eight minus one otherwise  the colours will not start at
     the beginning of the line because the routine to test if we are at the
     start of the scanline will not  work.   It  is possible  to set  it on
     any scanline but it's more complicated.

     I hope you like (and use) this routine.

     Steven J
     Diamond Software

     P.S. You don't just have to draw  the colours into the border, instead
     you could draw a picture on the screen,  set up some colours for all 4
     planes and hey - you've got more  than  16 colours on the screen. This
     is basic idea of how to do 512 colours on the screen!
