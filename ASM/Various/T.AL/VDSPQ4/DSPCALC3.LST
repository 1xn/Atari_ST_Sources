Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 1



1                        ;       image processing with dsp
2                        ;       deriche filter
3                        ; T.AL 95
4                        ; tab=16
5      
6                        SEND_FACTOR
7         000001                   equ     1                                 ; f
unction opcode
8         000002         S_FILTER  equ     2
9         000003         D_FILTER  equ     3
10     
11        010000         FACTOR    equ     65536                             ;de
calage <<16
12        000040         FACTOR2   equ     $40                               ;de
calage >>16
13                       ;FACTOR2        equ $80
14     
15        00FFFE         BCR       EQU     $FFFE                             ; P
ort A Bus Control Register
16        00FFE0         PBC       EQU     $FFE0                             ; P
ort B Control Register
17        00FFE8         HCR       EQU     $FFE8                             ; H
ost Control Register
18        00FFE9         HSR       EQU     $FFE9                             ; H
ost Status Register
19        00FFEB         HRX       EQU     $FFEB                             ; H
ost Receive Data Register
20        00FFEB         HTX       EQU     $FFEB                             ; H
ost Transmit Data Register
21     
22     
23        P:0000                   org     p:0
24        P:0000 0C0040            jmp     $40
25     
26        P:0040                   org     p:$40
27        P:0040 08F4A0            movep             #1,X:PBC                ;po
rt b = host interface
                 000001
28     
29                       ;reception de donnees sur le port host
30                       ;       jclr #0,X:HSR,*
31                       ;       movep X:HRX,x0
32     
33                       ;envoie de donnes sur le port host
34                       ;       jclr #1,X:HSR,*
35                       ;       movep b1,X:HTX
36     
37                       wait_opcode
38        P:0042 0AA980            jclr    #0,X:HSR,*
                 000042
39        P:0044 084E2B            movep             X:HRX,a
40     
41        P:0045 44F400            move              #>SEND_FACTOR,x0
                 000001
42        P:0047 200045            cmp     x0,a
43        P:0048 0AF0AA            jeq     receive_factor
                 000055
44     
45        P:004A 44F400            move              #>S_FILTER,x0
                 000002
46        P:004C 200045            cmp     x0,a
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 2



47        P:004D 0AF0AA            jeq     s_filter
                 00005E
48     
49        P:004F 44F400            move              #>D_FILTER,x0
                 000003
50        P:0051 200045            cmp     x0,a
51        P:0052 0AF0AA            jeq     d_filter
                 0000E4
52     
53        P:0054 0C0042            jmp     wait_opcode
54     
55                       ;------------------------------------------------
56                       receive_factor
57     
58                       ;sa     ds 4    ;filtre de lissage
59                       ;sb     ds 2
60                       ;da     ds 1    ;filtre de derivation
61                       ;db     ds 2
62     
63        P:0055 60F400            move              #factors,r0
                 000000
64     
65        P:0057 060980            do      #nb_factors,end_receive_loop
                 00005C
66        P:0059 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 000059
67        P:005B 08442B            movep             X:HRX,x0                ;le
cture facteur
68        P:005C 445800            move              x0,X:(r0)+              ;st
ocke facteur
69                       end_receive_loop
70     
71        P:005D 0C0042            jmp     wait_opcode
72     
73     
74                       ;------------------------------------------------
75                       ; filtre de lissage de Deriche
76        P:005E 0AA980  s_filter  jclr    #0,X:HSR,*                        ;at
tente
                 00005E
77        P:0060 08442B            movep             X:HRX,x0                ;le
cture taille buffer
78        P:0061 447000            move              x0,X:bufsize
                 00000D
79     
80        P:0063 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 000063
81        P:0065 08452B            movep             X:HRX,x1                ;le
cture nb buf
82        P:0066 457000            move              x1,X:n_buf
                 00000E
83     
84        P:0068 06C500            do      x1,end_s_filter                   ;n_
buf calculs
                 0000E2
85     
86        P:006A 65F400            move              #data,r5
                 000200
87        P:006C 657000            move              r5,X:sigbuf             ;bu
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 3



ffer donnees
                 00000F
88     
89        P:006E 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 00006E
90        P:0070 08462B            movep             X:HRX,y0                ;le
cture 1ere donnee
91     
92        P:0071 250100            move              #FACTOR,x1
93        P:0072 2000E0            mpy     y0,x1,a                           ;de
calage <<16
94     
95        P:0073 585D00            move                          a0,Y:(r5)+
96        P:0074 585D00            move                          a0,Y:(r5)+  ;in
it fir + ordre 2
97        P:0075 585D00            move                          a0,Y:(r5)+  ;pr
emiere donnee
98     
99        P:0076 56F000            move              X:bufsize,a
                 00000D
100       P:0078 44F400            move              #>1,x0
                 000001
101       P:007A 200044            sub     x0,a                              ;re
ste bufsize-1 donnees
102    
103       P:007B 06CE00            do      a,s_receive_sig
                 000081
104       P:007D 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 00007D
105       P:007F 08462B            movep             X:HRX,y0                ;le
cture donnee
106       P:0080 2000E0            mpy     y0,x1,a                           ;de
calage <<16
107       P:0081 585D00            move                          a0,Y:(r5)+
108                      s_receive_sig
109       P:0082 585D00            move                          a0,Y:(r5)+
110       P:0083 585D00            move                          a0,Y:(r5)+  ;in
it fir - ordre 2
111    
112       P:0084 657000            move              r5,X:filter_p           ;de
but second buffer
                 000010
113    
114    
115                      ;-----------------------------------------------
116                      ;calcul de y(m)= y-(m) + y+(m), m= 1->N
117                      ;avec y-(m)= a2*x(m+1) + a3*x(m+2) - b1*y-(m+1) - b2*y-
(m+2), m= N->1
118                      ;et   y+(m)= a0*x(m)   + a1*x(m-1) - b1*y+(m-1) - b2*y+
(m-2), m= 1->N
119    
120                      ;-----------------------------------------------
121                      ;               calcul de y+(m)
122                      ; copie les coeff utilises
123    
124       P:0086 60F400            move              #factorbuf,r0           ;da
ns factorbuf
                 000009
125       P:0088 46F000            move              X:sa+1,y0               ;a1
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 4



                 000001
126       P:008A 465800            move              y0,X:(r0)+
127       P:008B 46F000            move              X:sa,y0                 ;a0
                 000000
128       P:008D 465800            move              y0,X:(r0)+
129       P:008E 46F000            move              X:sb+1,y0               ;b2
                 000005
130       P:0090 465800            move              y0,X:(r0)+
131       P:0091 46F000            move              X:sb,y0                 ;b1
                 000004
132       P:0093 465800            move              y0,X:(r0)+
133    
134                      ;init calcul
135       P:0094 60F400            move              #factorbuf,r0
                 000009
136       P:0096 70F400            move              #>4,n0
                 000004
137       P:0098 64F000            move              X:sigbuf,r4             ;x(
m-2)
                 00000F
138       P:009A 74F400            move              #>1,n4
                 000001
139                                                                          ;mo
ve X:filter_p,r5     ;y+(m-2)
140       P:009C 75F400            move              #>4,n5
                 000004
141       P:009E 22B600            move              r5,r6
142       P:009F 205C13            clr     a         (r4)+                   ;x(
m-1)
143       P:00A0 585E00            move                          a0,Y:(r6)+
144       P:00A1 586600            move                          a0,Y:(r6)   ;ef
face y+(m-1) et y+(m-2)
145    
146                      ;corps du calcul
147       P:00A2 F09800            move              X:(r0)+,x0  Y:(r4)+,y0  ;x0
: a1, y0: x(m-1)
148       P:00A3 060D00            do      X:bufsize,end_sp_loop
                 0000AA
149       P:00A5 C098D0            mpy     x0,y0,a   X:(r0)+,x0  Y:(r4),y0   ;a=
 a1*x(m-1), x0: a0, y0: x(m)
150       P:00A6 F0B8D2            mac     x0,y0,a   X:(r0)+,x0  Y:(r5)+,y0  ;a+
= a0*x(m), x0: b2, y0: y+(m-2)
151       P:00A7 F0B8D6            mac     -x0,y0,a  X:(r0)+,x0  Y:(r5)+,y0  ;a-
= b2*y+(m-2), x0: b1, y0: y+(m-1)
152       P:00A8 2040D7            macr    -x0,y0,a  (r0)-n0                 ;a-
= b1*y+(m-1)
153       P:00A9 F09832            asl     a         X:(r0)+,x0  Y:(r4)+,y0
154       P:00AA 5C5500            move                          a1,Y:(r5)-  ;y+
(m)= a
155                      end_sp_loop
156       P:00AB 204D00            move              (r5)+n5
157       P:00AC 657000            move              r5,X:filter_m           ;se
cond buffer de calcul
                 000011
158    
159                      ;-----------------------------------------------
160                      ;               calcul de y-(m)
161                      ; copie les coeff utilises
162    
163       P:00AE 60F400            move              #factorbuf,r0           ;da
ns factorbuf
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 5



                 000009
164       P:00B0 46F000            move              X:sa+3,y0               ;a3
                 000003
165       P:00B2 465800            move              y0,X:(r0)+
166       P:00B3 46F000            move              X:sa+2,y0               ;a2
                 000002
167       P:00B5 465800            move              y0,X:(r0)+
168       P:00B6 46F000            move              X:sb+1,y0               ;b2
                 000005
169       P:00B8 465800            move              y0,X:(r0)+
170       P:00B9 46F000            move              X:sb,y0                 ;b1
                 000004
171       P:00BB 465800            move              y0,X:(r0)+
172    
173                      ;init calcul
174       P:00BC 75F000            move              X:bufsize,n5
                 00000D
175       P:00BE 204000            move              (r0)-n0
176                                                                          ;mo
ve (r4)+             ;Y:(r4)= x(m+2), X:(r0)= factorbuf
177       P:00BF 205C13            clr     a         (r4)+
178       P:00C0 204D00            move              (r5)+n5                 ;Y:
(r5)= y-(N)
179       P:00C1 205D00            move              (r5)+
180       P:00C2 205D00            move              (r5)+
181       P:00C3 585D00            move                          a0,Y:(r5)+
182       P:00C4 586500            move                          a0,Y:(r5)   ;ef
face y-(m+1) et y-(m+2)
183    
184                      ;corps du calcul
185       P:00C5 E09800            move              X:(r0)+,x0  Y:(r4)-,y0  ;x0
: a3, y0: x(m+2)
186       P:00C6 060D00            do      X:bufsize,end_sm_loop
                 0000CD
187       P:00C8 C098D0            mpy     x0,y0,a   X:(r0)+,x0  Y:(r4),y0   ;x0
: a2, y0: x(m+1), a= a3*x(m+2)
188       P:00C9 E0B8D2            mac     x0,y0,a   X:(r0)+,x0  Y:(r5)-,y0  ;x0
: b2, y0: y+(m+2), a+= a2*x(m+1)
189       P:00CA E0B8D6            mac     -x0,y0,a  X:(r0)+,x0  Y:(r5)-,y0  ;x0
: b1, y0: y+(m+1), a-= b2*y-(m+2)
190       P:00CB 2040D7            macr    -x0,y0,a  (r0)-n0                 ;a-
= b1*y-(m+1)
191       P:00CC E09832            asl     a         X:(r0)+,x0  Y:(r4)-,y0
192       P:00CD 5C5D00            move                          a1,Y:(r5)+  ;y-
(m)= a
193                      end_sm_loop
194    
195                      ;-----------------------------------------------
196                      ;calcul de y(m)= y-(m) + y+(m), n= 1->N
197    
198       P:00CE 60F000            move              X:filter_p,r0           ;tr
ansmet le buffer resultat
                 000010
199       P:00D0 61F000            move              X:filter_m,r1
                 000011
200       P:00D2 205800            move              (r0)+
201       P:00D3 205800            move              (r0)+
202       P:00D4 205900            move              (r1)+
203       P:00D5 205900            move              (r1)+
204       P:00D6 44F400            move              #>FACTOR2,x0
                 000040
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 6



205    
206       P:00D8 5ED800            move                          Y:(r0)+,a
207       P:00D9 4DD900            move                          Y:(r1)+,x1
208       P:00DA 060D00            do      X:bufsize,end_s_loop
                 0000E1
209       P:00DC 4DD860            add     x1,a                  Y:(r0)+,x1
210       P:00DD 21C600            move              a,y0
211       P:00DE 5ED9D9            mpyr    x0,y0,b               Y:(r1)+,a
212       P:00DF 0AA981            jclr    #1,X:HSR,*
                 0000DF
213       P:00E1 08CD2B            movep             b1,X:HTX                ;en
voye le resultat
214                      end_s_loop
215       P:00E2 000000            nop
216                      end_s_filter
217       P:00E3 0C0042            jmp     wait_opcode
218    
219    
220    
221                      ;------------------------------------------------
222                      ;filtre de derivation de Deriche
223       P:00E4 0AA980  d_filter  jclr    #0,X:HSR,*                        ;at
tente
                 0000E4
224       P:00E6 08442B            movep             X:HRX,x0                ;le
cture taille buffer
225       P:00E7 447000            move              x0,X:bufsize
                 00000D
226    
227       P:00E9 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 0000E9
228       P:00EB 08452B            movep             X:HRX,x1                ;le
cture nb buf
229       P:00EC 457000            move              x1,X:n_buf
                 00000E
230    
231       P:00EE 06C500            do      x1,end_d_filter                   ;n_
buf calculs
                 000160
232    
233       P:00F0 65F400            move              #data,r5
                 000200
234       P:00F2 657000            move              r5,X:sigbuf             ;bu
ffer donnees
                 00000F
235    
236       P:00F4 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 0000F4
237       P:00F6 08462B            movep             X:HRX,y0                ;le
cture 1ere donnee
238    
239       P:00F7 250100            move              #FACTOR,x1
240       P:00F8 2000E0            mpy     y0,x1,a                           ;de
calage <<16
241    
242       P:00F9 585D00            move                          a0,Y:(r5)+
243       P:00FA 585D00            move                          a0,Y:(r5)+  ;in
it fir + ordre 2
244       P:00FB 585D00            move                          a0,Y:(r5)+  ;pr
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 7



emiere donnee
245    
246       P:00FC 56F000            move              X:bufsize,a
                 00000D
247       P:00FE 44F400            move              #>1,x0
                 000001
248       P:0100 200044            sub     x0,a                              ;re
ste bufsize-1 donnees
249    
250       P:0101 06CE00            do      a,d_receive_sig
                 000107
251       P:0103 0AA980            jclr    #0,X:HSR,*                        ;at
tente
                 000103
252       P:0105 08462B            movep             X:HRX,y0                ;le
cture donnee
253       P:0106 2000E0            mpy     y0,x1,a                           ;de
calage <<16
254       P:0107 585D00            move                          a0,Y:(r5)+
255                      d_receive_sig
256       P:0108 585D00            move                          a0,Y:(r5)+
257       P:0109 585D00            move                          a0,Y:(r5)+  ;in
it fir - ordre 2
258    
259       P:010A 657000            move              r5,X:filter_p           ;de
but second buffer
                 000010
260    
261    
262                      ;-----------------------------------------------
263                      ;calcul de y(m)= y-(m) + y+(m), m= 1->N
264                      ;avec y-(m)= -a*x(m+1) - b1*y-(m+1) - b2*y-(m+2), m= N-
>1
265                      ;et   y+(m)=  a*x(m-1) - b1*y+(m-1) - b2*y+(m-2), m= 1-
>N
266    
267                      ;-----------------------------------------------
268                      ;               calcul de y+(m)
269                      ; copie les coeff utilises
270    
271       P:010C 60F400            move              #factorbuf,r0           ;da
ns factorbuf
                 000009
272       P:010E 46F000            move              X:da,y0                 ;a
                 000006
273       P:0110 465800            move              y0,X:(r0)+
274       P:0111 46F000            move              X:db+1,y0               ;b2
                 000008
275       P:0113 465800            move              y0,X:(r0)+
276       P:0114 46F000            move              X:db,y0                 ;b1
                 000007
277       P:0116 465800            move              y0,X:(r0)+
278    
279                      ;init calcul
280       P:0117 60F400            move              #factorbuf,r0
                 000009
281       P:0119 70F400            move              #>3,n0
                 000003
282       P:011B 64F000            move              X:sigbuf,r4             ;x(
m-2)
                 00000F
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 8



283       P:011D 74F400            move              #>1,n4
                 000001
284                                                                          ;mo
ve X:filter_p,r5     ;y+(m-2)
285       P:011F 75F400            move              #>4,n5
                 000004
286       P:0121 22B600            move              r5,r6
287       P:0122 205C13            clr     a         (r4)+                   ;x(
m-1)
288       P:0123 585E00            move                          a0,Y:(r6)+
289       P:0124 586600            move                          a0,Y:(r6)   ;ef
face y+(m-1) et y+(m-2)
290    
291                      ;corps du calcul
292       P:0125 F09800            move              X:(r0)+,x0  Y:(r4)+,y0  ;x0
: a1, y0: x(m-1)
293       P:0126 060D00            do      X:bufsize,end_dp_loop
                 00012C
294       P:0128 F0B8D0            mpy     x0,y0,a   X:(r0)+,x0  Y:(r5)+,y0  ;x0
: b2, y0: y+(m-2), a= a1*x(m-1)
295       P:0129 F0B8D6            mac     -x0,y0,a  X:(r0)+,x0  Y:(r5)+,y0  ;x0
: b1, y0: y+(m-1), a-= b2*y+(m-2)
296       P:012A 2040D7            macr    -x0,y0,a  (r0)-n0                 ;a-
= b1*y+(m-1)
297       P:012B F09832            asl     a         X:(r0)+,x0  Y:(r4)+,y0
298       P:012C 5C5500            move                          a1,Y:(r5)-  ;y+
(m)= a
299                      end_dp_loop
300       P:012D 204D00            move              (r5)+n5
301       P:012E 657000            move              r5,X:filter_m           ;se
cond buffer de calcul
                 000011
302    
303                      ;-----------------------------------------------
304                      ;               calcul de y-(m)
305                      ; copie les coeff utilises
306    
307       P:0130 60F400            move              #factorbuf,r0           ;da
ns factorbuf
                 000009
308       P:0132 46F000            move              X:da,y0                 ;a
                 000006
309       P:0134 465800            move              y0,X:(r0)+
310       P:0135 46F000            move              X:db+1,y0               ;b2
                 000008
311       P:0137 465800            move              y0,X:(r0)+
312       P:0138 46F000            move              X:db,y0                 ;b1
                 000007
313       P:013A 465800            move              y0,X:(r0)+
314    
315                      ;init calcul
316       P:013B 75F000            move              X:bufsize,n5
                 00000D
317       P:013D 204000            move              (r0)-n0
318                                                                          ;mo
ve (r4)+             ;Y:(r4)= x(m+1), X:(r0)= factorbuf
319       P:013E 205C13            clr     a         (r4)+
320       P:013F 204D00            move              (r5)+n5                 ;Y:
(r5)= y-(N)
321       P:0140 205D00            move              (r5)+
322       P:0141 205D00            move              (r5)+
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 9



323       P:0142 585D00            move                          a0,Y:(r5)+
324       P:0143 586500            move                          a0,Y:(r5)   ;ef
face y-(m+1) et y-(m+2)
325    
326                      ;corps du calcul
327       P:0144 E09800            move              X:(r0)+,x0  Y:(r4)-,y0  ;x0
: a, y0: x(m+1)
328       P:0145 060D00            do      X:bufsize,end_dm_loop
                 00014B
329       P:0147 E0B8D4            mpy     -x0,y0,a  X:(r0)+,x0  Y:(r5)-,y0  ;x0
: b2, y0: y+(m+2)      ;a= -a*x(m+1)
330       P:0148 E0B8D6            mac     -x0,y0,a  X:(r0)+,x0  Y:(r5)-,y0  ;x0
: b1, y0: y+(m+1)              ;a-= b2*y-(m+2)
331       P:0149 2040D7            macr    -x0,y0,a  (r0)-n0                 ;a-
= b1*y-(m+1)
332       P:014A E09832            asl     a         X:(r0)+,x0  Y:(r4)-,y0  ;x0
: a, y0: x(m+1)
333       P:014B 5C5D00            move                          a1,Y:(r5)+  ;y-
(m)= a
334                      end_dm_loop
335    
336                      ;-----------------------------------------------
337                      ;calcul de y(m)= y-(m) + y+(m), n= 1->N
338    
339       P:014C 60F000            move              X:filter_p,r0           ;tr
ansmet le buffer resultat
                 000010
340       P:014E 61F000            move              X:filter_m,r1
                 000011
341       P:0150 205800            move              (r0)+
342       P:0151 205800            move              (r0)+
343       P:0152 205900            move              (r1)+
344       P:0153 205900            move              (r1)+
345       P:0154 44F400            move              #>FACTOR2,x0
                 000040
346    
347       P:0156 5ED800            move                          Y:(r0)+,a
348       P:0157 4DD900            move                          Y:(r1)+,x1
349       P:0158 060D00            do      X:bufsize,end_d_loop
                 00015F
350       P:015A 4DD860            add     x1,a                  Y:(r0)+,x1
351       P:015B 21C600            move              a,y0
352       P:015C 5ED9D9            mpyr    x0,y0,b               Y:(r1)+,a
353       P:015D 0AA981            jclr    #1,X:HSR,*
                 00015D
354       P:015F 08CD2B            movep             b1,X:HTX                ;en
voye le resultat
355                      end_d_loop
356       P:0160 000000            nop
357                      end_d_filter
358       P:0161 0C0042            jmp     wait_opcode
359    
360    
361                      ;------------------------------------------------
362       X:0000                   org     x:0
363    
364       000000         factors   equ     *
365       X:0000         sa        ds      4
366       X:0004         sb        ds      2
367    
368       X:0006         da        ds      1
Motorola DSP56000 Assembler  Version 4.1.1   95-09-20  14:45:18  
e:\src\vdspq4\dspcalc3.asm  Page 10



369       X:0007         db        ds      2
370       000009         nb_factors equ    *-factors
371    
372       X:0009         factorbuf ds      4
373    
374       X:000D         bufsize   ds      1                                 ;ta
ille buffer
375       X:000E         n_buf     ds      1                                 ;nb
 de buf a traiter
376    
377       X:000F         sigbuf    ds      1                                 ;bu
ffer signal Y:
378       X:0010         filter_p  ds      1                                 ;bu
ffer filtrage + Y:
379       X:0011         filter_m  ds      1                                 ;bu
ffer filtrage - Y:
380    
381                      ;------------------------------------------------
382       Y:0200                   org     y:$200
383       000200         data      equ     *                                 ;es
pace reserve aux buffers
384    
385    
386                      ;------------------------------------------------
387                                end

0    Errors
0    Warnings
