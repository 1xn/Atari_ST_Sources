
                                  ANSIFIER
                               ==============
                            by: MÜrten Lindstrîm

 If you have an Atari plain text  file  (this includes e.g. HTML files since
 their "controls" are all in plain  text) that contains Atari-specific, non-
 ascii characters, then you can use Ansifier to convert it before porting it
 to a MS Windows computer (or Amiga or Archimedes).

 With a modern desktop - e.g. Neodesk 3  or  TOS  2 or above - drag the text
 file and drop it on the  Ansifier  program  icon. Otherwise I am afraid you
 will have to change the ANSIFIER extension  from  .TOS to .TTP and type the
 text file name by hand.

 Ansifier will convert the Atari-specific characters to "ANSI" (ISO 8859-1)!

 Regarding HTML files, note that they ALWAYS (even on Ataris) are assumed to
 use the ANSI character set. Thus, if after you edit a HTML file it contains
 any Atari characters, you should  run  Ansifier  on it. Atari HTML browsers
 CAB and HTML Browser are  smart  enough  to translate these characters back
 into Atari characters when displaying them.

                                  ___oOo___

 With  DEANSIFY.TOS  you can make the  opposite conversion. For instance you
 can take an existing HTML file  and  convert  ANSI characters to Atari, for
 easy editing, then convert back with Ansifier.

                                  ___oOo___

 Ansifier (and Deansify)  loads  a  file  and  converts  all characters with
 numbers above 127, then saves the file under the old name. Files containing
 any null bytes - or Protext soft  line-breaks - are NOT converted, in order
 to safeguard against accidental  "conversion"  of  non-text data (including
 program files). A check against First  Word  files  is also made. But avoid
 converting an already converted  file,  since  Ansifier  makes currently no
 check against this. Should a mistake  be  made,  the old file will be found
 under the name xxx.ATR where "xxx" is the old name minus extension.
 (DEANSIFY.TOS leaves the old file in xxx.ANS).

 To keep things simple, this version  of  Ansifier  uses no GEM and no error
 messages or stuff. It just loads a file  given on its "command line" and on
 error the program just silently exits (returning 1 for error).

 (The GEM and messages may be added later.)



 ATARI CHARACTERS PRESERVED
 ==========================

 Not all Atari characters are possible  to  convert, simply because they are
 missing in the ANSI set. This applies to most of the Greek and mathematical
 characters.

 The characters preserved, and safe to use even in a text to be ported, are:

 ˘   Of course all ASCII characters  (i.e.  the  first half of the character
     set - below code number 128).

 ˘   All modified Latin letters except the OE and IJ ligatures.

 ˘   The following characters: (Anyone reading  this with Protext, note that
     some of the Atari characters -  as  noted - are not displayed correctly
     under Protext since Protext uses its own character set.)

  Ê  micro  (Greek mu).  E.g  Ês  for microsecond
  Ò  plus-minus
  ˆ  division
  ™  not sign

  ´  one half
  ¨  one quarter
  ˝  squared (superscript 2)               (not in Protext)
  ˛  cubed   (superscript 3)               (not in Protext)

  ˇ  macron/overline
  ¯  ring /degree sign
  π  double-dot                            (not in Protext)
  ∫  acute accent                          (not in Protext)

  ú  British pound sterling symbol
  ù  Yen                                   (not in Protext)
  õ  cent                                  (not in Protext)

  Æ  left-pointing double angle quotation mark
  Ø  right-pointing double angle quotation mark
  ®  upside-down question mark
  ≠  upside-down exclamation mark
  ¶  feminine ordinal indicator
  ß  masculine ordinal indicator

  Ω  copyright sign                        (not in Protext)
  æ  registered sign                       (not in Protext)
  ›  section mark                 (character 21 in Protext)
  º  paragraph (pilcrow) sign     (character 20 in Protext)

 In addition, the characters ˙ and ˘  are both mapped to the ANSI middle-dot
 character (183). I considered  mapping  ˘  (bullet)  to  the Windows bullet
 character 149, but on second  thought  this  character  is just a Microsoft
 Windows extension and  not  in  the  true  ANSI/ISO  standard (what finally
 decided it was that the Atari HTML  browser CAB doesn't support the Windows
 extensions) and the middle-dot is better than nothing.

 Atari Greek beta (·) is (as  well  as  the actual Atari double-s) mapped to
 the ANSI German double-s.

 Ansifier translates both  and ˜ as =, although the meanings aren't exactly
 the same.

 ____ NOTE ____
 Ansifier and Deansify interpret Atari  characters 192-220 and 222 according
 to their NEW meanings, i.e. according  to  how  they appear with an outline
 font displayed by e.g. NVDI. This is also how CAB deals with them.
 (This means the Hebrew is gone and replaced with various accented uppercase
 Latin letters plus some other characters.)
