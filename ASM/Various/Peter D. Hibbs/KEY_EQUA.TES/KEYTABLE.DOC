                           KEYBOARD DEFINITIONS
                           ====================

                              by Peter Hibbs

Usually in GEM type programs (i.e.  ones  that  use the menu bar) there are
keyboard equivalents of most of  the  drop  down menu commands. For example
ALT L to load a file, ALT Q to  quit  the program and so on. The normal way
to access the keyboard is via the evnt_multi GEM function which will detect
a keypress and return with the key  value in a variable. This code consists
of the key value in the low 8  bits  and  the  scan code in the high 8 bits
which gives a unique value for every  key on the keyboard, the user program
would then check these values and  jump  to  the required code depending on
which key was pressed. To make  the  program easier to understand these key
codes should be  defined  as  equates  so  that  symbols  represent the key
functions, i.e. use the symbol 'key_a' rather than the value $1E61.

The following tables show the  symbols  that  I  use  and correspond to the
'equate' file KEYTABLE.S on this disk.  If  you  don't like the key names I
have used, you can of course  change  them  but don't forget to use exactly
the same name in both this file  and  the KEYTABLE.S file. If you do change
the names, bear in mind that you  will  need  to use names that you are not
likely to use in a program  as  labels  or you will get assembler 'multiple
label' errors. To use the codes just  'include' the KEYTABLE.S file in your
program and then use the key  symbols  within  the program source code, see
example below.  Print  this  document  and  keep  it  in  your  programming
reference folder.

This file does not include  ALL  the  keys  available  on the keyboard, the
punctuation marks have been omitted as I  find they are not often used with
evnt_multi so  you will need to add those  if you need them. Note also that
the TOS BIOS calls to the  keyboard  return  a  longword value with the key
code in the low 8 bits of the low word  and the scan code in the low 8 bits
of the high word so that  if  you  want  to  use these definitions for BIOS
calls you will need to copy the high word  data down to the top half of the
low word before calling the 'compare' routine.

A typical  example  could  be  as  follows  (using  the  'compare'  routine
elsewhere on this disk :-

                include         KEYTABLE.S

                program code
                ..
                ..

                code to fetch keypress into d0
                bsr     compare
                dc.w    5
                dc.w    alt_key_L               load file
                dc.l    load_file
                dc.w    alt_key_S               save file
                dc.l    save_file
                dc.w    alt_key_D               delete file
                dc.l    del_file
                dc.w    ctrl_key_N              new file
                dc.l    new_file
                dc.w    key_help                help option
                dc.l    show_help
                ..

            Keyboard definitions for event_multi call function

Keys a-z        SHIFT+keys A-Z       CTRL+keys A-Z      ALT+keys A-Z

key_a           key_A                ctrl_key_A         alt_key_A
key_b           key_B                ctrl_key_B         alt_key_B
key_c           key_C                ctrl_key_C         alt_key_C
key_d           key_D                ctrl_key_D         alt_key_D
key_e           key_E                ctrl_key_E         alt_key_E
key_f           key_F                ctrl_key_F         alt_key_F
key_g           key_G                ctrl_key_G         alt_key_G
key_h           key_H                ctrl_key_H         alt_key_H
key_i           key_I                ctrl_key_I         alt_key_I
key_j           key_J                ctrl_key_J         alt_key_J
key_k           key_K                ctrl_key_K         alt_key_K
key_l           key_L                ctrl_key_L         alt_key_L
key_m           key_M                ctrl_key_M         alt_key_M
key_n           key_N                ctrl_key_N         alt_key_N
key_o           key_O                ctrl_key_O         alt_key_O
key_p           key_P                ctrl_key_P         alt_key_P
key_q           key_Q                ctrl_key_Q         alt_key_Q
key_r           key_R                ctrl_key_R         alt_key_R
key_s           key_S                ctrl_key_S         alt_key_S
key_t           key_T                ctrl_key_T         alt_key_T
key_u           key_U                ctrl_key_U         alt_key_U
key_v           key_V                ctrl_key_V         alt_key_V
key_w           key_W                ctrl_key_W         alt_key_W
key_x           key_X                ctrl_key_X         alt_key_X
key_y           key_Y                ctrl_key_Y         alt_key_Y
key_z           key_Z                ctrl_key_Z         alt_key_Z

Numeric keys 1-0        SHIFT+numeric keys 1-0  CONTROL+numeric keys 1-0
(main keyboard only)    (main keyboard only)    (main keyboard only)

key_1                   shft_key_1              ctrl_key_1
key_2                   shft_key_2              ctrl_key_2
key_3                   shft_key_3              ctrl_key_3
key_4                   shft_key_4              ctrl_key_4
key_5                   shft_key_5              ctrl_key_5
key_6                   shft_key_6              ctrl_key_6
key_7                   shft_key_7              ctrl_key_7
key_8                   shft_key_8              ctrl_key_8
key_9                   shft_key_9              ctrl_key_9
key_0                   shft_key_0              ctrl_key_0

ALTERNATE+numeric keys 1-0      Miscellaneous keys      Function keys
(main keyboard only)
                                key_help                f_key_1
alt_key_1                       key_undo                f_key_2
alt_key_2                       key_ins                 f_key_3
alt_key_3                       key_shft_ins            f_key_4
alt_key_4                       key_home                f_key_5
alt_key_5                       key_up                  f_key_6
alt_key_6                       key_down                f_key_7
alt_key_7                       key_right               f_key_8
alt_key_8                       key_left                f_key_9
alt_key_9                       key_space               f_key_10
alt_key_0                       key_escape
                                key_back

Control pad keys                Miscellaneous keys      Shift+Function keys

pad_lpar                        key_delete              shft_f_key_1
pad_rpar                        key_return              shft_f_key_2
pad_slash                       key_tab                 shft_f_key_3
pad_star                                                shft_f_key_4
pad_minus                       shft_home               shft_f_key_5
pad_plus                        shft_up                 shft_f_key_6
pad_.                           shft_down               shft_f_key_7
pad_enter                       shft_left               shft_f_key_8
pad_0                           shft_right              shft_f_key_9
pad_1                                                   shft_f_key_10
pad_2                           ctrl_home
pad_3                           ctrl_right
pad_4                           ctrl_left
pad_5                           ctrl_space
pad_6                           ctrl_delete
pad_7                           ctrl_return
pad_8
pad_9

ctrl_pad_lpar
ctrl_pad_rpar
ctrl_pad_slash
ctrl_pad_star
ctrl_pad_minus
ctrl_pad_plus
ctrl_pad_.
ctrl_pad_enter
ctrl_pad_0
ctrl_pad_1
ctrl_pad_2
ctrl_pad_3
ctrl_pad_4
ctrl_pad_5
ctrl_pad_6
ctrl_pad_7
ctrl_pad_8
ctrl_pad_9
