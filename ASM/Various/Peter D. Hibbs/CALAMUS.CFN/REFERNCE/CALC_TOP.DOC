SUB-ROUTINE NAME        calc_top
BRIEF DESCRIPTION       Calculates top and edge offsets
FILENAME                CFN_CODE.S
OTHER RESOURCES         GEM, VDI & AES Library files
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        a0=start address of font data buffer
                        (font_size)=divide value

EXIT PARAMETERS         (t_edge)=top edge offset (No of unused scanlines)
                        (font_height)=height of chr cells in scan lines
                        (char_width)=width of chr cells in bytes
                        (base_line)=number of pixels from top to baseline
                        (chr_count)=number of actual chrs in font

DETAILS -

This routine is used to  calculate  the  top  edge  offset, cell height and
width and the base line offset  for  the  current font at a specified point
size. It also returns the number of used characters in the font.

Set register a0 to the start of  the  buffer holding the font data and copy
the  required  'divide  value'  into  the  'font_size'  variable  (see  the
CFN_CODE.DOC document file for information on calculating this value).

Call the routine and on return the following variables will be initialised.

The 't_edge' variable holds  the  lowest  value  y  co-ordinate  of all the
characters before the font data is  scaled  down. When the character images
are generated by the 'make_image'  routine,  this  value is subtracted from
every y co-ordinate value which, in effect,  removes the unused area at the
top of the character cells.

The 'font_height' variable holds the minimum  number of scan lines plus two
required to accommodate every character  after  they  have been scaled down
and so represents the character cell height of each character.

The 'char_width' variable holds the width  of each character cell in bytes.
This value is only dependent on the  'font_size' value since no clipping is
performed on the width of the characters until they are actually displayed.

The 'base_line' variable holds the number of  pixels between the top of the
character cell and the base  line  defined  by  the  font data. This allows
characters of different point sizes to  be aligned horizontally on the same
base line.

The 'chr_count' variable holds the actual  number of characters used in the
font. Note that this is  different  from  the  number of useable characters
which is usually 224, i.e. the maximum number of possible characters.
