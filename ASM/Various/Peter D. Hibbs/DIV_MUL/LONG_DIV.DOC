SUB-ROUTINE NAME        long_div.
BRIEF DESCRIPTION       32 bit division routine.
FILENAME                DIV_MUL.S
OTHER RESOURCES         None
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        d0.L=32 bit integer value.
                        d1.L=32 bit integer value.

EXIT PARAMETERS         d0.L=32 bit result of dividing d0 by d1.
                        d1.L=32 bit remainder.

DETAILS -

This routine performs a 32 bit division  of register d0 by register d1. The
68000  instruction  set   already   provides   a   division   function  but
unfortunately the DIVU instruction will only divide  a 32 bit value by a 16
bit value. For example, you  cannot  divide  a  number  by  a value that is
greater than 65535 which is very limiting. Also if the result of a division
is greater than 16 bits, the instruction is just ignored.

The 'long_div' routine allows a 32  bit  value  to be divided by another 32
bit value with the result and the remainder also returned as 32 bit values.

For example :-

                move.l          #123456789,d0
                move.l          #654321,d1
                bsr             long_div
                ..

Register d0 returns 188  as  the  quotient  and  d1  returns  444441 as the
remainder.

Note that since dividing a  number  by  0  results in infinity, the routine
checks this first and if register  d1=0  will  return immediately. If it is
possible for the  divisor  to  be  0  when  the  user  program  is run, the
programmer will need to trap this condition and take the appropriate action.

Note also that this routine only handles unsigned values.
