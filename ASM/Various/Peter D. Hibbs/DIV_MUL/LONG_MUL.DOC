SUB-ROUTINE NAME        long_mul.
BRIEF DESCRIPTION       32 bit multiplication routine.
FILENAME                DIV_MUL.S
OTHER RESOURCES         None
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        d0.L=32 bit integer value.
                        d1.L=32 bit integer value.

EXIT PARAMETERS         d0.L=32 bit result of multiplying d0 by d1.

DETAILS -

This routine performs a 32  bit  multiplication  of register d0 by register
d1. The 68000 instruction  set  already  provides a multiplication function
but unfortunately the MULU instruction will only multiply a 16 bit value by
a 16 bit value. For example, even  though  the multiplication of two 32 bit
numbers may result in a value of 32 bits or less, it is still not possible.

The 'long_mul' routine allows a 32 bit value to be multiplied by another 32
bit value with the product returned  as  a  32  bit  value. Note that it is
possible for such an operation to return  a  value of greater than 32 bits,
i.e. >4294967296, and in  this  case the  routine  will return an incorrect
value so the programmer should ensure that this cannot happen (although the
code could probably be modified to return a 64 bit value).

For example :-

                move.l          #123456,d0
                move.l          #4,d1
                bsr             long_mul
                ..

Register d0 returns a  value  of  493827156.  Note  that  this routine only
handles unsigned values.
