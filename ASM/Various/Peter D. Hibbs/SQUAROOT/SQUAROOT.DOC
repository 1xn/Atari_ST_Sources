SUB-ROUTINE NAME        square_root
BRIEF DESCRIPTION       Calculates square root of a 32 bit value
FILENAME                SQUAROOT.S
OTHER RESOURCES         None
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        d0.l = 32 bit value.

EXIT PARAMETERS         d0.w = 16 bit square root of original value.

DETAILS -

This sub-routine calculates the square root of a 32 bit value in register
d0.l and returns it  as  a  whole  number  in  the  low  half of the same
register as a 16 bit value. Note  that  if  the original value is zero, a
zero value is returned.

An example of its use is shown below.

Imagine that the high resolution  screen  represents  a  map of 640 miles
wide (1 mile per  pixel)  by  400  miles  high.  Suppose  we  now need to
calculate the approximate distance  between  two  points  (pixels) on the
map. From Pythagorus we  know  that  the  square  of  the hypotenuse (the
required distance) in a right-angled triangle is  equal to the sum of the
squares of the  other  two  sides.  In  other  words  the  length  of the
hypotenuse is the square root of the sum  of the squares of the other two
sides. If registers d0-d3 are  set  to  the  x/y  co-ordinates of the two
points, the code  below  calculates  the  distance  between  them  to the
nearest whole number and returns it in register d0.w.

Calculate distance between two points
d0 = x co-ord of 1st point
d1 = y co-ord of 1st point
d2 = x co-ord of 2nd point
d3 = y co-ord of 2nd point

                ..
                sub     d2,d0           calc difference in x co-ords
                bpl     label1          skip if positive
                neg     d0              convert to positive if neg
        label1  sub     d3,d1           calc difference in y co-ords
                bpl     label2          skip if positive
                neg     d1              convert to positive if neg
        label2  mulu    d0,d0           square x distance
                mulu    d1,d1           square y distance
                add.l   d1,d0           add x to y
                bsr     square_root     sets d0 to distance
                ..

