SUB-ROUTINE NAME        inp_hex
BRIEF DESCRIPTION       Inputs a hex number from keyboard
FILENAME                INP_HEX.S
OTHER RESOURCES         Uses KEYBRD and CHROUT sub-routines
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        Text cursor positioned on screen as reqd
                        #max constant set to number of hex digits reqd

EXIT PARAMETERS         d1.L holds hex number
                        d0 = last hex value entered if valid or
                           = last key pressed if invalid
                        d2 = actual number of digits entered
                        No other registers changed.
DETAILS -

This is a general purpose sub-routine for  entering a hex number from the
keyboard. It will handle up to 8 digits and will  display  the  digits on
screen as they are entered.

Before the sub-routine is called the 'max'  constant should be set to the
number of hex digits required (1-8). If  this  value is likely to vary at
different points in the program it can  be  defined as a variable and the
required value loaded into it before the routine is called.

Since the input values would normally be  displayed on screen as the user
enters them, the  text  cursor  should  be  set  to  the  required screen
position before the routine is called. The sub-routine 'keybrd' is a user
sub-routine which returns the value  of  the  keypress in register d0 and
the 'chrout' sub-routine  displays  the  value  in  d0  on  screen. These
routines  are not  defined  in  the  'inp_hex'  sub-routine but should be
present in the program.

To enter a hex number call the  routine,  as valid hex values are entered
they are displayed on  screen.  When  all  the  required digits have been
entered the routine returns  with  the  hex  number  in register d0.L and
register d2 will be equal to  #max.  The  program should check d2 to test
whether all digits have been entered  correctly.  If the user presses any
non-hex key, the routine will return immediately with register d1 holding
the hex value entered so far, register d2 holding the number of valid hex
digits that have been entered and register d0 holds the value of the last
key that was pressed. This allows  a  variable  size  of hex number to be
entered if required.

Note that as the 'hex_digit'  sub-routine  is  only  called once from the
'inp_hex'  sub-routine,  the two routines  could  be combined although it
could be useful to be able to use the 'hex_digit' routine on its own.

A typical program example is shown below :-

max     equ             8               get 8 digit value
        ..
        bsr             inp_hex         fetch hex number
        cmp             #max,d2         all digits entered ?
        bne             error           apparently not, d0=keypress
        move.l          d1,hex_store    save hex number as reqd
        ..
