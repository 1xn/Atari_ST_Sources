SUB-ROUTINE NAME        scroll_hi
BRIEF DESCRIPTION       Scrolls a section of hi-res screen up
FILENAME                SCROLLHI.S
OTHER RESOURCES         None
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        'screen' holds start address of screen.
                        scroll_lines = Number of lines to be scrolled.
                        scroll_top   = Top text line of scroll area.
                        scroll_left  = Left most column to be scrolled.
                        scroll_width = Number of text columns to scroll.

EXIT PARAMETERS         Screen area scrolled up one text line.

DETAILS -

This routine is used to scroll  a  section  of  the text screen up by one
text line and works only in high  resolution. The text screen consists of
25 lines (or rows) of 80 columns, each text character being 8 pixels wide
and 16 raster lines high. The programmer  must first decide which area of
the screen is to be  scrolled  and  then  calculate  the positions of the
various parameters which are then defined with the EQU pseudo-op.

For example, suppose a  window  has  been  drawn  on  the screen for text
output which is 20 columns wide  and  15  rows  high.  The top row of the
window is at row 5 and  the  left  column  is at column 30. The following
code would set the parameters for the sub-routine, remember that the rows
and columns start at 0 (and not 1).

                scroll_lines    equ     15
                scroll_top      equ     5
                scroll_left     equ     30
                scroll_width    equ     20

Before the sub-routine is used the start  address of the screen should be
fetched using the LogBase XBIOS  call  and  then copied into the 'screen'
variable store. For example -

                move    #3,-(sp)
                trap    #14
                addq.l  #2,sp
                move.l  d0,screen

To use the scroll routine  write  some  text  into  the bottom row of the
window (i.e. row 19 and columns  30-50  in this example) using the normal
VT52 BIOS routines and then call the scroll_hi routine to scroll the text
in the window up one row. The  bottom  row  of the window is then cleared
ready for the next line of text.

Note that if the original  set-up  parameters  need to be variable during
the  program,  the  sub-routine  code  will  need  modifying  since  some
calculations are done by  the  assembler  during  assembly time and these
will need to be done when the routine is executed.
