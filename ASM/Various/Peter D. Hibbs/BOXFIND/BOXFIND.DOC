SUB-ROUTINE NAME        box_find
BRIEF DESCRIPTION       Returns ident of box area on screen from co-ords
FILENAME                BOXFIND.S
OTHER RESOURCES         None
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

ENTRY PARAMETERS        a3 = address of start of box list.
                        d0 = x co-ord of mouse.
                        d1 = y co-ord of mouse.

EXIT PARAMETERS         d4 = box number or -1 if no box found.

DETAILS -

This is a simple routine to test  whether  the mouse cursor is within one
of a number of imaginary rectangles  on the graphics screen. For example,
if the screen is  displaying  a  number  of  button  images and the mouse
cursor is used to click on one  of  them  the program needs to know which
one (if any) has been selected. First  a  list of the co-ordinates of the
top left and  bottom  right  pixels  of  each  rectangle  is  made up and
terminated with a value of -1. The  list  consists of four dc.w words for
each button, the first defines the  x  co-ordinate of the top left corner
of the rectangle, the second is the y co-ordinate of the top left corner,
the third is the x co-ordinate of  the bottom right corner and the fourth
is the y co-ordinate of the bottom  right corner. This is followed by the
co-ordinates of the second box and  so  on. Don't forget to terminate the
list with a -1 code or the program is sure to crash. Each box in the list
should be commented with the ident of the box for future reference.

When the position of the mouse is to be checked register a3 is set to the
start address of the list and  the  current  x  and y co-ordinates of the
mouse pointer loaded into  registers  d0  and  d1  respectively. The sub-
routine is called and immediately returns with  the number of the box (or
-1 if the cursor is not on  any  of  the boxes) in register d4. The first
box in the list is box 0, the  next  one  is  box 1 and so on. The list/s
should be placed in the DATA section of the source code.

A typical program example is shown below -

        label1  vq_mouse                fetch mouse status & posn
                move    ptsout,d0       copy x co-ord to d0
                move    ptsout+2,d1     copy y co-ord to d1
                tst     intout          is a button pressed ?
                beq     label1          loop if not

                lea     box_list1,a3    use list 1
                bsr     box_find        compare d0/d1 with list
                cmp     #-1,d4          d4 = box ident (or -1)
                beq     label1          loop again if no box selected
                ...                     check d4 for box ident and
                ...                     jump to required code

                        section         DATA

        box_list1       dc.w    100,50,120,60   load button (0)
                        dc.w    100,70,120,80   save button (1)
                        dc.w    100,90,120,100  quit button (2)

                        dc.w    -1              end of list
