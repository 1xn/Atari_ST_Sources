SUB-ROUTINE NAME        Start up shell program
BRIEF DESCRIPTION       Initialise GEM (AES/VDI)
FILENAME                GEMSHELL.S
LANGUAGE                Assembler (Devpac)
AUTHOR                  Peter Hibbs

DETAILS
This is not actually a sub-routine but  a  'shell' program for use on any
new program. It is used as  the  basis  of any program which requires the
GEM system (as most  programs  do)  and  initialises  the  AES and VDI by
opening an application and then a  workstation.  The user just enters his
program as a sub-routine  call  'main'  and  returns  to  the desk top by
returning from the sub-routine  with  an  'rts' instruction. This 'shell'
only works with HiSofts  Devpac2  or  Devpac3  since  it uses the AES/VDI
library macro files (the Devpac  manual  gives  the macro definitions and
required parameters).

The 'ttl'  pseudo  op  instruction  defines  the  program  title  for any
printouts.
The 'include A:\gemmacro.i' (or gemmacro.s  for Devpac2) includes the gem
macro definitions. Set the pathname for your system set up.
The code at the start  of  the  program  calculates  the  size of the RAM
required, shinks the memory allocation and moves the program stack to the
end of it. See a text book for more info.
The application is opened and the application ident is saved in ap_id.
The graphics VDI handle is fetched  and stored in current_handle which is
defined in the VDI library file.
The intin array is then initialised with #1 or #2.
The work station is then opened,  the  mouse cursor hidden and the screen
cleared with the v_clrwk macro. This  may  be  omitted if the screen does
not need clearing.
The clipping rectangle is set  to  the  screen  size  (or larger) and the
polyline color set to black (if required).

If a resource file is loaded by  the  program  the next 5 lines should be
included (by removing the semi-colons) as well as the rsrc_free macro and
the  rsc_file/badrsc  lines  at  the  end   of  this  section.  The  dc.b
RESOURCE.RSC filename should be changed to  the name of the resource file
including the pathname if necessary. If a resource file is being used the
WERCS  resource  definition   file   (XXXXXX.I)   should   be  'included'
immediately after the  gemmacro.i  include  pseudo-op  instruction.  If a
resource file is not being used, these lines can be deleted.

The program then calls  the  sub-routine  'main'  which contains the user
program. To exit the program back to  the desk top a 'rts' instruction is
executed to return from the main sub-routine.

The resource file memory is returned to the system (if enabled).
The  mouse  cursor  is  displayed,  the   work  station  closed  and  the
application terminated. The program then returns to the desk top with the
p_term BIOS call.

The user program should be  inserted  immediately  after the 'main' label
and to keep the  program  source  code  tidy,  the  user and library sub-
routines copied to the next  two  sections.  Any defined constants (dc.?)
such as look-up  tables,  messages,  etc  should  be  placed  in the DATA
section and any variable stores or RAM buffers placed in the BSS section.
The stack is placed at the end of  the allocated memory, the value of 400
bytes may be increased or decreased as required.
The Devpac AES and VDI library files are 'included' at the end.
