<HTML>
<HEAD>
<TITLE>
FASHION/Le format ressource/g&eacute;n&eacute;ralit&eacute;s
</TITLE>
</HEAD>
<BODY>
<CENTER><H1>G&Eacute;N&Eacute;RALIT&Eacute;</H1></CENTER>

Sous Dolmen, tous les objets peuvent contenir eux-m&ecirc;me des objets. Ils
sont organis&eacute;s en arbre, mais sont stock&eacute;s en m&eacute;moire (et
de m&ecirc;me sur disque) sous la forme d'un tableau o&ugrave; les objets sont mis
les uns apr&egrave;s les autres.<br><br>

<IMG SRC="general.gif" ALT="" ALIGN=RIGHT>
Par exemple, sur la photo d'&eacute;cran ci-contre, on peut voire que la boite
principale est &agrave; la fois le parent du texte (Please Select...), de la boite
englobant les deux radio bouton (Screen et Printer) et du bouton de sortie
(OK). De plus, les deux radio boutons "Screen" et "Printer" sont enfants
d'une seconde boite qui permet d'englober ceux-ci. On peut repr&eacute;senter alors
ces six objets sous la forme d'arbre n-aire. Chaque objet &agrave; alors un num&eacute;ro
dans le tableau o&ugrave; ils sont plac&eacute;s, que l'on appelle index. Les relations
entres les diff&eacute;rents objets d&eacute;pendent justement de ces indexes.<br><br>

Les objets &eacute;tant stock&eacute;s les uns apr&egrave;s les autres dans un vecteur, on utilise
leur num&eacute;ro pour les d&eacute;signer. Chaque objet a donc un index unique
l'identifiant au seins d'une boite de dialogue (attention : deux objets dans
des dialogues diff&eacute;rentes peuvent avoir le m&ecirc;ˆme num&eacute;ro).<br><br>

<A HREF="tree.gif">
<IMG SRC="tree.gif" ALT="" WIDTH=424 HEIGHT=270 ALIGN=LEFT></a>
L'arbre ci-contre donne les relations entre les diff&eacute;rents objets de la
boite de dialogue ci-dessus.<br><br>

On voit que l'on a d‚fini 3 mots de 16 bits pour repr&eacute;senter les relations
entres les diff‚rents objets : "ob_next", "ob_head" et "ob_tail" qui sont
respectivement les index de l'objet suivant, du premier fils, et du dernier
fils.<br><br>

L'objet racine (root) contient toujours -1 dans son ob_next, puisqu'il ne
peut avoir d'objet au m&ecirc;me niveau que lui. Si il avait z&eacute;ro dans son ob_next
(erreur courante, semble-t-il), le syst&egrave;me entrerait dans une boucle infinie
o&ugrave; l'objet racine serait redessin&eacute; sans cesse. Les objets n'ayant pas de
descendance ont -1 dans leurs ob_head et ob_tail. Lorsqu'un objet est le
dernier d'un niveau, son ob_next contient alors l'index de son p&egrave;re.<br><br>

En plus de ces 3 mots de 16 bits, un objet graphique Dolmen comporte 18
octets suppl‚mentaire (ce qui fait donc une taille totale de 24 octets). En
voici la structure, au format du langage C :<br><br>

<font size=-1>
<pre>typedef struct objet {
   unsigned short   ob_next;   // Index de l'objet suivant du mˆme niveau
   unsigned short   ob_head;   // Index du premier fils
   unsigned short   ob_tail;   // Index du dernier fils
   unsigned char    ob_extype; // Type ‚tendu de l'objet (laiss‚ libre au programmeur)
   unsigned char    ob_type;   // Type de l'objet
   unsigned short   ob_flag;   // Champ de bit : paramŠtres de dessin et de comportement de l'objet
   unsigned short   ob_state;  // Champ de bit : ‚tat de l'objet
   void             *ob_spec;  // Donn‚es ou pointeurs sur donn‚es suppl‚mentaire de l'objet
   signed short     ob_x;      // Coordonn‚e X de l'objet
   signed short     ob_y;      // Idem Y
   unsigned short   ob_w;      // Largeur de l'objet
   unsigned short   ob_h;      // Hauteur
} objet;</font></pre>
<br>
<br>
L'octet ob_type informe de ce que contient l'ob_spec, qui peut soit
accueillir un champ de bit, soit un pointeur vers une structure.<br><br>

<a name=typeobj>
<center>
<table BORDER=+2><center><tr><td>
Valeur de l'ob_type</td><td>Nom du type l'objet</td><td>Description</td></tr><tr>
<td>20</td><td><A HREF="objc/gbox.htm">G_BOX</a></td><td>Boite</td></tr><tr>
<td>21</td><td><A HREF="objc/gtext.htm">G_TEXT</a></td><td>Texte format‚</td></tr><tr>
<td>22</td><td><A HREF="objc/gtext.htm">G_BOXTEXT</a></td><td>Texte format‚ dans une boite</td></tr><tr>
<td>23</td><td><A HREF="objc/gimage.htm">G_IMAGE</a></td><td>Image monochrome</td></tr><tr>
<td>24</td><td><A HREF="objc/guser.htm">G_PROGDEF</a></td><td>Objet utilisateur (routine de dessin programm‚)</td></tr><tr>
<td>25</td><td><A HREF="objc/gbox.htm">G_IBOX</a></td><td>Boite avec fond invisible</td></tr><tr>
<td>26</td><td><A HREF="objc/gbutton.htm">G_BUTTON</a></td><td>Bouton poussoir</td></tr><tr>
<td>27</td><td><A HREF="objc/gbox.htm">G_BOXCHAR</a></td><td>Boite contenant un caractŠre unique</td></tr><tr>
<td>28</td><td><A HREF="objc/gbutton.htm">G_STRING</a></td><td>ChaŒne de texte</td></tr><tr>
<td>29</td><td><A HREF="objc/gftext.htm">G_FTEXT</a></td><td>Texte format‚ ‚ditable</td></tr><tr>
<td>30</td><td><A HREF="objc/gftext.htm">G_FBOXTEXT</a></td><td>Texte format‚ ‚ditable dans une boite</td></tr><tr>
<td>31</td><td><A HREF="objc/gicon.htm">G_ICON</a></td><td>Ic“ne monochrome</td></tr><tr>
<td>32</td><td><A HREF="objc/gbutton.htm">G_TITLE</a></td><td>Titre de menu</td></tr><tr>
<td>33</td><td><A HREF="objc/gicon.htm">G_CICON</a></td><td>Ic“ne couleur (contenant plusieurs r‚solutions)</td></tr><tr>
<td>34</td><td><A HREF="objc/gbound.htm">G_BOUNDING</a></td><td>Objet pointant vers un autre formulaire</td></tr><tr>
<td>35</td><td><A HREF="objc/gbound.htm">G_BOUNDED</a></td><td>Objet affich‚ dans un G_BOUNDING</td></tr><tr>
<td>36</td><td><A HREF="objc/gpix.htm">G_PIX</a></td><td>Image contenue sur disque</td></tr><tr>
<td>37</td><td><A HREF="objc/gline.htm">G_LINE</a></td><td>Ligne param‚trable</td></tr></table></center><br><br>


Les menus sont ici consid&eacute;r&eacute; comme des boite de dialogue un peu
sp&eacute;ciale ou l'on n'affiche qu'une partie de l'arbre.<br><br>

Notez que toutes les cha&icirc;nes utilis&eacute;es par les objets
sont au format du language C (par opposition &agrave; celui du
Pascal), c'est &agrave; dire que leur fin est mat&eacute;rialis&eacute;e par
un octet nul.<br><br>

<br>
<A HREF="toc.htm">Retour &agrave; l'index</A> <A HREF="flags.htm">ob_flags et ob_states</a>
</BODY>
</HTML>