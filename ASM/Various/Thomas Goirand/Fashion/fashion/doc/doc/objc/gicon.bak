<HTML>
<HEAD>
<TITLE>
FASHION/Les objets un par un/G_ICON et G_CICON
</TITLE>
</HEAD>
<body>
<CENTER><H1>G_ICON et G_CICON</H1></CENTER>
<br>

<IMG SRC="gicon.gif" ALT="" ALIGN=RIGHT>
Si vous d&eacute;sirez utiliser des ic&ocirc;nes monochrome dans
vos ressources, c'est l'objet que vous devez utiliser. Il est
cependant pr&eacute;f&eacute;rable d'utiliser des objets G_CICON
qui permettent d'utiliser de la couleur.<br>
L'ob_spec d'un G_ICON pointe vers la structure suivant :<br><br>

<font size=-1><pre>
typedef struct icon_block {
	void		*ib_pmask;	// Pointeur vers le masque de l'ic“ne
	void		*ib_pdata;	// Pointeur vers les datas de l'ic“ne
	char		*ib_ptext;	// Pointeur vers le texte
	char		*ib_char;	// Lettre (de lecteur) de l'ic“ne et couleur
	unsigned short	ib_xchar;	// position du caractŠre de l'ic“ne par...
	unsigned short	ib_ychar;	// ... rapport a l'origine de celui-ci
	unsigned short	ib_xicon;	// Position en X et Y...
	unsigned short	ib_yicon;	// ...de l'ic“ne par rapport … ob_x/ob_y
	unsigned short	ib_wicon;	// Largeur du plan de bit de l'ic“ne
	unsigned short	ib_hicon;	// Idem hauteur
	unsigned short	ib_xtext;	// Position en X et Y du texte de l'ic“ne...
	unsigned short	ib_ytext;	// ...par rapport … ob_x/ob_y
	unsigned short	ib_wtext;	// Largeur du texte
	unsigned short	ib_htext;	// Hauteur du texte
} icon_block;</pre></font><br><br>

Le champ "ib_pmask" est un pointeur vers le masque de l'ic&ocirc;ne
(souvent en blanc) qui &eacute;vite que le fond soit dessin&eacute;
sur la zone o&ugrave; les bits sont positionn&eacute;. "ib_pdata"
est un pointeur vers le dessin proprement dit de l'ic&ocirc;ne
monochrome, et ib_ptext permet d'ajouter du texte sous l'ic&ocirc;ne.
Par exemple dans le cas d'un fichier, il est souhaitable d'y placer
le nom de celui-ci.<br><br>

<IMG SRC="gcicon.gif" ALT="" ALIGN=RIGHT>
Les ic&ocirc;nes couleurs (G_CICON) sont des ic&ocirc;nes monochrome
auquel on ajoute un pointeur en fin de structure icon_block :<br><br>

<font size=-1><pre>
typedef struct cicon_data {
	icon_block	mono_block;		// Structure d'ic“ne monochrome
	cicon		*resolution_list;	// Pointeur sur la liste chaŒn‚ de r‚solution
}cicon_data;</pre></font><br><br>

"*resolution_list" est un pointeur vers une liste cha&icirc;n&eacute;e
de plans de bits correspondant eux diff&eacute;rentes r&eacute;solution.
Ces structures sont de la forme suivante :<br><br>

<font size=-1><pre>
typedef struct cicon {
	unsigned short	num_planes;	// Nombre de plan de la structure
	void		*color_data;	// Pointeur vers le dessin
	void		*color_mask;	// Pointeur vers le masque
	void		*selected_data;	// Pointeur vers le dessin (s‚lectionn‚)
	void		*selected_mask;	// Pointeur vers le masque (s‚lectionn‚)
	struct cicon	*next_rez;	// Pointeur vers la r‚solution suivante
} cicon_block;</font></pre><br><br>

Il n'est pas oblig&eacute; d'avoir une partie s&eacute;lectionn&eacute;
dans une ic&ocirc;ne. A ce moment l&agrave;, "selected_data" contient
"-1". Pour terminer la liste cha&icirc;n&eacute;e, next_rez contient
un pointeur sur z‚ro (NULL).<br>
Lors du chargement d'une ressource en m&eacute;moire depuis le disque,
le syst&egrave;me recherche l'ic&ocirc;ne de r&eacute;solution &eacute;gale
ou imm&eacute;diatement inf&eacute;rieure &agrave; celle de l'&eacute;cran,
puis applique une transformation pour passer le plan de bit au format de l'‚cran.<br><br>


<A HREF="../toc.htm">Retour &agrave; l'index</A>

</body>
</html>