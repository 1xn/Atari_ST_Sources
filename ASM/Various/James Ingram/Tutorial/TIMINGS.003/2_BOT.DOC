                Getting rid of the bottom border


Almost as simple as the top border.   This time, we have to flick 
in and out of 60Hz at the bottom of the screen.  For this, we use 
timer B.  If you've played around with my TEST.PRG, and tryed the 
timer B numbers I suggested,  you will see how timer B can get us 
to the bottom of the screen without any hassle.

In the main part of my routine,  I turn timer B off.  Then, I set 
up the address,  and mask it in.   It is not yet on.  Although it 
is  masked  in,  the control byte is still 0.   Then I set  up  a 
simple $70 vector.   What this does, is turn timer B on, and tell 
it to execute on the 199th line of the screen.

The timer B code does the following when executed:

store registers
wait for the next screen line
flick into 60Hz
pause
flick back into 50Hz
restore register
clear the interrupt bit
return from interrupt


James Ingram, March 20th 1994

     I do not mind you using any parts of my code,  or any  ideas 
     of  mine.   All  I ask is that you give me a credit  for  my 
     ideas or code.  Cheers.

