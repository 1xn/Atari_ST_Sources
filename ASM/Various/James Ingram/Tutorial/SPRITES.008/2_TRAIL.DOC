                        Infinite Sprites?

You've seen 'em.   Screens full of a sprite which leaves a trail, 
building  up  to millions of sprites hurling  around.   How's  it 
done?   Well easy!   This will be a very short document,  because 
you already have the necessary code!

Quite simply, increase the no_of_screens in 1_SPRITE to more than 
3;  4 - 6 are nice numbers.   Then REMOVE the code which restores 
the old screen.  That's it.  Done.  Finished.  Finito.  Working.

Easiest thing you've ever done?  probably.


Why does it work?  Let's assume we've got 4 screens.  Here's what 
will happen the first 4 times around:

sprite at 0,0
sprite at 2,2
sprite at 4,4
sprite at 6,6

Now  we're back to the first screen.   Because we never  repaired 
it, the original sprite is still there.  So now we have:

sprite at 0,0 AND 8,8
then:
sprite at 2,2 and 10,10
sprite at 4,4 and 12,12
sprite at 6,6, and 14,14
sprite at 2,2 and 10,10 and 16,16...

and so on..  Ad inifitum.   Hence infinite sprites.  The ones you 
drew the first time around are still there,  and still appear  to 
be moving!

I first saw this effect in the ULM MegaDemo, and I was impressed.  
But  within a short time I had worked out how it  was  done,  and 
started  looking into demo coding more in-depth.   It is to  that 
that we owe these documents!

The  sprite I have used in 2_TRAIL is a slightly different  ball.  
All I did was fill the ball with blue, then fill the mask too.  I 
didn't leave them in SPRITE.PI1, because you can easily re-do the 
effect yourself.


James Ingram, May 17th 1994

     I do not mind you using any parts of my code,  or any  ideas 
     of  mine.   All  I ask is that you give me a credit  for  my 
     ideas or code.  Cheers.


