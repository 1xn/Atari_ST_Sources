                   Playing Samples on the STe

Playing  samples  using the STe hardware could  not  be  simpler.  
Basically, all we have to do is set up the start address, the end 
address, a few volume, bass and treble data, and tell it to go!

The    definitions    for   the   sound    registers    are    in 
\INCLUDES\STE_DEFS.S

There  are also several routines in \INCLUDES\SAMPLES.S  which  I 
use: set_up_ste, set_down_ste, load_a_sample


THE REGISTERS

The  register  we use to play samples are as follows (I  got  the 
info  from  an  ST  USER  coverdisk  document  written  by   Adam 
Greenwood).

enable      $ffff8900 - sound playing mode

base_high   $ffff8902 - start address of sample
base_mid    $ffff8904
base_low    $ffff8906

address_high $ffff8908 - address currently being played
address_mid  $ffff890a
address_low  $ffff890c

end_high     $ffff890e - end address of sample
end_mid      $ffff8910
end_low      $ffff8912

sound_mode   $ffff8920 - mono/stereo ans sample speed

micro_data   $ffff8922
micro_mask   $ffff8924 - registers for altering volume etc


The enable register can be:
     00   sound off
     01   play it once
     11   play forever

sound_mode controls whether the sample is mono or stereo.   Bit 7 
is the mono/stereo flag.  0 for stereo, 1 for mono.  Bits 0 and 1 
dictate the frequency of the sample:
     00 = 6.258 KHz
     01 = 12.517 KHz
     10 = 25.033 KHz
     11 = 50.066 KHz

The  micro_mask and micro_data registers are used to  change  the 
volumes (master,  left,  right), the bass and treble, and the mix 
with the sound chip.

To alter a setting,  you put $7ff into the mask, and then a value 
into the data. The possible values are:

master_vol  %10011000000
left_vol    %10101000000
right_vol   %10100000000
treble      %10010000000
bass        %10001000000
mix         %10000000000

Before you put the value into micro_data, you add the setting you 
require.   So if you want the master volume at 20,  you would  do 
this:

     move.w    #$7ff,micro_mask
     move.w    #master_vol+20,micro_data

The ranges are as follows:

Master Vol     0 - 40
Left Vol       0 - 20
Right Vol      0 - 20
Treble         0 - 12
Bass           0 - 12
Mix            0 - 3

The values of Mix mean the following:

0 = ??? -12dB apparently!  whatever that means!
1 = mix with sound chip
2 = don't mix with sound chip
3 = reserved for future use

Apparently,  from looking at Adam's source code,  you have to  be 
sure that the data has gone   


First, I call load_a_sample, to load in \INCLUDES\SAMPLE_1.AVR

It returns the sample address and the length, which I store away.

Then,  I disable the sound.  I get the address of the sample, and 
put  it into base_high,  using a MOVEP.   Then I add  the  sample 
length to get the end address,  which I put into end_high,  using 
another MOVEP.

I call the routine in SAMPLES.S which initialises the STe sound - 
master volume, bass, treble etc.

I  set  the sample to "mono" and 6Khz,  and then set  it  off  in 
infinite repeat mode.

Wait for a keypress.

Turn off the sound,  and call "set_down_ste", which allows normal 
STFM sound to be played again (the keyclick for example).

James Ingram, May 16th 1994

     I do not mind you using any parts of my code,  or any  ideas 
     of  mine.   All  I ask is that you give me a credit  for  my 
     ideas or code.  Cheers.




