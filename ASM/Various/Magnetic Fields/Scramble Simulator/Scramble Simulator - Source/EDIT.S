*************** INITIALISE ROUTINES **************

*	MOUSE OFF,JOYSTK OFF

START	MOVE.L	#KEYSET,-(A7)
	MOVE.L	#$190001,-(A7)	MOFF,JOFF USING ikbdws
	TRAP	#14
	ADDQ	#8,A7
	DC.W	$A000	INIT LINE A
	DC.W	$A00A	REMOVE MOUSE

*	SAVE OLD SR AND SSP AND ENTER SUPERVISOR MODE

	MOVE.L	A7,OLDUSP+2
	MOVE.W	SR,OLDSR+2
	MOVE.L	A7,-(A7)
	MOVE.W	#$20,-(A7)	CALL super
	TRAP	#1
	MOVE.L	D0,OLDSSP+2

*	STORE COLOUR PALLETTE

	LEA	$FFFF8240.W,A0
	LEA	OLDPAL,A1
	MOVEQ	#7,D0
STOPAL	MOVE.L	(A0)+,(A1)+
	DBF	D0,STOPAL

*	SET UP FLIP SCREEN ADDRESSES

	MOVE.L	$44E.W,SCREEN1+2    FLIP SCREEN 1
	MOVE.L	$44E.W,BLITBASE+2
	MOVE.L	#DISPLAY,D0
	ANDI.W	#$FF00,D0
	MOVE.L	D0,SCREEN2+2	FLIP SCREEN 2

*	REDIRECT VBL VECTOR

	MOVE.B	#-1,FLIPFLAG+1	NO FLIP YET
	MOVE.L	$70.W,OLDVBL+2
*	MOVE.L	#MYVBL,$70.W
	MOVE.L	#2,$466.W	SET COUNTER

*	LOAD BACKGROUND

RETRY	MOVE.L	#BACKFILE,LOADFILE+2
	MOVE.L	#PLANVIEW,READFILE+2
	BSR	OPENFILE

*	EXPAND BACKGROUND

	LEA	PLANVIEW,A0
	LEA	BACKGROUND,A1
	LEA	BACKGROUND+256,A2
	LEA	BACKGROUND+512,A3

	MOVEQ	#47,D0	48 LINES

.LOOP	MOVE.L	A1,A4
	MOVE.L	A2,A5
	MOVE.L	A3,A6
	MOVEQ	#63,D1	64 LONG WORDS

.LOOP1	MOVE.L	(A0),(A4)+
	MOVE.L	(A0),(A5)+
	CMPI.W	#32,D1
	BCS.S	.HALFDONE
	MOVE.L	(A0),(A6)+
.HALFDONE	ADDQ	#4,A0

	DBF	D1,.LOOP1

	ADDA.W	#640,A1
	ADDA.W	#640,A2
	ADDA.W	#640,A3
	DBF	D0,.LOOP

*	LOAD PLAN VIEW BLOCK AND COURSE

	MOVE.L	#PLANFILE,LOADFILE+2
	MOVE.L	#PLANMAP,READFILE+2
	BSR	OPENFILE

	MOVE.L	#TVIEWFILE,LOADFILE+2
	MOVE.L	#BLOCKS,READFILE+2
	BSR	OPENFILE

*	NOW BUILD PLAN VIEW FROM BLOCKS AND MAP

BUILDPLAN	LEA	PLANMAP+8,A0
	LEA	PLANVIEW,A1
	MOVEQ	#3,D0	4 BLOCKS HIGH

.LOOP	MOVE.L	A1,A2	COPY FOR EACH LINE OF BLOCKS
	MOVE.W	#129,D1	130*2 BLOCKS PER LINE

.LOOP1	MOVE.L	A2,A3	COPY FOR START OF EACH 2 BLOCKS
	LEA	BLOCKS,A4
	MOVE.L	A4,A5
	MOVE.B	(A0)+,D2	1ST BLOCK NO.
	EXT.W	D2
	LSL.W	#5,D2	*32
	ADDA.W	D2,A4
	MOVE.B	(A0)+,D2	2ND BLOCK NO.
	EXT.W	D2
	LSL.W	#5,D2
	ADDA.W	D2,A5
	MOVEQ	#7,D2	8 LINES HIGH

.LOOP2	MOVE.B	(A4)+,(A3)+
	MOVE.B	(A5)+,(A3)+
	MOVE.B	(A4)+,(A3)+
	MOVE.B	(A5)+,(A3)+
	MOVE.B	(A4)+,(A3)+
	MOVE.B	(A5)+,(A3)+
	MOVE.B	(A4)+,(A3)+
	MOVE.B	(A5)+,(A3)+
	ADDA.W	#1032,A3	NEXT LINE
	DBF	D2,.LOOP2

	ADDQ	#8,A2	NEXT 2 BLOCK PSTN
	DBF	D1,.LOOP1

	ADDA.W	#1040*8,A1	NEXT LINE OF BLOCKS
	DBF	D0,.LOOP

	LEA	PLANVIEW,A0
	MOVEQ	#31,D0	32 LINES

.LOOP3	MOVE.W	D0,D1	COPY FOR ROTATION
	LSR.W	#1,D1	0-15
	MOVE.W	#259,D2	260 LONG WORDS PER LINE

.LOOP4	MOVE.L	(A0),D3
	ROR.L	D1,D3
	MOVE.L	D3,(A0)+
	DBF	D2,.LOOP4

	DBF	D0,.LOOP3

*	LOAD INTERNAL BLOCK HEIGHTS

	MOVE.L	#HINTFILE,LOADFILE+2
	MOVE.L	#HEIGHTS,READFILE+2
	BSR	OPENFILE

*	LOAD BLOCKS

	MOVE.L	#SPRITEFILE,LOADFILE+2
	MOVE.L	#BLOCKS,READFILE+2
	BSR	OPENFILE

LOADED	MOVE.L	#0,D0	LENGTH OF FILE LOADED
	ADD.L	#BLOCKS,D0	START OF BLOCKS
	MOVE.L	D0,BLCKHGHTS	LOAD HEIGHTS HERE

*	LOAD BLOCK HEIGHTS

	MOVE.L	#HGHTFILE,LOADFILE+2
	MOVE.L	D0,READFILE+2
	BSR	OPENFILE

	MOVE.L	BLCKHGHTS,A0	HEIGHTS TABLE
	MOVE.L	A0,A1	COPY
	ADD.L	LOADED+2,A1	POINTERS TABLE
	MOVE.L	A1,BLOCKADDS	STORE BASE
	MOVE.L	A1,A2	COPY AS END OF HEIGHTS

*	BUILD BLOCK POINTERS TABLE

	MOVE.L	#BLOCKS,(A1)	FIRST BLOCK STARTS HERE
	MOVEQ	#0,D1	NUMBER OF BLOCKS

.LOOP	MOVE.B	(A0)+,D0	BLOCK HEIGHT
	BEQ.S	.DONE
	ADDQ	#1,D1
	MOVE.L	(A1)+,A3	BLOCK BASE
	EXT.W	D0
	LSL.W	#4,D0	*16 (2*4 PLANES PER LINE)
	ADDA.W	D0,A3	START OF NEXT BLOCK
	MOVE.L	A3,(A1)
	CMP.L	A0,A2	END OF HEIGHTS ?
	BNE.S	.LOOP	NO

.DONE	MOVE.L	A1,MASKBASE+2	STORE BASE OF MASKS
	MOVE.W	D1,NUMOFBLCKS+2	STORE NUMBER OF BLOCKS

*	LOAD MASKS

	MOVE.L	#MASKFILE,LOADFILE+2
	MOVE.L	A1,READFILE+2
	BSR	OPENFILE

	MOVE.L	BLCKHGHTS,A0	HEIGHTS TABLE
	MOVE.L	BLOCKADDS,A2	END OF HEIGHTS TABLE
	MOVE.L	MASKBASE+2,A1	MASKS
	ADD.L	LOADED+2,A1	MASK POINTERS GO HERE
	MOVE.L	A1,MASKADDS

*	BUILD MASK POINTERS TABLE

MASKBASE	MOVE.L	#0,(A1)

.LOOP	MOVE.B	(A0)+,D0	BLOCK HEIGHT
	BEQ.S	.DONE
	MOVE.L	(A1)+,A3	MASK BASE
	EXT.W	D0
	LSL.W	#3,D0	*8 (2 LONG WORD MASKS PER LINE)
	ADDA.W	D0,A3	START OF NEXT BLOCK
	MOVE.L	A3,(A1)
	CMP.L	A0,A2	END OF HEIGHTS ?
	BNE.S	.LOOP	NO

*	NB. A1=FREE SPACE AFTER MASK TABLE
*	LOAD INTERNAL HEIGHTS AND GRADIENTS,TRACION AND MAX SPEEDS
*	THEN LOAD COURSE DATA

.DONE	MOVE.L	A1,BLOCK0	START OF COURSE DATA
	MOVE.L	A1,CURRENTCOL+2

*	SET UP PALLETTE

	LEA	$FFFF8240.W,A0
	LEA	COLOURS,A1
	MOVEQ	#7,D0
DOPAL	MOVE.L	(A1)+,(A0)+
	DBF	D0,DOPAL

	MOVE.L	#TOPFILE,LOADFILE+2
	MOVE.L	#TOPBLOCKS,READFILE+2
	BSR	OPENFILE

	MOVE.L	#RESTFILE,LOADFILE+2
	MOVE.L	#RANGLES,READFILE+2
	BSR	OPENFILE

*	FOR THE EDITER

FOREDITER	MOVE.L	BLOCK0,D1
	ADDI.L	#24*251,D1
	MOVE.L	D1,ALLCOLS+2
	MOVE.L	#COURSEFILE,LOADFILE+2
	MOVE.L	D1,READFILE+2
	BSR	OPENFILE

	MOVE.L	BLOCK0,A2	UNCOMPRESSED DEST
	MOVE.L	A2,A1
	ADDA.W	#24*251,A1	COMPRESSED
	LEA	TOPBLOCKS+251*4,A3
	MOVE.W	#250,D0	251 BLOCKS
FIXBLOCKS	MOVEQ	#3,D1	4 BLOCKS MAX
	MOVE.L	A2,-(A3)	STORE CLOUMN START
FIXBLOCKS1	MOVE.L	(A1)+,D3
	MOVE.W	(A1)+,D2
*	CMP.L	NULLBLOCK,D3
*	BNE.S	NOTNULL
*	CMP.W	NULLBLOCK+4,D2
*	BEQ.S	FIXBLOCKS1
NOTNULL	MOVE.L	D3,(A2)+	STORE ALL NEXT BLOCK
	MOVE.W	D2,(A2)+	CHECK FOR END OF COLUMN
	SUBQ	#1,D1	DONE 4 BLOCKS ?
	BMI.S	FIXBLOCKS3	YES
	TST.W	D2	END OF THIS COLUMN ?
	BPL.S	FIXBLOCKS1	NO
FIXBLOCKS2	MOVE.L	NULLBLOCK,(A2)+ SET REMAINING TO NULL
	MOVE.W	NULLBLOCK+4,(A2)+
	DBF	D1,FIXBLOCKS2
FIXBLOCKS3	DBF	D0,FIXBLOCKS
	MOVE.L	NULLBLOCK,(A2)+
	MOVE.W	NULLBLOCK+4,(A2)+

*	TEST MOTOR AND DESELECT DRIVE

RETRY1	MOVE.L	#$180000,D0
WAITDISK	SUBQ.L	#1,D0
	BNE.S	WAITDISK

	BRA	STARTIT

SETTEXT	MOVE.B	#" ",(A3)+
	MOVE.B	(A1)+,D1
	BPL.S	NOTTOP1
	MOVE.B	#"T",-1(A3)
NOTTOP1	ANDI.W	#$7F,D1
	MOVE.L	A4,A2
	BSR	TENS
	MOVE.B	(A1)+,D1
	EXT.W	D1
	MOVE.L	A5,A2
	BSR	TENS
	MOVE.W	(A1)+,D1
	MOVE.L	A6,A2
	BSR	SIGNED
	MOVE.B	#" ",(A3)+
	MOVE.B	(A1)+,D1
	BPL.S	NOTEND1
	MOVE.B	#"E",-1(A3)
NOTEND1	MOVE.B	#" ",(A3)+
	BTST	#6,D1
	BEQ.S	NOTBASE1
	MOVE.B	#"B",-1(A3)
NOTBASE1	MOVE.B	#" ",(A3)+
	BTST	#5,D1
	BEQ.S	NOTCRASH1
	MOVE.B	#"C",-1(A3)
NOTCRASH1	MOVE.B	#" ",(A3)+
	BTST	#4,D1
	BEQ.S	NOTLIFT1
	MOVE.B	#"L",-1(A3)
NOTLIFT1	MOVE.B	#" ",(A3)+
	BTST	#3,D1
	BEQ.S	NOTANGLE1
	MOVE.B	#"A",-1(A3)
NOTANGLE1	MOVE.B	#" ",(A3)+
	BTST	#2,D1
	BEQ.S	NOTRST1
	MOVE.B	#"R",-1(A3)
NOTRST1	MOVE.B	#" ",(A3)+
	BTST	#1,D1
	BEQ.S	NOTDUCK1
	MOVE.B	#"D",-1(A3)
NOTDUCK1	MOVE.B	(A1)+,D1
	ANDI.W	#$FF,D1
	MOVE.L	A6,A2
	ADDA.W	#8,A2
	BRA	HUNDREDS

STATUS	LEA	NEWBLOCK1,A1
	LEA	FLAGS1,A3
	LEA	ZSIZE1,A4
	LEA	ZPOS1,A5
	LEA	YPOS1,A6
	BSR	SETTEXT
	LEA	NEWBLOCK2,A1
	LEA	FLAGS2,A3
	LEA	ZSIZE2,A4
	LEA	ZPOS2,A5
	LEA	YPOS2,A6
	BSR	SETTEXT
	LEA	NEWBLOCK3,A1
	LEA	FLAGS3,A3
	LEA	ZSIZE3,A4
	LEA	ZPOS3,A5
	LEA	YPOS3,A6
	BSR	SETTEXT
	LEA	NEWBLOCK4,A1
	LEA	FLAGS4,A3
	LEA	ZSIZE4,A4
	LEA	ZPOS4,A5
	LEA	YPOS4,A6
	BSR	SETTEXT
	LEA	TEXT,A1
PRINTLINE	MOVEM.L	D0-D7/A0-A6,-(A7)
	MOVE.L	A1,-(A7)
	MOVE.W	#9,-(A7)
	TRAP	#1
	ADDQ	#6,A7
	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS

SIGNED	MOVE.B	#" ",(A2)+
	TST.W	D1
	BPL.S	HUNDREDS
	MOVE.B	#"-",-1(A2)
	NEG.W	D1
HUNDREDS	MOVEQ	#0,D0
CALCHUN	CMPI.W	#100,D1
	BCS.S	GOTHUN
	SUBI.W	#100,D1
	ADDQ	#1,D0
	BRA.S	CALCHUN
GOTHUN	ADDI.B	#"0",D0
	MOVE.B	D0,(A2)+
TENS	MOVEQ	#0,D0
CALCTEN	CMPI.W	#10,D1
	BCS.S	GOTTEN
	SUBI.W	#10,D1
	ADDQ	#1,D0
	BRA.S	CALCTEN
GOTTEN	ADDI.B	#"0",D0
	MOVE.B	D0,(A2)+
	ADDI.B	#"0",D1
	MOVE.B	D1,(A2)+
	RTS

STARTIT	BSR	STATUS

MAIN	CLR.L	XSPEED+2
	CLR.L	YSPEED+2
	BSR	KEYCODE
	BEQ.S	MAIN
*	CMPI.B	#$D4,D0	F5
*	BNE.S	NOTESTING
*	MOVE.W	#-1,FLAGTEST+2
*	BRA	TESTCRSE
NOTESTING	CMPI.W	#$1,D0	ESCAPE
	BNE	NOTEXIT
	TST.L	EDITPOS+2
	BNE	NEWPSTN
	LEA	TOPBLOCKS+250*4,A1
	MOVE.W	#249,D0	250 COLUMNS
CHECKBLCKS	MOVE.L	-(A1),A2
	MOVEQ	#0,D1
	MOVEQ	#0,D2
CHECKBITS	OR.W	(A2)+,D1	TOPBLOCK FLAG
	ADDQ	#2,A2
	OR.W	(A2)+,D2	BASEBLOCK/ENDBLOCK FLAGS
	BMI.S	FOUNDEND
	OR.W	(A2)+,D1	TOPBLOCK FLAG
	ADDQ	#2,A2
	OR.W	(A2)+,D2	BASEBLOCK/ENDBLOCK FLAGS
	BMI.S	FOUNDEND
	OR.W	(A2)+,D1	TOPBLOCK FLAG
	ADDQ	#2,A2
	OR.W	(A2)+,D2	BASEBLOCK/ENDBLOCK FLAGS
	BMI.S	FOUNDEND
	OR.W	(A2)+,D1	TOPBLOCK FLAG
	ADDQ	#2,A2
	OR.W	(A2)+,D2	BASEBLOCK/ENDBLOCK FLAGS
FOUNDEND	TST.W	D1	CHECK TOPBLOCK
	BPL.S	NOSAVE
	TST.W	D2	CHECK ENDBLOCK
	BPL.S	NOSAVE
	BTST	#14,D2	CHECK BASEBLOCK
	BEQ.S	NOSAVE
	DBF	D0,CHECKBLCKS
	BRA.S	CONVERT
NOSAVE	MOVE.W	#250,D1
	SUB.W	D0,D1
	LEA	COLUMNON,A2
	BSR	HUNDREDS
	MOVE.L	(A1),CURRENTCOL+2
	BRA	DOSTATUS

KEYCODE	MOVEM.L	D1-D7/A0-A6,-(A7)
	MOVE.W	#$FF,-(A7)
	MOVE.W	#6,-(A7)
	TRAP	#1
	ADDQ	#4,A7
	MOVEM.L	(A7)+,D1-D7/A0-A6
	MOVE.B	D0,LASTKEY
	SWAP	D0
	TST.L	D0
	RTS

LASTKEY	DC.W	0

CONVERT	LEA	TOPBLOCKS+251*4,A1
	MOVE.L	BLOCK0,A3
	ADDA.W	#251*24,A3
	MOVE.W	#250,D0	251 COLUMNS
CONVERT1	MOVE.L	A3,D2
	MOVE.L	-(A1),A2
CONVERT2	MOVE.L	(A2)+,(A3)+
	MOVE.W	(A2)+,D1
	MOVE.W	D1,(A3)+
	BPL.S	CONVERT2
	SUB.L	BLOCK0,D2
	SUB.L	#251*24,D2
	MOVE.L	D2,(A1)
	DBF	D0,CONVERT1
	ADDQ	#6,D2
	MOVE.W	#$777,$FFFF8240.W
GETMODE	BSR.S	KEYCODE
	BEQ.S	GETMODE
	CMPI.B	#$E,D0	BACKSPACE
	BEQ	EXIT
	CMPI.B	#$3B,D0	F1
	BNE.S	LOADONLY
	CLR.W	REDO+2
	MOVE.W	#$700,$FFFF8240.W
	BRA.S	GETFNAME
LOADONLY	MOVE.W	#-1,REDO+2
	MOVE.W	#$7,$FFFF8240.W
GETFNAME	BSR	KEYCODE
	CMPI.B	#$39,D0	SPACE
	BNE.S	NOTDEFAULT
	MOVEQ	#0,D0
	BRA.S	GOTFNAME
NOTDEFAULT	SWAP	D0	KEYS A-O
	CMPI.B	#"A",D0
	BCS.S	GETFNAME
	CMPI.B	#"P",D0
	BCC.S	GETFNAME
GOTFNAME	CLR.W	$FFFF8240.W
	MOVE.B	D0,NEWCOURSE
	MOVE.B	D0,NEWTOPS
	MOVE.B	D0,NEWRANGLES
	MOVE.B	D0,NEWPLAN
	BEQ	REDO
	MOVE.W	#$50,COLOUR1
	MOVE.W	#$60,COLOUR2
	MOVE.W	#$532,COLOUR3
	MOVE.L	#$FFFFFFFF,PLANES12
	MOVE.L	#$FFFF,PLANES34
	CLR.L	GRND1+2
	MOVE.L	#$FFFF,GRND2+2
	CMPI.B	#"D",D0
	BCS.S	MUD
	CMPI.B	#"G",D0
	BCS	CON
	CMPI.B	#"J",D0
	BCS.S	GRASS
	CMPI.B	#"M",D0
	BCS	CON
MUD	MOVEQ	#"M",D0
	BRA	SETNAMES
GRASS	MOVEQ	#"G",D0
	MOVE.B	#"M",BACKFILE
	BRA.S	SETNAMES1
CON	MOVE.W	#$555,COLOUR1
	MOVE.W	#$333,COLOUR2
	MOVE.W	#$550,COLOUR3
	MOVE.L	#$FFFFFFFF,PLANES12
	MOVE.L	#$0,PLANES34
	MOVE.L	#$FFFF,GRND1+2
	MOVE.L	#$FFFF0000,GRND2+2
	MOVEQ	#"C",D0
SETNAMES	MOVE.B	D0,BACKFILE
SETNAMES1	MOVE.B	D0,HINTFILE
	MOVE.B	D0,SPRITEFILE
	MOVE.B	D0,HGHTFILE
	MOVE.B	D0,MASKFILE
	MOVE.B	D0,TVIEWFILE
REDO	MOVE.W	#-1,D0
	BNE	RETRY
	MOVE.L	#COURSEFILE,SAVENAME+2
	MOVE.L	BLOCK0,A6
	ADDA.W	#251*24,A6
	MOVE.L	A6,SAVEADD+2
	MOVE.L	D2,SAVELEN+2
	BSR	SAVEIT
	MOVE.L	#TOPFILE,SAVENAME+2
	MOVE.L	#TOPBLOCKS,SAVEADD+2
	MOVE.L	#4*251,SAVELEN+2
	BSR	SAVEIT
	MOVE.L	#RESTFILE,SAVENAME+2
	MOVE.L	#RANGLES,SAVEADD+2
	MOVE.L	#7682,SAVELEN+2
	BSR	SAVEIT
	MOVE.L	BLOCK0,A1
	LEA	TOPBLOCKS+251*4,A3
	MOVE.W	#250,D0	251 BLOCKS
FIXBLOCKS0	MOVE.L	A1,-(A3)
	ADDA.W	#24,A1
	DBF	D0,FIXBLOCKS0
	BRA	RETRY1

GETNUMBER	MOVEQ	#0,D1
	MOVEQ	#2,D3
NEXTNUMBER	MOVEM.L	D1-D7/A0-A6,-(A7)
	MOVE.W	#1,-(A7)
	TRAP	#1
	ADDQ	#2,A7
	MOVEM.L	(A7)+,D1-D7/A0-A6
	CMPI.B	#13,D0
	BEQ.S	NUMREAD
	SUBI.B	#"0",D0
	BMI.S	NONUMBER
	CMPI.B	#$9,D0
	BGT.S	NONUMBER
	MOVE.W	D1,D2
	MULU	#10,D2
	ANDI.W	#$FF,D0
	ADD.W	D0,D2
MAXNUM	CMPI.W	#251,D2
	BCC.S	NONUMBER1
	MOVE.W	D2,D1
	DBF	D3,NEXTNUMBER
NUMREAD	LEA	TEXT1,A1
	BSR	PRINTLINE
	RTS
NONUMBER	BSR.S	BACKSPACE
	BRA.S	NEXTNUMBER
NONUMBER1	BSR.S	BACKSPACE
	BSR.S	BACKSPACE
	BSR.S	BACKSPACE
	BRA.S	GETNUMBER
BACKSPACE	MOVEM.L	D0-D7/A0-A6,-(A7)
	MOVE.W	#8,-(A7)
	MOVE.W	#2,-(A7)
	TRAP	#1
	ADDQ	#4,A7
	MOVE.W	#" ",-(A7)
	MOVE.W	#2,-(A7)
	TRAP	#1
	ADDQ	#4,A7
	MOVE.W	#8,-(A7)
	MOVE.W	#2,-(A7)
	TRAP	#1
	ADDQ	#4,A7
	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS

NOTEXIT	CMPI.B	#$64,D0	KEYPAD )
	BNE.S	NOTFASTHZ
	CMPI.W	#320,HZSPEED+2
	BEQ.S	HZSPEED
	ADDQ.W	#1,HZSPEED+2
	BRA.S	HZSPEED	
NOTFASTHZ	CMPI.B	#$47,D0	CLR/HOME
	BNE.S	NOTSCREENR
	MOVE.W	#320,XSPEED+2
	BRA	NEWPSTN
NOTSCREENR	CMPI.B	#$4D,D0	RIGHT ARROW
	BNE.S	NOTRIGHT
HZSPEED	MOVE.W	#1,XSPEED+2
	BRA	NEWPSTN
NOTRIGHT	CMPI.B	#$63,D0	KEYPAD (
	BNE.S	NOTSLOWHZ
	TST.W	HZSPEED+2
	BEQ.S	HZSPEED2
	SUBQ.W	#1,HZSPEED+2
	BRA.S	HZSPEED2
NOTSLOWHZ	CMPI.B	#$52,D0	INSERT
	BNE.S	NOTSCREENL
	MOVE.W	#-320,XSPEED+2
	BRA	NEWPSTN
NOTSCREENL	CMPI.B	#$4B,D0	LEFT ARROW
	BNE.S	NOTLEFT
HZSPEED2	MOVE.W	HZSPEED+2,D0
	NEG.W	D0
	MOVE.W	D0,XSPEED+2
	BRA	NEWPSTN
NOTLEFT	CMPI.B	#$68,D0	KEYPAD 8
	BNE.S	NOTOFFUP
	SUBQ.W	#1,YOFSET+2
	BRA	NEWPSTN
NOTOFFUP	CMPI.B	#$6E,D0	KEYPAD 2
	BNE.S	NOTOFFDOWN
	ADDQ.W	#1,YOFSET+2
	BRA	NEWPSTN
NOTOFFDOWN	CMPI.B	#$31,D0
	BNE.S	NOTNEXTEDIT
	TST.L	EDITPOS+2
	BEQ.S	EDITNUM
	MOVE.L	EDITPOS+2,A1
	MOVE.L	CURRENTCOL+2,(A1)
EDITNUM	MOVE.W	#0,D1
	ADDQ.W	#1,D1
	CMPI.W	#251,D1
	BCS.S	NEXTEDIT
	MOVEQ	#1,D1
	BRA.S	NEXTEDIT
NOTNEXTEDIT	CMPI.B	#$12,D0	E/e
	BNE	NOTEDIT
EDITPOS	MOVE.L	#0,A1
	CMP.L	#0,A1
	BEQ.S	NEWEDIT
CURRENTCOL	MOVE.L	#BLOCKS,(A1)
	CLR.L	EDITPOS+2
	MOVE.L	OFF,EDITER
	BRA	DONEDIT
NEWEDIT	MOVE.W	#251,MAXNUM+2
	LEA	SELECT,A1
	BSR	PRINTLINE
	BSR	GETNUMBER
NEXTEDIT	MOVE.W	D1,D2
	NEG.W	D1
	BEQ	DONEDIT
	MOVE.W	D2,EDITNUM+2
	LEA	TOPBLOCKS,A1
	MOVE.L	ON,EDITER
	ADDI.W	#250,D1	BACK TO BLCK01,BLCK02 ETC
	LSL.W	#2,D1
	ADDA.W	D1,A1
	CMPI.B	#"e",LASTKEY
	BNE.S	NOTGETRESET
FINDRESET	MOVE.L	(A1),A2
	MOVE.W	4(A2),D1
	BTST	#10,D1
	BNE.S	NOTGETRESET
	MOVE.W	10(A2),D1
	BTST	#10,D1
	BNE.S	NOTGETRESET
	MOVE.W	16(A2),D1
	BTST	#10,D1
	BNE.S	NOTGETRESET
	SUBQ	#4,A1
	ADDQ	#1,D2
	CMPI.W	#250,D2
	BNE.S	FINDRESET
NOTGETRESET	MOVE.W	D2,D1
	MOVE.L	#245,D0
	SUB.W	D2,D0
	BGT.S	.NOTSMALL
	MOVEQ	#1,D0
.NOTSMALL	CMPI.W	#241,D0
	BCS.S	.GOTIT
	MOVE.W	#240,D0
.GOTIT	LSL.W	#5,D0
	SWAP	D0
	MOVE.L	D0,BIKEX+2
	LEA	COLUMNON,A2
	BSR	HUNDREDS
	MOVE.L	A1,EDITPOS+2
	MOVE.L	(A1),CURRENTCOL+2
	MOVE.L	#NEWBLOCK1,(A1)
	CMPI.B	#"N",LASTKEY
	BEQ.S	COPYIT
DONEDIT	BSR	NUMREAD
	BRA	NEWPSTN
NOTEDIT	CMPI.B	#$16,D0	U
	BNE.S	NOTUSE
	TST.L	EDITPOS+2
	BEQ	NEWPSTN
	MOVE.L	CURRENTCOL+2,A2
	LEA	NEWBLOCK1,A3
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	BRA	NEWPSTN
NOTUSE	CMPI.B	#$2E,D0	C
	BNE.S	NOTCURRENT
COPYIT	MOVE.L	CURRENTCOL+2,A3
	LEA	NEWBLOCK1,A2
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	MOVE.L	(A3)+,(A2)+
	BRA	DOSTATUS
NOTCURRENT	CMPI.B	#$2,D0	1-4
	BCS.S	NOTBLOCKNO
	CMPI.B	#$6,D0
	BCC.S	NOTBLOCKNO
	SWAP	D0
	MOVE.B	D0,BLOCKON
	BRA.S	DONEDIT
NOTBLOCKNO	CMPI.B	#$1F,D0	S
	BNE.S	NOTSWITCH
	BSR.S	GETSWITCH
	MOVE.L	A0,A1
	BSR.S	GETSWITCH
	MOVE.L	(A0),D0
	MOVE.L	(A1),(A0)+
	MOVE.L	D0,(A1)+
	MOVE.W	(A0),D0
	MOVE.W	(A1),(A0)+
	MOVE.W	D0,(A1)
	BRA	DOSTATUS

GETSWITCH	BSR	KEYCODE
	CMPI.B	#$2,D0
	BCS.S	GETSWITCH
	CMPI.B	#6,D0
	BCC.S	GETSWITCH
	SUBQ	#2,D0
	LSL.W	#1,D0
	MOVE.W	D0,D1
	LSL.W	#1,D0
	ADD.W	D1,D0
	LEA	NEWBLOCK1,A0
	ADDA.W	D0,A0
	RTS

NOTSWITCH	CMPI.B	#$21,D0	F
	BNE	NOTSETFLAG
	LEA	FLAGTEXT,A1
	BSR	PRINTLINE
	BSR	GETACTV
GETFLAG	BSR	KEYCODE
	BEQ.S	GETFLAG
	SWAP	D0
	CMPI.B	#"T",D0
	BNE.S	NOTTOPF
	EORI.W	#$8000,(A1)
	BRA.S	GETFLAG
NOTTOPF	CMPI.B	#"E",D0
	BNE.S	NOTENDF
	EORI.W	#$8000,4(A1)
	BRA.S	GETFLAG
NOTENDF	CMPI.B	#"B",D0
	BNE.S	NOTBASEF
	EORI.W	#$4000,4(A1)
	BRA.S	GETFLAG
NOTBASEF	CMPI.B	#"C",D0
	BNE.S	NOTCRASHF
	EORI.W	#$2000,4(A1)
	BRA.S	GETFLAG
NOTCRASHF	CMPI.B	#"L",D0
	BNE.S	NOTLIFTF
	EORI.W	#$1000,4(A1)
	BRA.S	GETFLAG
NOTLIFTF	CMPI.B	#"A",D0
	BNE.S	NOTANGLEF
	EORI.W	#$800,4(A1)
	BRA.S	GETFLAG
NOTANGLEF	CMPI.B	#"R",D0
	BNE.S	NOTRSTF
	EORI.W	#$400,4(A1)
	BRA.S	GETFLAG
NOTRSTF	CMPI.B	#"D",D0
	BNE.S	NOTDUCKF
	EORI.W	#$200,4(A1)
	BRA.S	GETFLAG
NOTDUCKF	CMPI.B	#$D,D0
	BNE.S	GETFLAG
DOSTATUS	BSR	STATUS
	BRA	NEWPSTN

GETACTV	LEA	NEWBLOCK1,A1
	MOVE.B	BLOCKON,D2
	SUB.B	#"1",D2
	EXT.W	D2
	LSL.W	#1,D2
	MOVE.W	D2,D1
	LSL.W	#1,D2
	ADD.W	D1,D2
	ADDA.W	D2,A1
	RTS

NOTSETFLAG	BSR.S	GETACTV

	CMPI.B	#$17,D0	I
	BNE.S	NOTINTO

	MOVE.B	1(A1),D1
MOVEIN	CMPI.B	#32,D1
	BCC.S	DOSTATUS

	ADDQ	#1,D1
	MOVE.B	D1,1(A1)
	MOVE.B	D1,BIKEZ+3
	BSR.S	GETSTATUS
	BNE.S	MOVEIN
	BRA.S	DOSTATUS

NOTINTO	CMPI.B	#$18,D0	O
	BNE.S	NOTOUTOF

MOVEOUT	MOVE.B	1(A1),D1
	BEQ.S	DOSTATUS

	SUBQ	#1,D1
	MOVE.B	D1,1(A1)
	MOVE.B	D1,BIKEZ+3
	BSR.S	GETSTATUS
	BNE.S	MOVEOUT
	BRA.S	DOSTATUS

NOTOUTOF	CMPI.B	#$34,D0	>
	BNE.S	NOTBIGGER

	MOVE.B	(A1),D1
	ANDI.B	#$7F,D1
BIGGER	CMPI.B	#96,D1
	BCC.S	DOSTATUS

	ADDQ	#1,D1
	MOVE.B	(A1),D2
	ANDI.B	#$80,D2
	OR.B	D1,D2
	MOVE.B	D2,(A1)
	BSR.S	GETSTATUS
	BNE.S	BIGGER
	BRA.S	DOSTATUS1

NOTBIGGER	CMPI.B	#$33,D0	<
	BNE.S	NOTSMALLER

	MOVE.B	(A1),D1
	ANDI.B	#$7F,D1
SMALLER	CMPI.B	#1,D1
	BEQ.S	DOSTATUS1

	SUBQ	#1,D1
	MOVE.B	(A1),D2
	ANDI.B	#$80,D2
	OR.B	D1,D2
	MOVE.B	D2,(A1)
	BSR.S	GETSTATUS
	BNE.S	SMALLER
DOSTATUS1	BRA	DOSTATUS

GETSTATUS	MOVEM.L	D1/A1,-(A7)
	BSR	STATUS
	MOVEM.L	(A7)+,D1/A1
	BRA	KEYCODE

NOTSMALLER	CMPI.B	#$66,D0	KEYPAD *
	BNE.S	NOTIDSPEED
	CMPI.W	#1,IDSPEED+2
	BEQ.S	FASTID
	MOVE.W	#1,IDSPEED+2
	BRA.S	SETBSPEED
FASTID	MOVE.W	#10,IDSPEED+2
SETBSPEED	CMPI.W	#1,BSPEED+2
	BEQ.S	FASTBSPEED
	MOVE.W	#1,BSPEED+2
	BRA	NEWPSTN
FASTBSPEED	MOVE.W	#10,BSPEED+2
	BRA	NEWPSTN

NOTIDSPEED	CMPI.B	#$4E,D0	KEYPAD +
	BNE.S	NOTIDUP
	MOVEQ	#0,D1
	MOVE.B	5(A1),D1
IDSPEED	ADD.W	#1,D1
NUMOFBLCKS	CMPI.B	#42,D1
	BCS.S	NOTMAXID
	SUB.W	NUMOFBLCKS+2,D1
NOTMAXID	MOVE.B	D1,5(A1)
	BSR.S	GETSTATUS
	BNE.S	IDSPEED
	BRA.S	DOSTATUS1

NOTIDUP	CMPI.B	#$4A,D0	KEYPAD -
	BNE.S	NOTIDDOWN
	MOVEQ	#0,D0
	MOVE.B	5(A1),D1
IDDOWN	SUB.W	IDSPEED+2,D1
	TST.W	D1
	BPL.S	NOTMINID
	ADD.W	NUMOFBLCKS+2,D1
NOTMINID	MOVE.B	D1,5(A1)
	BSR	GETSTATUS
	BNE.S	IDDOWN
	BRA.S	DOSTATUS2

NOTIDDOWN	CMPI.B	#$48,D0	UP ARROW
	BNE.S	NOTUP
	MOVE.W	2(A1),D1
BSPEED	SUBI.W	#1,D1
	MOVE.W	D1,2(A1)
	BSR	GETSTATUS
	BNE.S	BSPEED
	BRA.S	DOSTATUS2

NOTUP	CMPI.B	#$50,D0	DOWN ARROW
	BNE.S	NOTDOWN
	MOVE.W	2(A1),D1
YPOSDOWN	ADD.W	BSPEED+2,D1
	MOVE.W	D1,2(A1)
	BSR	GETSTATUS
	BNE.S	YPOSDOWN
	BRA.S	DOSTATUS2

NOTDOWN	CMPI.B	#$2D,D0	X
	BNE.S	NOTMAXW
	MOVE.W	(A1),D0
	ANDI.W	#$8000,D0
	ORI.W	#$6000,D0
	MOVE.W	D0,(A1)
DOSTATUS2	BRA	DOSTATUS

NOTMAXW	CMPI.B	#$1E,D0	A
	BNE.S	NOTALLUP
	LEA	NEWBLOCK1,A1
	SUBQ.W	#1,2(A1)
	SUBQ.W	#1,8(A1)
	SUBQ.W	#1,14(A1)
	SUBQ.W	#1,20(A1)
	BRA.S	DOSTATUS2

NOTALLUP	CMPI.B	#$2C,D0	Z
	BNE.S	NOTALLDOWN
	LEA	NEWBLOCK1,A1
	ADDQ.W	#1,2(A1)
	ADDQ.W	#1,8(A1)
	ADDQ.W	#1,14(A1)
	ADDQ.W	#1,20(A1)
	BRA.S	DOSTATUS2

NOTALLDOWN	MOVE.W	ANGLE+2,D1
	CMPI.B	#$6A,D0	KEYPAD 4
	BNE.S	NOTANGUP
	CMPI.W	#9,D1
	BEQ	NEWPSTN
	ADDQ	#1,D1
	MOVE.W	D1,ANGLE+2
	BRA	NEWPSTN

NOTANGUP	CMPI.B	#$6C,D0	KEYPAD 6
	BNE.S	NOTANGD
	CMPI.W	#-9,D1
	BEQ	NEWPSTN
	SUBQ	#1,D1
	MOVE.W	D1,ANGLE+2
	BRA	NEWPSTN

NOTANGD	CMPI.B	#$6B,D0	KEYPAD 5
	BNE.S	NOTANG0
	CLR.W	ANGLE+2
	BRA	NEWPSTN

NOTANG0	CMPI.B	#$30,D0	B
	BNE.S	NOTBLCKCOPY
	BSR	GETSWITCH
	MOVE.L	A0,A1
	BSR	GETSWITCH
	MOVE.L	(A1)+,(A0)+
	MOVE.W	(A1)+,(A0)+
	BRA	DOSTATUS

NOTBLCKCOPY	CMPI.B	#$32,D0	M
	BNE	NOTMOVE
	TST.L	EDITPOS+2
	BNE	NOTMOVE
	MOVE.W	#251,MAXNUM+2
	LEA	SLCTSTRT,A1
	BSR	PRINTLINE
	BSR	GETNUMBER
	LEA	TOPBLOCKS,A1
	NEG.W	D1
	BEQ	MOVED
	ADDI.W	#250,D1	BACK TO BLCK01,BLCK02 ETC
	LSL.W	#2,D1
	ADDA.W	D1,A1
	MOVE.L	(A1),-(A7)
	LEA	SLCTEND,A1
	BSR	PRINTLINE
	BSR	GETNUMBER
	LEA	TOPBLOCKS,A1
	NEG.W	D1
	BNE.S	NOTSAME
	MOVE.L	(A7),A1
	BRA.S	GOTMOVE
NOTSAME	ADDI.W	#250,D1	BACK TO BLCK01,BLCK02 ETC
	LSL.W	#2,D1
	ADDA.W	D1,A1
	MOVE.L	(A1),A1
GOTMOVE	MOVE.L	(A7),A2
	CMP.L	A1,A2
	BCS.S	LOWSTART
	MOVE.L	A1,(A7)
	MOVE.L	A2,A1
LOWSTART	ADDA.W	#24,A1
	MOVE.L	A1,-(A7)
	LEA	SLCTDEST,A1
	BSR	PRINTLINE
	BSR	GETNUMBER
	LEA	TOPBLOCKS,A1
	NEG.W	D1
	BNE.S	NOTCURCOL
	MOVE.L	CURRENTCOL+2,A1
	BRA.S	GOTMDEST
NOTCURCOL	ADDI.W	#250,D1	BACK TO BLCK01,BLCK02 ETC
	LSL.W	#2,D1
	ADDA.W	D1,A1
	MOVE.L	(A1),A1
GOTMDEST	MOVE.L	A1,-(A7)
	LEA	UDOFFSET,A1
	BSR	PRINTLINE
GETOFFSET	BSR	KEYCODE
	SWAP	D0
	CMPI.B	#" ",D0
	BNE.S	NOT0OFF
	CLR.W	-(A7)
	BSR	NUMREAD
	BRA.S	GOTOFF
NOT0OFF	CMPI.B	#"D",D0
	BNE.S	NOTPOSOFF
	CLR.W	-(A7)
	BRA.S	GOTDIR
NOTPOSOFF	CMPI.B	#"U",D0
	BNE.S	GETOFFSET
	MOVE.W	#-1,-(A7)
GOTDIR	MOVE.W	#900,MAXNUM+2
	LEA	OFFSIZE,A1
	BSR	PRINTLINE
	BSR	GETNUMBER
	TST.W	(A7)
	BPL.S	POSOFF
	NEG.W	D1
POSOFF	MOVE.W	D1,(A7)
GOTOFF	MOVE.W	(A7)+,D3
	MOVE.L	(A7)+,A1
	MOVE.L	(A7)+,A2
	MOVE.L	(A7)+,A3
	MOVE.L	BLOCK0,A4
	ADDA.W	#24*251,A4
MOVELOOP	MOVEQ	#3,D0
MOVELOOP1	MOVE.W	(A3)+,(A1)+
	MOVE.W	(A3)+,D1
	ADD.W	D3,D1
	MOVE.W	D1,(A1)+
	MOVE.W	(A3)+,(A1)+
	DBF	D0,MOVELOOP1
	CMP.L	A2,A3
	BCC.S	MOVED
	CMP.L	A4,A1
	BCS.S	MOVELOOP
MOVED	BRA	NEWPSTN

NOTMOVE	CMPI.B	#$62,D0	HELP
	BNE.S	NOTHELP
	LEA	MENU,A1
	BSR	PRINTLINE
WAITKEY	BSR	KEYCODE
	BEQ.S	WAITKEY
	LEA	MENU1,A1
	BSR	PRINTLINE
WAITKEY1	BSR	KEYCODE
	BEQ.S	WAITKEY1
	BRA	DOSTATUS

NOTHELP	CMPI.B	#$61,D0	UNDO
	BNE.S	NOTYOFF
	CLR.W	YOFSET+2
	BRA	NEWPSTN

NOTYOFF	CMPI.B	#$72,D0	KEYPAD RETURN
	BNE.S	NOTNEWREST
	MOVE.W	#-1,RESTFLAG+2
	BRA	NEWPSTN

NOTNEWREST	CMPI.B	#$43,D0
	BNE.S	NOTUSEREST
	EORI.B	#$FF,LALT+1
	BRA	NEWPSTN

NOTUSEREST	CMPI.B	#$44,D0	F10
	BNE	NOTRANG
	LEA	TOPBLOCKS,A1
	LEA	HEIGHTS,A2
	MOVE.W	#7680,D0	TO START POSITION
	LEA	BIKEDIFFS,A5
	LEA	RANGLES,A4
FINDREST1	MOVE.W	#-36,D1	ANGLE*4
	CLR.W	BESTANGLE+2
	MOVE.W	#500,BESTDIFF+2
	ADDI.W	#320-64,D0	TO BIKES POSITION
FINDREST	MOVE.L	0(A5,D1.W),D2	ALL 4 OFFSETS
	MOVE.L	D2,D3
	SWAP	D2	PUT FRONT IN LOW
	ANDI.W	#$FF,D2
	ANDI.W	#$FF,D3
	SUB.W	D2,D3	BACK-FRONT=WHEEL DIFF
	MOVE.L	D3,D4
	SWAP	D2
	SWAP	D4
	LSR.W	#8,D2	BACK X OFFSET
	LSR.W	#8,D4	FRONT X OFFSET
	NEG.W	D2
	NEG.W	D4
	ADD.W	D0,D2
	ADD.W	D0,D4
	MOVE.W	D4,D5
	BSR	GETYID
	MOVE.W	D4,D7
	BSR	GETHEIGHT0
	MOVE.W	D5,D4	FRONT GROUND HEIGHT
	MOVE.W	D2,D5
	BSR	GETYID
	MOVE.W	D2,D7
	BSR	GETHEIGHT0
	SUB.W	D5,D4	FRONT-BACK
	SUB.W	D4,D3	BIKEDIFF-GROUNDIFF
	BPL.S	BESTDIFF
	NEG.W	D3
BESTDIFF	CMPI.W	#500,D3
	BCC.S	SAMEDIFF
	MOVE.W	D3,BESTDIFF+2
	MOVE.W	D1,D3
	ASR.W	#2,D3
	MOVE.W	D3,BESTANGLE+2
SAMEDIFF	ADDQ	#4,D1
	CMPI.W	#40,D1
	BNE.S	FINDREST
BESTANGLE	MOVE.W	#0,D2
	SUBI.W	#320-64,D0
	MOVE.B	D2,0(A4,D0.W)
	DBF	D0,FINDREST1
	BRA	NEWPSTN

NOTRANG	CMPI.B	#$F,D0	TAB
	BNE.S	NEWPSTN
	TST.L	EDITPOS+2
	BNE.S	NEWPSTN
	MOVE.L	CURRENTCOL+2,A1
	MOVE.L	A1,A2
	ADDA.W	#24,A2
ALLCOLS	CMP.L	#BLOCKS,A2
	BEQ.S	NEWPSTN
	MOVE.L	(A1),(A2)+
	MOVE.L	4(A1),(A2)+
	MOVE.L	8(A1),(A2)+
	MOVE.L	12(A1),(A2)+
	MOVE.L	16(A1),(A2)+
	MOVE.L	20(A1),(A2)+
	BRA.S	ALLCOLS

NEWPSTN	BSR	BIKEX

	LEA	TOPBLOCKS,A1
	LEA	HEIGHTS,A2
	LEA	RANGLES,A4
	LEA	BIKEDIFFS,A5
	MOVE.W	BIKEX+2,D0	NEXT DRAW PSTN
LALT	MOVEQ	#0,D1
	BNE.S	USEREST0
	MOVE.W	ANGLE+2,D1
RESTFLAG	MOVE.W	#0,D2
	BEQ.S	SETANGLE
	MOVE.B	D1,0(A4,D0.W)
	CLR.W	RESTFLAG+2
	BRA.S	SETANGLE
USEREST0	MOVE.B	0(A4,D0.W),D1	GET REST ANGLE
	EXT.W	D1
	MOVE.W	D1,ANGLE+2
SETANGLE	ASL.W	#2,D1
	ADDI.W	#320-64,D0	TO START OF BIKE BLOCK
	MOVE.L	0(A5,D1.W),D2	ALL 4 OFFSETS
	MOVE.W	D2,D3	COPY BACK WHEEL VALUES
	ANDI.W	#$FF,D3	BACK HEIGHT
	LSR.W	#8,D2	BACK X OFFSET
	NEG.W	D2
	ADD.W	D0,D2
	MOVE.W	D2,D5
	BSR.S	GETYID
	MOVE.W	D2,D7
	BSR.S	GETHEIGHT0
	ADD.W	D3,D5
YOFSET	ADD.W	#0,D5
	MOVE.W	D5,BIKEY+2
	BRA	TESTING

*	ROUTINE TO GET TOPBLOCK Y PSTN AND ID
*	REQUIRES:- A1=TOPBLOCKS D5=X POSITION (WORD)
*	RETURNS Y PSTN IN D5 AND ID IN D6

GETYID	LSR.W	#3,D5
	ANDI.W	#$FFFC,D5
	MOVE.L	0(A1,D5.W),A6	START OF COLUMN
FINDTOPS	TST.W	(A6)+
	BMI.S	FOUNDTOPS
	ADDQ	#4,A6
	BRA.S	FINDTOPS
FOUNDTOPS	MOVE.W	(A6)+,D5	Y POSITION OF BLOCK TOP
	MOVE.W	(A6)+,D6
	ANDI.W	#$FF,D6	BLOCK ID
	RTS

*	ROUTINE TO GET HEIGHT OF GROUND
*	REQUIRES:- A2=HEIGHTS TABLE D5=BLOCK Y D6=BLOCK ID D7=BLOCK X
*	RETURNS Y POSITION IN D5

GETHEIGHT0	LSL.W	#5,D6	ID*32
	ADDI.W	#$1F,D6
	ANDI.W	#$1F,D7	PIXEL POSITION
	SUB.W	D7,D6
	MOVE.B	0(A2,D6.W),D7
	ADD.W	D7,D5
	RTS

BIKEX	MOVE.L	#320*24*65536,D0
XSPEED	SUBI.L	#0,D0
	BGT.S	NOWRAP
	ADDI.L	#320*24*65536,D0
	BRA.S	WRAPOK
NOWRAP	CMPI.L	#320*24*65536,D0
	BLS.S	WRAPOK
	SUBI.L	#320*24*65536,D0
WRAPOK	MOVE.L	D0,D1
	SWAP	D0
	SUB.W	BIKEX+2,D0
	MOVE.L	D1,BIKEX+2

	LEA	TOPBLOCKS,A1
	MOVE.L	HEIGHTS,A2
	LEA	RANGLES,A4
	LEA	BIKEDIFFS,A5
	SWAP	D1
	MOVE.B	0(A4,D1.W),D1	READ REST ANGLE AT NEW MAPOS
	EXT.W	D1
	MOVE.W	D1,RESTANGLE+2
	ADD.W	D0,MAPFRONT+2
	ADD.W	D0,MAPBACK+2

BIKEY	MOVE.L	#0,D0
YSPEED	ADDI.L	#0,D0
	MOVE.L	D0,D1
	SWAP	D0
	SUB.W	BIKEY+2,D0
	MOVE.L	D1,BIKEY+2
	ADD.W	D0,YFRONT+2
	ADD.W	D0,YBACK+2

BIKEZ	MOVE.W	#0,D0
ZMOVE	ADDI.W	#0,D0
	BPL.S	NEWZOK1
	MOVEQ	#0,D0
	BRA.S	NEWZOK
NEWZOK1	CMPI.W	#27,D0
	BCS.S	NEWZOK
	MOVE.W	#27,D0
NEWZOK	MOVE.W	D0,BIKEZ+2
	CLR.W	ZMOVE+2
	RTS

*	WAIT FOR SCREEN FLIP

*TESTING	CMPI.W	#1,$468.W
*	BNE.S	TESTING

*	ROUTINE TO PRINT SKY, BACKGROUND AND GRASS

TESTING	MOVE.W	BIKEY+2,D0
	NEG.W	D0
	ASR.W	#3,D0
	ADDI.W	#24,D0	LINES OF SKY
	MOVE.W	D0,BACKPOS+2	LINES DOWN FOR BACKGROUND
	MOVEQ	#48,D6
	ADD.W	D0,D6	GROUND JUMP OFFSET
	MOVEQ	#96,D7
	SUB.W	D0,D7	SKY JUMP OFFSET IF - THEN USE 0 IF >= 96 THEN NO SKY
	BPL.S	SKYSIZEOK
	MOVEQ	#0,D7
	MOVEQ	#96,D0
SKYSIZEOK	CMPI.W	#95,D7
	BHI.S	NOSKY
	MOVE.L	BLITBASE+2,A4
	MULU	#160,D0
	ADDA.W	D0,A4	START ADDRESS FOR SKY (BACKWARDS)
	LEA	SKYGROUND,A5
	LSL.W	#4,D7
	ADDA.W	D7,A5
	MOVE.L	#$FFFF0000,D0
	MOVE.L	#0,D1
	MOVE.L	D0,D2
	MOVE.L	D1,D3
	MOVE.L	D0,D4
	MOVE.L	D1,D5
	MOVE.L	D0,A0
	MOVE.L	D1,A1
	MOVE.L	D0,A2
	MOVE.L	D1,A3
	JSR	(A5)
NOSKY	TST.W	D6
	BPL.S	GRNDSIZEOK
	MOVEQ	#0,D6
GRNDSIZEOK	CMPI.W	#95,D6
	BHI.S	NOGROUND
	MOVE.L	BLITBASE+2,A4
	ADDA.W	#96*160,A4
	LEA	SKYGROUND,A5
	LSL.W	#4,D6
	ADDA.W	D6,A5
GRND1	MOVE.L	#$0,D0
GRND2	MOVE.L	#$FFFF,D1
	MOVE.L	D0,D2
	MOVE.L	D1,D3
	MOVE.L	D0,D4
	MOVE.L	D1,D5
	MOVE.L	D0,A0
	MOVE.L	D1,A1
	MOVE.L	D0,A2
	MOVE.L	D1,A3
	JSR	(A5)
NOGROUND	MOVEQ	#48,D2	NORMAL SIZE (LINES)
	MOVEQ	#0,D1	LINES DOWN SOURCE
BACKPOS	MOVE.W	#0,D0	LINES DOWN DEST.
	BPL.S	BACKON
	NEG.W	D0
	CMPI.W	#47,D0
	BHI	NOBACKGRND
	MOVE.W	D0,D1	THIS MANY OFF TOP
	SUB.W	D0,D2	REDUCE COUNT
	MOVEQ	#0,D0	START AT TOP
	BRA.S	BACKSET
BACKON	CMPI.W	#95,D0
	BHI	NOBACKGRND
	CMPI.W	#49,D0
	BCS.S	BACKSET
	MOVEQ	#96,D2
	SUB.W	D0,D2
BACKSET	MOVE.W	D2,LINECOUNT
	MOVEQ	#47,D6
	SUB.W	D1,D6
	MOVE.W	BIKEX+2,D3
	LSR.W	#3,D3
	MOVE.W	D3,D7
	ANDI.W	#15,D7
	LSR.W	#1,D3
	ANDI.W	#$FFF8,D3
	LEA	BACKGROUND+640-168,A0
	MULU	#640,D1
	SUB.W	D3,D1
	ADDA.W	D1,A0
	MOVE.L	BLITBASE+2,A1
	MULU	#160,D0
	ADDA.W	D0,A1

	LEA	MASKS,A2	MASKS FOR CARRIES
	MOVE.W	D7,D1	COPY REQUIRED ROTATION
	LSL.W	#2,D1	LONGWORD MASKS
	MOVE.L	0(A2,D1.W),D1	GET MASKS FOR CARRIES
	MOVE.L	D1,D2	COPY MASKS
	NOT.L	D2	NOT FOR MASKS FOR REMAINS

NEXTLINE	MOVE.W	D6,D0	COPY LINE COUNT FOR SOURCE ROTATION
	ANDI.W	#15,D0	SOURCE ROTATION 0-15
	SUB.W	D7,D0	SUBTRACT REQUIRED ROTATION
	BGT	NORMLBACKR	>0 THEN EITHER NORMAL LEFT OR BACKWARDS RIGHT
	CMPI.W	#-8,D0	<-8 THEN BACKWARDS LEFT
	BLT	BACKLEFT	ELSE NORMAL RIGHT

NORMRIGHT	NEG.W	D0	0-8 FOR RIGHT

.NORMRIGHT	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROR.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROR.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS

.LINE1	REPT	19

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTBACKLINE

BACKLEFT	ADDI.W	#16,D0	1-7 FOR LEFT

	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROL.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROL.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER

.LINE1	REPT	19

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTBACKLINE

NORMLBACKR	CMPI.W	#7,D0	0<X>7 THEN BACKWARDS RIGHT
	BHI	BACKRIGHT	ELSE NORMAL LEFT

NORMLEFT	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROL.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROL.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS

.LINE1	REPT	19

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTBACKLINE

BACKRIGHT	NEG.W	D0	0-8 FOR RIGHT
	ADDI.W	#16,D0	ROTATION

	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROR.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROR.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER

.LINE1	REPT	19

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

NEXTBACKLINE	ADDA.W	#472,A0	NEXT SOURCE LINE
	SUBQ.W	#1,D6
	SUBQ.W	#1,LINECOUNT
	BNE	NEXTLINE	NEXT LINE

NOBACKGRND	MOVE.W	BIKEX+2,D6	IGNORE FRACTION
	MOVE.W	D6,D3	COPY
	ANDI.W	#31,D3	INTERNAL BIT POSITION 0-31
	MOVE.W	D3,D1	COPY REQUIRED ROTATION
	ANDI.W	#15,D1	ROTATION 0-15
	LEA	MASKS,A0	CARRY MASK TABLE
	LSL.W	#2,D1	LONG WORD INDEX
	MOVE.L	0(A0,D1.W),D1	CARRY MASK
	MOVE.L	D1,CARRYMASK+2	STORE
	NOT.L	D1	REMAINS MASK
	MOVE.L	D1,RMNSMASK+2	STORE
	LSR.W	#5,D6	FIRST BLOCK POSITION
	ADDI.W	#10,D6	TEN FOR LAST SCREEN
	LSL.W	#2,D6	LONG WORD INDEX
	MOVE.W	D6,D7	COPY FOR FRONTBLOCKS
	MOVEQ	#0,D2	NUMBER OF BLOCKS IN FRONT
	MOVEQ	#0,D5	COLUMN 0 OF 11 (0-160)
	LEA	TOPBLOCKS,A0	POINTERS TO FIRST BLOCKS
	MOVE.L	BLCKHGHTS,A5	OVERALL HEIGHTS
BACKBLOCKS	MOVE.L	0(A0,D6.W),A1	DATA BASE FOR COLUMN
DRAWTEST	MOVE.W	(A1)+,D0	FLAGS, ZSIZE+ZPOS
	BTST	#14,D0	FLAG FOR SKIP+WATER ?
	BNE.S	SKIPWATER	YES, GOES IN FRONT OF BIKE
	TST.W	D0	TOPBLOCK ?
	BMI.S	BEHIND	YES, GOES BEHIND BIKE
SKIPWATER	SUBQ	#2,D0
	CMP.B	BIKEZ+3,D0	BEHIND BIKE ?
	BGT.S	BEHIND	YES
	ADDQ.W	#1,D2	ANOTHER IN FRONT
	ADDQ	#2,A1	SKIP DATA FOR THIS BLOCK
	TST.W	(A1)+	LAST BLOCK ?
	BMI.S	NEWCOLUMN	YES
	BRA.S	DRAWTEST
BEHIND	BSR	BLOCKPOS	PSTN AND DRAW BLOCK
FLAGHERE	MOVE.W	#0,D4	LAST BLOCK ?
	BPL.S	DRAWTEST	NO
NEWCOLUMN	SUBQ.W	#4,D6	NEXT COLUMN IN BLOCKS
	ADDI.W	#16,D5	NEXT COLUMN ON SCREEN
	CMPI.W	#176,D5	DONE ALL 11 COLUMNS ?
	BNE.S	BACKBLOCKS	NO

*	ROUTINE TO DRAW BIKE GOES HERE !!
*	A0, D2, D7 RESERVED

	MOVE.L	BLITBASE+2,A3
	ADDA.W	#32+20*160,A3
	LEA	BIKES,A4
ANGLE	MOVE.W	#0,D0
	MULS	#2688,D0
	ADDA.W	D0,A4

DRAWBIKE	REPT	56

	MOVE.L	(A4)+,D0	GET MASK
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN

	MOVE.L	(A4)+,D0	GET MASK
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN

	MOVE.L	(A4)+,D0	GET MASK
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN

	MOVE.L	(A4)+,D0	GET MASK
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN
	MOVE.L	(A3),D1	SCREEN DATA
	AND.L	D0,D1	HOLE FOR GRAPHICS
	OR.L	(A4)+,D1	OR IN GRAPHICS
	MOVE.L	D1,(A3)+	BACK TO SCREEN

	ADDA.W	#128,A3

	ENDR

	TST.W	D2	ANY BLOCKS IN FRONT ?
	BEQ.S	NOFRONT	NO
	MOVE.W	BIKEX+2,D3	IGNORE FRACTION
	ANDI.W	#31,D3	INTERNAL BIT POSITION 0-31
	MOVEQ	#0,D5	CLOUMN 0 OF 11 (0-160)
	MOVE.L	BLCKHGHTS,A5	OVERALL HEIGHTS
FRONTBLOCKS	MOVE.L	0(A0,D7.W),A1	DATA BASE FOR NEXT BLOCK
NEXTBLOCK1	MOVE.W	(A1)+,D0
	BTST	#14,D0
	BNE.S	SKIPWATER1
	TST.W	D0
	BMI.S	DRAWN
SKIPWATER1	SUBQ	#2,D0
	CMP.B	BIKEZ+3,D0
	BLE.S	ATFRONT
DRAWN	ADDQ	#2,A1
	TST.W	(A1)+
	BPL.S	NEXTBLOCK1
NEXTCOL	SUBQ.W	#4,D7
	ADDI.W	#16,D5
	CMPI.W	#176,D5
	BNE.S	FRONTBLOCKS
	BRA.S	NOFRONT
ATFRONT	BSR	BLOCKPOS
	SUBQ.W	#1,D2
	BEQ.S	NOFRONT
	TST.W	FLAGHERE+2
	BMI.S	NEXTCOL
	BRA.S	NEXTBLOCK1

NOFRONT	MOVE.W	BIKEX+2,D3
	LSR.W	#2,D3
	MOVE.W	D3,D7
	ANDI.W	#15,D7
	LSR.W	#1,D3
	ANDI.W	#$FFF8,D3
	LEA	PLANVIEW+1040-88,A0
	SUBA.W	D3,A0
	MOVE.L	BLITBASE+2,A1
	ADDA.W	#168*160+40,A1

	LEA	MASKS,A2	MASKS FOR CARRIES
	MOVE.W	D7,D1	COPY REQUIRED ROTATION
	LSL.W	#2,D1	LONGWORD MASKS
	MOVE.L	0(A2,D1.W),D1	GET MASKS FOR CARRIES
	MOVE.L	D1,D2	COPY MASKS
	NOT.L	D2	NOT FOR MASKS FOR REMAINS

	MOVEQ	#31,D6	32 LINES HIGH

PNEXTLINE	MOVE.W	D6,D0	COPY LINE COUNT FOR SOURCE ROTATION
	LSR.W	#1,D0	SOURCE ROTATION 0-15
	SUB.W	D7,D0	SUBTRACT REQUIRED ROTATION
	BGT	PNORMLBACKR	>0 THEN EITHER NORMAL LEFT OR BACKWARDS RIGHT
	CMPI.W	#-8,D0	<-8 THEN BACKWARDS LEFT
	BLT	PBACKLEFT	ELSE NORMAL RIGHT

PNORMRIGHT	NEG.W	D0	0-8 FOR RIGHT

.NORMRIGHT	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROR.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROR.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS

.LINE1	REPT	9

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTPLANLINE

PBACKLEFT	ADDI.W	#16,D0	1-7 FOR LEFT

	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROL.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROL.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER

.LINE1	REPT	9

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTPLANLINE

PNORMLBACKR	CMPI.W	#7,D0	0<X>7 THEN BACKWARDS RIGHT
	BHI	PBACKRIGHT	ELSE NORMAL LEFT

PNORMLEFT	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROL.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROL.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS

.LINE1	REPT	9

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D4	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D5	PUT CARRIES IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROL.L	D0,D3	ROTATE PLANES
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	BRA	NEXTPLANLINE

PBACKRIGHT	NEG.W	D0	0-8 FOR RIGHT
	ADDI.W	#16,D0	ROTATION

	MOVE.L	(A0)+,D4	SOURCE 1ST 2 PLANES
	ROR.L	D0,D4	ROTATE PLANE1
	AND.L	D1,D4	CARRY-OVER
	MOVE.L	(A0)+,D5	SOURCE 2ND 2 PLANES
	ROR.L	D0,D5	ROTATE PLANE3
	AND.L	D1,D5	CARRY-OVER

.LINE1	REPT	9

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D4	COPY PLANES
	AND.L	D1,D4	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	MOVE.L	D3,D5	COPY PLANES
	AND.L	D1,D5	CARRY-OVER
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	ENDR

	MOVE.L	D4,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	1ST 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

	MOVE.L	D5,(A1)	STORE CARRY-OVER
	MOVE.L	(A0)+,D3	2ND 2 PLANES
	ROR.L	D0,D3	ROTATE PLANES
	SWAP	D3	PUT REMAINS IN CORRECT WORDS
	AND.L	D2,D3	REMAINS
	OR.L	D3,(A1)+	PUT REMAINS ON SCREEN

NEXTPLANLINE	ADDA.W	#952,A0	NEXT SOURCE LINE
	ADDA.W	#80,A1	NEXT DEST. LINE
	DBF	D6,PNEXTLINE

	LEA	TOPBIKE,A0
	MOVE.W	ANGLE+2,D0
	CMPI.W	#6,D0
	BGT.S	GOTTOP
	ADDA.W	#60,A0
	CMPI.W	#2,D0
	BGT.S	GOTTOP
	ADDA.W	#60,A0
	CMPI.W	#-3,D0
	BGT.S	GOTTOP
	ADDA.W	#60,A0
	CMPI.W	#-7,D0
	BGT.S	GOTTOP
	ADDA.W	#60,A0
GOTTOP	MOVE.L	BLITBASE+2,A1
	MOVE.W	BIKEZ+2,D0
	MULU	#160,D0
	ADDA.W	#(168+27)*160+48,A1
	SUBA.W	D0,A1

DOTOP	REPT	4

	MOVE.L	(A0)+,D0
	AND.L	D0,(A1)
	MOVE.L	(A0)+,D1
	OR.L	D1,(A1)+
	AND.L	D0,(A1)
	MOVE.L	(A0)+,D1
	OR.L	D1,(A1)+

	ADDA.W	#152,A1

	ENDR

	MOVE.L	(A0)+,D0
	AND.L	D0,(A1)
	MOVE.L	(A0)+,D1
	OR.L	D1,(A1)+
	AND.L	D0,(A1)
	MOVE.L	(A0)+,D1
	OR.L	D1,(A1)+

	LEA	DIALS,A0
REVS	MOVE.W	#0,D0
	ADDQ.W	#8,D0
	CMPI.W	#$7E,D0
	BLT.S	REVSOK
	MOVEQ	#0,D0
REVSOK	MOVE.W	D0,REVS+2
	LSR.W	#2,D0	0-15
	ANDI.W	#$FFFE,D0	*2
	LEA	DIALVALS,A1
	ADDA.W	0(A1,D0.W),A0
	MOVE.L	BLITBASE+2,A1
	ADDA.W	#152*160,A1

DOREVS	REPT	15

	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+

	ADDA.W	#152,A1

	ENDR

	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+

	LEA	DIALS,A0
SPEED	MOVE.W	#0,D0
	ADDQ.W	#1,D0
	CMPI.W	#$10,D0
	BLT.S	SPEEDOK
	MOVEQ	#0,D0
SPEEDOK	MOVE.W	D0,SPEED+2
	LSL.W	#1,D0	0-15 *2
	LEA	DIALVALS,A1
	ADDA.W	0(A1,D0.W),A0
	MOVE.L	BLITBASE+2,A1
	ADDA.W	#152*160+8,A1

DOSPEED	REPT	15

	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+

	ADDA.W	#152,A1

	ENDR

	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+

OFFSET	MOVE.W	#0,D2
	MOVE.B	$469.W,D0
	ANDI.W	#$7F,D0
.LOOP	CMPI.B	#100,D0
	BCS.S	.NUMOK
	SUBI.B	#100,D0
	BRA.S	.LOOP
.NUMOK	MOVEQ	#0,D1
GETTENS	CMPI.B	#10,D0
	BCS.S	GOTTENS
	ADDQ	#1,D1
	SUBI.B	#10,D0
	BRA.S	GETTENS
GOTTENS	MOVE.B	D0,UNITS+1
	MOVE.L	BLITBASE+2,A1
	ADDA.W	#152*160+16,A1
	ADDA.W	D2,A1
	LSL.W	#5,D1
	LEA	DIGITS,A0
	ADDA.W	D1,A0

DIGHIGH	REPT	7

	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDA.W	#154,A1

	ENDR

	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)

	MOVE.L	BLITBASE+2,A1
	ADDA.W	#152*160+17,A1
	ADDA.W	D2,A1
UNITS	MOVEQ	#0,D1
	LSL.W	#5,D1
	LEA	DIGITS,A0
	ADDA.W	D1,A0

DIGLOW	REPT	7

	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDA.W	#154,A1

	ENDR

	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)
	ADDQ	#2,A1
	MOVE.B	(A0)+,(A1)

	ADDI.W	#16,D2
	CMPI.W	#64,D2
	BCS.S	OFFOK
	MOVEQ	#0,D2
OFFOK	MOVE.W	D2,OFFSET+2

	BRA	MAIN


	SUB.L	#$00000,BIKEY+2
	ADD.L	#$10000,BIKEX+2
	CMPI.L	#$4000000,BIKEX+2
	BNE	TESTING

*	RESTORE COLOUR PALLETTE, MOUSE, STACK AND EXIT

EXIT	LEA	$FFFF8240.W,A1
	LEA	OLDPAL,A0
	MOVEQ	#7,D0
RESTOPAL	MOVE.L	(A0)+,(A1)+
	DBF	D0,RESTOPAL
	MOVE.L	#KEYS1,-(A7)
	MOVE.L	#$190003,-(A7)	RESET KYBRD,MON,JON
	TRAP	#14
	ADDQ	#8,A7
OLDVBL	MOVE.L	#0,$70.W
	DC.W	$A009	PUT MOUSE BACK
	MOVE.L	SCREEN1+2,D0
	SWAP	D0
	MOVE.B	D0,$FFFF8201.W
	SWAP	D0
	LSR.W	#8,D0
	MOVE.B	D0,$FFFF8203.W
OLDSSP	MOVE.L	#0,A7
OLDSR	MOVE.W	#0,SR
OLDUSP	MOVE.L	#0,A7
	CLR.W	-(A7)
	TRAP	#1

*	ROUTINE TO POSITION AND DRAW BLOCKS ON SCREEN

BLOCKPOS	MOVEM.L	D0-D7,-(A7)	STACK REGS.
	MOVE.W	(A1)+,D0	BLOCKS YPOS
	MOVE.W	(A1)+,D4	BLOCK ID. AND FLAGS
	MOVE.W	D4,FLAGHERE+2	STORE FLAGS
	SUB.W	BIKEY+2,D0	SUBTRACT BIKES YPOS
	ADDI.W	#76,D0	BASE OF BIKE
	CMPI.W	#96,D0	BELOW DISPLAY ?
	BLT.S	NOTBELOW	NO
	MOVEM.L	(A7)+,D0-D7	RESTORE REGS.
	RTS

NOTBELOW	MOVE.W	D0,BLOCKTOP+2	STORE FOR BASEBLOCK
	MOVE.W	D4,D2	COPY ID.
	ANDI.W	#$FF,D2	ID.
	MOVE.B	0(A5,D2.W),D2	HEIGHT OF BLOCK
	MOVE.W	D2,BLOCKHGHT+2	STORE FOR BASEBLOCK
	MOVE.W	D0,D1	ABOVE SCREEN ?
	BPL.S	ONSCREEN	NO
	ADD.W	D2,D1	SOME ON SCREEN ?
	BLE	DRAWBASE	NO
	NEG.W	D0	NO. OF LINES ABOVE SCREEN
	MOVE.W	D0,D7	POSITION DOWN BLOCK
	MOVEQ	#0,D0	AT TOP OF SCREEN
	CMPI.W	#96,D1	>AREA ?
	BCS.S	GOTLINE	NO
	MOVEQ	#96,D1	MAX HEIGHT
	BRA.S	GOTLINE
ONSCREEN	MOVEQ	#0,D7	TOP OF SOURCE
	NEG.W	D1	SUBTRACT START LINE
	ADDI.W	#96,D1	FROM 96 GIVES HEIGHT
	CMP.W	D2,D1	< BLOCK HEIGHT ?
	BCS.S	GOTLINE	YES ONLY PART OF BLOCK
	MOVE.W	D2,D1	ELSE USE ALL BLOCK

*    NB. D0=LINES DOWN SCREEN D1=LINES TO PRINT D7=LINES DOWN BLOCK/SOURCE ROTATION
*        D5=COLUMN ACROSS SCREEN D3=ROTATION (0-31) D4=BLOCK ID.

GOTLINE	MOVE.W	D1,LINECOUNT	LINES TO PRINT
BLITBASE	MOVE.L	#0,A2	SCREEN BASE
	MULU	#160,D0	OFFSET DOWN SCREEN
	ADD.W	D5,D0	OFFSET ACCROSS SCREEN
	LEA	-16(A2,D0.W),A2	ONE BLOCK EARLY
	MOVE.L	BLOCKADDS,A3	ADDRESSES OF BLOCKS
	ANDI.W	#$FF,D4	ID.
	LSL.W	#2,D4	LONG WORD OFFSET
	MOVE.L	0(A3,D4.W),A3	BLOCK BASE ADDRESS
	MOVE.L	MASKADDS,A4	ADDRESSES OF MASKS
	MOVE.L	0(A4,D4.W),A4	MASK BASE ADDRESS
	MOVE.W	D7,D0	COPY START LINE FOR SOURCE ROTATION
	ANDI.W	#15,D0	ROTATION 0-15
	LSL.W	#3,D7	LINES DOWN*8 FOR MASKS
	ADDA.W	D7,A4	START LINE IN MASK DATA
	LSL.W	#1,D7	LINES DOWN*16 FOR BLOCKS
	ADDA.W	D7,A3	START LINE IN BLOCK DATA

*	SOURCE ROTATION IN D0,REQUIRED ROTATION IN D3

CARRYMASK	MOVE.L	#0,D1
RMNSMASK	MOVE.L	#0,D2

	TST.W	D5	FIRST BLOCK ?
	BEQ	FIRSTBLOCK	YES
	CMPI.W	#160,D5	LAST BLOCK ?
	BEQ	LASTBLOCK	YES

	CMPI.W	#16,D3	ROTATION 0-15 ?
	BLT.S	MIDROTOK	YES
	ADDQ	#8,A2	HALF A BLOCK ACROSS
	ANDI.W	#15,D3	ROTATION 0-15
MIDROTOK	MOVE.B	D3,MIDROT+1	STORE REQUIRED ROTATION

MIDLINE	SUB.W	D0,D3	-SOURCE ROTATION
	BMI	MIDREV	IF - THEN CARRY CORRECT FOR ROR
	CMPI.W	#8,D3	IF 0-8 THEN REMAINS CORRECT FOR ROR
	BHI	MIDBACKL	ELSE CARRY CORRECT FOR ROL

MIDNORMR	SWAP	D0	STORE SOURCE ROTATION IN HIGH WORD
	MOVE.W	D3,D0	ROR 0-8

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSIION OF CARRY MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D4
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D5
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTMIDLINE

MIDBACKL	SWAP	D0
	MOVE.W	#16,D0
	SUB.W	D3,D0	ROL 1-7

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTMIDLINE

MIDREV	CMPI.W	#-7,D3
	BLT	MIDBACKR

MIDNORML	SWAP	D0
	MOVE.W	D3,D0
	NEG.W	D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSIION OF CARRY MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D4
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D5
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTMIDLINE

MIDBACKR	SWAP	D0
	MOVE.W	#16,D0
	ADD.W	D3,D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

NEXTMIDLINE	ADDA.W	#136,A2	NEXT DEST. LINE
	SWAP	D0
	ADDQ.W	#1,D0
	ANDI.W	#15,D0
MIDROT	MOVEQ	#0,D3
	SUBQ.W	#1,LINECOUNT
	BNE	MIDLINE

	BTST	#6,FLAGHERE+2	ANY INFILL ?
	BEQ.S	NOBASE	NO
BLOCKTOP	MOVE.W	#0,D0	TOP OF BLOCK
BLOCKHGHT	ADD.W	#0,D0	HEIGHT OF BLOCK
	BGT.S	NOTATTOP
	MOVEQ	#0,D0
NOTATTOP	CMPI.W	#96,D0
	BGE.S	NOBASE

*	ROUTINE TO DRAW INFILL IN CENTRE OF SCREEN
*	NB. A2 POINTS TO START OF DESTINATION
*	    CARRY MASK IN D1, REMAINS MASK IN D2
*	    JUMP OFFSET IN D0 (0-119) FOR 120-1 LINE/S

DRAWMIDBASE	LEA	MIDFILLS,A4
	LSL.W	#3,D0	*8
	ADDA.W	D0,A4	+
	LSL.W	#1,D0	*16
	ADDA.W	D0,A4	=*24
	MOVE.L	PLANES12,D0	1ST 2 PLANES
	MOVE.L	D0,D4	COPY FOR REMAINS
	MOVE.L	D0,D6	COPY FOR CARRY
	AND.L	D2,D4	REMAINS BITS
	AND.L	D1,D6	CARRY BITS
	MOVE.L	PLANES34,D3	2ND 2 PLANES
	MOVE.L	D3,D5	COPY FOR REMAINS
	MOVE.L	D3,D7	COPY FOR CARRY
	AND.L	D2,D5	REMAINS BITS
	AND.L	D1,D7	CARRY BITS
	JMP	(A4)

NOBASE	MOVEM.L	(A7)+,D0-D7
	RTS

*	ROUTINE TO DRAW INFILL IF BLOCK ENTIRELY OFF TOP OF SCREEN

DRAWBASE	BTST	#6,FLAGHERE+2	INFILL ?
	BEQ.S	NOBASE	NO
	MOVEQ	#0,D0	TOP LINE
	MOVE.L	BLITBASE+2,A2	SCREEN BASE
	LEA	-16(A2,D5.W),A2	ONE BLOCK EARLY
	CMPI.W	#16,D3	ROTATION 0-15 ?
	BLT.S	DESTOK	YES
	ADDQ	#8,A2	HALF A BLOCK ACROSS
DESTOK	MOVE.L	CARRYMASK+2,D1	CARRY MASK
	MOVE.L	RMNSMASK+2,D2	REMAINS MASK
	TST.W	D5	FIRST COLUMN ?
	BEQ.S	LEFTFILL	YES
	CMPI.W	#160,D5	LAST COLUMN ?
	BNE	DRAWMIDBASE	NO

RIGHTFILL	CMPI.W	#15,D3
	BHI.S	ONERIGHT
FILL2RIGHT	LEA	RIGHT2FILLS,A4
	LSL.W	#4,D0	*16
	ADDA.W	D0,A4
	MOVE.L	PLANES12,D0	1ST 2 PLANES
	MOVE.L	D0,D4	COPY FOR REMAINS
	AND.L	D2,D4	REMAINS BITS
	MOVE.L	PLANES34,D3	2ND 2 PLANES
	MOVE.L	D3,D5	COPY FOR REMAINS
	AND.L	D2,D5	REMAINS BITS
	JMP	(A4)

LEFTFILL	TST.W	D3
	BEQ.S	NOBASE
	CMPI.W	#16,D3
	BLT.S	ONELEFT
	ADDQ	#8,A2
FILL2LEFT	LEA	LEFT2FILLS,A4
	LSL.W	#4,D0	*16
	ADDA.W	D0,A4
	MOVE.L	PLANES12,D0	1ST 2 PLANES
	MOVE.L	D0,D6	COPY FOR CARRY
	AND.L	D1,D6	CARRY BITS
	MOVE.L	PLANES34,D3	2ND 2 PLANES
	MOVE.L	D3,D7	COPY FOR CARRY
	AND.L	D1,D7	CARRY BITS
	JMP	(A4)

ONERIGHT	LEA	RIGHT1FILLS,A4
	LSL.W	#2,D0	*4
	ADDA.W	D0,A4	+
	LSL.W	#1,D0	*8
	ADDA.W	D0,A4	=*12
	MOVE.L	PLANES12,D0	1ST 2 PLANES
	AND.L	D2,D0	REMAINS BITS
	MOVE.L	PLANES34,D3	2ND 2 PLANES
	AND.L	D2,D3	REMAINS BITS
	JMP	(A4)

ONELEFT	ADDA.W	#16,A2
FILL1LEFT	LEA	LEFT1FILLS,A4
	LSL.W	#2,D0	*4
	ADDA.W	D0,A4
	LSL.W	#1,D0	+*8
	ADDA.W	D0,A4	=*12
	MOVE.L	PLANES12,D0	1ST 2 PLANES
	AND.L	D1,D0	CARRY BITS
	MOVE.L	PLANES34,D3	2ND 2 PLANES
	AND.L	D1,D3	CARRY BITS
	JMP	(A4)

MIDFILLS	REPT	96

	AND.L	D1,(A2)	HOLE FOR REMAINS
	OR.L	D4,(A2)+
	AND.L	D1,(A2)
	OR.L	D5,(A2)+

	MOVE.L	D0,(A2)+
	MOVE.L	D3,(A2)+

	AND.L	D2,(A2)	HOLE FOR CARRY
	OR.L	D6,(A2)+
	AND.L	D2,(A2)
	OR.L	D7,(A2)+

	ADDA.W	#136,A2

	ENDR

	BRA	NOBASE

LEFT2FILLS	REPT	96

	MOVE.L	D0,(A2)+
	MOVE.L	D3,(A2)+

	AND.L	D2,(A2)
	OR.L	D6,(A2)+
	AND.L	D2,(A2)
	OR.L	D7,(A2)+

	ADDA.W	#144,A2

	ENDR

	BRA	NOBASE

LEFT1FILLS	REPT	96

	AND.L	D2,(A2)
	OR.L	D0,(A2)+
	AND.L	D2,(A2)
	OR.L	D3,(A2)+

	ADDA.W	#152,A2

	ENDR

	BRA	NOBASE

RIGHT2FILLS	REPT	96

	AND.L	D1,(A2)	HOLE FOR REMAINS
	OR.L	D4,(A2)+
	AND.L	D1,(A2)
	OR.L	D5,(A2)+

	MOVE.L	D0,(A2)+
	MOVE.L	D3,(A2)+

	ADDA.W	#144,A2

	ENDR

	BRA	NOBASE

RIGHT1FILLS	REPT	96

	AND.L	D1,(A2)	HOLE FOR REMAINS
	OR.L	D0,(A2)+
	AND.L	D1,(A2)
	OR.L	D3,(A2)+

	ADDA.W	#152,A2

	ENDR

	BRA	NOBASE

FIRSTBLOCK	ADDA.W	#16,A2
	CMPI.W	#16,D3
	BLT	LEFT1LINE
	ANDI.W	#15,D3
	MOVE.B	D3,LEFT2ROT+1	STORE REQUIRED ROTATION

LEFTLINE2	SUB.W	D0,D3	-SOURCE ROTATION
	BMI	LEFT2REV	IF - THEN CARRY CORRECT FOR ROR
	CMPI.W	#8,D3	IF 0-8 THEN REMAINS CORRECT FOR ROR
	BHI	LEFT2BACKL	ELSE CARRY CORRECT FOR ROL

LEFT2NORMR	SWAP	D0	STORE SOURCE ROTATION IN HIGH WORD
	MOVE.W	D3,D0	ROR 0-8

	MOVE.L	(A4)+,D7	MASK FOR 1ST HALF
	ROR.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROR.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROR.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSIION OF CARRY MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D4
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D5
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTLEFTLINE2

LEFT2BACKL	SWAP	D0
	MOVE.W	#16,D0
	SUB.W	D3,D0	ROL 1-7

	MOVE.L	(A4)+,D7	MASK FOR 1ST HALF
	ROL.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROL.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROL.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTLEFTLINE2

LEFT2REV	CMPI.W	#-7,D3
	BLT	LEFT2BACKR

LEFT2NORML	SWAP	D0
	MOVE.W	D3,D0
	NEG.W	D0

	MOVE.L	(A4)+,D7	MASK FOR 1ST HALF
	ROL.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROL.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROL.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSIION OF CARRY MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D4
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D5
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

	BRA	NEXTLEFTLINE2

LEFT2BACKR	SWAP	D0
	MOVE.W	#16,D0
	ADD.W	D3,D0

	MOVE.L	(A4)+,D7	MASK FOR 1ST HALF
	ROR.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROR.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROR.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D4
	AND.L	D1,D4
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	MOVE.L	D3,D5
	AND.L	D1,D5
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	AND.L	D7,(A2)
	OR.L	D4,(A2)+
	AND.L	D7,(A2)
	OR.L	D5,(A2)+

NEXTLEFTLINE2	ADDA.W	#144,A2	NEXT DEST. LINE
	SWAP	D0
	ADDQ.W	#1,D0
	ANDI.W	#15,D0
LEFT2ROT	MOVEQ	#0,D3
	SUBQ.W	#1,LINECOUNT
	BNE	LEFTLINE2

	BTST	#6,FLAGHERE+2	ANY INFILL ?
	BEQ	NOBASE	NO
	MOVE.W	BLOCKTOP+2,D0	TOP OF BLOCK
	ADD.W	BLOCKHGHT+2,D0	HEIGHT OF BLOCK
	BGT.S	NOTATTOP1
	MOVEQ	#0,D0
NOTATTOP1	CMPI.W	#96,D0
	BGE	NOBASE
	BRA	FILL2LEFT

LEFT1LINE	MOVE.B	D3,LEFT1ROT+1	STORE REQUIRED ROTATION

LEFTLINE1	SUB.W	D0,D3	-SOURCE ROTATION
	BMI	LEFT1REV	IF - THEN CARRY CORRECT FOR ROR
	CMPI.W	#8,D3	IF 0-8 THEN REMAINS CORRECT FOR ROR
	BHI	LEFT1BACKL	ELSE CARRY CORRECT FOR ROL

LEFT1NORMR	SWAP	D0	STORE SOURCE ROTATION IN HIGH WORD
	MOVE.W	D3,D0	ROR 0-8

	ADDQ	#4,A4	NO 1ST HALF MASK
	ADDQ	#8,A3	NO 1ST HALF DATA

	MOVE.L	(A4)+,D7	MASK FOR 2ND HALF
	ROR.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROR.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROR.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D4,(A2)+	1ST TWO PLANES CARRY DONE
	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D5,(A2)+	2ND TWO PLANES CARRY DONE

	BRA	NEXTLEFTLINE1

LEFT1BACKL	SWAP	D0
	MOVE.W	#16,D0
	SUB.W	D3,D0	ROL 1-7

	ADDQ	#4,A4	NO 1ST HALF MASK
	ADDQ	#8,A3	NO 1ST HALF DATA

	MOVE.L	(A4)+,D7	MASK FOR 2ND HALF
	ROL.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROL.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROL.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D4,(A2)+	1ST TWO PLANES CARRY DONE
	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D5,(A2)+	2ND TWO PLANES CARRY DONE

	BRA	NEXTLEFTLINE1

LEFT1REV	CMPI.W	#-7,D3
	BLT	LEFT1BACKR

LEFT1NORML	SWAP	D0
	MOVE.W	D3,D0
	NEG.W	D0

	ADDQ	#4,A4	NO 1ST HALF MASK
	ADDQ	#8,A3	NO 1ST HALF DATA

	MOVE.L	(A4)+,D7	MASK FOR 2ND HALF
	ROL.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROL.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROL.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D4,(A2)+	1ST TWO PLANES CARRY DONE
	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D5,(A2)+	2ND TWO PLANES CARRY DONE

	BRA	NEXTLEFTLINE1

LEFT1BACKR	SWAP	D0
	MOVE.W	#16,D0
	ADD.W	D3,D0

	ADDQ	#4,A4	NO 1ST HALF MASK
	ADDQ	#8,A3	NO 1ST HALF DATA

	MOVE.L	(A4)+,D7	MASK FOR 2ND HALF
	ROR.L	D0,D7	ROTATE
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D4	GET 1ST TWO PLANES
	ROR.L	D0,D4	ROTATE
	AND.L	D1,D4	CARRY BITS ONLY

	MOVE.L	(A3)+,D5	GET 2ND TWO PLANES
	ROR.L	D0,D5	ROTATE
	AND.L	D1,D5	CARRY BITS ONLY

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D4,(A2)+	1ST TWO PLANES CARRY DONE
	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	OR.L	D5,(A2)+	2ND TWO PLANES CARRY DONE

NEXTLEFTLINE1	ADDA.W	#152,A2	NEXT DEST. LINE
	SWAP	D0
	ADDQ.W	#1,D0
	ANDI.W	#15,D0
LEFT1ROT	MOVEQ	#0,D3
	SUBQ.W	#1,LINECOUNT
	BNE	LEFTLINE1

	BTST	#6,FLAGHERE+2	ANY INFILL ?
	BEQ	NOBASE	NO
	MOVE.W	BLOCKTOP+2,D0	TOP OF BLOCK
	ADD.W	BLOCKHGHT+2,D0	HEIGHT OF BLOCK
	BGT.S	NOTATTOP2
	MOVEQ	#0,D0
NOTATTOP2	CMPI.W	#96,D0
	BGE	NOBASE
	BRA	FILL1LEFT

LASTBLOCK	CMPI.W	#15,D3
	BHI	RIGHTLINE1
	MOVE.B	D3,RIGHT2ROT+1	STORE REQUIRED ROTATION

RIGHT2LINE	SUB.W	D0,D3	-SOURCE ROTATION
	BMI	RIGHT2REV	IF - THEN CARRY CORRECT FOR ROR
	CMPI.W	#8,D3	IF 0-8 THEN REMAINS CORRECT FOR ROR
	BHI	RIGHT2BACKL	ELSE CARRY CORRECT FOR ROL

RIGHT2NORMR	SWAP	D0	STORE SOURCE ROTATION IN HIGH WORD
	MOVE.W	D3,D0	ROR 0-8

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	BRA	NEXTRIGHT2LINE

RIGHT2BACKL	SWAP	D0
	MOVE.W	#16,D0
	SUB.W	D3,D0	ROL 1-7

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	BRA	NEXTRIGHT2LINE

RIGHT2REV	CMPI.W	#-7,D3
	BLT	RIGHT2BACKR

RIGHT2NORML	SWAP	D0
	MOVE.W	D3,D0
	NEG.W	D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK
	SWAP	D7	CORRECT POSITION OF CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D4	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D5	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROL.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROL.L	D0,D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	BRA	NEXTRIGHT2LINE

RIGHT2BACKR	SWAP	D0
	MOVE.W	#16,D0
	ADD.W	D3,D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	MOVE.L	D6,D7	COPY FOR CARRY
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK
	OR.L	D2,D7	SET REMAINS BITS FOR CARRY MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D4	COPY FOR CARRY
	AND.L	D1,D4	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	MOVE.L	D3,D5	COPY FOR CARRY
	AND.L	D1,D5	CARRY BITS ONLY
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	AND.L	D7,(A2)	CLEAR HOLE FOR CARRY
	AND.L	D7,4(A2)	FOR ALL PLANES
	OR.L	D4,(A2)	1ST TWO PLANES CARRY DONE

	MOVE.L	(A4)+,D6	MASK FOR 2ND HALF
	ROR.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSIION OF REMAINS MASK

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

	OR.L	D5,(A2)

	MOVE.L	(A3)+,D3
	ROR.L	D0,D3
	SWAP	D3
	AND.L	D2,D3
	AND.L	D6,(A2)
	OR.L	D3,(A2)+

NEXTRIGHT2LINE	ADDA.W	#144,A2	NEXT DEST. LINE
	SWAP	D0
	ADDQ.W	#1,D0
	ANDI.W	#15,D0
RIGHT2ROT	MOVEQ	#0,D3
	SUBQ.W	#1,LINECOUNT
	BNE	RIGHT2LINE

	BTST	#6,FLAGHERE+2	ANY INFILL ?
	BEQ	NOBASE	NO
	MOVE.W	BLOCKTOP+2,D0	TOP OF BLOCK
	ADD.W	BLOCKHGHT+2,D0	HEIGHT OF BLOCK
	BGT.S	NOTATTOP3
	MOVEQ	#0,D0
NOTATTOP3	CMPI.W	#96,D0
	BGE	NOBASE
	BRA	FILL2RIGHT

RIGHTLINE1	ANDI.W	#15,D3
	ADDQ	#8,A2
	MOVE.B	D3,RIGHT1ROT+1	STORE REQUIRED ROTATION

RIGHT1LINE	SUB.W	D0,D3	-SOURCE ROTATION
	BMI	RIGHT1REV	IF - THEN CARRY CORRECT FOR ROR
	CMPI.W	#8,D3	IF 0-8 THEN REMAINS CORRECT FOR ROR
	BHI	RIGHT1BACKL	ELSE CARRY CORRECT FOR ROL

RIGHT1NORMR	SWAP	D0	STORE SOURCE ROTATION IN HIGH WORD
	MOVE.W	D3,D0	ROR 0-8

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	ADDQ	#4,A4	NO 2ND HALF MASK
	ADDQ	#8,A3	NO 2ND HALF DATA

	BRA	NEXTRIGHT1LINE

RIGHT1BACKL	SWAP	D0
	MOVE.W	#16,D0
	SUB.W	D3,D0	ROL 1-7

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	ADDQ	#4,A4	NO 2ND HALF MASK
	ADDQ	#8,A3	NO 2ND HALF DATA

	BRA	NEXTRIGHT1LINE

RIGHT1REV	CMPI.W	#-7,D3
	BLT	RIGHT1BACKR

RIGHT1NORML	SWAP	D0
	MOVE.W	D3,D0
	NEG.W	D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROL.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROL.L	D0,D3	ROTATE
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROL.L	D0,D3	ROTATE
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	ADDQ	#4,A4	NO 2ND HALF MASK
	ADDQ	#8,A3	NO 2ND HALF DATA

	BRA	NEXTRIGHT1LINE

RIGHT1BACKR	SWAP	D0
	MOVE.W	#16,D0
	ADD.W	D3,D0

	MOVE.L	(A4)+,D6	MASK FOR 1ST HALF
	ROR.L	D0,D6	ROTATE
	OR.L	D1,D6	SET CARRY BITS FOR REMAINS MASK
	SWAP	D6	CORRECT POSITION OF REMAINS MASK

	MOVE.L	(A3)+,D3	GET 1ST TWO PLANES
	ROR.L	D0,D3	ROTATE
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	1ST TWO PLANES REMAINS DONE

	MOVE.L	(A3)+,D3	GET 2ND TWO PLANES
	ROR.L	D0,D3	ROTATE
	SWAP	D3	CORRECT POSITION
	AND.L	D2,D3	REMAINS BITS ONLY
	AND.L	D6,(A2)	CLEAR HOLE FOR REMAINS
	OR.L	D3,(A2)+	2ND TWO PLANES REMAINS DONE

	ADDQ	#4,A4	NO 2ND HALF MASK
	ADDQ	#8,A3	NO 2ND HALF DATA

NEXTRIGHT1LINE	ADDA.W	#152,A2	NEXT DEST. LINE
	SWAP	D0
	ADDQ.W	#1,D0
	ANDI.W	#15,D0
RIGHT1ROT	MOVEQ	#0,D3
	SUBQ.W	#1,LINECOUNT
	BNE	RIGHT1LINE

	BTST	#6,FLAGHERE+2	ANY INFILL ?
	BEQ	NOBASE	NO
	MOVE.W	BLOCKTOP+2,D0	TOP OF BLOCK
	ADD.W	BLOCKHGHT+2,D0	HEIGHT OF BLOCK
	BGT.S	NOTATTOP4
	MOVEQ	#0,D0
NOTATTOP4	CMPI.W	#96,D0
	BGE	NOBASE
	BRA	ONERIGHT

SKYGROUND	REPT	96*4

	MOVEM.L	D0-D5/A0-A3,-(A4)

	ENDR

	RTS

*	ROUTINE TO SAVE A FILE

SAVEIT	MOVE.W	#0,-(A7)
SAVENAME	PEA	SPRITEFILE
	MOVE.W	#$3C,-(A7)
	TRAP	#1
	MOVE.W	D0,FHANDLE+2
	ADDQ	#8,A7

SAVEADD	PEA	BLOCKS	SAVE ADDRESS
SAVELEN	PEA	80000	LENGTH
	MOVE.W	FHANDLE+2,-(A7)
	MOVE.W	#$40,-(A7)	SAVE FILE
	TRAP	#1
	ADDA.W	#12,A7
	BRA.S	CLOSEFILE

*	ROUTINE TO OPEN A FILE NB. NAME AT LOADFILE+2

OPENFILE	MOVE.W	#2,-(A7)	OPEN FILE
LOADFILE	PEA	SPRITEFILE
	MOVE.W	#$3D,-(A7)
	TRAP	#1
	MOVE.W	D0,FHANDLE+2
	ADDQ	#8,A7

*	ROUTINE TO READ FROM A FILE NB. FHANDLE+2 SET UP
*	ALSO READFILE+2=ADDRESS,FLENGTH+2=MAX LENGTH

READFILE	PEA	BLOCKS	LOAD ADDRESS
FLENGTH	PEA	80000	MAX LENGTH
FHANDLE	MOVE.W	#0,-(A7)
	MOVE.W	#$3F,-(A7)	LOAD FILE
	TRAP	#1
	ADDA.W	#12,A7
	MOVE.L	D0,LOADED+2	LENGTH LOADED

*	ROUTINE TO CLOSE A FILE NB. FHANDLE+2 SET UP

CLOSEFILE	MOVE.W	FHANDLE+2,-(A7) CLOSE FILE
	MOVE.W	#$3E,-(A7)
	TRAP	#1
	ADDQ	#4,A7
	RTS

*	MY VBL ROUTINE

MYVBL	MOVE.L	D0,-(A7)
FLIPFLAG	MOVEQ	#-1,D0
	BNE.S	NOFLIP
	ADDQ.W	#1,$468.W
	CMPI.W	#4,$468.W
	BNE.S	NOFLIP
	CLR.W	$468.W
	NOT.W	FLIP
	BEQ.S	SCREEN1
SCREEN2	MOVE.L	#0,BLITBASE+2
	MOVE.L	SCREEN1+2,D0
	BRA.S	SETDISPLAY
SCREEN1	MOVE.L	#0,BLITBASE+2
	MOVE.L	SCREEN2+2,D0
SETDISPLAY	SWAP	D0
	MOVE.B	D0,$FFFF8201.W
	SWAP	D0
	LSR.W	#8,D0
	MOVE.B	D0,$FFFF8203.W
NOFLIP	MOVE.L	(A7)+,D0
	RTE

COLOURS	DC.W	$000,$337,$777,$222,$000,$660,$007,$444
	DC.W	$040,$030
COLOUR1	DC.W	$050,$311,$421,$440
COLOUR2	DC.W	$060
COLOUR3	DC.W	$532

MASKS	DC.L	$00000000,$80008000,$C000C000,$E000E000
	DC.L	$F000F000,$F800F800,$FC00FC00,$FE00FE00
	DC.L	$FF00FF00,$FF80FF80,$FFC0FFC0,$FFE0FFE0
	DC.L	$FFF0FFF0,$FFF8FFF8,$FFFCFFFC,$FFFEFFFE

PLANES12	DC.L	$FFFFFFFF
PLANES34	DC.L	$FFFF

KEYS1	DC.B	$80,1	RESET KEY READ STATE
KEYSET	DC.B	$12,$1A	MOUSE OFF,JOYSTICK OFF

PLANFILE	DC.B	"PLAN"
NEWPLAN	DC.B	0,0
TOPFILE	DC.B	"TOPBLCK"
NEWTOPS	DC.B	0,0
RESTFILE	DC.B	"ANGLFLE"
NEWRANGLES	DC.B	0,0
COURSEFILE	DC.B	"COURSE"
NEWCOURSE	DC.B	0,0
BACKFILE	DC.B	"MBCKGRND",0
SPRITEFILE	DC.B	"MBLOCKS",0
HGHTFILE	DC.B	"MBHGHTS",0
MASKFILE	DC.B	"MBMASKS",0
HINTFILE	DC.B	"MHINTRNL",0
TVIEWFILE	DC.B	"MBTOP",0

	EVEN

MAPFRONT	DS.L	1
MAPBACK	DS.L	1
YFRONT	DS.L	1
YBACK	DS.L	1
RESTANGLE	DS.L	1

	DC.B	45,2,20,28
	DC.B	45,2,17,23
	DC.B	46,1,17,20
	DC.B	48,1,14,17,48,0,14,13
	DC.B	49,0,14,10,49,0,15,6
	DC.B	50,0,15,4,51,0,15,2
BIKEDIFFS	DC.B	51,0,15,0,51,2,15,0
	DC.B	52,5,16,0,52,7,17,0
	DC.B	53,9,18,0,52,14,18,0
	DC.B	52,15,19,1
	DC.B	50,19,20,1
	DC.B	48,24,21,2
	DC.B	46,26,21,2,51,0,15,0
	DC.B	51,0,15,0

	DC.B	59,4,32,28
	DC.B	59,4,30,24
	DC.B	59,4,29,22
	DC.B	59,4,26,19,59,4,25,16
	DC.B	59,4,24,14,59,4,24,10
	DC.B	59,4,24,8,59,4,23,6
CRASHDIFFS	DC.B	59,4,23,4,59,6,23,4
	DC.B	59,9,23,4,58,11,23,4
	DC.B	58,13,23,4,56,17,23,4
	DC.B	56,18,23,4
	DC.B	53,22,23,4
	DC.B	50,26,23,4,59,4,23,4
	DC.B	59,4,23,4

	DC.B	39,23,36,20,36,19
	DC.B	36,17,35,15
	DC.B	34,14,33,12,34,11,34,10
CENTREDIFFS	DC.B	33,9,33,10,33,11,33,12
	DC.B	33,13,34,16,34,17
	DC.B	31,19,29,21
	DC.B	27,21,33,9,33,9

SINCOS	DC.W	0,$100,9,$100,$12,$100,$1A,$FF,$33,$FC
	DC.W	$4A,$F6,$60,$EE,$84,$DC
	DC.W	$A0,$C8,$B6,$B6

	DC.L	-$5A82,-$4FF6,-$41DB
	DC.L	-$2F8A,-$24C8,-$191A,-$CBD,-$884,-$444
GRAVALS	DC.L	0,$444,$884,$CBD,$191A,$24C8,$2F8A
	DC.L	$41DB,$4FF6,$5A82

DIALVALS	DC.W	0,128,128,256,384,384,512,640
	DC.W	640,768,896,896,1024,1152,1152,1280

TOPBIKE	INCBIN	TOPBIKE
DIALS	INCBIN	DIALS
DIGITS	INCBIN	DIGITS
BIKEBASE	INCBIN	BIKES
BIKES	EQU	BIKEBASE+24192

*	FOR THE EDITOR ONLY

NEWBLOCK1	DC.W	$A000,0,$C00D
NEWBLOCK2	DC.W	$2000,0,$C00D
NEWBLOCK3	DC.W	$2000,0,$C00D
NEWBLOCK4	DC.W	$2000,0,$C00D
NULLBLOCK	DC.W	$A000,0,$C00D

TEXT	DC.B	27,"Y",44,32,"1 ZPS="
ZPOS1	DC.B	"00 ZSZ="
ZSIZE1	DC.B	"32 YPS="
YPOS1	DC.B	" 000 ID="
ID1	DC.B	"010 "
FLAGS1	DC.B	"TBECLARD",13,12,13	TOP,BASE,END,CRASH,LIFT,ANGLE
	DC.B	"2 ZPS="
ZPOS2	DC.B	"00 ZSZ="
ZSIZE2	DC.B	"32 YPS="
YPOS2	DC.B	" 000 ID="
ID2	DC.B	"010 "
FLAGS2	DC.B	"TBECLARD",13,12,13
	DC.B	"3 ZPS="
ZPOS3	DC.B	"00 ZSZ="
ZSIZE3	DC.B	"32 YPS="
YPOS3	DC.B	" 000 ID="
ID3	DC.B	"010 "
FLAGS3	DC.B	"TBECLARD",13,12,13
	DC.B	"4 ZPS="
ZPOS4	DC.B	"00 ZSZ="
ZSIZE4	DC.B	"32 YPS="
YPOS4	DC.B	" 000 ID="
ID4	DC.B	"010 "
FLAGS4	DC.B	"TBECLARD",13,12,13
TEXT1	DC.B	27,"Y",48,32,"ACTIVE COL "
COLUMNON	DC.B	"000 ACTIVE BLOCK "
BLOCKON	DC.B	"1 EDIT"
EDITER	DC.B	" OFF",12,13
	DC.B	"                                        ",12,13
	DC.B	"                                        ",12,13
	DC.B	"                                        ",12,13
	DC.B	"                                        ",0
SELECT	DC.B	27,"Y",49,32,"WHICH  COLUMN  (1-250)  =  ",0
FLAGTEXT	DC.B	27,"Y",50,32,"SELECT FLAGS ( TEBCLARD ) AND RETURN",13,0
SLCTSTRT	DC.B	27,"Y",49,32,"SELECT FIRST COLUMN 1-251 =",0
SLCTEND	DC.B	27,"Y",49,32,"SELECT  LAST COLUMN 1-251 =",0
SLCTDEST	DC.B	27,"Y",49,32,"SELECT DESTINATION  1-251 =",0
UDOFFSET	DC.B	27,"Y",50,32,"DIRECTION = U-P OR D-OWN OR SPACE-SAME",13,0
OFFSIZE	DC.B	27,"Y",49,32,"INPUT OFFSET SIZE (1-900) =",0

	EVEN

OFF	DC.B	" OFF"	MUST BE EVEN
ON	DC.B	" ON "	MUST BE EVEN

MENU	DC.B	27,"Y",44,32,"ESC THEN BCKSPC=QUIT HELP=THIS MENU     ",13,12
	DC.B	"ESC THEN F1 THEN A-O = SAVE COURSE      ",13,12
	DC.B	"ESC THEN F10 THEN A-O OR SPC=LOAD       ",13,12
	DC.B	"LEFT/RIGHT/INSRT/CLR=MOVE LEFT/RIGHT    ",13,12
	DC.B	"UP/DOWN=MOVE BLOCK UP/DOWN              ",12,13
	DC.B	"A/Z=MOVE COLUMN UP/DOWN                 ",12,13
	DC.B	"UNDO=PUT BIKE ON GROUND E=EDIT ON/OFF   ",13,12
	DC.B	"e=FIND NEXT RESET PSTN F=SET FLAGS      ",13,12
	DC.B	"I O , . X=SET BLOCK WIDTH/Z PSTN        ",0

MENU1	DC.B	27,"Y",44,32,"U=USE EDIT COLUMN AT THIS PSTN          ",12,13
	DC.B	"C=COPY THIS PSTN TO EDIT COLUMN         ",12,13
	DC.B	"TAB=COPY EDIT COLUMN TO ALL FOLLOWING   ",12,13
	DC.B	"M=MOVE A SET OF COLUMNS F10=REST ANGLES ",12,13
	DC.B	"KEYPAD:-                                ",13,12
	DC.B	"+-=BLOCK ID 8=BIKE UP 2=BIKE DOWN       ",13,12
	DC.B	"456=BIKE ANGLE ()=CHANGE X SPEED        ",13,12
	DC.B	"*=TOGGLE ID SPEED AND BLOCK Y SPEED     ",13,12
	DC.B	"ENTER=USE BIKE ANGLE AS REST ANGLE      ",0

DATA	SECTION	BSS

OLDPAL	DS.W	16

BLCKHGHTS	DS.L	1	POINTER TO TABLE
BLOCKADDS	DS.L	1	POINTER TO TABLE
MASKADDS	DS.L	1	POINTER TO TABLE
BLOCK0	DS.L	1	POINTER TO COURSE DATA
FLIP	DS.W	1
LINECOUNT	DS.W	1

	DS.B	256	EXTRA 256 FOR BOUNDARY
DISPLAY	DS.B	32000
BACKGROUND	DS.B	30720
PLANVIEW	DS.B	1040*32
PLANMAP	DS.B	1048
TOPBLOCKS	DS.L	251
RANGLES	DS.B	7682
HEIGHTS	DS.B	1408

BLOCKS	EQU	*

	END
