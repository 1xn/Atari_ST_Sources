*	SPRITE TRUE COLOR
*	 V1.2
*	  AXEL FOLLET / MCS
*	   AVEC DEVPAC, CODE 68030, TABULATION A 8
*
*	 UTILISER LA SOURIS POUR BOUGER LE SPRITE

	PEA	0.W
	MOVE.W	#$20,-(A7)
	TRAP	#1

	MOVE.L	SCREEN1,D0
	AND.L	#-8,D0
	MOVE.L	D0,SCREEN1
		
	MOVE.W	#-1,-(A7)
	MOVE.W	#88,-(A7)
	TRAP	#14
	ADDQ.W	#4,A7
	
	BTST	#4,D0
	BEQ.S	pasvga
	BSET	#8,d0
	BRA.S	bon
pasvga	BCLR	#8,d0	
bon	BCLR	#7,d0
	BCLR	#6,d0
	BCLR	#3,d0
	BSET	#2,d0
	BCLR	#1,d0
	BCLR	#0,d0
	MOVE.W	d0,-(A7)			
	MOVE.W	#3,-(A7)			
	MOVE.L	SCREEN1,-(A7)
	MOVE.L	SCREEN1,-(A7)
	MOVE.W	#5,-(A7)
	TRAP	#14
	ADD.W	#14,A7
	
*	MOVE.L	SCREEN1,A0
*	MOVE.L	#153600/8,D0
*BOUCLE	CLR.L	(A0)+
*	CLR.L	(A0)+
*	DBF	D0,BOUCLE
	
	
	BSR	CALC_SPRITE
	BSR.L	SAV_FOND
	
	MOVE.L	$70,SA70+2	
	MOVE.L	#VBL,$70
	
WAIT	MOVE.W	#$7,-(A7)
	TRAP	#1
	ADDQ.W	#2,A7
	
SA70	MOVE.L	#0,$70
	
	MOVE.L	#-1,$FFFF9800.W
	CLR.L	-(A7)
	TRAP	#1
***************************************************************************
VBL	MOVEM.L	D0-A6,-(A7)
	MOVE.L	#$FF,$FFFF9800
	DC.W	$A000
	LEA	-$158(A0),A0
	MOVE.W	(A0),X
	LEA	2(A0),A0
	MOVE.W	(A0),Y
	
NB	EQU	1			
	
	MOVE.L	#$FF0000FF,$FFFF9800
	
	REPT	NB
	BSR.L	RESTITU
	ENDR
	
	SUB.L	#30,$FFFF9800
	BSR	CALC_SPRITE
	
	REPT	NB
	BSR.L	SAV_FOND
	ENDR
	
	SUB.L	#30,$FFFF9800
	
	REPT	NB
	BSR.L	AFF_SPR
	ENDR
	
	MOVEM.L	(A7)+,D0-A6
	MOVE.L	#0,$FFFF9800.W
	RTE
	

CALC_SPRITE
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.W	Y,D0
	MULU.L	#640,D0				
	MOVE.W	X,D1
	ADD.W	D1,D1				
	ADD.L	D1,D0
	MOVE.L	D0,OFFSET
	RTS

AFF_SPR
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	
BUFFER	INCBIN	SPRTC.BIN
	

SAV_FOND
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	LEA	FOND+32*32*2,A1
	BRA.L	BUFFER+6
	RTS
	

RESTITU
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	LEA	FOND+32*32*2,A1
	BRA.L 	BUFFER+12
	RTS
	
***************************************************************************

X	DC.W	0
Y	DC.W	50
OFFSET	DC.L	0
SCREEN1	DC.L	SCREEN			
	
FOND	DS.W	32*32			
					
SCREEN	INCBIN	DRAGON.TPI
