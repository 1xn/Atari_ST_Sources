*	SPRITE TRUE COLOR
*	 V1.2
*	  AXEL FOLLET / MCS
*	   AVEC DEVPAC, CODE 68030, TABULATION A 8
*
*	 CECI EST JUSTE POUR AVOIR UN IDEE DU TEMPS MACHINE PRIS PAR
*	  UN (OU PLUSIEURS) SPRITE
*	   REMARQUE : SUR UN MONITEUR VGA ON NE VOIT PAS LA MODIFICATION
*	    DE LA COULEUR DE FOND SUR LES BORDURES
*
*	 UTILISER LA SOURIS POUR BOUGER LE SPRITE

	PEA	0.W
	MOVE.W	#$20,-(A7)
	TRAP	#1

	MOVE.L	SCREEN1,D0
	AND.L	#-8,D0
	MOVE.L	D0,SCREEN1
		
	MOVE.W	#-1,-(A7)
	MOVE.W	#88,-(A7)
	TRAP	#14
	ADDQ.W	#4,A7
	
	BTST	#4,D0
	BEQ.S	pasvga
	BSET	#8,d0
	BRA.S	bon
pasvga	BCLR	#8,d0	
bon	BCLR	#7,d0
	BCLR	#6,d0
	BCLR	#3,d0
	BSET	#2,d0
	BCLR	#1,d0
	BCLR	#0,d0
	MOVE.L	SCREEN1,D1
	ADD.L	#128000,D1
	MOVE.W	d0,-(A7)			* PASSAGE EN 320*200*TC
	MOVE.W	#3,-(A7)			* SELON LE TYPE DE MONITEUR
	MOVE.L	D1,-(A7)
	MOVE.L	D1,-(A7)
	MOVE.W	#5,-(A7)			* CETTE FONCTION ETANT
	TRAP	#14				* DESTRUCTRICE,ON VA PLACER
	ADD.W	#14,A7				* LA MEMOIRE ECRAN APRES
						* L'IMAGE TRUE COLOR
	MOVE.L	SCREEN1,A0			* PUIS ON VA RECOPIER
	MOVE.L	A0,A1				* CETTE DERNIERE
	ADD.L	#128000,A1
	MOVE.L	#(128000)/4-1,D0
COPY1	MOVE.L	(A0)+,(A1)+
	DBF	D0,COPY1
	
	MOVE.L	#(25600/4)-1,D0			* AU CAS OU ON EST EN MODE
COPY2	MOVE.L	#0,(A1)+			* VGA, DONC + 40 LIGNES
	DBF	D0,COPY2			* ON LES METS EN NOIR

	ADD.L	#128000,SCREEN1
	
	BSR	CALC_SPRITE
	BSR.L	SAV_FOND
	
	MOVE.L	$70,SA70+2	
	MOVE.L	#VBL,$70
	
WAIT	MOVE.W	#$7,-(A7)
	TRAP	#1
	ADDQ.W	#2,A7
	
SA70	MOVE.L	#0,$70
	
	MOVE.L	#-1,$FFFF9800.W
	CLR.L	-(A7)
	TRAP	#1
***************************************************************************
VBL	MOVEM.L	D0-A6,-(A7)
	MOVE.L	#$FF,$FFFF9800
	DC.W	$A000
	LEA	-$158(A0),A0
	MOVE.W	(A0),X
	LEA	2(A0),A0
	MOVE.W	(A0),Y
	
NB	EQU	1			* NB DE SPRITE A AFFICHER
	
	MOVE.L	#$FF0000FF,$FFFF9800
	
	REPT	NB
	BSR.L	RESTITU
	ENDR
	
	SUB.L	#30,$FFFF9800
	BSR	CALC_SPRITE
	
	REPT	NB
	BSR.L	SAV_FOND
	ENDR
	
	SUB.L	#30,$FFFF9800
	
	REPT	NB
	BSR.L	AFF_SPR
	ENDR
	
	MOVEM.L	(A7)+,D0-A6
	MOVE.L	#0,$FFFF9800.W
	RTE
	
***************************************************************************
* CALCUL L'OFFSET DU SPRITE (PAR RAPPORT AU BORD HAUT-GAUCHE DE L'ECRAN)

CALC_SPRITE
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.W	Y,D0
	MULU.L	#640,D0				* Y=Y*640
	MOVE.W	X,D1
	ADD.W	D1,D1				* X=X*2
	ADD.L	D1,D0
	MOVE.L	D0,OFFSET
	RTS
***************************************************************************
* AFFICHE LE SPRITE
AFF_SPR
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	
BUFFER	INCBIN	SPRTC.BIN
	
***************************************************************************
* SAUVEGARDE DU FOND
*
* REMARQUER QUE L'ON SE PLACE A LA FIN DU BUFFER DE SAUVEGARDE
* C'EST POUR UNE QUESTION D'OPTIMISATION DE VITESSE

SAV_FOND
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	LEA	FOND+32*32*2,A1
	BRA.L	BUFFER+6
	RTS
	
***************************************************************************
* RESTITUTION DU FOND
*
* IDEM ON SE PLACE A LA FIN DU BUFFER

RESTITU
	MOVE.L	SCREEN1,A0
	ADD.L	OFFSET,A0
	LEA	FOND+32*32*2,A1
	BRA.L 	BUFFER+12
	RTS
	
***************************************************************************

X	DC.W	0
Y	DC.W	50
OFFSET	DC.L	0
SCREEN1	DC.L	SCREEN+128		* + OFFSET D'ENTETE SI ON UTILISE
					* UNE IMAGE (EX +128 POUR FORMAT TPI)
					*           (TRUE PAINT IMAGE)

***************************************************************************
	
FOND	DS.W	32*32			* EN FAIT CELA CORRESPOND AU NOMBRE
					* DE POINTS QUI COMPOSENT LE SPRITE
SCREEN	INCBIN	SKYVASE.TPI
