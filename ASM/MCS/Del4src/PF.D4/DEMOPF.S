	opt o+
BLITTER 	EQU	$FF8A00
HALFTONE 	EQU	0
SRC_XINC	EQU	$20
SRC_YINC	EQU	$22
SRC_ADDR	EQU	$24
ENDMASK1	EQU	$28
ENDMASK2	EQU	$2A
ENDMASK3	EQU	$2C
DST_XINC	EQU	$2E
DST_YINC	EQU	$30
DST_ADDR	EQU	$32
X_COUNT	EQU	$36
Y_COUNT	EQU	$38
HOP	EQU	$3A
OP	EQU	$3B
LINE_NUM	EQU	$3C
SKEW	EQU	$3D
FLINEBUSY	EQU	7
MHOP_SRC	EQU	$02
MSKEWFXSR	EQU	$80
MSKEWNFSR	EQU	$40
MLINEBUSY	EQU	$80

SRC_FORM	EQU	0
SRC_NXWD	EQU	4
SRC_NXLN	EQU	6
SRC_NXPL	EQU	8
SRC_XMIN	EQU	10
SRC_YMIN	EQU	12
DST_FORM	EQU	14
DST_NXWD	EQU	18
DST_NXLN	EQU	20
DST_NXPL	EQU	22
DST_XMIN	EQU	24
DST_YMIN	EQU	26
WIDTH	EQU	28
HEIGHT	EQU	30
PLANES	EQU	32

	clr.l	-(sp)
	move.w	#32,-(sp)
	trap	#1
	addq.l	#6,sp
	
	MOVE.W	#$2700,SR

	CLR.W	$FFFF8260.W

	MOVE.B	ECRAN+1,$FFFF8201.W
	MOVE.B	ECRAN+2,$FFFF8203.W

	MOVE.L	#48384,D0
	MOVE.L	#ECR0,A0
CLS	MOVE.L	#0,(A0)+
	DBRA	D0,CLS

	BSR	DECAL_LOGO


	MOVE.B	$FFFFFA09.W,S9
	MOVE.B	$FFFFFA07.W,S7
	
	MOVE.L	$70.W,L70
	MOVE.B	$484.W,S484
	MOVE.W	#$2300,SR
RECOM	MOVE.B	S9,$FFFFFA09.W
	MOVE.B	S7,$FFFFFA07.W

	MOVE.L	$70.W,S70
	MOVE.L	$120.W,OLD_HBL


           	MOVEQ      	#1,D0             * SELECT A TUNE...
           	jSR      	ZIC
           	MOVE.W	#$2700,SR
	
		
	AND.B 	#$ef,$fffa13
	AND.B 	#$ef,$fffa0f
	AND.B 	#$ef,$fffa0b
	AND.B 	#$ef,$fffa07
	clr.b 	$fffa1b
	clr.b 	$fffa09
	ori.b 	#$1,$fffa07
	ori.b 	#$1,$fffa13
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#MY_VBL,$70.W
	
	
	MOVE.W 	#$2300,SR



DEMO	
		
	CMP.B	#$39,$FFFFFC02.W
	BEQ.S	EXIT

	CMP.W	#0,OK_COPY
	BNE.S	DEMO
	MOVE.L	LA,A0
	MOVE.L	LA+4,A1
	
	ADDQ.L	#8,A0
	MOVEQ	#33,D7
LOOP1
	MOVE.W	#39,D6
LOOP2	
	MOVE.L	(A0)+,(A1)+
	DBRA	D6,LOOP2
	LEA	8(A0),A0
	LEA	8(A1),A1
	DBRA	D7,LOOP1

	
	MOVE.W	#1,OK_COPY
	
	
	BRA.S	DEMO

EXIT	
	MOVE.W	#$2700,SR

	
           	MOVE.L     #$8080000,$FFFF8800.W  * COUPER LE SON
           	MOVE.L     #$9090000,$FFFF8800.W  * SUR LES TROIS
           	MOVE.L     #$A0A0000,$FFFF8800.W  * CANAUX.

	MOVE.L	S70,$70.W
	MOVE.B	#0,$FFFFFA1B.W
	MOVE.L	OLD_HBL,$120.W
	MOVE.B	S9,$FFFFA09
	MOVE.B	S7,$FFFFA07
	
	MOVE.B	#0,$FF8265
	MOVE.B	#0,$FF820F

	ILLEGAL

MY_VBL	
	MOVE.B	#0,$FFFFFA1B.W
	MOVE.B	#100,$FFFFFA21.W
	MOVE.B	#4,$FFFFFA1B.W
	MOVE.L	#OVR_HAUT,$120.W
		
	MOVEM.L	D0-D7/A0-A6,-(A7)
	
	MOVEM.L	PAL,D0-D7
	MOVEM.L	D0-D7,$FF8240
	
	MOVE.W	#$2500,SR
	
	MOVE.L	#SCREEN+4,A0
	MOVE.B	1(A0),$FF8205
	MOVE.B	2(A0),$FF8207
	MOVE.B	3(A0),$FF8209
	
	MOVE.B	#0,$FF8265
	MOVE.B	#16,$FF820F
	
	jSR	ZIC+8
	

	MOVEQ	#0,D0
	
	LEA	TAB_FONT,A1
	MOVE.W	PTR_TXT,D0
	MOVE.L	D0,D1
	LEA	TEXT,A0
	ADD.L	D0,A0
	MOVE.L	A0,A2
	MOVEQ	#0,D0
	MOVE.B	(A0),D0
	
	SUB.W	#$20,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	
	MOVE.L	0(A1,D0.W),A1

	MOVE.L	LA,A0
	ADD.L	#160+(168*8),A0
	MOVEQ	#15,D0
LOOP
	MOVE.L	(A1),(A0)
	MOVE.L	4(A1),4(A0)
	LEA	160(A1),A1
	LEA	168(A0),A0
	DBRA	D0,LOOP
	
	
	MOVE.L	#LA,A0
	MOVE.B	1(A0),PEEK1+3
	MOVE.B	2(A0),PEEK2+3
	MOVE.B	3(A0),PEEK3+3
	LEA	TAB_OFSET,A0
	MOVE.W	PTR_OFSET,D0
	MOVE.B	0(A0,D0.W),PEEK4+3
	MOVE.B	1(A0,D0.W),PEEK5+3
	ADDQ.W	#2,D0
	CMP.B	#8,D0
	BNE.S	NOT_YET
	ADDQ.W	#1,D1
	CMP.L	#FIN_TXT-1,A2
	BNE.S	CONT
	MOVEQ	#0,D1
CONT
	MOVE.W	D1,PTR_TXT

	MOVE.L	LA,D0
	MOVE.L	LA+4,D1
	MOVE.L	D1,LA
	MOVE.L	D0,LA+4
	
	
	MOVEQ	#0,D0
NOT_YET
	MOVE.W	D0,PTR_OFSET
	MOVEQ	#0,D0
	
	BSR	RESTIT
	BSR	RESTIT_LEM
	BSR	RESTITG
	
	BSR	LOGO	
	BSR	LAGAFFE
	BSR	GUINNESS
	BSR	EQUALIZER
	
	
DO_REBON
	CMP.W	#1,WAIT_PEL
	BEQ	NOT_YET2
	MOVE.W	#1,LEM_OK
	CMP.W	#3,WAIT_PEL2
	BGT	OK_LEM
	
	
	LEA	REBOND(PC),A0
	MOVE.W	PTR_REB,D0
	ADD.L	D0,A0
	ADDQ.W	#4,D0
	CMP.L	#FINREBON-4,A0
	BLE.S	CONT_REB
	ADDQ.W	#1,WAIT_PEL2
	MOVE.W	#0,WAIT_PEL
	MOVE.W	#0,PTR_REB
	MOVE.W	#0,PTR_PEL
	MOVE.W	#0,LEM_OK
	BRA.S	CONT_REB2
CONT_REB
	MOVE.W	D0,PTR_REB
CONT_REB2
	MOVE.W	(A0)+,D6	*X
	MOVE.W	(A0),D7	*Y
	
	
	MOVE.L	ECRAN,A1
	
	move.W  d6,d0
        	andi.l  #$1F0,d6
        	lsr.W   #1,d6
       
       
        	add.l   ECRAN,d6
        	movea.l d6,A1  
        	
        	MOVEQ	#0,D5
        	MOVE.L	D6,D1
        	MOVE.W	D7,D5
        	MULU	#192,D5
	ADD.L	D5,D1	
   
        		      * adresse ecran de l'affichage
       
        	andi.l  #15,d0
        	
        	BSR	SAVE_FOND
        	
        	MOVE.W	PTR_PEL,D2
        	MOVE.W	D2,D3
	ADD.W	D2,D2
	ADD.W	D2,D2
	ADDQ.W	#1,WAIT_ROL
	CMP.W	#1,WAIT_ROL
	BNE.S	NOT_ROL
	SUBQ.W	#1,D3
	AND.W	#$1F,D3
	MOVE.W	D3,PTR_PEL
	MOVE.W	#0,WAIT_ROL
NOT_ROL
	LEA	PEL_MASK(PC),A2
	MOVE.L	0(A2,D2.W),A2	*ADR SPRITE
	
	MOVE.B	#4,FONC
        	BSR	AFF_SPRITE
        	
        	LEA	PEL_TAB(PC),A2
	MOVE.L	0(A2,D2.W),A2	*ADR SPRITE
	
	MOVE.B	#7,FONC
        	BSR	AFF_SPRITE
        	
NOT_YET2
	BSR	LEMMINGS
	
	MOVE.L	ECRAN,D0
	MOVE.L	ECRAN+4,D1
	MOVE.L	D1,ECRAN
	MOVE.L	D0,ECRAN+4
	MOVE.L	SCREEN,D0
	MOVE.L	SCREEN+4,D1
	MOVE.L	D1,SCREEN
	MOVE.L	D0,SCREEN+4
	MOVE.L	SAVE_PEL,D0
	MOVE.L	SAVE_PEL+4,D1
	MOVE.L	D1,SAVE_PEL
	MOVE.L	D0,SAVE_PEL+4	
	MOVE.L	SAVE_GUIN,D0
	MOVE.L	SAVE_GUIN+4,D1
	MOVE.L	D1,SAVE_GUIN
	MOVE.L	D0,SAVE_GUIN+4	
	MOVE.L	BUF_SAVE,D0
	MOVE.L	BUF_SAVE+4,D1
	MOVE.L	D1,BUF_SAVE
	MOVE.L	D0,BUF_SAVE+4
	MOVE.L	OLD_SPC,D0
	MOVE.L	OLD_SPC+4,D1
	MOVE.L	D1,OLD_SPC
	MOVE.L	D0,OLD_SPC+4
	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTE
	
FIN_VBL	
OK_LEM	
	MOVE.W	#0,LEM_OK
	BRA	NOT_YET2

AFF_SPRITE
        
	LEA	PARA,A4
	MOVE.L	A2,(A4)
	MOVE.L	A1,DST_FORM(A4)
	MOVE.W	#8,SRC_NXWD(A4)
	MOVE.W	#8,DST_NXWD(A4)
	MOVE.W	#160,SRC_NXLN(A4)
	MOVE.W	#192,DST_NXLN(A4)
	MOVE.W	#2,SRC_NXPL(A4)
	MOVE.W	#2,DST_NXPL(A4)
	MOVE.W	#0,SRC_XMIN(A4)
	MOVE.W	#0,SRC_YMIN(A4)
	MOVE.W	D0,DST_XMIN(A4)	*X DEST
	MOVE.W	D7,DST_YMIN(A4)	*Y DEST
	MOVE.W	#32,WIDTH(A4)
	MOVE.W	#32,HEIGHT(A4)
	MOVE.W	#4,PLANES(A4)
	BSR.S	BLIT
	
	RTS

SAVE_FOND
       	MOVE.L	D1,A3	SOURCE
        
       	MOVE.L	SAVE_PEL,A4	BUF
       	MOVE.L	A3,(A4)+	ADDR AFF
       	MOVEQ	#32,D5
LOOP_FOND
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	LEA	192-24(A3),A3
	DBRA	D5,LOOP_FOND
       	RTS
RESTIT
   
       	MOVE.L	SAVE_PEL,A4	BUF
       	MOVE.L	(A4)+,A3	ADDR AFF
       	MOVEQ	#32,D5
LOOP_IT1
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	LEA	192-24(A3),A3 
     	DBRA	D5,LOOP_IT1
	RTS

	EVEN
LF_ENDMASK
	DC.W	$FFFF
RT_ENDMASK
	DC.W	$7FFF
	DC.W	$3FFF
	DC.W	$1FFF
	DC.W	$0FFF
	DC.W	$07FF
	DC.W	$03FF
	DC.W	$01FF
	DC.W	$00FF
	DC.W	$007F
	DC.W	$003F
	DC.W	$001F
	DC.W	$000F
	DC.W	$0007
	DC.W	$0003
	DC.W	$0001
	DC.W	$0000
	EVEN

BLIT
	MOVEM.L	D0-D7/A0-A6,-(A7)
	LEA	BLITTER,A5
	MOVE	WIDTH(A4),D6
	SUBQ	#1,D6
	MOVE	SRC_XMIN(A4),D0
	MOVE	D0,D1
	ADD	D6,D1	SRC_XMAX
	
	MOVE	DST_XMIN(A4),D2
	MOVE	D2,D3
	ADD	D6,D3	DST_XMAX
	
	MOVEQ	#$0F,D6
	
	MOVE	D2,D4
	AND	D6,D4
	ADD	D4,D4
	MOVE	LF_ENDMASK(PC,D4),D4
	
	MOVE	D3,D5
	AND	D6,D5
	ADD	D5,D5
	
	MOVE	RT_ENDMASK(PC,D5),D5
	NOT	D5
	
	MOVE	D2,D7
	AND	D6,D7
	AND	D0,D6
	SUB	D6,D7
	CLR	D6
	ADDX	D6,D6
	LSR	#4,D0
	LSR	#4,D1
	SUB	D0,D1
	LSR	#4,D2
	LSR	#4,D3
	SUB	D2,D3
	BNE.S	SET_ENDMASK
	AND	D5,D4
	ADDQ	#4,D6
SET_ENDMASK
	MOVE	D4,ENDMASK1(A5)
	MOVE	#$FFFF,ENDMASK2(A5)
	MOVE	D5,ENDMASK3(A5)
	
	CMP	D1,D3
	BNE.S	SET_COUNT
	ADDQ	#2,D6
SET_COUNT
	MOVE	D3,D4
	ADDQ	#1,D4
	MOVE	D4,X_COUNT(A5)
	
	MOVE.L	(A4),A0
	MOVE	SRC_YMIN(A4),D4
	MOVE	SRC_NXLN(A4),D5
	MULU	D5,D4
	ADD.L	D4,A0
	
	MOVE	SRC_NXWD(A4),D4
	MOVE	D4,SRC_XINC(A5)
	MULU	D4,D0
	ADD.L	D0,A0
	MULU	D4,D1
	SUB	D1,D5
	MOVE	D5,SRC_YINC(A5)
	
	MOVE.L	DST_FORM(A4),A1
	MOVE	DST_YMIN(A4),D4
	MOVE	DST_NXLN(A4),D5
	MULU	D5,D4
	ADD.L	D4,A1
	MOVE	DST_NXWD(A4),D4
	MOVE	D4,DST_XINC(A5)
	MULU	D4,D2
	ADD.L	D2,D1
	
	MULU	D4,D3
	SUB	D3,D5
	MOVE	D5,DST_YINC(A5)
	AND.B	#$F,D7
	OR.B	SKEW_FLAGS(PC,D6),D7
	MOVE.B	D7,SKEW(A5)
	MOVE.B	#MHOP_SRC,HOP(A5)
	MOVE.B	FONC,OP(A5)
	LEA	LINE_NUM(A5),A2
	MOVE.B	#FLINEBUSY,D2
	MOVE	PLANES(A4),D7
	BRA.S	BEGIN
NEXT_PLANE
	MOVE.L	A0,SRC_ADDR(A5)
	MOVE.L	A1,DST_ADDR(A5)
	MOVE	HEIGHT(A4),Y_COUNT(A5)
	MOVE.B	#MLINEBUSY,(A2)
	ADD	SRC_NXPL(A4),A0
	ADD	DST_NXPL(A4),A1
	
RESTART
	BSET.B	D2,(A2)
	NOP
	BNE.S	RESTART
BEGIN
	DBRA	D7,NEXT_PLANE
	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS
	
SKEW_FLAGS
	DC.B	MSKEWNFSR
	DC.B	MSKEWFXSR
	DC.B	0
	DC.B	MSKEWNFSR+MSKEWFXSR
	DC.B	0
	DC.B	MSKEWFXSR
	DC.B	0
	DC.B	0
	
	EVEN
	
LOGO
	MOVEQ	#0,D0
	MOVE.L	D0,D1
	MOVE.L	D0,D2
	MOVE.L	D0,D3
	MOVE.L	D0,D4
	MOVE.L	D0,D5
	MOVE.L	D0,D6
	MOVE.L	D0,D7
	MOVE.L	#XCOORD,A2
	MOVE.W	PTR_LOGO,D5
	ADD.L	D5,A2
	ADDQ.W	#2,PTR_LOGO
	CMP.L	#FIN_XCOORD,A2
	BLE.S	CONT_LOGO
	MOVE.W	#0,PTR_LOGO
CONT_LOGO
	MOVE.L	ECRAN,A1
	
	
	ADD.L	#48*192+32,A1
	MOVE.L	A1,A3
	MOVEQ	#47,D0
LOOP_LOGO
	MOVE.W	(A2)+,D6
        	ANDI.L  	#15,D6	*DECALAGE
        	LEA	TAB_LOGO,A4
        	ADD.W	D6,D6
        	ADD.W	D6,D6
        	MOVE.L	0(A4,D6.W),A0
        	ADD.L	D7,A0
        	ADD.L	#88,D7
	REPT 22
	MOVE.L	(A0)+,(A1)+
	ENDR
	LEA	192(A3),A3
	MOVE.L	A3,A1
	
	DBRA	D0,LOOP_LOGO
	RTS
	
GUINNESS
	MOVEQ	#0,D0
	MOVE.L	D0,D5
	MOVE.L	D0,D6
	MOVE.L	D0,D7
	
	LEA	GUIN,A0
	
	MOVE.L	#YCOORD,A2
	MOVE.W	PTR_GUIN,D5
	ADD.L	D5,A2
	ADDQ.W	#2,PTR_GUIN
	CMP.L	#FIN_YCOORD-4,A2
	BLE.S	CONT_GUIN
	MOVE.W	#0,PTR_GUIN
CONT_GUIN
	MOVE.W	(A2),D7
	MOVE.L	ECRAN,A1
	ADD.L	#160-32,A1
	MOVE.L	A1,D1
	MOVE.L	D7,D6
	MULU.W	#192,D6
	ADD.L	D6,D1
	BSR	SAVE_FONDG
	MOVEQ	#0,D0
	MOVE.L	#GUIN+24,A2
	MOVE.B	#4,FONC
	BSR.S	AFF_GUINNESS
	MOVE.L	#GUIN,A2
	MOVE.B	#7,FONC
	BSR.S	AFF_GUINNESS
	
	RTS
AFF_GUINNESS
	
	LEA	PARA,A4
	MOVE.L	A2,(A4)
	MOVE.L	A1,DST_FORM(A4)
	MOVE.W	#8,SRC_NXWD(A4)
	MOVE.W	#8,DST_NXWD(A4)
	MOVE.W	#48,SRC_NXLN(A4)
	MOVE.W	#192,DST_NXLN(A4)
	MOVE.W	#2,SRC_NXPL(A4)
	MOVE.W	#2,DST_NXPL(A4)
	MOVE.W	#0,SRC_XMIN(A4)
	MOVE.W	#0,SRC_YMIN(A4)
	MOVE.W	D0,DST_XMIN(A4)	*X DEST
	MOVE.W	D7,DST_YMIN(A4)	*Y DEST
	MOVE.W	#48,WIDTH(A4)
	MOVE.W	#49,HEIGHT(A4)
	MOVE.W	#4,PLANES(A4)
	BSR	BLIT
	RTS

SAVE_FONDG
       	MOVE.L	D1,A3	SOURCE
        
       	MOVE.L	SAVE_GUIN,A4	BUF
       	MOVE.L	A3,(A4)+	ADDR AFF
       	MOVEQ	#47,D5
LOOP_FONDG
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	LEA	192-24(A3),A3
	DBRA	D5,LOOP_FONDG
       	RTS
RESTITG
   
       	MOVE.L	SAVE_GUIN,A4	BUF
       	MOVE.L	(A4)+,A3	ADDR AFF
       	MOVEQ	#67,D5
LOOP_IT1G
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	LEA	192-24(A3),A3 
     	DBRA	D5,LOOP_IT1G
	RTS

	
LAGAFFE
	
	MOVE.W	X_GAST,D6
	MOVE.W	SENS,D0
	ADD.W	D0,X_GAST
	
	
	CMP.W	#320,X_GAST
	BLE.S	CONT_GAST
	
	MOVE.W	#-2,SENS
	MOVE.L	GASTON,D0
	MOVE.L	GASTON+4,D1
	MOVE.L	D1,GASTON
	MOVE.L	D0,GASTON+4
CONT_GAST
	CMP.W	#2,X_GAST
	BGE.S	CONT_GAST2
	MOVE.W	#2,SENS
	MOVE.L	GASTON,D0
	MOVE.L	GASTON+4,D1
	MOVE.L	D1,GASTON
	MOVE.L	D0,GASTON+4
CONT_GAST2

	MOVE.L	#200,D7
	
	MOVE.L	ECRAN,A1
	
	move.W  d6,d0
        	andi.l  #$1F0,d6
        	lsr.W   #1,d6
       
       
        	add.l   ECRAN,d6
        	movea.l d6,A1  
       
        	andi.l  #15,d0
        	
        	MOVE.W	PTR_GAST,D2
        	MOVE.W	D2,D3
	ADD.W	D2,D2
	ADD.W	D2,D2
	ADDQ.W	#1,WAIT_GAST
	CMP.W	#5,WAIT_GAST
	BNE.S	NOT_GO
	
	ADDQ.W	#1,D3
	CMP.W	#11,D3
	BLE.S	CONT_WALK	
	MOVE.W	#0,D3
CONT_WALK
	MOVE.W	D3,PTR_GAST
	MOVE.W	#0,WAIT_GAST
NOT_GO
	MOVE.L	GASTON,A2
	MOVE.L	0(A2,D2.W),A2	*ADR SPRITE
	
	MOVE.B	#3,FONC
        	BSR.S	AFF_GASTON
        	
	RTS
AFF_GASTON
	
	LEA	PARA,A4
	MOVE.L	A2,(A4)
	MOVE.L	A1,DST_FORM(A4)
	MOVE.W	#8,SRC_NXWD(A4)
	MOVE.W	#8,DST_NXWD(A4)
	MOVE.W	#160,SRC_NXLN(A4)
	MOVE.W	#192,DST_NXLN(A4)
	MOVE.W	#2,SRC_NXPL(A4)
	MOVE.W	#2,DST_NXPL(A4)
	MOVE.W	#0,SRC_XMIN(A4)
	MOVE.W	#0,SRC_YMIN(A4)
	MOVE.W	D0,DST_XMIN(A4)	*X DEST
	MOVE.W	D7,DST_YMIN(A4)	*Y DEST
	MOVE.W	#48,WIDTH(A4)
	MOVE.W	#67,HEIGHT(A4)
	MOVE.W	#4,PLANES(A4)
	BSR	BLIT
	RTS

LEMMINGS	
	MOVEQ	#0,D0
	MOVE.L	D0,D1
	MOVE.L	D0,D7
	
    	MOVE.W	X_LEM,D1
	CMP.W	#1,LEM_OK
	BEQ.S	NOT_SPC
	CMP.W	#1,SPC
	BEQ	SPC_LEM

	CMP.W	#48,D1
	BNE.S	NOT_SPC
	CMP.W	#-2,SENS
	BEQ.S	NOT_SPC
	CMP.W	#80,X_GAST
	BLE.S	NOT_SPC
	MOVE.W	#1,SPC
	MOVE.W	#1,WAIT_PEL
	BRA	SPC_LEM
NOT_SPC
	MOVE.W	#0,SPC
	ADDQ.W	#1,X_LEM
	CMP.W	#360,X_LEM
	BLE.S	CONT_LEM
	MOVE.W	#0,X_LEM
CONT_LEM
	MOVE.W	PTR_LEM,D2
        	MOVE.W	D2,D3
	ADD.W	D2,D2
	ADD.W	D2,D2
	ADDQ.W	#1,WAIT_WALK
	CMP.W	#4,WAIT_WALK
	BNE.S	NOT_WALK
	SUBQ.W	#1,D3
	AND.W	#$7,D3
	MOVE.W	D3,PTR_LEM
	MOVE.W	#0,WAIT_WALK
NOT_WALK
	LEA	TAB_LEM(PC),A0
	MOVE.L	0(A0,D2.W),A0	*ADR SPRITE
	
	MOVE.L	#278*192,D0
	
	MOVE.L	ECRAN,A1
	ADD.L	D0,A1
	
	MOVE.L	D1,D7
	AND.L	#$1F0,D1
	LSR.L	#1,D1
	ADD.L	D1,A1	*ADRESSE AFF
	MOVE.L	A1,D1
	
	JSR	SAVE_LEM
	
	ANDI.L	#15,D7	*DECALAGE
	


	MOVEQ	#9,D5
LOOP_LEM
	MOVEQ	#0,D0
	MOVE.L	D0,D1
	MOVE.L	D0,D2
	MOVE.L	D0,D3
	
	MOVE.W	(A0)+,D0
	MOVE.W	(A0)+,D1
	MOVE.W	(A0)+,D2
	MOVE.W	(A0)+,D3
	MOVE.L	D0,D4
	OR.L	D1,D4
	OR.L	D2,D4
	OR.L	D3,D4
	NOT.L	D4
	ROR.L	D7,D0
	ROR.L	D7,D1
	ROR.L	D7,D2
	ROR.L	D7,D3
	ROR.L	D7,D4
	AND.W	D4,(A1)
	OR.W	D0,(A1)+
	AND.W	D4,(A1)
	OR.W	D1,(A1)+
	AND.W	D4,(A1)
	OR.W	D2,(A1)+
	AND.W	D4,(A1)
	OR.W	D3,(A1)+
	
	SWAP	D0
	SWAP	D1
	SWAP	D2
	SWAP	D3
	SWAP	D4
	AND.W	D4,(A1)
	OR.W	D0,(A1)+
	AND.W	D4,(A1)
	OR.W	D1,(A1)+
	AND.W	D4,(A1)
	OR.W	D2,(A1)+
	AND.W	D4,(A1)
	OR.W	D3,(A1)+

	LEA	192-16(A1),A1
	DBRA	D5,LOOP_LEM
	RTS

SPC_LEM	MOVEQ	#0,D0
	MOVE.L	D0,D1
	MOVE.W	PTR_SPC,D2
        	MOVE.W	D2,D3
	ADD.W	D2,D2
	ADD.W	D2,D2
	ADDQ.W	#1,WAIT_SPC
	CMP.W	#4,WAIT_SPC
	BNE.S	NOT_AFF
	ADDQ.W	#1,D3
	AND.W	#$1F,D3
	MOVE.W	D3,PTR_SPC
	MOVE.W	#0,WAIT_SPC
NOT_AFF
	LEA	TAB_LEM2(PC),A0
	MOVE.L	0(A0,D2.W),A0	*ADR SPRITE
	MOVE.L	ECRAN,A1
	ADD.L	#232*192+8,A1
	MOVE.L	A1,OLD_SPC
	MOVEQ	#55,D0
LOOP_SPC
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	
	LEA	192-32(A1),A1
	LEA	160-32(A0),A0
	DBRA	D0,LOOP_SPC
	CMP.W	#31,PTR_SPC
	BEQ.S	FIN_SPC
	RTS
FIN_SPC
	MOVE.W	#0,WAIT_PEL2
	MOVE.W	#0,SPC
	MOVE.W	#0,PTR_SPC
	MOVE.W	#0,WAIT_PEL
	RTS 

SAVE_LEM	
       	MOVE.L	D1,A3	SOURCE
        
       	MOVE.L	BUF_SAVE,A4	BUF
       	MOVE.L	A3,(A4)+	ADDR AFF
       	MOVEQ	#9,D5
LOOP_LEMS
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	MOVE.L	(A3)+,(A4)+
	LEA	192-16(A3),A3 
     	DBRA	D5,LOOP_LEMS
       	RTS

RESTIT_LEM
	CMP.W	#1,SPC
	BEQ.S	REST_SPC
	
       	MOVE.L	BUF_SAVE,A4	BUF
       	MOVE.L	(A4)+,A3	ADDR AFF
       	MOVEQ	#9,D5
LOOP_LEM1
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	MOVE.L	(A4)+,(A3)+
	LEA	192-16(A3),A3 
     	DBRA	D5,LOOP_LEM1
	RTS
REST_SPC
	MOVE.L	OLD_SPC,A3
	MOVEQ	#55,D0
LOOP_REST_S
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	MOVE.L	#0,(A3)+	
	
	LEA	192-32(A3),A3
	DBRA	D0,LOOP_REST_S
	RTS

EQUALIZER
	MOVE.L	ECRAN,A1
	ADD.L	#192*128+48,A1
	MOVE.L	A1,A4
	BSR	EFF_EQU
	MOVEQ	#0,D0
	MOVEQ	#15,D1
	MOVE.B	#8,$FFFF8800.W
	MOVE.L	#EQUAL,A2
	MOVE.B	$FFFF8800.W,D0
	CMP.B	#0,D0
	BEQ.S	CONT_EQU2
	SUB.L	D0,D1
	ADD.W	D1,D1
	ADD.W	D0,D0
	MULU.W	#192,D1
	ADD.L	D1,A1
	
LOOP_EQ1
	MOVE.L	(A2)+,(A1)+
	MOVE.L	(A2)+,(A1)+
	LEA	192-8(A1),A1
	DBRA	D0,LOOP_EQ1
	MOVE.L	A4,A1
	
CONT_EQU2
	MOVEQ	#0,D0
	MOVEQ	#15,D1
	MOVE.B	#9,$FFFF8800.W
	MOVE.L	#EQUAL,A2
	MOVE.B	$FFFF8800.W,D0
	CMP.B	#0,D0
	BEQ.S	CONT_EQU3
	SUB.L	D0,D1
	ADD.W	D1,D1
	ADD.W	D0,D0
	MULU.W	#192,D1
	ADD.L	D1,A1
	ADD.L	#16,A1
LOOP_EQ2
	MOVE.L	(A2)+,(A1)+
	MOVE.L	(A2)+,(A1)+
	LEA	192-8(A1),A1
	DBRA	D0,LOOP_EQ2
	
CONT_EQU3
	MOVE.L	A4,A1
	MOVEQ	#0,D0
	MOVEQ	#15,D1
	MOVE.B	#10,$FFFF8800.W
	MOVE.L	#EQUAL,A2
	MOVE.B	$FFFF8800.W,D0
	CMP.B	#0,D0
	BEQ.S	FIN_EQU2	
	SUB.L	D0,D1
	ADD.W	D1,D1
	ADD.W	D0,D0
	MULU.W	#192,D1
	ADD.L	D1,A1
	ADD.L	#32,A1
	
LOOP_EQ3
	MOVE.L	(A2)+,(A1)+
	MOVE.L	(A2)+,(A1)+
	LEA	192-8(A1),A1
	DBRA	D0,LOOP_EQ3
	MOVE.L	A4,A1
FIN_EQU2
	RTS
EFF_EQU
	MOVE.L	A1,A3
	MOVEQ	#32,D7
EFF_EQ
	REPT 12
	MOVE.L	#$0,(A3)+
	ENDR
	LEA	192-48(A3),A3
	DBRA	D7,EFF_EQ
	RTS
OVR_HAUT
	STOP	#$2100
	STOP	#$2100
	MOVE.W	#$2700,SR
	DCB.W	83,$4E71
	MOVE.W	#0,$FFFF820A.W
	DCB.W	10,$4E71
	MOVE.B	#2,$FFFF820A.W
	
	MOVE.B	#0,$FFFFFA1B.W
	MOVE.B	#228,$FFFA21
	MOVE.B	#8,$FFFA1B
	MOVE.L	#OVR_BAS,$120.W
	MOVE.W	#$2300,SR
	RTE


OVR_BAS
	MOVE.W	#$2700,SR
	
	DCB.W	122,$4E71
	MOVE.B	#0,$FFFF820A.W
	DCB.W	6,$4E71
	MOVE.B	#2,$FFFF820A.W
	MOVE.B	#0,$FFFFFA1B.W
	MOVE.B	#11,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#HBL,$120.W
	
	
	MOVE.W	#$2300,SR
	RTE

HBL	
	MOVE.B	#0,$FFFFFA1B.W
	MOVE.B	#1,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#HBLPF,$120.W
	MOVE.W	#0,$FFFF8242.W
	
	MOVE.L 	#COLOR1,A6
	RTE
	
HBLPF
PEEK1	MOVE.B	#0,$FFFF8205.W
PEEK2	MOVE.B	#0,$FFFF8207.W
PEEK3	MOVE.B	#0,$FFFF8209.W
PEEK4	MOVE.B	#0,$FFFF8265.W
PEEK5	MOVE.B	#0,$FFFF820F.W

	MOVE.L	#HBL2,$120.W
	RTE
	
	
	
HBL2
	MOVE.W	(A6)+,$FFFF8240.W
	MOVE.W	#$2300,SR
	MOVE.W	#0,OK_COPY
	RTE

DECAL_LOGO
	MOVEQ	#0,D0
	MOVE.L	D0,D1
	MOVE.L	D0,D2
	MOVE.L	D0,D3
	MOVE.L	D0,D4
	MOVE.L	D0,D5
	MOVE.L	D0,D6
	MOVE.L	D0,D7
	LEA	TAB_LOGO,A2
	
	MOVEQ	#0,D0	*DECALAGE
	MOVEQ	#15,D5
NEXT_DEC	
	LEA	LOGO_MCS,A0
	MOVE.L	(A2)+,A1
	MOVEQ	#0,D1
	MOVE.L	D1,D2
	MOVE.L	D2,D3
	MOVE.L	D3,D4
	MOVEQ	#47,D7
NEXT_LINE
	MOVEQ	#10,D6	

DECAL	
	MOVEQ	#0,D1
	MOVE.L	D1,D2
	MOVE.L	D1,D3
	MOVE.L	D1,D4


	MOVE.W	(A0)+,D1
	MOVE.W	(A0)+,D2
	MOVE.W	(A0)+,D3
	MOVE.W	(A0)+,D4
	ROR.L	D0,D1
	ROR.L	D0,D2
	ROR.L	D0,D3
	ROR.L	D0,D4
	OR.W	D1,(A1)+
	OR.W	D2,(A1)+
	OR.W	D3,(A1)+
	OR.W	D4,(A1)+
	SWAP	D1
	SWAP	D2
	SWAP	D3
	SWAP	D4
	MOVE.W	D1,(A1)
	MOVE.W	D2,2(A1)
	MOVE.W	D3,4(A1)
	MOVE.W	D4,6(A1)
	
	DBRA	D6,DECAL
	
	DBRA	D7,NEXT_LINE
	ADDQ.L	#1,D0
	
	DBRA	D5,NEXT_DEC
	MOVE.L	#LOGO_MCS,TAB_LOGO
	RTS
	DATA
	EVEN
ICI	DC.L	ECRAN
LA	DC.L	BUF1,BUF2
PTR_TXT	DC.W	0
OK_COPY	DC.W	0
	EVEN
REBOND
	INCBIN	REBOND.BIN
FINREBON
	EVEN
PTR_REB	DC.W	0
PTR_PEL	DC.W	0
WAIT_PEL	DC.W	1
WAIT_PEL2		DC.W	1
TST	DC.L	0
PEL_TAB

	DC.L	PELF,PELF+16,PELF+32,PELF+48,PELF+64,PELF+80,PELF+96,PELF+112,PELF+128,PELF+144
	DC.L	PELF+(160*32),PELF+(160*32)+16,PELF+(160*32)+32,PELF+(160*32)+48,PELF+(160*32)+64,PELF+(160*32)+80,PELF+(160*32)+96,PELF+(160*32)+112,PELF+(160*32)+128,PELF+(160*32)+144
	DC.L	PELF+(160*64),PELF+(160*64)+16,PELF+(160*64)+32,PELF+(160*64)+48,PELF+(160*64)+64,PELF+(160*64)+80,PELF+(160*64)+96,PELF+(160*64)+112,PELF+(160*64)+128,PELF+(160*64)+144
	DC.L	PELF+(160*96),PELF+(160*96)+16,PELF+(160*96)+32,PELF+(160*96)+48,PELF+(160*96)+64,PELF+(160*96)+80,PELF+(160*96)+96,PELF+(160*96)+112,PELF+(160*96)+128,PELF+(160*96)+144

PEL_MASK
	DC.L	PELFMASK,PELFMASK+16,PELFMASK+32,PELFMASK+48,PELFMASK+64,PELFMASK+80,PELFMASK+96,PELFMASK+112,PELFMASK+128,PELFMASK+144
	DC.L	PELFMASK+(160*32),PELFMASK+(160*32)+16,PELFMASK+(160*32)+32,PELFMASK+(160*32)+48,PELFMASK+(160*32)+64,PELFMASK+(160*32)+80,PELFMASK+(160*32)+96,PELFMASK+(160*32)+112,PELFMASK+(160*32)+128,PELFMASK+(160*32)+144
	DC.L	PELFMASK+(160*64),PELFMASK+(160*64)+16,PELFMASK+(160*64)+32,PELFMASK+(160*64)+48,PELFMASK+(160*64)+64,PELFMASK+(160*64)+80,PELFMASK+(160*64)+96,PELFMASK+(160*64)+112,PELFMASK+(160*64)+128,PELFMASK+(160*64)+144
	DC.L	PELFMASK+(160*96),PELFMASK+(160*96)+16,PELFMASK+(160*96)+32,PELFMASK+(160*96)+48,PELFMASK+(160*96)+64,PELFMASK+(160*96)+80,PELFMASK+(160*96)+96,PELFMASK+(160*96)+112,PELFMASK+(160*96)+128,PELFMASK+(160*96)+144

TAB_LOGO	
	DC.L	MCS,MCS1,MCS2,MCS3,MCS4,MCS5,MCS6,MCS7,MCS8
	DC.L	MCS9,MCS10,MCS11,MCS12,MCS13,MCS14,MCS15
TAB_LEM	
	DC.L	LEM8,LEM7,LEM6,LEM5,LEM4,LEM3,LEM2,LEM1
TAB_LEM2
	DC.L	LEM9+(112*160)+32,LEM9+(112*160),LEM9+(56*160)+128,LEM9+(56*160)+96
	DC.L	LEM9+(56*160)+64,LEM9+(56*160)+32,LEM9+(56*160),LEM9+128,LEM9+96
	DC.L	LEM9+64,LEM9+32,LEM9,LEM9,LEM9,LEM9,LEM9,LEM9,LEM9,LEM9,LEM9+32,LEM9+64,LEM9+96,LEM9+128
	DC.L	LEM9+(56*160),LEM9+(56*160)+32,LEM9+(56*160)+64,LEM9+(56*160)+96
	DC.L	LEM9+(56*160)+128,LEM9+(112*160),LEM9+(112*160)+32,LEM9+(112*160)+64
TAB_GASTON	
	DC.L	GAST,GAST+24,GAST+48,GAST+72,GAST+96,GAST+120
	DC.L	GAST+(67*160),GAST+(67*160)+24,GAST+(67*160)+48,GAST+(67*160)+72,GAST+(67*160)+96,GAST+(67*160)+120
TAB_GASTON2	
	DC.L	GAST2,GAST2+24,GAST2+48,GAST2+72,GAST2+96,GAST2+120
	DC.L	GAST2+(67*160),GAST2+(67*160)+24,GAST2+(67*160)+48,GAST2+(67*160)+72,GAST2+(67*160)+96,GAST2+(67*160)+120

TAB_FONT
	DC.L	FONT,FONT+8,FONT+16,FONT+24,FONT+32,FONT+40,FONT+48,FONT+56
	DC.L	FONT+64,FONT+72,FONT+80,FONT+88,FONT+96,FONT+104,FONT+112
	DC.L	FONT+120,FONT+128,FONT+136,FONT+144,FONT+152
	
	DC.L	FONT+(16*160),FONT+(16*160)+8,FONT+(16*160)+16,FONT+(16*160)+24,FONT+(16*160)+32,FONT+(16*160)+40,FONT+(16*160)+48,FONT+(16*160)+56
	DC.L	FONT+(16*160)+64,FONT+(16*160)+72,FONT+(16*160)+80,FONT+(16*160)+88,FONT+(16*160)+96,FONT+(16*160)+104,FONT+(16*160)+112
	DC.L	FONT+(16*160)+120,FONT+(16*160)+128,FONT+(16*160)+136,FONT+(16*160)+144,FONT+(16*160)+152
	
	DC.L	FONT+(32*160),FONT+(32*160)+8,FONT+(32*160)+16,FONT+(32*160)+24,FONT+(32*160)+32,FONT+(32*160)+40,FONT+(32*160)+48,FONT+(32*160)+56
	DC.L	FONT+(32*160)+64,FONT+(32*160)+72,FONT+(32*160)+80,FONT+(32*160)+88,FONT+(32*160)+96,FONT+(32*160)+104,FONT+(32*160)+112
	DC.L	FONT+(32*160)+120,FONT+(32*160)+128,FONT+(32*160)+136,FONT+(32*160)+144,FONT+(32*160)+152
TEXT	
	DC.B	" P.F.  AND GROUMPHY PRESENT THE DISINTEGRATION DEMO "
	DC.B	" THIS IS OUR FISRT DEMO SO DON'T BE SO CRUEL "
	DC.B	"   CODE BY P.F.  AND GFX BY GROUMPHY  !!! "
	DC.B	"             HEY GUYS, IT'S A NEW RECORD. "
	DC.B	" IT'S 11:00 PM AND AXEL F. ISN'T ASLEEP YET !!! "
	DC.B	" HE HAS REMOVED SOME BUGS IN THE ABG (AUTOMATIC BOMB GENERATOR). "
	DC.B	"( IT'S ALSO CALLED MEGATRAK !) "
	DC.B	"         THE HOOLIBULLSHITERLIGAN ON THE KEYBOARD!(OH YEAH, SHAKE THAT "
	DC.B	"KEYBOARD!) AND I'M ABOUT TO ENTERTAIN YOU, LADYS'N'GERMS! TELL ME WHERE'S "
	DC.B	" THE NASTY POLICEMAN? TELL ME,CHILDRENS! OH BOY ARE MY ARMS TIRED...STOP IT "
	DC.B	"IT'S STUPID!AT THE BEGINING IT WAS FUNNY, BUT NOW IT'S STUPID! GO BACK TO YOUR "
	DC.B	"SIT! HEM...                        MEDAMES ET MESSIEU ATTENTION JE VAIS VOUS "
	DC.B	"FAIRE UNE DEMO, LES GRAPFS EN SONT AMBITIEUX, DE MON CODE JE SUIS SOUCIEUX ! EN 1992 "
	DC.B	"C'EST L'HEURE DES COMMUNICATIONS! NEW AND IMPROVED!NEW AND IMPROVED!NEW AND IMPROVED ! "
	DC.B	"                             AAARRRRGGGGHHHHH! C'ETAIT PAS MON SCROLL! ADRIANNNNEE! "
	DC.B	"                      AVEC MCS, LES JEUX OLYMPIQUES D'AZERTYVILLE! NOUS CONTRIBUONS A NE "
	DC.B	" PAS LES REGARDER! A LES INSULTER! A LES SABOTERS! ET LE ST FUT! FUT DE RHUM! TOUT LES "
	DC.B	"CHEMINS Y MENE (A RHUM)! MENE ET LOIR! LOIR QUI DORT! DORTOIR! OIR TOUT COURT! COURSE A CHEVAUX "
	DC.B	" OH! PLEASE SAVE ME FROM DIS DIABOLIC SCROLL I CAN'T TYPE ANYTHING THAT HAS ANY SENCE! AND "
	DC.B	"I HAVEN'T DRUNK ANYTHING!!!! HHEEELLLPPP MMMEEEE! WHEN I WAS YOUNG,I WAS SO MUCH YOUNGER THAN "
	DC.B	"TODAY, I DIDN'T NEED ANYBODY'S HELP IN ANYWAY... RRRAAAAAHHHHHHHHDKFJ " 
	DC.B	"  WELL ... AFTER THE DELIRIUM OF THE HOOCRAZYLIGAN,HERE IS THE ONE AND ONLY ...... "
	DC.B	"  ZORGLOUBIBOULGA.............AS THE SPRITES IN THIS SCREEN I'M TOTALLY ROTATED "
	DC.B	"WE ARE HERE AT THE ..THE WHAT????.. WE ARE NOWHERE..FUCKING SCROOLTEXT "
	DC.B	" I' M BORED TO TYPE THIS AND I' M NOT TOO DELIRIOUS TONIGHT: ALL MCS MEMBERS  "
	DC.B	" SHOUTED ON ME  COZ MY BLOCKS FOR THE MAIN MENU ARE VERY FUCKIN' ONES "
	DC.B	"(PERHAPS I WAS DRUNK) FUCKING ENGLISH!!!!FUCK TO EVERYDOBI (FAUTE VOLONTAIRE) "
	DC.B	" WELL I LET THE KEYBOARD TO THE HOOFUCKERLIGAN "
	DC.B	"              LET THE KEYBOARD GUIDE ME INTO THE FORTERESS OF DARKNESS ! INSIDE THE TIME OF LEGENDS "
	DC.B	" THERE I WILL FIND THE MOST FABOULUS OBJETC IN THE WORLD : A FUCKIN GREAT WASHING MACHINE! YOU ? "
	DC.B	" YOU HAVEN'T HAD AN IDEA IN THOUSANDS OF YEARS! LET HER LIVE,G.... ON THE ROAD AGAIN ! "
	DC.B	"       AND NOW,THE NINE'O'CLOCK NEWS! EMMERICK IS DOING RAYTRACING ON HIS PC, ANDIT'S JUST BLOODY "
	DC.B	" AMAZING. FUCK ME,SUCK ME AND GIVE ME MONEY! RRRRAAAAAAAHHHHHHH! HEY WHATS HAPPENING ? O, I JUST CAN'T "
	DC.B	"DO A SENCED TEXT, AS I DON'T FEEL LIKE MAKING SENCED JOKES TONIGHT. POUR LES GRENOILLES , AVEC LES JO "
	DC.B	" FAITES ATTENTIONS DE NE PAS CONFONDRES PATTINAGE ET TAPINAGE....NO, IT REALLY DOESN'T FEET ME TO DO "
	DC.B	"SOMTHIN' SENCED TONIGHT! SO BYE NOW'N'FOREVER ! "
	DC.B	"HELLO YOU , I COME FROM A OLD WOLRD, THE CPC WORLD,A FORGOTEN WORLD,THE OLDEST BUT NOT THE WORST"
	DC.B	"I JUST WANT TO SAY HELLO AND WELL DONE TO THE ST'S CODERS BECAUSE I JUST CAN'T BELIEVE WHAT I SEE "
	DC.B	"ON THOSE ST'S SCREENS ...MY GRAPHS ARE BETTER BUT MY SCREENS ARE WORST ..GO ON LIKE THIS AND YOU'LL "
	DC.B	"BE IN THE WORLD'S GOVERNEMENT,THE NEW GENERATION OF DEMO,THE BADGAG CAFE'S DEMO...HA HA HA NOBODY LAUGHTS.. "
	DC.B  	"NEVERMIND BECAUSE I QUIT ,GODNIGHT FOR EVERYBODY..AND DON4T FORGET TO PHONE TO THE 40.77.62.964S PHONE NUMBER "
	DC.B 	"ASKING 'GREG' ,IF YOU WANT TO SPEEK TO THE LAST CPC'S CODER ...SEE YOU SOON... "
	
FIN_TXT
	EVEN
PAL
	dc.w	$0345,$0005,$0004,$0000,$0F00,$0DBB,$0070,$0DDD
	dc.w	$0222,$0020,$0003,$0006,$0755,$0F52,$0ED0,$0FFF


	
FONT
	INCBIN	FONTPF.IMG
	EVEN
PELF
	INCBIN	PELFORTH.IMG
	EVEN
PELFMASK
	INCBIN	PELMASK.IMG
	DC.L	0
	EVEN
LOGO_MCS
	INCBIN	LOGOMCS.IMG
	EVEN
GUIN	
	INCBIN	GUINNESS.IMG
	EVEN
LEM1	INCBIN	LEM1.IMG
LEM2	INCBIN	LEM2.IMG
LEM3	INCBIN	LEM3.IMG
LEM4	INCBIN	LEM4.IMG
LEM5	INCBIN	LEM5.IMG
LEM6	INCBIN	LEM6.IMG
LEM7	INCBIN	LEM7.IMG
LEM8	INCBIN	LEM8.IMG
LEM9	INCBIN	LEM9.IMG
	EVEN
GAST
	INCBIN	LAGAFFE.IMG
	EVEN
GAST2
	INCBIN	LAGAFFE2.IMG
	EVEN
XCOORD
	INCBIN	XCOORD.BIN
	
FIN_XCOORD
	INCBIN	XCOORD2.BIN
	EVEN
YCOORD
	INCBIN	YCOORD.BIN
FIN_YCOORD

ZIC
	INCBIN	MUSIK.ZIC
	EVEN
EQUAL	
	INCBIN	EQUAL.IMG
FIN_EQU
	EVEN
BUF1	DCB.B	168*34
BUF2	DCB.B	168*34
	EVEN
	
COLOR1
	dc.W	$0000,$0800,$0100,$0900,$0200,$0A00,$0300,$0B00
	dc.W	$0400,$0C00,$0500,$0D00,$0600,$0E00,$0700,$0F00

	dc.W	$0F00,$0700,$0E00,$0600,$0D00,$0500,$0C00,$0400
	dc.W	$0B00,$0300,$0A00,$0200,$0900,$0100,$0800,$0000
	DC.L	0
	
	EVEN
TAB_OFSET	DC.B	0,4,4,0,8,0,12,0
	EVEN
PTR_OFSET	DC.W	0
PTR_LOGO	DC.W	0
PTR_GUIN	DC.W	0
PTR_LEM	DC.W	0
PTR_GAST	DC.W	0
PTR_SPC	DC.W	0
WAIT_GAST	DC.W	0
WAIT_WALK	DC.W	0
X_LEM	DC.W	0
X_GAST	DC.W	0
SPC	DC.W	0
	EVEN
PARA
	DS.B	34
FONC	DC.W	0
	EVEN

SAVE_SSP	DC.L	0
OLD_HBL	DC.L	0
S70	DC.L	0
L70	DC.L	0
S9	DC.B 	0
S7	DC.B 	0
S484	DC.B	0
	EVEN
TIMES	DC.W	0
SENS	DC.W	2
WAIT	DC.W	0
COMPT	DC.W	0
PIX	DC.W	0
WAIT_ROL	DC.W	0
WAIT_SPC	DC.W	0
LEM_OK	DC.W	0
GO_LEM	DC.W	0
OLD_GAST	DC.L	ECR0
OLD_G	DC.L	ECR0
OLD_SPC	DC.L	VIDE,VIDE
SAVE_PEL	DC.L	SAV1,SAV2
SAVE_GUIN	DC.L	SAV3,SAV4
SCREEN	DC.L	ECR1,ECR3
ECRAN	DC.L	ECR0,ECR2
GASTON	DC.L	TAB_GASTON,TAB_GASTON2
BUF_SAVE	DC.L	LEM_S1,LEM_S2

LEM_S1	DC.L	ECR0
	DS.B	24*10
	
LEM_S2	DC.L	ECR0
	DS.B	24*10

SAV1	DC.L	ECR0
	DS.W	48*48
	
SAV2	DC.L	ECR2
	DS.W	48*48

SAV3
	DC.L	ECR0
	DS.W	24*67
	
SAV4
	DC.L	ECR0
	DS.W	24*67
	EVEN
MCS
MCS1 EQU	MCS+4224
MCS2 EQU	MCS+4224*2
MCS3 EQU	MCS+4224*3
MCS4 EQU	MCS+4224*4
MCS5 EQU	MCS+4224*5
MCS6 EQU	MCS+4224*6
MCS7 EQU	MCS+4224*7
MCS8 EQU	MCS+4224*8
MCS9 EQU	MCS+4224*9
MCS10 EQU	MCS+4224*10
MCS11 EQU	MCS+4224*11
MCS12 EQU	MCS+4224*12
MCS13 EQU	MCS+4224*13
MCS14 EQU	MCS+4224*14
MCS15 EQU	MCS+4224*15
VIDE	EQU	MCS15+64*68
ECR0	EQU	MCS+4224*16
ECR1	EQU	ECR0+192*48
ECR2	EQU	ECR1+192*280
ECR3	EQU	ECR2+192*48
