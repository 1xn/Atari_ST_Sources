	OPT	O+
	TEXT

	clr.l	-(sp)
	move.w	#32,-(sp)
	trap	#1
	addq.l	#6,sp
		
	MOVE.W	#$2700,SR

	BSR	LOAD_HIGH

	MOVE.W	#1,FLAG_SAVE_HIGH

	MOVE.B	#$50,$FFFF820F.W
	CMP.B	#$50,$FFFF820F.W
	BNE.S	STE
	MOVE.B	#0,$FFFF820F.W
	MOVE.W	#0,_STF
	BRA.S	SUITE_MACHINE
STE
	MOVE.W	#1,_STF
SUITE_MACHINE
	TST.W	_STF		* STE ?
	BNE.S	PAS_INVERT	* NO, SO DON'T INVERT SAMPLES

	LEA	SAMPLES,A0
	LEA	FIN_SAMPLES,A1	* INVERT SAMPLES FOR STE ...
INVERT
	MOVE.B	(A0),D0
	EOR.B	#$80,D0
	MOVE.B	D0,(A0)+
	CMP.L	A0,A1
	BNE.S	INVERT
PAS_INVERT
	MOVE.B	#1,Y

	MOVEQ	#1,D0
	JSR	ZIK

	MOVE.B	#$7,$FFFF8201.W
	MOVE.B	#$0,$FFFF8203.W

	LEA	IMG+34,A0
	LEA	$70000+160*5,A1
	MOVE.W	#7999,D1
AFF_IMG
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_IMG

	MOVEM.L	$FFFF8240.W,D0-D7
	MOVEM.L	D0-D7,SAVE_PAL

	LEA	SAVE,A0
	MOVE.L	$70.W,(A0)+
	MOVE.L	$120.W,(A0)+
	MOVE.B	$FFFFFA07.W,(A0)+
	MOVE.B	$FFFFFA09.W,(A0)+
	MOVE.B	$FFFFFA13.W,(A0)+
	MOVE.B	$FFFFFA17.W,(A0)+
	MOVE.B	$FFFFFA19.W,(A0)+
	MOVE.B	$FFFFFA1B.W,(A0)+
	MOVE.B	$FFFFFA1F.W,(A0)+
	MOVE.B	$FFFFFA21.W,(A0)+
	MOVE.B	#1,$FFFFFA07.W
	MOVE.B	#1,$FFFFFA13.W
	MOVE.B	#0,$FFFFFA09.W
	BCLR	#3,$FFFFFA17.W
	TST.W	_STF		* STE ?
	BEQ.S	PAS_SPL_STF	* NO, SO DON'T INIT TIMER A
	OR.B	#%00100000,$FFFFFA07.W
	OR.B	#%00100000,$FFFFFA13.W
	MOVE.B	#0,$FFFFFA19.W
	MOVE.B	#4,$FFFFFA1F.W
	MOVE.L	#IREP,$134.W
	JSR	SET_YAM
PAS_SPL_STF
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR

	MOVEQ	#99,D7
WAIT_BEFORE
	BSR	WAIT_VBL
	DBRA	D7,WAIT_BEFORE

	MOVE.L	#ADD_Y,PEK_JMP1+2

	BSR	WAIT_TIL_NULL

	LEA	PAL,A0
	LEA	PAL2,A1
	MOVEM.L	(A1),D0-D7
	MOVEM.L	D0-D7,(A0)
	MOVEM.L	32(A1),D0-D7
	MOVEM.L	D0-D7,32(A0)
	MOVEM.L	64(A1),D0-D7
	MOVEM.L	D0-D7,64(A0)
	MOVEM.L	96(A1),D0-D7
	MOVEM.L	D0-D7,96(A0)
MENU
	LEA	$70000+160*4,A1
	LEA	IMG2+34,A0
	MOVE.W	#7999,D1
AFF_IMG2
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_IMG2

	BSR	AFF_LEV_DEP

	MOVEQ	#99,D7
WAIT_AFTER
	BSR	WAIT_VBL
	DBRA	D7,WAIT_AFTER

	MOVE.L	#ADD_Y,PEK_JMP1+2
	MOVE.L	#NULL,PEK_JMP2+2

	BSR	WAIT_TIL_NULL

	MOVE.W	#$2700,SR
	MOVE.L	#VBL_PRES,$70.W
	MOVE.W	#$2300,SR
WAIT
	MOVE.B	$FFFC02,D0
	CMP.B	#$50,D0
	BNE.S	PAS_BAS
	CMP.W	#3,OPTION
	BEQ.S	PAS_BAS
	ADDQ.W	#1,OPTION
WAIT_REL1
	CMP.B	#$50,$FFFC02
	BEQ.S	WAIT_REL1
	BRA.S	WAIT
PAS_BAS
	CMP.B	#$48,D0
	BNE.S	PAS_HAUT
	TST.W	OPTION
	BEQ.S	PAS_HAUT
	SUBQ.W	#1,OPTION
WAIT_REL2
	CMP.B	#$48,$FFFC02
	BEQ.S	WAIT_REL2
	BRA.S	WAIT
PAS_HAUT
	CMP.B	#$39,D0
	BNE.S	PAS_SPACE
	MOVEQ	#0,D0
	MOVE.W	OPTION,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	LEA	TAB_OPT,A0
	ADD.W	D0,A0
	MOVE.L	(A0),A0
	JSR	(A0)
WAIT_REL3
	CMP.B	#$39,$FFFC02
	BEQ.S	WAIT_REL3
	BRA.S	WAIT
PAS_SPACE
	CMP.B	#$4B,D0
	BNE.S	PAS_GAUCHE
	TST.W	OPTION
	BNE.S	PAS_GAUCHE
	TST.W	LEV_DEP
	BEQ.S	PAS_GAUCHE
	SUBQ	#1,LEV_DEP
	BSR	AFF_LEV_DEP
WAIT_REL4
	CMP.B	#$4B,$FFFC02
	BEQ.S	WAIT_REL4
	BRA	WAIT
PAS_GAUCHE
	CMP.B	#$4D,D0
	BNE.S	PAS_DROITE
	TST.W	OPTION
	BNE.S	PAS_DROITE
	CMP.W	#9,LEV_DEP
	BEQ.S	PAS_DROITE
	ADDQ	#1,LEV_DEP
	BSR	AFF_LEV_DEP
WAIT_REL5
	CMP.B	#$4D,$FFFC02
	BEQ.S	WAIT_REL5
PAS_DROITE
	CMP.B	#$1C,D0
	BNE.S	PAS_PLAY

	MOVE.W	#$2700,SR
	MOVE.L	#VBL_NULL2,$70.W
	LEA	$FFFF8800.W,A0
	MOVE.B	#8,(A0)
	MOVE.B	#0,2(A0)
	MOVE.B	#9,(A0)
	MOVE.B	#0,2(A0)
	MOVE.B	#10,(A0)
	MOVE.B	#0,2(A0)
	MOVE.W	#$2300,SR
	JMP	PLAY_GAME

PAS_PLAY
	BRA	WAIT
LOAD_HIGH
	RTS
LEV_DEP
	DC.W	0
TAB_OPT
	DC.L	NULL,AFF_HISCORE,INFOS,QUIT_TO_DEMO

WAIT_TIL_NULL
	CMP.L	#NULL,PEK_JMP1+2
	BNE.S	WAIT_TIL_NULL
	RTS

AFF_HISCORE
	BSR	COUPE_VBL

	LEA	$70000,A0
	MOVEQ	#0,D0
	MOVE.W	#7999,D1
EFF_ECRAN
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_ECRAN

	LEA	TAB_HIGH,A1
	LEA	$70000+160*5,A4
	LEA	TAB_FPRES,A2
	MOVEQ	#8,D7		* 8 HIGHSCORES+ PRESS SPACE
ONE_SCORE
	MOVE.L	A4,A0
	MOVEQ	#19,D5		* 10 CHAR
AFF_ONE
	MOVEQ	#0,D0
	MOVE.B	(A1)+,D0
	SUB.B	#' ',D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.L	(A2,D0.W),A3
	MOVEQ	#0,D1
	MOVEQ	#20,D6
AFF_LIG_LET
	MOVEM.L	(A3,D1.W),D2-D3
	MOVEM.L	D2-D3,(A0,D1.W)
	ADD.W	#160,D1
	DBRA	D6,AFF_LIG_LET
	LEA	8(A0),A0
	DBRA	D5,AFF_ONE
	LEA	160*22(A4),A4
	DBRA	D7,ONE_SCORE

	MOVE.W	#$2700,SR
	MOVE.L	#ADD_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR

	BSR	WAIT_TIL_NULL

WAIT_SPAC
	CMP.B	#$39,$FFFC02
	BNE.S	WAIT_SPAC
WAIT_REL_SPAC
	CMP.B	#$39,$FFFC02
	BNE.S	WAIT_REL_SPAC
	
	MOVE.W	#$2700,SR
	MOVE.L	#DEC_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR
	
	BSR	WAIT_TIL_NULL
	LEA	IMG2+34,A0
	LEA	$70000+160*4,A1
	MOVE.W	#7999,D1
AFF_IT_AGAIN
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_IT_AGAIN
	
	BSR	AFF_LEV_DEP
	
	MOVE.W	#$2700,SR
	MOVE.L	#ADD_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR
	BSR	WAIT_TIL_NULL

	MOVE.W	#$2700,SR
	MOVE.L	#VBL_PRES,$70.W
	MOVE.W	#$2300,SR
	RTS
INFOS
	LEA	TXT_INFOS,A1
	MOVEQ	#2,D4
ONE_PAGE
	BSR	COUPE_VBL

	LEA	$70000,A0
	MOVEQ	#0,D0
	MOVE.W	#7999,D1
EFF_ECRAN_INF
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_ECRAN_INF

	LEA	$70000+160*5,A4
	LEA	TAB_FPRES,A2
	MOVEQ	#8,D7		* 8 LIGNES+SPACE
ONE_LIG
	BSR	AFF_ONE_LIG
	DBRA	D7,ONE_LIG

	MOVE.W	#$2700,SR
	MOVE.L	#ADD_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR

	BSR	WAIT_TIL_NULL

WAIT_SPAC2
	CMP.B	#$39,$FFFC02
	BNE.S	WAIT_SPAC2
WAIT_REL_SPAC2
	CMP.B	#$39,$FFFC02
	BNE.S	WAIT_REL_SPAC2

	DBRA	D4,ONE_PAGE

	MOVE.W	#$2700,SR
	MOVE.L	#DEC_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR
	
	BSR	WAIT_TIL_NULL

	LEA	IMG2+34,A0
	LEA	$70000+160*4,A1
	MOVE.W	#7999,D1
AFF_IT_AGAIN2
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_IT_AGAIN2
	
	BSR	AFF_LEV_DEP
	
	MOVE.W	#$2700,SR
	MOVE.L	#ADD_Y,PEK_JMP1+2
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR
	BSR	WAIT_TIL_NULL

	MOVE.W	#$2700,SR
	MOVE.L	#VBL_PRES,$70.W
	MOVE.W	#$2300,SR
	RTS

AFF_ONE_LIG
	MOVE.L	A4,A0
	MOVEQ	#19,D5		* 20 CHARS / LIGNE
AFF_ONE_CHAR
	MOVEQ	#0,D0
	MOVE.B	(A1)+,D0
	SUB.B	#' ',D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.L	(A2,D0.W),A3
	MOVEQ	#0,D1
	MOVEQ	#20,D6
AFF_LIG_LET2
	MOVEM.L	(A3,D1.W),D2-D3
	MOVEM.L	D2-D3,(A0,D1.W)
	ADD.W	#160,D1
	DBRA	D6,AFF_LIG_LET2
	LEA	8(A0),A0
	DBRA	D5,AFF_ONE_CHAR
	LEA	160*22(A4),A4
	RTS

COUPE_VBL
	MOVE.W	#$2700,SR
	MOVE.L	#VBL,$70.W
	MOVE.L	#DEC_Y,PEK_JMP1+2
	MOVE.W	#$2300,SR
	BSR	WAIT_TIL_NULL
	MOVE.W	#$2700,SR
	MOVE.L	#VBL_NULL,$70.W
	MOVE.W	#$2300,SR
	RTS

AFF_LEV_DEP
	MOVEQ	#0,D0
	MOVE.W	LEV_DEP,D0
	MULU	#LARGEUR_CHIFFRE,D0
	LEA	FNT_09,A0
	ADD.W	D0,A0
	LEA	$70000+160*103+96,A1
	MOVEQ	#17,D7
AFF_IT_PLIZ
	MOVEM.L	(A0)+,D1-D4
	MOVEM.L	D1-D4,(A1)
	LEA	160(A1),A1
	DBRA	D7,AFF_IT_PLIZ
	RTS
SAVE_HIGH
	RTS
QUIT_TO_DEMO
	MOVE.W	#0,END_FLAG
FUCK_OFF
	BRA.S	FUCK_OFF
FIN
	TST.W	FLAG_SAVE_HIGH
	BNE.S	PAS_SAVE
	BSR	SAVE_HIGH
PAS_SAVE
	MOVE.W	#$2700,SR
	LEA	SAVE,A0
	MOVE.L	(A0)+,$70.W
	MOVE.L	(A0)+,$120.W
	MOVE.B	(A0)+,$FFFFFA07.W
	MOVE.B	(A0)+,$FFFFFA09.W
	MOVE.B	(A0)+,$FFFFFA13.W
	MOVE.B	(A0)+,$FFFFFA17.W
	MOVE.B	(A0)+,$FFFFFA19.W
	MOVE.B	(A0)+,$FFFFFA1B.W
	MOVE.B	(A0)+,$FFFFFA1F.W
	MOVE.B	(A0)+,$FFFFFA21.W
	LEA	$FFFF8800.W,A0
	MOVE.B	#8,(A0)
	MOVE.B	#0,2(A0)
	MOVE.B	#9,(A0)
	MOVE.B	#0,2(A0)
	MOVE.B	#10,(A0)
	MOVE.B	#0,2(A0)

	MOVEM.L	SAVE_PAL,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W

	ILLEGAL

WAIT_VBL
	TST.W	VBL_FLAG
	BEQ.S	WAIT_VBL
	MOVE.W	#0,VBL_FLAG
	RTS
VBL_NULL
	MOVEM.L	D0-D7/A0-A6,-(SP)
	CLR.B	$FFFF8260.W
	JSR	ZIK+4
	MOVEM.L	(SP)+,D0-D7/A0-A6
VBL_NULL2
	RTE
VBL
	CLR.B	$FFFF8260.W

	MOVE.W	#1,VBL_FLAG

	CLR.B	$FFFFFA1B.W
	MOVE.B	Y,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#HBL,$120.W
	MOVEM.L	D0-D7/A0-A6,-(SP)

	MOVE.L	#PAL_F,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W

	JSR	ZIK+4
PEK_JMP1
	JSR	NULL

	MOVEM.L	(SP)+,D0-D7/A0-A6
	RTE

VBL_PRES
	MOVE.W	#$2700,SR
	MOVE.B	#0,$FFFF8260.W

	TST.W	END_FLAG
	BEQ	FIN

	MOVEM.L	D7/A0,-(SP)

	MOVE.W	OPTION,D7
	LEA	TAB_POS,A0
	MOVE.B	(A0,D7.W),D7

	CLR.B	$FFFFFA1B.W
	MOVE.B	D7,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#HBL_MAG,$120.W
	JSR	ZIK+4
	MOVEM.L	(SP)+,D7/A0
	MOVE.W	#$2300,SR
	RTE

END_FLAG
	DC.W	1
OPTION
	DC.W	1
TAB_POS
	DC.B	100,128,154,176
	EVEN
HBL_MAG
	MOVEM.L	D0-D3,-(SP)
	MOVEM.L	PAL_MAG,D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVEM.L	(SP)+,D0-D3
	CLR.B	$FFFFFA1B.W
	MOVE.B	#24,$FFFFFA21.W
	MOVE.B	#08,$FFFFFA1B.W
	MOVE.L	#HBL_NORM,$120.W
	RTE
HBL_NORM
	MOVEM.L	D0-D3,-(SP)
	MOVEM.L	PAL_F2,D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVEM.L	(SP)+,D0-D3
	CLR.B	$FFFFFA1B.W
	RTE
ADD_Y
	CMP.B	#195,Y
	BEQ.S	PAS_ADD
	ADDQ.B	#1,Y
	BRA.S	FIN_ADD
PAS_ADD
PEK_JMP2
	MOVE.L	#DEC_Y,PEK_JMP1+2
FIN_ADD
NULL
	RTS
DEC_Y
	CMP.B	#1,Y
	BEQ.S	PAS_SUB
	SUBQ.B	#1,Y
	BRA.S	FIN_SUB
PAS_SUB
	MOVE.L	#NULL,PEK_JMP1+2
FIN_SUB
	RTS

Y	DC.W	0
	EVEN
HBL
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	CLR.B	$FFFFFA1B.W
	MOVE.B	#1,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#HBL2,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL2
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-16,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL3,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL3
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-32,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL4,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL4
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-48,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL5,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL5
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-64,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL6,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL6
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-80,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL7,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL7
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-96,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	MOVE.L	#HBL8,$120.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE
HBL8
	MOVEM.L	D0-D3/A0,-(SP)
	LEA	PAL_F-112,A0
	MOVEM.L	(A0),D0-D3
	MOVEM.L	D0-D3,$FFFF8240.W
	CLR.B	$FFFFFA1B.W
	MOVEM.L	(SP)+,D0-D3/A0
	RTE

_TOURNE	EQU	1
_GAUCHE	EQU	2
_DROITE	EQU	3
_BAS	EQU	4
_BIG_BAS	EQU	5
STF	EQU	1
	EVEN
PLAY_GAME

ECRAN	EQU	$70000

	LEA	ECRAN,A0		* CLEAR SCREEN
	MOVEQ	#0,D0
	MOVE.W	#240*40-1,D1
EFF_ECRAN_G
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_ECRAN_G

	MOVEM.L	IMG_G+2,D0-D7	* SET PALETTE
	MOVEM.L	D0-D7,$FFFF8240.W

	LEA	IMG_G+34,A0		* SHOW PICTURE
	LEA	ECRAN,A1
	MOVE.W	#7999,D1
AFF_IMG_G
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_IMG_G

	LEA	BLK2,A0		* LOW BORDER
	MOVE.W	#31*40-1,D1
COP_BLK
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,COP_BLK

	MOVE.W	#$2700,SR		* SAVE INTERUPTS
	MOVE.L	#VBL_G,$70.W	* MY LITTLE VBL
	MOVE.W	#$2300,SR

	BSR	INIT_JEU		* INIT GAME

DEBUT_JEU
	BSR	VSYNC		* WAIT FOR SYNCHRO

	SUBQ	#1,BOUCLE		* DEC(BOUCLE)

	BSR	EFFACE_PATTERN	* ERASE PATTERN ON SCREEN
	TST.W	BOUCLE		* IF BOUCLE<>0
	BNE	PAS_EN_BAS

	MOVE.W	VITESSE,D0	*   BOUCLE:=VITESSE
	MOVE.W	D0,BOUCLE
	BSR	TEST_BAS		* IF(TEST_BAS()<>0)
	TST.W	D3
	BEQ	PAS_EN_BAS
	BSR	RANDOM		* SON(RANDOM(2))
	LEA	TAB_SON_POSE,A4
	AND.L	#$3,D0
	CMP.W	#3,D0
	BNE.S	.SON
	SUBQ.W	#1,D0
.SON
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D0,A4

	BSR	PLAY_SAMPLE
	MOVE.W	DECALAGE,D0
	ADD.W	D0,YB
	AND.W	#$FFF0,YB

	BSR	AFFICHE_PATTERN	* PRINT PATTERN
	BSR	PUT_IN_TABLEAU	* PUT IN TABLE
	MOVE.W	#0,SORTIE		* SORTIE:=0
	BSR	TEST_BLOCK	* TEST_BLOCK();
	TST.W	SORTIE		* ETC...
	BNE.S	SUITE_MAGNUM_WAS_HERE_FOR_THE_KLOUG_DEMO_OF_THE_BLACK_CATS
	TST.W	YB		* SORRY BUT IF YOU WANT
	BEQ	FIN_JEU		* THE PASCAL CODE FOR THIS
SUITE_MAGNUM_WAS_HERE_FOR_THE_KLOUG_DEMO_OF_THE_BLACK_CATS
	SUBQ.W	#1,BLOCK		* THEN SEND US A BLANK DISK...
	BNE.S	PAS_NEXT_LEVEL
	MOVE.W	#30,BLOCK
	CMP.W	#9,LEVEL
	BEQ.S	PAS_NEXT_LEVEL
	ADDQ.W	#1,LEVEL
	LEA	TAB_LEVEL,A0
	MOVE.W	LEVEL,D0
	MOVE.W	D0,D1
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D1,D1
	ADD.W	D1,D0
	MOVE.W	(A0,D0.W),VITESSE
	MOVE.W	2(A0,D0.W),DECALAGE
	MOVE.W	4(A0,D0.W),NB_BLOCK
	BSR	AFFICHE_LEVEL
PAS_NEXT_LEVEL

	MOVEM.W	N1,D0-D3
	MOVEM.W	D0-D3,C1
	BSR	RANDOM_C1TO3
	BSR	AFFICHE_NEXT
	MOVE.W	#1,YB
	MOVE.W	#48,XB
PAS_EN_BAS
	BSR	AFFICHE_PATTERN
	MOVE.W	XB,OLD_XB
	MOVE.W	YB,OLD_YB

	MOVE.W	ADD_DECALAGE,D0
	MOVE.W	D0,DECALAGE

	MOVE.B	$FFFC02,D0
	CMP.B	#$50,D0
	BNE.S	PAS_BIG_BAS
	MOVE.W	#5,DECALAGE
PAS_BIG_BAS
	CMP.B	KEY,D0
	BEQ.S	END_CASE
	MOVE.B	D0,KEY

	CMP.B	#$1,D0
	BEQ	FIN_JEU

	CMP.B	#$39,D0
	BNE.S	.PAS_TOURNE
	MOVEM.W	C1,D0-D2
	MOVEM.W	D1-D2,C1
	MOVE.W	D0,C3
	BRA.S	END_CASE
.PAS_TOURNE
	CMP.B	#$4B,D0
	BNE.S	.PAS_GAUCHE
	BSR	TEST_GAUCHE
	BRA.S	END_CASE
.PAS_GAUCHE
	CMP.B	#$4D,D0
	BNE.S	.PAS_DROITE
	BSR	TEST_DROITE
.PAS_DROITE
	MOVE.W	PTR_CHEAT,D1
	LEA	CHEAT_CODE,A0
	MOVE.B	(A0,D1.W),D2
	CMP.B	D2,D0
	BNE.S	PAS_CHEAT
	ADDQ.W	#1,PTR_CHEAT
	BSR.S	PLOT
	CMP.W	#52,PTR_CHEAT
	BNE.S	PAS_CHEAT
	MOVE.W	#$3,CHANCE
	MOVEQ	#$3,D7
FLASH_CHEAT
	BSR	VSYNC
	NOT.W	$FFFF8240.W
	DBRA	D7,FLASH_CHEAT
PAS_CHEAT
END_CASE
	BRA	DEBUT_JEU

PLOT
	LEA	ECRAN,A0
	MOVE.W	PTR_CHEAT,D0
	MULU	#160,D0
	ADD.W	D0,A0
	OR.W	#1,(A0)
	RTS

FIN_JEU
	LEA	SAMPLE_FIN,A4
	BSR	PLAY_SAMPLE

	TST.W	_STF
	BEQ.S	PAS_TIMER_A_COUPE
	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA19.W
	MOVE.W	#$2300,SR

PAS_TIMER_A_COUPE
	LEA	ECRAN,A0
	MOVEQ	#0,D0
	MOVE.W	#7999,D1
EFF_SCREEN_FIN
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_SCREEN_FIN

	MOVE.W	SCORE,D0
	LEA	TAB_HS,A0

TEST_NEXT_SCORE
	MOVE.W	(A0),D2
	CMP.W	D0,D2
	BLE.S	SCORE_SUP
	ADDQ.W	#2,A0
	CMP.L	#FIN_TAB_HS,A0
	BNE.S	TEST_NEXT_SCORE

SUITE_FIN_JEU
	MOVE.W	#$2700,SR
	MOVE.B	#1,Y
	MOVE.L	#VBL,$70.W
	MOVE.W	#$2300,SR
	JMP	MENU

SCORE_SUP
	MOVE.W	#0,FLAG_SAVE_HIGH
	LEA	FIN_SCORES,A2
	LEA	FIN_TAB_HS,A1
NEXT_DECAL_SCORE
	MOVE.W	(A1),D2
	MOVE.W	D2,2(A1)
	MOVEM.L	(A2),D3-D7
	MOVEM.L	D3-D7,20(A2)
	SUBQ	#2,A1
	SUB.W	#20,A2
	CMP.L	A0,A1
          BNE.S	NEXT_DECAL_SCORE

	ADD.W	#20,A2
	MOVE.W	SCORE,(A1)

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVE.W	SCORE,D0
	MOVE.W	D0,D1
	DIVU	#1000,D1
	MOVE.B	D1,D2
	ADD.B	#'0',D2
	MOVE.B	D2,TXT_SCORE
	MULU	#1000,D1
	SUB.W	D1,D0
	MOVE.W	D0,D1
	DIVU	#100,D1
	MOVE.B	D1,D2
	ADD.B	#'0',D2
	MOVE.B	D2,TXT_SCORE+1
	MULU	#100,D1
	SUB.W	D1,D0
	MOVE.W	D0,D1
	DIVU	#10,D1
	MOVE.B	D1,D2
	ADD.B	#'0',D2
	MOVE.B	D2,TXT_SCORE+2
	MULU	#10,D1
	SUB.W	D1,D0
	ADD.B	#'0',D0
	MOVE.B	D0,TXT_SCORE+3

	MOVE.L	A2,-(SP)	
	BSR	AFF_YOU_HAVE_A_HIGH_SCORE
	MOVE.L	(SP)+,A2

	LEA	NAME_BUF,A0
	MOVEM.L	(A0),D0-D1
	MOVEM.L	D0-D1,(A2)
	MOVE.W	8(A0),8(A2)

	MOVE.W	#'  ',10(A2)
	MOVE.L	#'    ',12(A2)
	
	MOVE.B	TXT_SCORE,16(A2)
	MOVE.B	TXT_SCORE+1,17(A2)
	MOVE.B	TXT_SCORE+2,18(A2)
	MOVE.B	TXT_SCORE+3,19(A2)

	LEA	SPACE_WORK,A0
	LEA	FIN_SCORES+20,A1
	MOVEM.L	(A0),D0-D4
	MOVEM.L	D0-D4,(A1)

	BRA	SUITE_FIN_JEU

AFF_YOU_HAVE_A_HIGH_SCORE

	LEA	ECRAN,A0
	MOVEQ	#0,D0
	MOVE.W	#40*240-1,D1
EFF_COZ_HIGH
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_COZ_HIGH

	MOVEM.L	PAL_F2,D4-D7
	MOVEM.L	D4-D7,$FFFF8240.W

	LEA	TXT_HIGH,A1
	LEA	$70000+160*5,A4
	LEA	TAB_FPRES,A2
	MOVEQ	#6,D7		* 7 LIGNES
ONE_LIG_HIGH
	JSR	AFF_ONE_LIG
	DBRA	D7,ONE_LIG_HIGH

	BSR	INPUT_NAME
	RTS

INPUT_NAME
	LEA	ECRAN+160*138+40,A0
	LEA	NAME_BUF,A1
	LEA	TAB_SCAN,A2

	MOVEQ	#9,D7
PAS_BON_CHAR
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.B	$FFFC02,D0
	MOVE.B	(A2,D0.W),D1
	BEQ.S	PAS_BON_CHAR
	MOVE.B	D1,(A1)+
	BSR	AFF_CHAR_INPUT
WAIT_REL_TOUCHE_INPUT
	CMP.B	$FFFC02,D0
	BEQ.S	WAIT_REL_TOUCHE_INPUT
	ADDQ.W	#8,A0
	DBRA	D7,PAS_BON_CHAR
	RTS

AFF_CHAR_INPUT
	MOVEQ	#0,D2
	MOVE.B	D1,D2
	SUB.B	#' ',D2
	ADD.W	D2,D2
	ADD.W	D2,D2
	LEA	TAB_FPRES,A3
	MOVE.L	(A3,D2.W),A3
	MOVEQ	#0,D2
	MOVEQ	#20,D6
AFF_LIG_INP
	MOVEM.L	(A3,D2.W),D4-D5
	MOVEM.L	D4-D5,(A0,D2.W)
	ADD.W	#160,D2
	DBRA	D6,AFF_LIG_INP
	RTS

VBL_G
	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA1B.W
	MOVE.B	#199,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#OVR_B,$120.W
	MOVE.W	#1,VBL_FLAG
	MOVE.W	#$2300,SR
	RTE
OVR_B	move.w	#$2700,sr
	MOVEM.L	D0/A0,-(SP)
	lea	$fffffa21.w,a0
	move.b	(a0),d0
sync	cmp.b	(a0),d0
	beq.s	sync
	bclr	#1,$ff820a
	rept	10
	nop
	endr
	bset	#1,$ff820a
	movem.l	(sp)+,d0/a0
	clr.b	$fffffa1b
	rte

PLAY_SAMPLE
	TST.W	_STF
	BEQ.S	PLAY_STE
	BSR	SET_YAM
	MOVE.W	#$2700,SR
	MOVE.L	A0,-(SP)
	MOVE.L	(A4),A0
	MOVE.L	A0,USP
	MOVE.L	4(A4),F_SAM
	MOVE.B	#6,$FFFFFA19.W
	MOVE.L	(SP)+,A0
	MOVE.W	#$2300,SR
	RTS
PLAY_STE
	MOVE.B	#0,$FF8901

	MOVE.B	1(A4),$FF8903
	MOVE.B	2(A4),$FF8905
	MOVE.B	3(A4),$FF8907
	
	MOVE.B	5(A4),$FF890F
	MOVE.B	6(A4),$FF8911
	MOVE.B	7(A4),$FF8913

	MOVE.B	#%0000000010000000,$FF8921
	
	MOVE.B	#1,$FF8901
	RTS
IREP	
	MOVEM.L	D4/D5/D7/A3/A4/A6,-(SP)
	LEA	$FFFF8800.W,A4
	MOVE.L	#SND_OUT,A3
	MOVE.L	USP,A6
	MOVE.B	(A6)+,D7
	MOVE.L	A6,USP
	CMP.L	F_SAM,A6
	BGT.S	HALTREP
	AND.W	#$00FF,D7
	ADD.B	#$80,D7
	LSL.W	#3,D7
	MOVE.L	0(A3,D7.W),D5
	MOVE.W	4(A3,D7.W),D4
	MOVEP.L	D5,0(A4)
	MOVEP.W	D4,0(A4)
	MOVEM.L	(SP)+,D4/D5/D7/A3/A4/A6
	RTE
HALTREP
	CLR.B	$FFFFFA19.W
	MOVEM.L	(SP)+,D4/D5/D7/A3/A4/A6
	RTE
SET_YAM
	MOVE.B	#0,$FFFF8800.W	CHANNEL A
	MOVE.B	#0,$FFFF8802.W
	MOVE.B	#1,$FFFF8800.W
	MOVE.B	#0,$FFFF8802.W

	MOVE.B	#2,$FFFF8800.W	CHANNEL B
	MOVE.B	#0,$FFFF8802.W
	MOVE.B	#3,$FFFF8800.W
	MOVE.B	#0,$FFFF8802.W

	MOVE.B	#4,$FFFF8800.W	CHANNEL C
	MOVE.B	#0,$FFFF8802.W
	MOVE.B	#5,$FFFF8800.W
	MOVE.B	#0,$FFFF8802.W

	MOVE.B	#7,$FFFF8800.W	SET UP CHANNEL MIXING & PORT 'A' I/O
	MOVE.B	#$FF,$FFFF8802.W

	MOVE.B	#8,$FFFF8800.W	SET ALL VOLUMES TO ZERO
	MOVE.B	#0,$FFFF8802.W
	MOVE.B	#9,$FFFF8800.W
	MOVE.B	#0,$FFFF8802.W
	MOVE.B	#10,$FFFF8800.W
	MOVE.B	#0,$FFFF8802.W
	RTS

INIT_JEU
	MOVE.W	#1,YB
	MOVE.W	#48,XB

	BSR	VIDE_TABLEAU
	MOVE.W	#0,SCORE
	MOVE.W	#$FF,CHANCE
	BSR	AFF_SCORE
	MOVE.W	#0,GAME_OVER
	MOVE.W	#4,NB_BLOCK

	BSR	RANDOM_C1TO3

	MOVEM.W	N1,D0-D2
	MOVEM.W	D0-D2,C1

	BSR	RANDOM_C1TO3

	BSR.S	AFFICHE_NEXT

	MOVE.W	LEV_DEP,D0
	MOVE.W	D0,LEVEL
	LEA	TAB_LEVEL,A0
	MOVE.W	D0,D1
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D1,D1
	ADD.W	D1,D0
	MOVE.W	(A0,D0.W),VITESSE
	MOVE.W	2(A0,D0.W),DECALAGE
	MOVE.W	4(A0,D0.W),NB_BLOCK

	BSR	AFFICHE_LEVEL

	RTS

AFFICHE_NEXT
	MOVE.W	#112,D0	* X
	MOVE.W	#14,D2	* Y
	MOVE.W	N1,D3
	BSR	AFF_CARRE
	MOVE.W	#112,D0	* X
	MOVE.W	#30,D2	* Y
	MOVE.W	N2,D3
	BSR	AFF_CARRE
	MOVE.W	#112,D0	* X
	MOVE.W	#46,D2	* Y
	MOVE.W	N3,D3
	BSR	AFF_CARRE
	RTS

TEST_BLOCK
	LEA	TAB_TEMP,A1
	LEA	TABLEAU,A0
	MOVEQ	#13,D7
RECOP_TAB
	MOVEM.L	(A0)+,D0-D2	* 6
	MOVEM.L	D0-D2,(A1)
	LEA	12(A1),A1
	DBRA	D7,RECOP_TAB

	LEA	TABLEAU,A0
	LEA	TAB_TEMP,A1

	CMP.W	#12,C1
	BEQ	TEST_LUCKY

	MOVEQ	#0,D5

	MOVEQ	#14,D0

	MOVEQ	#13,D7
COL_TST
	MOVEQ	#3,D6
LIG_TST
	MOVE.W	(A0,D0.W),D1
	BEQ	NEXT_BLK
	CMP.W	2(A0,D0.W),D1
	BNE.S	PAS_H1
	CMP.W	-2(A0,D0.W),D1
	BNE.S	PAS_H1
	MOVE.W	#100,-2(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,2(A1,D0.W)
	MOVEQ	#1,D5
PAS_H1
	CMP.W	-12(A0,D0.W),D1
	BNE.S	PAS_V1
	CMP.W	12(A0,D0.W),D1
	BNE.S	PAS_V1
	MOVE.W	#100,-12(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,12(A1,D0.W)
	MOVEQ	#1,D5
PAS_V1
	CMP.W	-14(A0,D0.W),D1
	BNE.S	PAS_D1
	CMP.W	14(A0,D0.W),D1
	BNE.S	PAS_D1
	MOVE.W	#100,-14(A1,D0.W)
	MOVE.W	#100,0(A1,D0.W)
	MOVE.W	#100,14(A1,D0.W)
	MOVEQ	#1,D5
PAS_D1
	CMP.W	-10(A0,D0.W),D1
	BNE.S	PAS_D2
	CMP.W	10(A0,D0.W),D1
	BNE.S	PAS_D2
	MOVE.W	#100,-10(A1,D0.W)
	MOVE.W	#100,0(A1,D0.W)
	MOVE.W	#100,10(A1,D0.W)
	MOVEQ	#1,D5
PAS_D2
NEXT_BLK
	ADDQ.W	#2,D0
	DBRA	D6,LIG_TST
	ADDQ.W	#4,D0
	DBRA	D7,COL_TST

	MOVEQ	#2,D0
	MOVEQ	#3,D7
LIG_TST2
	MOVE.W	(A0,D0.W),D1
	BEQ.S	NEXT_BLOCK_GUINNESS
	CMP.W	-2(A0,D0.W),D1
	BNE.S	PAS_H2
	CMP.W	2(A0,D0.W),D1
	BNE.S	PAS_H2
	MOVE.W	#100,-2(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,2(A1,D0.W)
	MOVEQ	#1,D5
PAS_H2
NEXT_BLOCK_GUINNESS
	ADDQ.W	#2,D0
	DBRA	D7,LIG_TST2

	MOVE.W	#2+12*13,D0
	MOVEQ	#3,D7
LIG_TST3
	MOVE.W	(A0,D0.W),D1
	BEQ.S	NEXT_BLK2
	CMP.W	-2(A0,D0.W),D1
	BNE.S	PAS_H3
	CMP.W	2(A0,D0.W),D1
	BNE.S	PAS_H3
	MOVE.W	#100,-2(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,2(A1,D0.W)
	MOVEQ	#1,D5
PAS_H3
NEXT_BLK2
	ADDQ.W	#2,D0
	DBRA	D7,LIG_TST3

	MOVEQ	#12,D0
	MOVEQ	#11,D7
COL_TST1
	MOVE.W	(A0,D0.W),D1
	BEQ.S	NEXT_TEST
	CMP.W	-12(A0,D0.W),D1
	BNE.S	PAS_V2
	CMP.W	12(A0,D0.W),D1
	BNE.S	PAS_V2
	MOVE.W	#100,-12(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,12(A1,D0.W)
	MOVEQ	#1,D5
PAS_V2
NEXT_TEST
	ADD.W	#12,D0
	DBRA	D7,COL_TST1

	MOVEQ	#22,D0
	MOVEQ	#11,D7
COL_TST2
	MOVE.W	(A0,D0.W),D1
	BEQ.S	NEXT_TEST2
	CMP.W	-12(A0,D0.W),D1
	BNE.S	PAS_V3
	CMP.W	12(A0,D0.W),D1
	BNE.S	PAS_V3
	MOVE.W	#100,-12(A1,D0.W)
	MOVE.W	#100,(A1,D0.W)
	MOVE.W	#100,12(A1,D0.W)
	MOVEQ	#1,D5
NEXT_TEST2
PAS_V3
	ADD.W	#12,D0
	DBRA	D7,COL_TST2

	TST.W	D5
	BEQ	PAS_BLOCK

SUITE_MAGNUM_OF_MCS_AIME_LA_BIERE_BRUNE_ET_LA_ROUSSE_PLUS_QUE_LA_BLONDE

	MOVEM.L	D1-D7/A0-A1,-(SP)
	BSR	RANDOM
	MOVEM.L	(SP)+,D1-D7/A0-A1
	LEA	TAB_SON_LIGNE,A4
	AND.L	#$1,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADD.W	D0,A4

	BSR	PLAY_SAMPLE

	MOVE.W	#39,D4
FLASH
	BSR	VSYNC

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#13,D7
COL_1
	MOVEQ	#0,D2
	MOVEQ	#5,D6
LIG_1
	CMP.W	#100,(A1,D0.W)
	BNE.S	PAS_OUT
	BSR	FLASH_RECT
	MOVE.W	#0,(A0,D0.W)
PAS_OUT
	ADDQ.W	#2,D0
	ADD.W	#16,D2
	DBRA	D6,LIG_1
	ADD.W	#16,D1
	DBRA	D7,COL_1

	DBRA	D4,FLASH

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	MOVEQ	#13,D7
COL_2
	MOVEQ	#0,D2
	MOVEQ	#5,D6
LIG_2
	CMP.W	#100,(A1,D0.W)
	BNE.S	PAS_OUT2
	ADD.W	D5,SCORE
	ADDQ.W	#1,D5
	BSR	EFFACE_RECT
	MOVE.W	#0,(A0,D0.W)
PAS_OUT2
	ADDQ.W	#2,D0
	ADD.W	#16,D2
	DBRA	D6,LIG_2
	ADD.W	#16,D1
	DBRA	D7,COL_2

	MOVEM.L	D0-D7/A0,-(SP)
	BSR	AFF_SCORE
	MOVEM.L	(SP)+,D0-D7/A0
REDECAL
	MOVEQ	#0,D3
	MOVE.W	#12*16,Y
	MOVE.W	#13*12-2,D4
	MOVEQ	#11,D7	* D7=J
FOR_1
	MOVEQ	#5,D6	* D6=I
	MOVE.W	#80,X
FOR_2
	TST.W	(A0,D4.W)
	BEQ.S	ENDIF
	TST.W	12(A0,D4.W)
	BNE.S	ENDIF

	MOVE.W	(A0,D4.W),D5
	MOVE.W	D5,12(A0,D4.W)
	MOVE.W	#0,(A0,D4.W)

	MOVEQ	#1,D3
	
	MOVEM.L	D0-D7/A0,-(SP)

	MOVE.W	X,D2
	MOVE.W	Y,D1
	BSR	EFFACE_RECT

	MOVE.W	X,D0
	MOVE.W	Y,D2
	ADD.W	#16,D2
	MOVE.W	D5,D3
	BSR	AFF_CARRE

	MOVEM.L	(SP)+,D0-D7/A0
ENDIF
	SUBQ.W	#2,D4
	SUB.W	#16,X
	DBRA	D6,FOR_2
	SUB.W	#16,Y
	DBRA	D7,FOR_1
	TST.W	D3
	BNE	REDECAL

	MOVE.W	#1,SORTIE
	BRA	TEST_BLOCK
PAS_BLOCK
	RTS

TEST_LUCKY
	MOVEQ	#0,D0
	MOVEQ	#13,D7
COL_LUCK
	MOVEQ	#5,D6
LIG_LUCK
	CMP.W	#12,(A0,D0.W)
	BNE.S	NEXT_LUCK
	MOVE.W	#100,(A1,D0.W)
	CMP.W	#12,12(A0,D0.W)
	BEQ.S	NEXT_LUCK
	MOVE.W	12(A0,D0.W),D1
	BRA.S	YEAHH_GO_ON_ITS_REALLY_GOOD
NEXT_LUCK
	ADDQ.W	#2,D0
	DBRA	D6,LIG_LUCK
	DBRA	D7,COL_LUCK
YEAHH_GO_ON_ITS_REALLY_GOOD
	TST.W	D1
	BEQ.S	HERE_IT_IS_ONE_AGAIN

	MOVEQ	#0,D0
	MOVEQ	#13,D7
COL_LUCK2
	MOVEQ	#5,D6
LIG_LUCK2
	CMP.W	(A0,D0.W),D1
	BNE.S	NEXT_LUCK2
	MOVE.W	#100,(A1,D0.W)
NEXT_LUCK2
	ADDQ.W	#2,D0
	DBRA	D6,LIG_LUCK2
	DBRA	D7,COL_LUCK2
HERE_IT_IS_ONE_AGAIN

	MOVE.W	#0,C1

	BRA	SUITE_MAGNUM_OF_MCS_AIME_LA_BIERE_BRUNE_ET_LA_ROUSSE_PLUS_QUE_LA_BLONDE
X
	DC.W	0

AFF_SCORE
	LEA	PTR_SCORE,A0
	MOVE.W	SCORE,D0
	MOVE.W	D0,D1
	DIVU	#1000,D1
	MOVE.W	D1,D2
	MULU	#56,D2
	MOVE.W	D2,(A0)+
	MULU	#1000,D1
	SUB.W	D1,D0
	MOVE.W	D0,D1
	DIVU	#100,D1
	MOVE.W	D1,D2
	MULU	#56,D2
	MOVE.W	D2,(A0)+
	MULU	#100,D1
	SUB.W	D1,D0
	MOVE.W	D0,D1
	DIVU	#10,D1
	MOVE.W	D1,D2
	MULU	#56,D2
	MOVE.W	D2,(A0)+
	MULU	#10,D1
	SUB.W	D1,D0
	MULU	#56,D0
	MOVE.W	D0,(A0)+

	LEA	PTR_SCORE,A0
	LEA	ECRAN+120+160*90,A1
	LEA	FNT_09_G,A2
	MOVEQ	#1,D6
AFF_SCORE_BY_MAGNUM_OF_THE_GREAT_CREW_NAMED_MCS_OF_THE_GREAT_FRENCH_ALLIANCE
	MOVE.W	(A0)+,D0
	MOVE.W	(A0)+,D3
	MOVEQ	#6,D7
	MOVEQ	#0,D4
AFF_ONE_G
	MOVE.B	(A2,D0.W),D1
	MOVE.B	2(A2,D0.W),D2
	MOVE.B	D1,(A1,D4.W)
	MOVE.B	D2,2(A1,D4.W)
	MOVE.B	(A2,D3.W),D1
	MOVE.B	2(A2,D3.W),D2
	MOVE.B	D1,1(A1,D4.W)
	MOVE.B	D2,3(A1,D4.W)
	ADD.W	#160,D4
	ADDQ.W	#8,D0
	ADDQ.W	#8,D3
	DBRA	D7,AFF_ONE_G
	ADDQ.W	#8,A1
	DBRA	D6,AFF_SCORE_BY_MAGNUM_OF_THE_GREAT_CREW_NAMED_MCS_OF_THE_GREAT_FRENCH_ALLIANCE

	RTS
PTR_SCORE
	DCB.W	4,0

AFFICHE_LEVEL
	MOVE.W	LEVEL,D0
	MULU	#56,D0
	LEA	FNT_09_G,A0
	ADD.W	D0,A0
	LEA	ECRAN+120+160*112,A1
	MOVEQ	#6,D7
AFF_LEV
	MOVE.B	(A0),(A1)
	MOVE.B	2(A0),2(A1)
	ADDQ.W	#8,A0
	LEA	160(A1),A1
	DBRA	D7,AFF_LEV
	RTS

EFFACE_RECT
	MOVEM.L	D0-D7/A0,-(SP)
	LEA	ECRAN,A0
	ADD.W	#96,D2
	MULU	#160,D1
	ADD.L	D1,A0
	AND.W	#$FFF0,D2
	LSR.W	#1,D2
.EFFACE
	ADD.W	D2,A0
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#15,D7
EFF_MAG
	MOVEM.L	D0-D1,(A0)
	LEA	160(A0),A0
	DBRA	D7,EFF_MAG
	MOVEM.L	(SP)+,D0-D7/A0
	RTS

FLASH_RECT
	MOVEM.L	D0-D7/A0,-(SP)
	LEA	ECRAN,A0
	ADD.W	#96,D2
	MULU	#160,D1
	ADD.L	D1,A0
	AND.W	#$FFF0,D2
	LSR.W	#1,D2
.FLASH
	ADD.W	D2,A0
	MOVEQ	#0,D0
	MOVEQ	#15,D7
FLASH_MAG
	NOT.L	(A0)
	NOT.L	4(A0)
	LEA	160(A0),A0
	DBRA	D7,FLASH_MAG
	MOVEM.L	(SP)+,D0-D7/A0
	RTS
VSYNC 
	MOVEM.L	D0-D7/A0-A6,-(SP)
.VSYNC_LOOP
	TST.W	VBL_FLAG
	BEQ.S	.VSYNC_LOOP
	MOVE.W	#0,VBL_FLAG
	MOVEM.L	(SP)+,D0-D7/A0-A6
	RTS

RANDOM_C1TO3
	BSR	RANDOM
	MOVE.L	D0,D1
	MOVE.W	CHANCE,D2
	AND.W	D2,D1
	CMP.W	#1,D1
	BEQ.S	LUCKY

	AND.L	#$F,D0
RE_ONE
	CMP.W	NB_BLOCK,D0
	BLE.S	.C1_INF7
	SUB.W	NB_BLOCK,D0
	BRA.S	RE_ONE
.C1_INF7
	ADDQ	#1,D0
	MOVE.W	D0,N1
	BSR	RANDOM
	AND.L	#$F,D0
RE_TWO
	CMP.W	NB_BLOCK,D0
	BLE.S	.C2_INF7
	SUB.W	NB_BLOCK,D0
	BRA.S	RE_TWO
.C2_INF7
	ADDQ	#1,D0
	MOVE.W	D0,N2
	BSR	RANDOM
	AND.L	#$F,D0
RE_THREE
	CMP.W	NB_BLOCK,D0
	BLE.S	.C3_INF7
	SUB.W	NB_BLOCK,D0
	BRA.S	RE_THREE
.C3_INF7
	ADDQ	#1,D0
	MOVE.W	D0,N3
	RTS
LUCKY
	MOVE.W	#12,N1
	MOVE.W	#12,N2
	MOVE.W	#12,N3
	RTS

VIDE_TABLEAU
	LEA	TABLEAU,A0
	MOVE.W	#19*6-1,D1
	MOVEQ	#0,D0
EFF_TABLEAU
	MOVE.W	D0,(A0)+
	DBRA	D1,EFF_TABLEAU
	RTS

AFFICHE_PATTERN
	MOVE.W	XB,D0
	MOVE.W	YB,D2
	MOVE.W	C1,D3
	BSR.S	AFF_CARRE
	
	MOVE.W	XB,D0
	MOVE.W	YB,D2
	ADD.W	#16,D2
	MOVE.W	C2,D3
	BSR.S	AFF_CARRE

	MOVE.W	XB,D0
	MOVE.W	YB,D2
	MOVE.W	C3,D3
	ADD.W	#32,D2
	BSR.S	AFF_CARRE
	RTS

AFF_CARRE
	ADD.W	#96,D0
	SUBQ	#1,D3
	LEA	PATTERNS,A1
	LEA	ECRAN,A0
	MULU	#160,D2
	MULU	#128,D3
	ADD.W	D3,A1
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.W	D0,D2
	ADD.L	D2,A0
	MOVEQ	#15,D7
.POS_1
	MOVEM.L	(A1)+,D0-D1
	MOVEM.L	D0-D1,(A0)
	LEA	160(A0),A0
	DBRA	D7,.POS_1
	RTS

EFFACE_PATTERN
	LEA	ECRAN,A0
	MOVE.W	OLD_XB,D0
	ADD.W	#96,D0
	MOVE.W	OLD_YB,D2
	MULU	#160,D2
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.W	D0,D2
.EFF_0
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#47,D7
.EFF_PATE
	MOVEM.L	D0-D1,(A0,D2.L)
	LEA	160(A0),A0
	DBRA	D7,.EFF_PATE
	RTS

TEST_BAS
	LEA	ECRAN,A0
	MOVE.W	XB,D0
	ADD.W	#96,D0
	MOVE.W	YB,D2
	ADD.W	#47,D2
	ADD.W	DECALAGE,D2
	MULU	#160,D2
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.W	D0,D2
	MOVE.W	#1,D3
	MOVE.W	(A0,D2.L),D0
	OR.W	2(A0,D2.L),D0
	OR.W	4(A0,D2.L),D0
	OR.W	6(A0,D2.L),D0
	TST.W	D0
	BNE.S	.PAS_BAS
	MOVE.W	#0,D3
	MOVE.W	DECALAGE,D2
	ADD.W	D2,YB
.PAS_BAS
	RTS

PUT_IN_TABLEAU
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	LEA	TABLEAU,A0
	MOVE.W	XB,D0
	ADD.W	#96,D0
	MOVE.W	YB,D1
	SUB.W	DECALAGE,D1

	LSR.W	#4,D1	* D1=Y/16
	LSR.W	#4,D0	* D0=X/16
	MULU	#6,D1

	ADD.W	D0,D1
	ADD.W	D1,D1
	MOVE.W	C1,(A0,D1.W)
	MOVE.W	C2,12(A0,D1.W)
	MOVE.W	C3,24(A0,D1.W)
	RTS

TEST_GAUCHE
	MOVEQ	#0,D0
	MOVE.W	XB,D0
	MOVE.W	YB,D1
	ADD.W	#80,D0
	LEA	ECRAN,A0
	MULU	#160,D1
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.L	D1,D0
	MOVE.W	(A0,D0.L),D1
	OR.W	2(A0,D0.L),D1
	OR.W	4(A0,D0.L),D1
	OR.W	6(A0,D0.L),D1
	TST.W	D1
	BNE.S	PAS_OK_G

	MOVEQ	#0,D0
	MOVE.W	XB,D0
	MOVE.W	YB,D1
	ADD.W	#80,D0
	ADD.W	#47,D1
	LEA	ECRAN,A0
	MULU	#160,D1
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.L	D1,D0
	MOVE.W	(A0,D0.L),D1
	OR.W	2(A0,D0.L),D1
	OR.W	4(A0,D0.L),D1
	OR.W	6(A0,D0.L),D1
	TST.W	D1
	BNE.S	PAS_OK_G

	SUB.W	#16,XB
PAS_OK_G
	RTS

TEST_DROITE
	MOVEQ	#0,D0
	MOVE.W	XB,D0
	MOVE.W	YB,D1
	ADD	#112,D0
	LEA	ECRAN,A0
	MULU	#160,D1
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.L	D1,D0
	MOVE.W	(A0,D0.L),D1
	OR.W	2(A0,D0.L),D1
	OR.W	4(A0,D0.L),D1
	OR.W	6(A0,D0.L),D1
	TST.W	D1
	BNE.S	PAS_OK_D

	MOVEQ	#0,D0
	MOVE.W	XB,D0
	MOVE.W	YB,D1
	ADD	#112,D0
	ADD.W	#47,D1
	LEA	ECRAN,A0
	MULU	#160,D1
	AND.W	#$FFF0,D0
	LSR.W	#1,D0
	ADD.L	D1,D0
	MOVE.W	(A0,D0.L),D1
	OR.W	2(A0,D0.L),D1
	OR.W	4(A0,D0.L),D1
	OR.W	6(A0,D0.L),D1
	TST.W	D1
	BNE.S	PAS_OK_D
	ADD.W	#16,XB
PAS_OK_D
	RTS

**********************************************
*    RANDOM : NBRE ALEATOIRE (HUM) DANS D0   *
**********************************************

RANDOM:
                tst.l   OLD_NB
                bne.s   PAS_NUL
                move.l  $FFFA20,D0
                moveq   #16,D1
                asl.l   D1,D0
                or.l    $FFFA20,D0
                move.l  D0,OLD_NB
PAS_NUL:
                move.l  #3141592621,D2
                move.l  OLD_NB,D3
                mulu    D2,D3
                move.l  D3,D0
                addq.l  #1,D0
                move.l  D0,OLD_NB
                asr.l   #8,D0
                and.l   #$FFFFFF,D0
                rts

	DATA
SND_OUT	dc.w	$80c,$90b,$a09,0,$80c,$90b,$a09,0
	dc.w	$80d,$908,$a08,0,$80b,$90b,$a0b,0
	dc.w	$80d,$909,$a05,0,$80c,$90b,$a08,0
	dc.w	$80d,$909,$a02,0,$80d,$908,$a06,0
	dc.w	$80c,$90b,$a07,0,$80d,$907,$a07,0
	dc.w	$80c,$90b,$a06,0,$80c,$90a,$a09,0
	dc.w	$80b,$90b,$a0a,0,$80c,$90b,$a02,0
	dc.w	$80c,$90b,$a00,0,$80c,$90a,$a08,0

	dc.w	$80d,$906,$a04,0,$80d,$905,$a05,0
	dc.w	$80d,$905,$a04,0,$80c,$909,$a09,0
	dc.w	$80d,$904,$a03,0,$80b,$90b,$a09,0
	dc.w	$80c,$90a,$a05,0,$80b,$90a,$a0a,0
	dc.w	$80c,$909,$a08,0,$80b,$90b,$a08,0
	dc.w	$80c,$90a,$a00,0,$80c,$90a,$a00,0
	dc.w	$80c,$909,$a07,0,$80b,$90b,$a07,0
	dc.w	$80c,$909,$a06,0,$80b,$90b,$a06,0

	dc.w	$80b,$90a,$a09,0,$80b,$90b,$a05,0
	dc.w	$80a,$90a,$a0a,0,$80b,$90b,$a02,0
	dc.w	$80b,$90a,$a08,0,$80c,$907,$a07,0
	dc.w	$80c,$908,$a04,0,$80c,$907,$a06,0
	dc.w	$80b,$909,$a09,0,$80c,$906,$a06,0
	dc.w	$80a,$90a,$a09,0,$80c,$907,$a03,0
	dc.w	$80b,$90a,$a05,0,$80b,$909,$a08,0
	dc.w	$80b,$90a,$a03,0,$80a,$90a,$a08,0

	dc.w	$80b,$90a,$a00,0,$80b,$909,$a07,0
	dc.w	$80b,$908,$a08,0,$80a,$90a,$a07,0
	dc.w	$80a,$909,$a09,0,$80c,$901,$a01,0
	dc.w	$80a,$90a,$a06,0,$80b,$908,$a07,0
	dc.w	$80a,$90a,$a05,0,$80a,$909,$a08,0
	dc.w	$80a,$90a,$a02,0,$80a,$90a,$a01,0
	dc.w	$80a,$90a,$a00,0,$809,$909,$a09,0
	dc.w	$80a,$908,$a08,0,$80b,$908,$a01,0

	dc.w	$80a,$909,$a06,0,$80b,$907,$a04,0
	dc.w	$80a,$909,$a05,0,$809,$909,$a08,0
	dc.w	$80a,$909,$a03,0,$80a,$908,$a06,0
	dc.w	$80a,$909,$a00,0,$809,$909,$a07,0
	dc.w	$809,$908,$a08,0,$80a,$908,$a04,0
	dc.w	$809,$909,$a06,0,$80a,$908,$a01,0
	dc.w	$809,$909,$a05,0,$809,$908,$a07,0
	dc.w	$808,$908,$a08,0,$809,$909,$a02,0

	dc.w	$809,$908,$a06,0,$809,$909,$a00,0
	dc.w	$809,$907,$a07,0,$808,$908,$a07,0
	dc.w	$809,$907,$a06,0,$809,$908,$a02,0
	dc.w	$808,$908,$a06,0,$809,$906,$a06,0
	dc.w	$808,$907,$a07,0,$808,$908,$a04,0
	dc.w	$808,$907,$a06,0,$808,$908,$a02,0
	dc.w	$807,$907,$a07,0,$808,$906,$a06,0
	dc.w	$808,$907,$a04,0,$807,$907,$a06,0

	dc.w	$808,$906,$a05,0,$808,$906,$a04,0
	dc.w	$807,$906,$a06,0,$807,$907,$a04,0
	dc.w	$808,$905,$a04,0,$806,$906,$a06,0
	dc.w	$807,$906,$a04,0,$807,$905,$a05,0
	dc.w	$806,$906,$a05,0,$806,$906,$a04,0
	dc.w	$806,$905,$a05,0,$806,$906,$a02,0
	dc.w	$806,$905,$a04,0,$805,$905,$a05,0
	dc.w	$806,$905,$a02,0,$805,$905,$a04,0

	dc.w	$805,$904,$a04,0,$805,$905,$a02,0
	dc.w	$804,$904,$a04,0,$804,$904,$a03,0
	dc.w	$804,$904,$a02,0,$804,$903,$a03,0
	dc.w	$803,$903,$a03,0,$803,$903,$a02,0
	dc.w	$803,$902,$a02,0,$802,$902,$a02,0
	dc.w	$802,$902,$a01,0,$801,$901,$a01,0
	dc.w	$802,$901,$a00,0,$801,$901,$a00,0
	dc.w	$801,$900,$a00,0,$800,$900,$a00,0

	dc.w	$80e,$90d,$a0c,0,$80f,$903,$a00,0
	dc.w	$80f,$903,$a00,0,$80f,$903,$a00,0
	dc.w	$80f,$903,$a00,0,$80f,$903,$a00,0
	dc.w	$80f,$903,$a00,0,$80e,$90d,$a0b,0
	dc.w	$80e,$90d,$a0b,0,$80e,$90d,$a0b,0
	dc.w	$80e,$90d,$a0b,0,$80e,$90d,$a0b,0
	dc.w	$80e,$90d,$a0b,0,$80e,$90d,$a0b,0
	dc.w	$80e,$90d,$a0a,0,$80e,$90d,$a0a,0

	dc.w	$80e,$90d,$a0a,0,$80e,$90d,$a0a,0
	dc.w	$80e,$90c,$a0c,0,$80e,$90d,$a00,0
	dc.w	$80d,$90d,$a0d,0,$80d,$90d,$a0d,0
	dc.w	$80d,$90d,$a0d,0,$80d,$90d,$a0d,0
	dc.w	$80d,$90d,$a0d,0,$80d,$90d,$a0d,0
	dc.w	$80e,$90c,$a0b,0,$80e,$90c,$a0b,0
	dc.w	$80e,$90c,$a0b,0,$80e,$90c,$a0b,0
	dc.w	$80e,$90c,$a0b,0,$80e,$90c,$a0b,0

	dc.w	$80e,$90c,$a0b,0,$80e,$90c,$a0b,0
	dc.w	$80e,$90c,$a0a,0,$80e,$90c,$a0a,0
	dc.w	$80e,$90c,$a0a,0,$80e,$90c,$a0a,0
	dc.w	$80d,$90d,$a0c,0,$80d,$90d,$a0c,0
	dc.w	$80e,$90c,$a09,0,$80e,$90c,$a09,0
	dc.w	$80e,$90c,$a05,0,$80e,$90c,$a00,0
	dc.w	$80e,$90c,$a00,0,$80e,$90b,$a0b,0
	dc.w	$80e,$90b,$a0b,0,$80e,$90b,$a0b,0

	dc.w	$80e,$90b,$a0b,0,$80e,$90b,$a0a,0
	dc.w	$80e,$90b,$a0a,0,$80e,$90b,$a0a,0
	dc.w	$80d,$90d,$a0b,0,$80d,$90d,$a0b,0
	dc.w	$80d,$90d,$a0b,0,$80e,$90b,$a09,0
	dc.w	$80e,$90b,$a09,0,$80e,$90b,$a09,0
	dc.w	$80d,$90c,$a0c,0,$80d,$90d,$a0a,0
	dc.w	$80e,$90b,$a07,0,$80e,$90b,$a00,0
	dc.w	$80e,$90b,$a00,0,$80d,$90d,$a09,0

	dc.w	$80d,$90d,$a09,0,$80e,$90a,$a09,0
	dc.w	$80d,$90d,$a08,0,$80d,$90d,$a07,0
	dc.w	$80d,$90d,$a04,0,$80d,$90d,$a00,0
	dc.w	$80e,$90a,$a04,0,$80e,$909,$a09,0
	dc.w	$80e,$909,$a09,0,$80d,$90c,$a0b,0
	dc.w	$80e,$909,$a08,0,$80e,$909,$a08,0
	dc.w	$80e,$909,$a07,0,$80e,$908,$a08,0
	dc.w	$80e,$909,$a01,0,$80c,$90c,$a0c,0

	dc.w	$80d,$90c,$a0a,0,$80e,$908,$a06,0
	dc.w	$80e,$907,$a07,0,$80e,$908,$a00,0
	dc.w	$80e,$907,$a05,0,$80e,$906,$a06,0
	dc.w	$80d,$90c,$a09,0,$80e,$905,$a05,0
	dc.w	$80e,$904,$a04,0,$80d,$90c,$a08,0
	dc.w	$80d,$90b,$a0b,0,$80e,$900,$a00,0
	dc.w	$80d,$90c,$a06,0,$80d,$90c,$a05,0
	dc.w	$80d,$90c,$a02,0,$80c,$90c,$a0b,0

	dc.w	$80c,$90c,$a0b,0,$80d,$90b,$a0a,0
	dc.w	$80d,$90b,$a0a,0,$80d,$90b,$a0a,0
	dc.w	$80d,$90b,$a0a,0,$80c,$90c,$a0a,0
	dc.w	$80c,$90c,$a0a,0,$80c,$90c,$a0a,0
	dc.w	$80d,$90b,$a09,0,$80d,$90b,$a09,0
	dc.w	$80d,$90a,$a0a,0,$80d,$90a,$a0a,0
	dc.w	$80d,$90a,$a0a,0,$80c,$90c,$a09,0
	dc.w	$80c,$90c,$a09,0,$80c,$90c,$a09,0

	dc.w	$80d,$90b,$a06,0,$80c,$90b,$a0b,0
	dc.w	$80c,$90c,$a08,0,$80d,$90b,$a00,0
	dc.w	$80d,$90b,$a00,0,$80c,$90c,$a07,0
	dc.w	$80c,$90c,$a06,0,$80c,$90c,$a05,0
	dc.w	$80c,$90c,$a03,0,$80c,$90c,$a01,0
	dc.w	$80c,$90b,$a0a,0,$80d,$90a,$a05,0
	dc.w	$80d,$90a,$a04,0,$80d,$90a,$a02,0
	dc.w	$80d,$909,$a08,0,$80d,$909,$a08,0
F_SAM
	DS.L	1
NB_BLOCK
	DC.W	5
N1
	DC.W	0
N2
	DC.W	0
N3
	DC.W	0
C1
	DC.W	0
C2
	DC.W	0
C3
	DC.W	0
CHANCE
	DC.W	0
OLD_NB
	DC.L	0
PTR_CHEAT
	DC.W	0
TABLEAU
	DS.W	16*6
TAB_TEMP
	DS.W	16*6
VITESSE
	DC.W	4
BOUCLE
	DC.W	4
XB
	DC.W	0
YB
	DC.W	0
OLD_XB
	DC.W	0
OLD_YB
	DC.W	0
SCORE
	DC.W	0
LEVEL
	DC.W	0
TAB_LEVEL
	DC.W	4,1,5	* VITESSE,DECALAGE,NB_BLOCK
	DC.W	3,1,5
	DC.W	2,1,5
	DC.W	2,1,6
	DC.W	2,1,7
	DC.W	1,1,7
	DC.W	1,1,8
	DC.W	1,2,9
	DC.W	1,2,10
	DC.W	1,3,10
_STF
	DC.W	0
GAME_OVER
	DC.W	0
SORTIE
	DC.W	0
DECALAGE
	DC.W	1
ADD_DECALAGE
	DC.W	1
BLOCK
	DC.W	30
PATTERNS
	INCBIN	BLOCKS.IMG
IMG_G
	INCBIN	PANNEL1.PI1	
BLK2
	INCBIN	BLK2.IMG
FNT_09_G
	INCBIN	FNT.IMG
TAB_SON_LIGNE
	DC.L	COL4+32,FCOL4-10
	DC.L	COL6+32,FCOL6-10
TAB_SON_POSE
	DC.L	COL1+32,FCOL1-10
	DC.L	COL2+32,FCOL2-10
	DC.L	COL3+32,FCOL3-10
SAMPLE_FIN
	DC.L	COL5+32,FCOL5-10
SAMPLES
COL1
	INCBIN	COL1.VOC
FCOL1
COL2
	INCBIN	COL2.VOC
FCOL2
COL3
	INCBIN	COL3.VOC
FCOL3
COL4
	INCBIN	COL4.VOC
FCOL4
COL5
	INCBIN	COL5.VOC
FCOL5
COL6
	INCBIN	COL6.VOC
FCOL6
FIN_SAMPLES
KEY
	DC.B	0
	EVEN
NAME_BUF
	DC.B	'          '
	EVEN
TAB_SCAN:
          DC.B 0
          DC.B 0
          DC.B '1234567890',0,0,0,0,'AZERTYUIOP',0,0 	* 1B
          DC.B 0,0,'QSDFGHJKLM',0 		* 28
          DC.B 0,0,0,'WXCVBN',0,0,0,0 		* 35
          DC.B 0,0,0,' ',0,0,0,0,0,0,0,0,0,0,0 	* 44
          DC.B 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 	* 55
          DC.B 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 	* 64
          DC.B 0,0,'7894561230.',0
          DS.B 300
          EVEN

CHEAT_CODE
	DC.B	$27,$10,$22,$31,$16,$27,$18,$21	* MAGNUM OF
	DC.B	$27,$2E,$1F,$26,$18,$2F,$12,$1F	* MCS LOVES
	DC.B	$19,$12,$26,$21,$18,$13,$14,$23	* PELFORTH
	DC.B	$10,$31,$20,$25,$17,$26,$26,$17,$10,$31,$1F * AND KILLIANS
	DC.B	$30,$16,$14,$19,$13,$12,$21,$12,$13,$1F * BUT PREFERS
	DC.B	$22,$16,$17,$31,$31,$12,$1F,$1F	* GUINNESS

	EVEN
TAB_HIGH
	DC.B	'MAGNUM          8975'
	DC.B	'THE DREAMER     8432'
	DC.B	'THE HOOLIGAN    7967'
	DC.B	'ZORGLUB         7325'
	DC.B	'ALTAIR          6895'
	DC.B	'GALAHAD         3596'
	DC.B	'P.F.             294'
FIN_SCORES
	DC.B	'AXEL F.           32'
	DC.B	'   PRESS SPACE NOW  '
FIN_TAB_SCO
	DC.B	'                    '
	EVEN
SPACE_WORK
	DC.B	'   PRESS SPACE NOW  '
	EVEN
TXT_HIGH
	DC.B	'    YOUR SCORE IS   '
	DC.B	'        '
TXT_SCORE
	DC.B	'0000'
	DC.B	'        '
	DC.B	'    WELL DONE GUY.  '
	DC.B	'YOU GOT A HIGH SCORE'
	DC.B	'                    '
	DC.B	'  ENTER YOUR NAME   '
	DC.B	'     ..........     '
	EVEN
TAB_HS
	DC.W	8975
	DC.W	8432
	DC.W	7957
	DC.W	7325
	DC.W	6895
	DC.W	3596
	DC.W	294
	DC.W	32
FIN_TAB_HS
	DC.W	0
	DC.W	0

TXT_INFOS
	DC.B	'       COLUMNS      '
	DC.B	' THIS GAME WAS DONE '
	DC.B	'BY SEGA ON GAME GEAR'
	DC.B	'AND ADAPTED ON PC BY'
	DC.B	'    DUBS FROM MCS   '
	DC.B	'THE AIM OF THIS GAME'
	DC.B	'IS TO MAKE ROW,LINES'
	DC.B	' AND DIAGONALS WITH '
	DC.B	' THE ITEMS THAT FALL'
	
	DC.B	'    ON THE SCREEN.  '
	DC.B	' USE THE CURSOR KEYS'
	DC.B	'  TO MOVE AND FALL. '
	DC.B	' TYPE THE CHEAT CODE'
	DC.B	' FOR UNLIMITED GOLD '
	DC.B	' ESC KEY BRINGS YOU '
	DC.B	'  BACK TO THE MENU  '
	DC.B	'                    '
	DC.B	'                    '
	
	DC.B	'ALL CODING BY MAGNUM'
	DC.B	' GFX BY ZORGLUB AND '
	DC.B	'        MAGNUM      '
	DC.B	'   SAMPLES BY DUBS  '
	DC.B	'HELLO AND GREETS TO '
	DC.B	'   THE BLACK CATS   '
	DC.B	'        FUZION      '
	DC.B	' THE STORM BROTHERS '
	DC.B	'         NEXT       '

	EVEN

VBL_FLAG
	DC.W	0
SAVE_PAL
	DS.W	16
NILL
	DCB.W	16,0
PAL
	DC.W	$0,$000,$000,$000,$000,$000,$000,$0
	DC.W	$0,$111,$000,$000,$000,$000,$000,$0
	DC.W	$0,$222,$000,$000,$000,$111,$000,$0
	DC.W	$0,$333,$111,$000,$000,$222,$000,$0
	DC.W	$0,$444,$222,$000,$111,$333,$000,$0
	DC.W	$0,$555,$333,$000,$222,$444,$111,$0
	DC.W	$0,$666,$444,$111,$333,$555,$222,$0
PAL_F
	DC.W	$0,$777,$555,$222,$444,$666,$333,$111
PAL2
	DCB.W	8,$0
	DC.W	$0,$0,0,$0,$0,$0,$0,$111
	DC.W	$0,$0,0,$0,$0,$0,$111,$222
	DC.W	$0,$0,0,$0,$0,$111,$222,$333
	DC.W	$0,$0,0,$0,$111,$222,$333,$444
	DC.W	$0,$0,0,$111,$222,$333,$444,$555
	DC.W	$0,$0,$111,$222,$333,$444,$555,$666
PAL_F2
	DC.W	$0,$111,$222,$333,$444,$555,$666,$777
PAL_MAG
	DC.W	$100,$110,$220,$330,$440,$550,$660,$770
FLAG_SAVE_HIGH
	DC.W	0
SAVE
	DS.L	10
IMG
	INCBIN	MCS.PI1
IMG2
	INCBIN	COL.PI1
TAB_FPRES
	REPT	12
	DC.L	NILL_CHAR
	ENDR
	
	DC.L	FNT_PRES+160*21+144	* ,
	DC.L	NILL_CHAR
	DC.L	FNT_PRES+160*21+128	* .
	DC.L	NILL_CHAR

M	SET	160*21+48
	REPT	10		* 0-9
	DC.L	FNT_PRES+M
M	SET	M+8
	ENDR

	DC.L	FNT_PRES+160*21+152	* :
	DC.L	FNT_PRES+160*24+136	* ;

	REPT	5
	DC.L	NILL_CHAR
	ENDR

M	SET	0		* A - T
	REPT	20
	DC.L	FNT_PRES+M
M	SET	M+8
	ENDR
M	SET	160*21

	REPT	6		* U - Z
	DC.L	FNT_PRES+M
M	SET	M+8
	ENDR

FNT_PRES
	INCBIN	FNT_PRES.IMG

LARGEUR_CHIFFRE	EQU	18*16
FNT_09
	INCBIN	FNT_LEV.IMG
ZIK
	INCBIN	BA04.MUS

NILL_CHAR