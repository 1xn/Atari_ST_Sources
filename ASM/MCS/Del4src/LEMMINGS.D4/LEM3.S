	TEXT

NBVBL	EQU	2

ECRAN	EQU	$70000

TEST	EQU	0

	clr.l	-(sp)
	move.w	#32,-(sp)
	trap	#1
	addq.l	#6,sp
	
	MOVE.W	#$2700,SR

	MOVE.B	#$12,$FFFC02

	MOVEM.L	NILL,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W

	CLR.B	$FFFF8260.W
	MOVE.B	#$7,$FFFF8201.W
	MOVE.B	#$0,$FFFF8203.W

	LEA	BUF1,A0
	LEA	F_BUF_SCRO,A1
	MOVEQ	#0,D0
EFF_BUF_SCRO
	MOVE.L	D0,(A0)+
	CMP.L	A0,A1
	BNE.S	EFF_BUF_SCRO

	LEA	TOMBEUR,A0
	MOVEQ	#0,D0
	MOVE.W	#10*4-1,D7
ROT_LEM
	MOVE.W	(A0),D0
	LSR.W	#5,D0
	MOVE.W	D0,(A0)
	MOVE.W	2(A0),D0
	LSR.W	#5,D0
	MOVE.W	D0,2(A0)
	MOVE.W	4(A0),D0
	LSR.W	#5,D0
	MOVE.W	D0,4(A0)
	MOVE.W	6(A0),D0
	LSR.W	#5,D0
	MOVE.W	D0,6(A0)
	ADDQ.L	#8,A0
	DBRA	D7,ROT_LEM

	LEA	MARCHE_DROITE,A0
	LEA	MASK,A1
	LEA	FIN_SPRITES,A2
CALC_MSK
	MOVE.W	(A0),D0
	OR.W	2(A0),D0
	OR.W	4(A0),D0
	OR.W	6(A0),D0
	NOT.W	D0
	MOVE.W	D0,(A1)+
	ADDQ.L	#8,A0		* SALETE DE PUTAIN DE ADDQ
				* EN FAIT J'AI PASSE 4 HEURES				
				* A REDECOUPER MES BLOCKS ET A
				* REVOIR MES ROUTINES DE SPRITE
				* A COZ DE CA !!!!!
	CMP.L	A0,A2
	BNE.S	CALC_MSK

	LEA	ECRAN+160*200,A0
	MOVEQ	#0,D0
	MOVE.W	#40*50-1,D1
EFF_BAS
	MOVE.L	D0,(A0)+
	DBRA	D1,EFF_BAS

	LEA	FOND+34,A0
	LEA	ECRAN,A1
	MOVE.W	#7999,D1
AFF_FOND
	MOVE.L	(A0)+,(A1)+
	DBRA	D1,AFF_FOND
	
	MOVEM.L	FOND+2,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W

	move.l	$4F2,d0
	cmpi.l	#$FC0000,d0
	beq	STF
	move.l	#player,a0
	move.b	#$9A,$6DF(A0)
	move.b	#$9A,$765(A0)
STF

	LEA	SAVE,A0
	MOVE.L	$70.W,(A0)+
	MOVE.L	$120.W,(A0)+
	MOVE.B	$FFFFFA07.W,(A0)+
	MOVE.B	$FFFFFA09.W,(A0)+
	MOVE.B	$FFFFFA13.W,(A0)+
	MOVE.B	$FFFFFA15.W,(A0)+
	MOVE.B	$FFFFFA17.W,(A0)+
	MOVE.B	$FFFFFA1B.W,(A0)+
	MOVE.B	$FFFFFA21.W,(A0)+
	MOVE.L	#VBL,$70.W
	clr.b	$fffa15
	lea	debmod,a1			* demarre soundtrack
	lea	finmod,a2
	moveq	#0,d0
	BSR	player
	move.l	a0,stdvar
	OR.B	#1,$FFFFFA07.W
	OR.B	#1,$FFFFFA13.W
	MOVE.B	#0,$FFFFFA09.W
	BCLR	#3,$FFFFFA17.W
	move.w	#$2300,sr

LOOP
	BSR	WAIT_VBL
	BSR	WAIT_VBL

	LEA	LEM_POS1,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,A1
	MOVE.L	D0,(A1)
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,A2
	MOVE.L	D0,(A2)
	MOVE.W	BUFFER_LEM1,D0
	MOVE.W	D0,BUFFER
	MOVEM.L	A1/A2,-(SP)
EFF_LEM1
	JSR	EFFACE_TOMBEUR
AFF_LEM1
	JSR	AFFICHE_TOMBEUR
	MOVEM.L	(SP)+,A1/A2
	MOVE.W	BUFFER,D0
	MOVE.W	D0,BUFFER_LEM1
	MOVE.L	(A1),LEM_POS1
	MOVE.L	(A2),LEM_POS1+8
	TST.W	END_M_DROIT
	BNE.S	SUITE_LEM1
	BSR	CHANGE_WAVE
SUITE_LEM1
	BSR	WAIT_VBL
	BSR	WAIT_VBL

	LEA	LEM_POS2,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,A1
	MOVE.L	D0,(A1)
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,A2
	MOVE.L	D0,(A2)
	MOVE.W	BUFFER_LEM2,D0
	MOVE.W	D0,BUFFER
	MOVEM.L	A1/A2,-(SP)
EFF_LEM_BIS
	JSR	NULL
AFF_LEM_BIS
	JSR	WAIT_LEM1
	MOVEM.L	(SP)+,A1/A2
	MOVE.W	BUFFER,D0
	MOVE.W	D0,BUFFER_LEM2
	MOVE.L	(A1),LEM_POS2
	MOVE.L	(A2),LEM_POS2+8
	TST.W	END_M_DROIT
	BNE.S	SUITE_LEM2
	BSR	CHANGE_WAVE2
SUITE_LEM2
	CMP.B	#$39,$FFFC02
	BEQ	FIN
	BRA	LOOP
NULL
	RTS

GO_LEM_2
	MOVE.L	#EFFACE_TOMBEUR,EFF_LEM_BIS+2
	MOVE.L	#AFFICHE_TOMBEUR,AFF_LEM_BIS+2
	RTS
LEM_POS1
	DC.L	TABLE_7,PEK_TAB3+2
	DC.L	F_TABLE7,PEK_CMPT+2
BUFFER_LEM1
	DC.W	0
LEM_POS2
	DC.L	TABLE_7,PEK_TAB3+2
	DC.L	F_TABLE7,PEK_CMPT+2
BUFFER_LEM2
	DC.W	0

CHANGE_WAVE
	MOVE.L	#TAB_LEM1,A0
	MOVE.L	(A0)+,EFF_LEM1+2
	MOVE.L	(A0)+,AFF_LEM1+2
	MOVE.L	(A0)+,A1
	MOVE.L	A1,LEM_POS1+4
	MOVE.L	(A0)+,D0
	MOVE.L	D0,(A1)
	MOVE.L	D0,LEM_POS1
	MOVE.L	(A0)+,A1
	MOVE.L	A1,LEM_POS1+12
	MOVE.L	(A0)+,D0
	MOVE.L	D0,(A1)
	MOVE.L	D0,LEM_POS1+8
	ADD.L	#24,CHANGE_WAVE+2
	MOVE.W	#1,END_M_DROIT
	RTS
CHANGE_WAVE2
	MOVE.L	#TAB_LEM2,A0
	MOVE.L	(A0)+,EFF_LEM_BIS+2
	MOVE.L	(A0)+,AFF_LEM_BIS+2
	MOVE.L	(A0)+,A1
	MOVE.L	A1,LEM_POS2+4
	MOVE.L	(A0)+,D0
	MOVE.L	D0,(A1)
	MOVE.L	D0,LEM_POS2
	MOVE.L	(A0)+,A1
	MOVE.L	A1,LEM_POS2+12
	MOVE.L	(A0)+,D0
	MOVE.L	D0,(A1)
	MOVE.L	D0,LEM_POS2+8
	ADD.L	#24,CHANGE_WAVE2+2
	MOVE.W	#1,END_M_DROIT
	RTS
TAB_LEM1
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_DROIT
	DC.L	PEK_TAB+2,TABLE1
	DC.L	PEK_CMPD+2,F_TABLE

	DC.L	EFFACE_CREUSEUR,AFFICHE_CREUSEUR
	DC.L	PEK_TAB2+2,TABLE2
	DC.L	PEK_CMPC+2,F_TABLE2
	
	DC.L	EFFACE_TOMBEUR,AFFICHE_TOMBEUR
	DC.L	PEK_TAB3+2,TABLE_3
	DC.L	PEK_CMPT+2,F_TABLE3
	
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_GAUCHE
	DC.L	PEK_TABG+2,TABLE4
	DC.L	PEK_CMPG+2,F_TABLE4
	
	DC.L	EFFACE_TOMBEUR,AFFICHE_TOMBEUR
	DC.L	PEK_TAB3+2,TABLE_5
	DC.L	PEK_CMPT+2,F_TABLE5
	
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_DROIT
	DC.L	PEK_TAB+2,TABLE_6
	DC.L	PEK_CMPD+2,F_TABLE6

	DC.L	NULL,ROUT_FIN
	DC.L	PEK_TAB+2,F_TABLE6-4
	DC.L	PEK_CMPD+2,F_TABLE6

	DC.L	NULL,NULL
	DC.L	PEK_TAB+2,F_TABLE6-4
	DC.L	PEK_CMPD+2,F_TABLE6
F_TAB_LEM1

TAB_LEM2
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_DROIT
	DC.L	PEK_TAB+2,TABLE1
	DC.L	PEK_CMPD+2,F_TABLE

	DC.L	EFFACE_TOMBEUR,AFFICHE_TOMBEUR
	DC.L	PEK_TAB3+2,TABLE_3_BIS
	DC.L	PEK_CMPT+2,F_TABLE3
	
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_GAUCHE
	DC.L	PEK_TABG+2,TABLE4
	DC.L	PEK_CMPG+2,F_TABLE4
	
	DC.L	EFFACE_TOMBEUR,AFFICHE_TOMBEUR
	DC.L	PEK_TAB3+2,TABLE_5
	DC.L	PEK_CMPT+2,F_TABLE5
	
	DC.L	EFFACE_MARCHEUR_DROIT,AFFICHE_MARCHEUR_DROIT
	DC.L	PEK_TAB+2,TABLE_6
	DC.L	PEK_CMPD+2,F_TABLE6

	DC.L	EFFACE_MARCHEUR_DROIT,ROUT_1
	DC.L	PEK_TAB+2,TABLE_6
	DC.L	PEK_CMPD+2,F_TABLE6

	DC.L	EFFACE_FUCKER,AFFICHE_FUCKER
	DC.L	PEK_TAB+2,TABLE_6
	DC.L	PEK_CMPD+2,F_TABLE6
F_TAB_LEM2

ROUT_FIN
	MOVE.W	BUFFER_LEM1,D0
	LEA	ECRAN,A0
	LEA	FOND+34,A1
	LEA	BUF_TEMP,A2
	ADD.W	D0,A0
	ADD.W	D0,A1
	MOVEQ	#9,D4
RECOPIE
	MOVEM.L	(A1),D0-D1
	MOVEM.L	D0-D1,(A2)
	MOVEM.L	(A0),D0-D1
	MOVEM.L	D0-D1,(A1)
	LEA	160(A0),A0
	LEA	160(A1),A1
	ADDQ.L	#8,A2
	DBRA	D4,RECOPIE
	MOVE.W	#0,END_M_DROIT
	RTS
BUF_TEMP
	DS.B	80
ROUT_1
	MOVE.W	BUFFER_LEM1,D0
	LEA	FOND+34,A0
	LEA	BUF_TEMP,A1
	ADD.W	D0,A0
	MOVEQ	#9,D4
RECOPIE_MAGNUM_AIME_LA_KILLIANS_ET_LA_PELFORTH_MAIS_SURTOUT_LA_GUINNESS
	MOVEM.L	(A1)+,D0-D1
	MOVEM.L	D0-D1,(A0)
	LEA	160(A0),A0
	ADDQ.L	#8,A1
	DBRA	D4,RECOPIE_MAGNUM_AIME_LA_KILLIANS_ET_LA_PELFORTH_MAIS_SURTOUT_LA_GUINNESS
	MOVE.L	#SCROL,PEK_SCROL+2
	MOVE.W	#0,END_M_DROIT
	RTS
FIN
	MOVE.W	#$2700,SR
	LEA	SAVE,A0
	MOVE.L	(A0)+,$70.W
	MOVE.L	(A0)+,$120.W
	MOVE.B	(A0)+,$FFFFFA07.W
	MOVE.B	(A0)+,$FFFFFA09.W
	MOVE.B	(A0)+,$FFFFFA13.W
	MOVE.B	(A0)+,$FFFFFA15.W
	MOVE.B	(A0)+,$FFFFFA17.W

	MOVE.W	#2000,D1
BC_NOP
	DIVU	#1,D0
	DBRA	D1,BC_NOP

	ILLEGAL

WAIT_VBL
	TST.W	VBL_FLAG
	BEQ.S	WAIT_VBL
	MOVE.W	#0,VBL_FLAG
	RTS
VBL_FLAG
	DC.W	0
WAIT_LEM1
	SUBQ.W	#1,VBL_TIME
	TST.W	VBL_TIME
	BNE.S	SUITE_WAIT
	MOVE.L	#GO_LEM_2,AFF_LEM_BIS+2
SUITE_WAIT
	RTS
VBL_TIME
	DC.W	156
AFFICHE_MARCHEUR_DROIT
	LEA	ECRAN,A2
PEK_TAB
	MOVE.L	#TABLE1,A5	* MARCHE DROITE 1
	MOVEQ	#0,D0
	MOVEQ	#0,D6
	MOVEQ	#0,D5
	MOVE.W	(A5)+,D0		*    X*4
	MOVE.W	(A5)+,D5		*    Y*160
	MOVE.W	D5,D6
	LEA	MARCHEUR_DROIT,A4
	LEA	MARCHE_DROITE,A0
	LEA	MSK_RIGHT,A1
	MOVE.W	(A4,D0.W),D1	* ECRAN
	MOVE.W	2(A4,D0.W),D0	* SPR
	ADD.W	D0,A0
	ADD.W	D1,D6
	LSR.W	#2,D0
	ADD.W	D0,A1
	ADD.W	D6,A2
	MOVE.W	D6,BUFFER

	ADDQ.L	#4,PEK_TAB+2
PEK_CMPD
	CMP.L	#F_TABLE,PEK_TAB+2
	BNE.S	SUITE
	MOVE.W	#0,END_M_DROIT
SUITE
	MOVEQ	#9,D4
AFF_LEM
	MOVEM.W	(A1)+,D0-D1

	AND.W	D0,(A2)
	AND.W	D0,2(A2)
	AND.W	D0,4(A2)
	AND.W	D0,6(A2)
	AND.W	D1,8(A2)
	AND.W	D1,10(A2)
	AND.W	D1,12(A2)
	AND.W	D1,14(A2)
	MOVEM.L	(A0)+,D0-D3
	OR.L	D0,(A2)
	OR.L	D1,4(A2)
	OR.L	D2,8(A2)
	OR.L	D3,12(A2)
	LEA	160(A2),A2
	DBRA	D4,AFF_LEM
	RTS

EFFACE_MARCHEUR_DROIT
	LEA	ECRAN,A0
	LEA	FOND+34,A1
	MOVE.W	BUFFER,D0
	ADD.W	D0,A0
	ADD.W	D0,A1
	MOVEQ	#9,D4
EFF_LEM
	MOVEM.L	(A1),D0-D3
	MOVEM.L	D0-D3,(A0)
	LEA	160(A1),A1
	LEA	160(A0),A0
	DBRA	D4,EFF_LEM
	RTS

AFFICHE_MARCHEUR_GAUCHE
	LEA	ECRAN,A2
PEK_TABG
	MOVE.L	#TABLE4,A5	* MARCHE GAUCHE 1
	MOVEQ	#0,D0
	MOVEQ	#0,D6
	MOVEQ	#0,D5
	MOVE.W	(A5)+,D0		*    X*4
	MOVE.W	(A5)+,D5		*    Y*160
	MOVE.W	D5,D6
	LEA	MARCHEUR_GAUCHE,A4
	LEA	MARCHE_GAUCHE,A0
	LEA	MSK_LEFT,A1
	MOVE.W	(A4,D0.W),D1	* ECRAN
	MOVE.W	2(A4,D0.W),D0	* SPR
	ADD.W	D0,A0
	ADD.W	D1,D6
	LSR.W	#2,D0
	ADD.W	D0,A1
	ADD.W	D6,A2
	MOVE.W	D6,BUFFER

	ADDQ.L	#4,PEK_TABG+2
PEK_CMPG
	CMP.L	#F_TABLE4,PEK_TABG+2
	BNE.S	SUITEG
	MOVE.W	#0,END_M_DROIT
SUITEG
	MOVEQ	#9,D4
AFF_LEMG
	MOVEM.W	(A1)+,D0-D1

	AND.W	D0,(A2)
	AND.W	D0,2(A2)
	AND.W	D0,4(A2)
	AND.W	D0,6(A2)
	AND.W	D1,8(A2)
	AND.W	D1,10(A2)
	AND.W	D1,12(A2)
	AND.W	D1,14(A2)
	MOVEM.L	(A0)+,D0-D3
	OR.L	D0,(A2)
	OR.L	D1,4(A2)
	OR.L	D2,8(A2)
	OR.L	D3,12(A2)
	LEA	160(A2),A2
	DBRA	D4,AFF_LEMG
	RTS

*********************************************

AFFICHE_CREUSEUR
	LEA	ECRAN,A2
PEK_TAB2
	MOVE.L	#TABLE2,A5	* MARCHE DROITE 1
	MOVEQ	#0,D0
	MOVEQ	#0,D6
	MOVEQ	#0,D5
	MOVE.W	(A5)+,D5		*    Y*160
	MOVE.W	(A5)+,D0		*    .W POUR SPRITE
	MOVE.W	D5,D6
	LEA	CREUSEUR,A0
	LEA	MSK_CREUSE,A1
	ADD.W	D6,A2
	MOVE.W	D6,BUFFER
	ADD.W	D0,A0
	LSR.W	#2,D0
	ADD.W	D0,A1

	ADDQ.L	#4,PEK_TAB2+2
PEK_CMPC
	CMP.L	#F_TABLE2,PEK_TAB2+2
	BNE.S	SUITE2
	MOVE.W	#0,END_M_DROIT
SUITE2
	MOVEQ	#15,D4
AFF_LEM2
	MOVE.W	(A1)+,D0
	AND.W	D0,(A2)
	AND.W	D0,2(A2)
	AND.W	D0,4(A2)
	AND.W	D0,6(A2)
	MOVEM.L	(A0)+,D0-D1
	OR.L	D0,(A2)
	OR.L	D1,4(A2)
	LEA	160(A2),A2
	DBRA	D4,AFF_LEM2
	RTS

EFFACE_CREUSEUR
	LEA	ECRAN,A0
	LEA	FOND+34,A1
	MOVE.W	BUFFER,D0
	ADD.W	D0,A0
	ADD.W	D0,A1
	MOVEQ	#$C,D4
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.L	#$0FF80FF8,D2
	NOT.L	D2
EFF_LEM2
	MOVEM.L	(A1),D0-D1
	AND.L	D2,D0
	AND.L	D2,D1
	MOVEM.L	D0-D1,(A0)
	MOVEM.L	D0-D1,(A1)
	LEA	160(A1),A1
	LEA	160(A0),A0
	DBRA	D4,EFF_LEM2
	MOVEQ	#$3,D4
EFF_LEM22
	MOVEM.L	(A1),D0-D1
	MOVEM.L	D0-D1,(A0)
	LEA	160(A1),A1
	LEA	160(A0),A0
	DBRA	D4,EFF_LEM22
	RTS

AFFICHE_TOMBEUR
	LEA	ECRAN,A0
	LEA	TOMBEUR,A1
	LEA	MSK_TOMBE,A3
PEK_TAB3
	MOVE.L	#TABLE_3,A2
	MOVE.W	(A2)+,D0
	MOVE.W	D0,BUFFER
	ADD.W	D0,A0	* D0=Y*160...
	MOVE.W	(A2)+,D0
	ADD.W	D0,A1
	LSR.W	#2,D0
	ADD.W	D0,A3	* A3 =MASK
	MOVEQ	#9,D4
TEST_IT
	MOVEQ	#0,D2
	MOVEQ	#0,D0
	MOVE.W	(A3)+,D2
	MOVE.W	D2,D0
	SWAP	D2
	ADD.W	D0,D2
	MOVEM.L	(A1)+,D0-D1
	AND.L	D2,(A0)
	AND.L	D2,4(A0)
	OR.L	D0,(A0)
	OR.L	D1,4(A0)
	LEA	160(A0),A0
	DBRA	D4,TEST_IT
	ADDQ.L	#4,PEK_TAB3+2
PEK_CMPT
	CMP.L	#F_TABLE3,PEK_TAB3+2
	BNE.S	PAS_FTAB3
	MOVE.W	#0,END_M_DROIT
PAS_FTAB3
	RTS
EFFACE_TOMBEUR
	LEA	ECRAN,A0
	LEA	FOND+34,A1
	MOVE.W	BUFFER,D0
	ADD.W	D0,A0
	ADD.W	D0,A1
	MOVEQ	#9,D4
EFF_MAUD
	MOVEM.L	(A1),D0-D1
	MOVEM.L	D0-D1,(A0)
	LEA	160(A1),A1
	LEA	160(A0),A0
	DBRA	D4,EFF_MAUD
	RTS
VBL
	CMP.B	#$39,$FFFC02
	BEQ	FIN
	CLR.B	$FFFFFA1B.W
	MOVE.B	#199,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#OVR_B,$120.W
	MOVEM.L	D0-D6/A0-A5,-(SP)
	MOVEM.L	FOND+2,D0-D6/A0
	MOVEM.L	D0-D6/A0,$FFFF8240.W
	move.l	stdvar,a0
	move.l	(a0),a6
	moveq	#1,d0
	BSR	player			* soundtrack (vbl)
PEK_SCROL
	JSR	NULL
	MOVEM.L	(SP)+,D0-D6/A0-A5
	MOVE.W	#1,VBL_FLAG
	RTE

OVR_B
	move.w	#$2700,sr
	MOVEM.L	D0/A0,-(SP)
	lea	$fffffa21.w,a0
	move.b	(a0),d0
sync	cmp.b	(a0),d0
	beq.s	sync
	bclr	#1,$ff820a
	rept	10
	nop
	endr
	bset	#1,$ff820a
	movem.l	(sp)+,d0/a0
	clr.b	$fffffa1b

	MOVE.L	#$7760654,$FFFF8242.W
	MOVE.L	#$5430431,$FFFF8246.W
	MOVE.L	#$3210210,$FFFF824A.W
	MOVE.L	#$0010002,$FFFF824E.W
	MOVE.L	#$0030004,$FFFF8252.W
	MOVE.L	#$0050006,$FFFF8256.W
	MOVE.W	#$007,$FFFF825A.W

	rte


SCROL	JSR ROUT1
	RTS

ROUT1	MOVE.L #BUF4,A1
	BSR AFFB
	MOVE.L #BUF1,A1
	BSR DECAL
	MOVE.L #ROUT2,SCROL+2
	RTS
ROUT2	MOVE.L #BUF1,A1
	BSR AFFB
	MOVE.L #BUF2,A1
	BSR DECAL
	MOVE.L #ROUT3,SCROL+2
	RTS
ROUT3	MOVE.L #BUF2,A1
	BSR AFFB
	MOVE.L #BUF3,A1
	BSR DECAL
	MOVE.L #ROUT4,SCROL+2
	RTS
ROUT4	MOVE.L #BUF3,A1
	BSR AFFB
	MOVE.L #BUF4,A1
	BSR DECAL
	BSR ADLET
	MOVE.L #ROUT1,SCROL+2
	RTS

AFFB	MOVE.L #$70000+160*202,A0
	REPT 16
	MOVEM.L	(A1),D0-D6/A2
	MOVEM.L	D0-D6/A2,(A0)
	MOVEM.L	32(A1),D0-D6/A2
	MOVEM.L	D0-D6/A2,32(A0)
	MOVEM.L	64(A1),D0-D6/A2
	MOVEM.L	D0-D6/A2,64(A0)
	MOVEM.L	96(A1),D0-D6/A2
	MOVEM.L	D0-D6/A2,96(A0)
	MOVEM.L	128(A1),D0-D6/A2
	MOVEM.L	D0-D6/A2,128(A0)
	LEA	160(A0),A0
	LEA 	168(A1),A1
	ENDR
	RTS
DECAL
	LEA 8(A1),A0
	REPT 16
	MOVEM.L (A0),D0-D6/A2
	MOVEM.L D0-D6/A2,(A1)
	MOVEM.L 32(A0),D0-D6/A2
	MOVEM.L D0-D6/A2,32(A1)
	MOVEM.L 64(A0),D0-D6/A2
	MOVEM.L D0-D6/A2,64(A1)
	MOVEM.L 96(A0),D0-D6/A2
	MOVEM.L D0-D6/A2,96(A1)
	MOVEM.L 128(A0),D0-D6/A2
	MOVEM.L D0-D6/A2,128(A1)
	LEA     168(A0),A0
	LEA     168(A1),A1
	ENDR
	RTS
ADLET
PEKM	MOVE.L #MESS,A0
	MOVEQ	#0,D1
	MOVE.B (A0),D1
	SUB.B #' ',D1
	ADD.W D1,D1
	ADD.W D1,D1
	MOVE.L #TABLET,A0
	MOVE.L (A0,D1.W),A1
	MOVE.L #BUF2+160,A2
	MOVE.L #BUF1+160,A3
	MOVE.L #BUF3+160,A4
	MOVE.L #BUF4+160,A5
	MOVEQ	#0,D1

	REPT 16
	MOVEQ	#0,D0
	MOVE.W	(A1),D0
	MOVE.W	D0,(A3)
	LSL.L	#4,D0
	MOVE.W	D0,(A2)
	SWAP	D0
	OR.W	D0,-8(A2)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,(A4)
	SWAP	D0
	OR.W	D0,-8(A4)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,(A5)
	SWAP	D0
	OR.W	D0,-8(A5)
	SWAP	D0

	MOVEQ	#0,D0
	MOVE.W	2(A1),D0
	MOVE.W	D0,2(A3)
	LSL.L	#4,D0
	MOVE.W	D0,2(A2)
	SWAP	D0
	OR.W	D0,-6(A2)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,2(A4)
	SWAP	D0
	OR.W	D0,-6(A4)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,2(A5)
	SWAP	D0
	OR.W	D0,-6(A5)
	SWAP	D0

	MOVEQ	#0,D0
	MOVE.W	4(A1),D0
	MOVE.W	D0,4(A3)
	LSL.L	#4,D0
	MOVE.W	D0,4(A2)
	SWAP	D0
	OR.W	D0,-4(A2)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,4(A4)
	SWAP	D0
	OR.W	D0,-4(A4)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,4(A5)
	SWAP	D0
	OR.W	D0,-4(A5)
	SWAP	D0
	MOVEQ	#0,D0
	MOVE.W	6(A1),D0
	MOVE.W	D0,6(A3)
	LSL.L	#4,D0
	MOVE.W	D0,6(A2)
	SWAP	D0
	OR.W	D0,-2(A2)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,6(A4)
	SWAP	D0
	OR.W	D0,-2(A4)
	SWAP	D0

	LSL.L	#4,D0
	MOVE.W	D0,6(A5)
	SWAP	D0
	OR.W	D0,-2(A5)
	SWAP	D0

	LEA	160(A1),A1
	LEA	168(A2),A2
	LEA	168(A3),A3
	LEA	168(A4),A4
	LEA	168(A5),A5
	ENDR
	ADDQ.L #1,PEKM+2
	CMP.L #FINM,PEKM+2
	BNE FSC
	MOVE.L #MESS,PEKM+2
FSC	RTS

AFFICHE_FUCKER
	LEA	ECRAN+144+160*181,A0
PEK_FUCK
	MOVE.L	#TAB_FUCK,A1
	MOVE.L	(A1)+,A2
	MOVE.L	(A1)+,A3
	MOVEQ	#8,D4
AFF_1_FUCK
	MOVE.W	(A3)+,D0
	MOVEM.L	(A2)+,D1-D2
	AND.W	D0,(A0)
	AND.W	D0,2(A0)
	AND.W	D0,4(A0)
	AND.W	D0,6(A0)
	OR.L	D1,(A0)
	OR.L	D2,4(A0)
	LEA	160(A0),A0
	DBRA	D4,AFF_1_FUCK
	ADD.L	#8,PEK_FUCK+2
	CMP.L	#FIN_FUCK,PEK_FUCK+2
	BNE.S	PAS_FIN_FUCK
	MOVE.L	#TAB_FUCK,PEK_FUCK+2
PAS_FIN_FUCK
	RTS
EFFACE_FUCKER
	LEA	ECRAN+144+160*181,A0
	LEA	FOND+34+144+160*181,A1
	MOVEQ	#8,D4
EFF_1_FUCKER
	MOVEM.L	(A0),D0-D1
	MOVEM.L	D0-D1,(A1)
	LEA	160(A0),A0
	LEA	160(A1),A1
	DBRA	D4,EFF_1_FUCKER
	RTS
PLAYER
	INCBIN	TRACKER7.BIN
	EVEN
SAVE
	DS.L	10
stdvar
	dc.l	0

END_M_DROIT
	DC.W	1
OLD_PAL
	DS.W	16
NILL
	DCB.W	16,0
FOND
	INCBIN	LEM.PI1
TABLE1
	INCBIN	MARCHE.DAT
F_TABLE
TABLE2
M	SET	11120-640
K	SET	0
	REPT	14
	DC.W	M
	DC.W	K
M	SET	M+160
K	SET	K+8*16
	ENDR
K	SET	0

	REPT	14
	DC.W	M
	DC.W	K
M	SET	M+160
K	SET	K+8*16
	ENDR
	DC.W	M
	DC.W	0
F_TABLE2
TABLE_3_BIS
M	SET	11120+160
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
TABLE_3
M	SET	14960+160*5
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
F_TABLE3
TABLE4
	INCBIN	MARCHE2.DAT
F_TABLE4
TABLE_5
M	SET	136*160+72
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	2
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
F_TABLE5
TABLE_7
M	SET	47*160+48
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
K	SET	0
	REPT	4
	DC.W	M,K
M	SET	M+160
K	SET	K+8*10
	ENDR
F_TABLE7
TABLE_6
	INCBIN	MARCHE3.DAT
F_TABLE6
MARCHE_DROITE
	INCBIN	LEM_DROI.IMG
MARCHE_GAUCHE
	INCBIN	LEM_GAUC.IMG
TOMBEUR
	INCBIN	TOMBE.IMG
CREUSEUR
	INCBIN	CREUSE.IMG
	INCBIN	CREUSE2.IMG
FUCKER
	INCBIN	FUCKER.IMG
FIN_SPRITES

MARCHEUR_DROIT
M	SET	0
	REPT	20
	DC.W	M,0
	DC.W	M,160
	DC.W	M,320
	DC.W	M,480
	DC.W	M,640
	DC.W	M,800
	DC.W	M,960
	DC.W	M,1120
	DC.W	M,1280
	DC.W	M,1440
	DC.W	M,1600
	DC.W	M,1760
	DC.W	M,1920
	DC.W	M,2080
	DC.W	M,2240
	DC.W	M,2400
M	SET	M+8
	ENDR

MARCHEUR_GAUCHE
M	SET	0
	REPT	20
	DC.W	M,2400
	DC.W	M,2240
	DC.W	M,2080
	DC.W	M,1920
	DC.W	M,1760,M,1600,M,1440,M,1280,M,1120
	DC.W	M,960,M,800,M,640,M,480,M,320,M,160,M,0
M	SET	M+8
	ENDR
TAB_FUCK
M	SET	0
	REPT	6
	DC.L	FUCKER+M,MSK_FUCK+K
M	SET	M+72
K	SET	K+18
	ENDR
FIN_FUCK
FNT
	INCBIN	FNTM.BIN
TABLET
M	SET	0
	REPT	20
	DC.L	FNT+M
M	SET	M+8
	ENDR
M	SET	160*16
	REPT	20
	DC.L	FNT+M
M	SET	M+8
	ENDR
M	SET	160*32
	REPT	20
	DC.L	FNT+M
M	SET	M+8
	ENDR
BUFD	DC.L 0
BUF1	DS.B 168*16
BUF2	DS.B 168*16
BUF3	DS.B 168*16
BUF4	DS.B 168*16
F_BUF_SCRO
MESS
	DC.B 	"    HEY PSYGNOSYS, LEMMINGS CAN DO IT TOO..."
	DC.B	" AND THEY LIKE THIS. THEY'RE RATHER LIKE US."
	DC.B	" THEY CAN SWIM, JUMP, CLIMB, FUCK,ETC. "
	DC.B	" THE CODE WAS DONE BY MAGNUM, THE MUSAX BY"
	DC.B	" SOUND AESTESIS, ORIGINAL IDEA BY DUB'S (ON PC)."
	DC.B	" OK THIS WAS JUST A LITTLE JOKE FOR ALL OF YOU"
	DC.B	" LEMMINGS FAN. HOPE I DIDN'T SHOCK YOU !.  "
	DC.B	"AND IF DID, THEN PRESS SPACE.  HASTA LA VISTA "
	DC.B	" LEMMINGS.....                         "
FINM	DC.B 0
	EVEN
DEBMOD
	IFEQ	TEST
	INCBIN	VIOL.MOD
	ELSE
	INCBIN	LOADMOD.MOD
	ENDC
	EVEN
FINMOD
	EVEN
BUFFER
	DS.W	1
MASK:
MSK_RIGHT	  EQU	MASK
MSK_LEFT	  EQU	MASK+640
MSK_TOMBE	  EQU	MSK_LEFT+640
MSK_CREUSE  EQU	MSK_TOMBE+80
MSK_FUCK	  EQU	MSK_CREUSE+448