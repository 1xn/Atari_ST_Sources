*** NIGHTMARE DEMO FOR DELERIOUS DEMO 4
*** BY THE DREAMER FROM MCS(YEAHHH!!) & PRESENT BY HOOLIGAN
*** SI PANNE DE MEMOIRE=> ALORS FAIRE FONCTIONNER SUR UN 1040 STn
*** LE PROG PRINCIPAL COMMANCE A 'INIT:' ET LA FIN A 'ADR_ECR:'(LE RESTE EST EFFACER APRES LA PRESENTATION)
*** LES SAUVERGARDES DES INTERRUPTS SON CLAIREMENT EXPLIQUER
*** ET LES TRAP TRES FACILE A TROUVER....
*** JE RESTITUE LES INTERRUPTS AU LABEL 'FIN:' QUI EST D'AILLEUR LA 
*		FIN DE MOM PROGRAMME.....

*** TOUJOURS EN CAS DE BIG PROBLEMME APPEL MOI AU 40-25-21-55(PASCAL)OK. 
*** MERCI.

*PS:   SI TU VOIE QUE LA DEMO A UN DEFAUT DANS LA PARTIE INFERIEUR  
*      DE L'ECRAN, C'EST NORMAL CAR J'UTILISE DU SCROOLING HARDWARE
*      4BITS QUI FONTIONNE QUE QUAND LE SHIFTER EST SYNCRO AVEC LE 68000
*      AU DEMARRAGE DU ST...
*      IL Y A AUCUN MOYEN(JE PENSE), POUR LE RESOUDRE. ALORS NE T'INQUIET PAS...

INIT:	PEA	$0		;SUPERVISEUR
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP
	MOVE.W	#$2700,SR
	
	MOVEM.L	ZERO,D0-D7/A0-A6
	MOVEM.L	D0-D7,$FFFFF8240.W
		
	MOVE.B	#$02,$FFFFF820A.W	;50hz	
	MOVE.B	#$12,$FFFFFC02.W	;COUPE LA SOURIS
	
	LEA	SAVE,A0		;
	MOVE.L	$68.W,(A0)+		;
	MOVE.L	$70.W,(A0)+		;SAUVE INTER.
	MOVE.L	$120.W,(A0)+		;LE TIMER-B
	MOVE.L	$118.W,(A0)+		;LE CLAVIER
	MOVE.L	$134.W,(A0)+		;LE TIMER_A
	MOVE.B	$FFFFFA07.W,(A0)+	;SAUVE INFORMATION
	MOVE.B	$FFFFFA09.W,(A0)+	;TIMER-A
	MOVE.B	$FFFFFA13.W,(A0)+	;AUTORISATION TIMER etc...
	MOVE.B	$FFFFFA17.W,(A0)+	;
	BCLR.B	#$03,$FFFFFA17.W	;FIN IT AUTOMATIQUE!
	MOVE.B	#$00,$FFFFFA09.W
	MOVE.B	#$01,$FFFFFA07.W
	MOVE.B	#$01,$FFFFFA13.W
	MOVE.B	#$00,$FFFFFA1B.W
	BSR	CLR_YM
	
	JMP	PRE	;EXEC HOOLIGAN PART
SUITEE:	MOVEM.L	ZERO,D0-D7/A0-A6
	MOVEM.L	D0-D7,$FFFFF8240.W

	BSR	CALC_PHYS	;CALCULE DES ADRESSE DES 4 ECRANS
	MOVEM.L	ZERO,D0-D7/A0-A6

	MOVE.L	#ACTIF,$68.W		;INIT INTER
	MOVE.L	#VBL,$70.W		;
	MOVE.L	#TIMER_B,$120.W	;
	MOVE.L	#INACTIF,$118.W	;
	MOVE.L	#INACTIF,$134.W	;	
	MOVE.L	#VBL_WAIT,$70.W	;

	STOP	#$2300
	MOVE.L	#VBL,$70.W

	STOP	#$2100
	STOP	#$2100
	MOVE.W	#$2300,SR
STOP:	BRA.S	STOP	
VBL_WAIT:	RTE	

****************************************************
CALC_PHYS:	MOVE.L	#ADR_ECR,D0	
	ST	D0
	ADDQ.W	#1,D0
	ADD.L	#256*10,D0
	MOVE.L	D0,PHYS
	MOVE.L	D0,PHYS2
	LSR.L	#$8,D0
	LEA	$FFFFF8201.W,A0
	MOVEP.W	D0,(A0)

	MOVE.L	PHYS,A0
	SUB.L	#10*256,A0
	MOVE.W	#(199*256)+((10*256)/4),D0
CLS:	CLR.L	(A0)+
	;MOVE.L	#%10101010010110110,(A0)+
	DBRA	D0,CLS
	RTS	
	

****************************************************
CLR_YM:	MOVE.L 	#$8080000,$FF8820	;CUT MUS
	MOVE.L 	#$9090000,$FF8820		
	MOVE.L	#$A0A0000,$FF8820		
	MOVE.L 	#$707FFFF,$FF8820		
	RTS

AUTO_MOD_EQU:
	LEA	VOLTAB,A6
	MOVEQ	#0,D7

	MOVE.W	2(A6),(A6)
	MOVE.W	4(A6),2(A6)
	MOVE.W	6(A6),4(A6)
	MOVE.W	8(A6),6(A6)
	MOVE.W	10(A6),8(A6)
	MOVE.W	12(A6),10(A6)
	MOVE.W	14(A6),12(A6)
	MOVE.W	16(A6),14(A6)
	
	MOVE.W	52(A6),54(A6)
	MOVE.W	50(A6),52(A6)
	MOVE.W	48(A6),50(A6)
	MOVE.W	46(A6),48(A6)
	MOVE.W	44(A6),46(A6)
	MOVE.W	42(A6),44(A6)
	MOVE.W	40(A6),42(A6)
	MOVE.W	38(A6),40(A6)
	MOVE.W	36(A6),38(A6)
	MOVE.W	34(A6),36(A6)
	
	MOVE.B	#8,$FF8800	
	MOVE.B	$FF8800,D7	
	ANDI.B	#15,D7
	ADD.W	D7,D7
	MOVE.W	D7,E_11+2
	MOVE.W	D7,16(A6)

	MOVE.B	#9,$FF8800	
	MOVE.B	$FF8800,D7	
	ANDI.B	#15,D7
	ADD.W	D7,D7
	MOVE.W	D7,E_13+2
	
	MOVE.B	#10,$FF8800	
	MOVE.B	$FF8800,D7	
	ANDI.B	#15,D7
	ADD.W	D7,D7
	MOVE.W	D7,E_15+2
	MOVE.W	D7,34(A6)

	MOVE.W	(A6),E_01+2
	MOVE.W	2(A6),E_02+2
	MOVE.W	4(A6),E_03+2
	MOVE.W	6(A6),E_04+2
	MOVE.W	8(A6),E_05+2
	MOVE.W	10(A6),E_06+2
	MOVE.W	12(A6),E_07+2
	MOVE.W	14(A6),E_08+2
	MOVE.W	16(A6),E_09+2

	MOVE.W	54(A6),E_27+2
	MOVE.W	52(A6),E_26+2
	MOVE.W	50(A6),E_25+2
	MOVE.W	48(A6),E_24+2
	MOVE.W	46(A6),E_23+2
	MOVE.W	44(A6),E_22+2
	MOVE.W	42(A6),E_21+2
	MOVE.W	40(A6),E_20+2
	MOVE.W	38(A6),E_19+2
	MOVE.W	36(A6),E_18+2
	MOVE.W	34(A6),E_17+2
	RTS
	
VOLTAB:	DCB.W	28,0
	EVEN

****************************************************
******************  ROUTINE VBL ********************
****************************************************

VBL:	MOVE.W	#$2700,SR
	MOVE.L	#TIMER_B,$120.W
	CLR.B	$FFFFFA1B.W
	MOVE.B	#101-29-33,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W	
	CLR.B	$FFFFF8260.W

	MOVEM.L	D0-D7/A0-A6,-(SP)
	MOVEM.L	BUFFER_IMG+2,D0-D7
	MOVEM.L	D0-D7,$FFFFF8240.W
	JSR	INST_DECORE		;CALCULE ALL_ADR DECORE(ON AFFICHERA DANS LES NOP)
	MOVE.L	COUNT_X,D0		*
	MOVE.L	D0,COUNT_XS		*
	JSR	MAKE_COURBE		*
	JSR	ZIK+8
	JSR	AUTO_MOD_EQU
	
	LEA	TAB_HARD,A0
	MOVE.L	COUNT_X,D0
	MOVE.L	D0,D1
	MOVE.L	D1,D2
	
	DIVU.W	#4,D1
	MULU.W	#4,D1
	SUB.W	D1,D2	;D2=>L'ECRAN PHYSIQUE(0->3)
	
	MOVE.L	PHYS,A1
	MULU.W	#199*256,D2	;(100*160  162*230  =>/256*199
	ADD.L	D2,A1	;NOOUVELLE ADDREESSEE EECCRRANNN

	LSR.W	#2,D0	;/4
	MOVE.L	D0,COUNT_XFF
	MULU.W	#32,D0		;FIN TAB
	MOVE.L	D0,D1		;
	DIVU.W	#32*4*32,D0		;
	MULU.W	#32*4*32,D0		;
	SUB.L	D0,D1		;

	ADD.L	D1,A0
	MOVE.L	A1,D0
	ADD.L	24(A0),D0
	
	MOVE.L	COUNT_XFF,D1		;EXTEND TAB
	DIVU.W	#32*4,D1		;
	MULU.W	#256,D1		;
	ADD.L	D1,D0		;
	move.l	d0,phys2

	MOVEM.L	(SP)+,D0-D7/A0-A6
	MOVE.W	#$2300,SR
	
	CMPI.B	#$39,$FFFFFC02.W
	BEQ.S	THE_END
	RTE
	
THE_END:	MOVE.W	#$2700,SR
	JMP	FIN

GST_SCROOL:	LEA	TAB_HARD,A0
	MOVE.L	COUNT_X,D0
	MOVE.L	D0,D1
	MOVE.L	D1,D2
	
	DIVU.W	#4,D1
	MULU.W	#4,D1
	SUB.W	D1,D2	;D2=>L'ECRAN PHYSIQUE(0->3)
	
	MOVE.L	PHYS,A1
	MULU.W	#199*256,D2	;(100*160  162*230  =>/256*199
	ADD.L	D2,A1	;NOOUVELLE ADDREESSEE EECCRRANNN

	LSR.W	#2,D0	;/4
	MOVE.L	D0,COUNT_XF
	MULU.W	#32,D0		;FIN TAB
	MOVE.L	D0,D1		;
	DIVU.W	#32*4*32,D0		;
	MULU.W	#32*4*32,D0		;
	SUB.L	D0,D1		;

	ADD.L	D1,A0
	MOVE.L	(A0)+,L1+2
	MOVE.L	(A0)+,L2+2
	MOVE.L	(A0)+,L3+2
	MOVE.L	(A0)+,L4+2
	MOVE.L	(A0)+,L5+2
	MOVE.L	(A0)+,L6+2
	MOVE.L	A1,D0
	ADD.L	(A0)+,D0
	
	MOVE.L	COUNT_XF,D1		;EXTEND TAB
	DIVU.W	#32*4,D1		;
	MULU.W	#256,D1		;
	ADD.L	D1,D0		;
	
	LSR.L	#$8,D0
	LEA	$FFFFF8201.W,A1
	MOVEP.W	D0,(A1)
	
SCROOL_4BITS:
	MOVE.L	(A0),A0
	MOVE.L	(A0)+,D1
	MOVE.L	(A0)+,D2
	MOVE.W	(A0),D3
	
	LEA	YEAHH1,A1
	LEA	YEAHH2,A2
	LEA	YEAHH3,A3
	LEA	YEAHH4,A4
	LEA	YEAHH5,A5
	LEA	YEAHH6,A6
	
	MOVE.L	D1,(A1)+	
	MOVE.L	D2,(A1)+	
	MOVE.W	D3,(A1)	
	MOVE.L	D1,(A2)+	
	MOVE.L	D2,(A2)+	
	MOVE.W	D3,(A2)	
	MOVE.L	D1,(A3)+	
	MOVE.L	D2,(A3)+	
	MOVE.W	D3,(A3)	
	MOVE.L	D1,(A4)+	
	MOVE.L	D2,(A4)+	
	MOVE.W	D3,(A4)	
	MOVE.L	D1,(A5)+	
	MOVE.L	D2,(A5)+	
	MOVE.W	D3,(A5)	
	MOVE.L	D1,(A6)+	
	MOVE.L	D2,(A6)+	
	MOVE.W	D3,(A6)	

	LEA	YEAHH7,A1
	LEA	YEAHH8,A2
	MOVE.L	D1,(A1)+	
	MOVE.L	D2,(A1)+	
	MOVE.W	D3,(A1)	
	MOVE.L	D1,(A2)+	
	MOVE.L	D2,(A2)+	
	MOVE.W	D3,(A2)	
	RTS

INST_DECORE:	MOVE.L	PHYS,A0
	MOVE.L	COUNT_X,D0
	moveq	#3,d2
	lsr.w	#4,d0	;/16*16/2
	lsl.W	d2,d0
	ADD.W	D0,A0

	MOVE.L	COUNT_X,D1
	bclr	d2,d1	;/16
	lsr.W	d2,d1	;*16/8
	MOVE.W	D1,D2
	ADD.W	D2,D2

direction:	MOVE.L	COUNT_X,D5
	MOVE.L	COUNT_XS,D6
	CMP.L	D6,D5
	BLS.S	GAUCHE
	ADD.L	#52*230-10+128+16,A0 	;droite
	ADD.W	#2*25,D1
	ADD.W	#(2*25)*2,D2
	BRA.S	DROITE
GAUCHE:	ADD.L	#52*230-10-56,A0 	;gauche

DROITE:	MOVE.L	A0,A1
	LEA	ENTET,A2	
	LEA	ADRENTET,A3	
	LEA	GRX,A4
	MOVEQ	#0,D0

	ADD.W	D1,A2
	ADD.W	D2,A3
	MOVE.W	(A2),D0	;DBRA
	ADD.L	(A3),A4	;=>a4 adr source
	MOVEQ	#0,D1
	MOVE.W	#162,D1
	SUB.W	D0,D1
CLS_DEC1:	CLR.L	(A0)+
	CLR.L	(A0)
	LEA	230-4(A0),A0
	DBRA	D1,CLS_DEC1
AFF_DEC1:	MOVE.L	(A4)+,(A0)+	
	MOVE.L	(A4)+,(A0)	
	LEA	230-4(A0),A0
	DBRA	D0,AFF_DEC1
	
	ADD.L	#199*256,A1
	MOVE.L	A1,A0
	LEA	GRX,A4
	MOVE.W	160(A2),D0 	;DBRA
	ADD.L	320(A3),A4	;ADRSOURCE
	MOVEQ	#0,D1
	MOVE.W	#162,D1
	SUB.W	D0,D1
CLS_DEC2:	CLR.L	(A0)+
	CLR.L	(A0)
	LEA	230-4(A0),A0
	DBRA	D1,CLS_DEC2
AFF_DEC2:	MOVE.L	(A4)+,(A0)+	
	MOVE.L	(A4)+,(A0)	
	LEA	230-4(A0),A0
	DBRA	D0,AFF_DEC2

	ADD.L	#199*256,A1
	MOVE.L	A1,A0
	LEA	GRX,A4
	MOVE.W	160*2(A2),D0	;DBRA
	ADD.L	320*2(A3),A4	;ADRSOURCE
	MOVEQ	#0,D1
	MOVE.W	#162,D1
	SUB.W	D0,D1
CLS_DEC3:	CLR.L	(A0)+
	CLR.L	(A0)
	LEA	230-4(A0),A0
	DBRA	D1,CLS_DEC3
AFF_DEC3:	MOVE.L	(A4)+,(A0)+	
	MOVE.L	(A4)+,(A0)	
	LEA	230-4(A0),A0
	DBRA	D0,AFF_DEC3

	ADD.L	#199*256,A1
	MOVE.L	A1,A0
	LEA	GRX,A4
	MOVE.W	160*3(A2),D0	;DBRA
	ADD.L	320*3(A3),A4	;ADRSOURCE
	MOVEQ	#0,D1
	MOVE.W	#162,D1
	SUB.W	D0,D1
CLS_DEC4:	CLR.L	(A0)+
	CLR.L	(A0)
	LEA	230-4(A0),A0
	DBRA	D1,CLS_DEC4
AFF_DEC4:	MOVE.L	(A4)+,(A0)+	
	MOVE.L	(A4)+,(A0)	
	LEA	230-4(A0),A0
	DBRA	D0,AFF_DEC4
	RTS

*COUT_X DE 0 A 895	
MAKE_COURBE:	CMPI.B	#$4D,$FFFFFC02.W	;VERS GAUCHE
	BNE.S	SUITE		;AU PIXEL PRES(YEAHHH!)
	CMP.L	#16,SPEED
	BEQ.S	SUITE
	ADDQ.L	#1,SPEED
SUITE:	CMPI.B	#$4B,$FFFFFC02.W	;VERS DROITE
	BNE.S	SUITE2
	CMP.L	#-16,SPEED
	BEQ.S	SUITE2
	SUBQ.L	#1,SPEED
	
SUITE2:	MOVE.L	SPEED,D0
	MOVE.L	COUNT_X,D1
	ADD.L	D0,D1
	
	TST.L	D1
	BGT.S	NO_INV	
	NEG.L	SPEED
	BRA.S	NO_INV2
	
NO_INV:	CMP.L	#895,D1
	BLT.S	NO_INV2
	NEG.L	SPEED

NO_INV2:	MOVE.L	SPEED,D0
	ADD.L	D0,COUNT_X
	RTS
	
************** BORDER HAUT+FULL_SCREEN *************
TIMER_B:	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA1B.W
	MOVEM.L	D0-D7/A0-A6,-(SP)
	DCB.W	8,$4E71
	
	MOVEQ	#0,D0
	SUB.B	$FFFFF8209.W,D0
	LSL.L	D0,D0

	MOVEM.L	BUFFER_IMG+2,D0-D7
	MOVEM.L	D0-D7,$FFFFF8240.W
	
	LEA	$FFFFF8240.W,A0
	LEA	EQU_TAB,A1
	DCB.W	13,$4E71

	MOVEQ	#32-1,D0
CONT:	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP

E_01:	MOVE.W	00(A1),(A0)	
E_02:	MOVE.W	00(A1),(A0)
E_03:	MOVE.W	00(A1),(A0)
E_04:	MOVE.W	00(A1),(A0)
E_05:	MOVE.W	00(A1),(A0)
E_06:	MOVE.W	00(A1),(A0)
E_07:	MOVE.W	00(A1),(A0)
E_08:	MOVE.W	00(A1),(A0)
E_09:	MOVE.W	00(A1),(A0)
E_10:	MOVE.W	00(A1),(A0)
E_11:	MOVE.W	00(A1),(A0)
E_12:	MOVE.W	00(A1),(A0)
E_13:	MOVE.W	00(A1),(A0)
E_14:	MOVE.W	00(A1),(A0)
E_15:	MOVE.W	00(A1),(A0)
E_16:	MOVE.W	00(A1),(A0)
E_17:	MOVE.W	00(A1),(A0)
E_18:	MOVE.W	00(A1),(A0)
E_19:	MOVE.W	00(A1),(A0)
E_20:	MOVE.W	00(A1),(A0)
E_21:	MOVE.W	00(A1),(A0)
E_22:	MOVE.W	00(A1),(A0)
E_23:	MOVE.W	00(A1),(A0)
E_24:	MOVE.W	00(A1),(A0)
E_25:	MOVE.W	00(A1),(A0)
E_26:	MOVE.W	00(A1),(A0)
E_27:	MOVE.W	00(A1),(A0)
E_28:	MOVE.W	00(A1),(A0)	
	CLR.W	(A0)
	LEA	32(A1),A1
	DBRA	D0,CONT	
	MOVEM.L	ZERO,D0-D7
	MOVEM.L	D0-D7,$FFFFF8240.W
	MOVE.L	#15,D7		;52
WAITF:	DBRA	D7,WAITF

	LEA	$FFFFF820A.W,A0
	MOVE.B	D0,(A0)		;BORDER DROITE
	NOP
	MOVE.W	A0,(A0)

	LEA	$FFFFF8260.W,A1
	LEA	$FFFFF8240.W,A3	
	LEA	PAL,A2	
	DCB.W	5,$4E71		
	
	MOVE.W	A0,(A1)
	NOP
	MOVE.B	D0,(A1)
	LSR.W	#8,D0		;6

L1:	JSR	L_230	;HARD-SCROOL
L2:	JSR	L_230
L3:	JSR	L_230
L4:	JSR	L_230
L5:	JSR	L_230
L6:	JSR	L_230
	MOVEQ	#25,D0
WAITF2:	DBRA	D0,WAITF2
	
	LEA	BUFFER_IMG+34,A4	;3	
	MOVE.L	PHYS2,A5		;5
	
	LEA	RASTERS,A6
	MOVEM.L	(A2),D0-D7
	MOVEM.L	D0-D7,(A3)
	MOVE.L	#$100,D0	

	MOVEQ	#103-1,D7	
FULL_BOUCLE:	NOP
	MOVE.W	A0,(A1)	;GAUCHE
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)
	
YEAHH1:	NOP
	NOP
	NOP
	NOP
	NOP

	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	;DROITE
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	MOVE.L	(A4)+,(A5)+
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	;GAUCHE
	NOP
	MOVE.B	D0,(A1)	
	DCB.W	3,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4
	DBRA	D7,FULL_BOUCLE

OVER_BAS1:	MOVE.W	A0,(A1)	
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)

YEAHH2:	NOP
	NOP
	NOP
	NOP
	NOP

	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	DCB.W	3,$4E71
	MOVE.B	D0,(A0)	;60Hz
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	
	NOP
	MOVE.B	D0,(A1)	
	MOVE.L	(A4)+,(A5)+
	DCB.W	11-4-5,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4

	MOVE.W	A0,(A1)	
	MOVE.W	A0,(A0)	;50Hz
	MOVE.B	D0,(A1)

YEAHH3:	NOP
	NOP
	NOP
	NOP
	NOP

	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	MOVE.L	(A4)+,(A5)+
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	
	NOP
	MOVE.B	D0,(A1)	
	DCB.W	4,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4

	MOVE.W	#13,D7
FULL_2:	NOP
	MOVE.W	A0,(A1)	;GAUCHE
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)
	
YEAHH4:	NOP
	NOP
	NOP
	NOP
	NOP
	
	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	;DROITE
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	MOVE.L	(A4)+,(A5)+
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	;GAUCHE
	NOP
	MOVE.B	D0,(A1)	
	DCB.W	3,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4
	DBRA	D7,FULL_2

OVER_BAS2:	MOVE.W	A0,(A1)	
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)

YEAHH5:	NOP
	NOP
	NOP
	NOP
	NOP

	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	DCB.W	8-5,$4E71
	MOVE.B	D0,(A0)	;60Hz
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	
	NOP
	MOVE.B	D0,(A1)	
	MOVE.L	(A4)+,(A5)+
	DCB.W	11-4-5,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4

	MOVE.W	A0,(A1)	
	MOVE.W	A0,(A0)	;50Hz
	MOVE.B	D0,(A1)

YEAHH6:	NOP
	NOP
	NOP
	NOP
	NOP

	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	MOVE.L	(A4)+,(A5)+
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	
	NOP
	MOVE.B	D0,(A1)	
	DCB.W	4,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4

	MOVE.W	#41,D7
FULL_3:	NOP
	MOVE.W	A0,(A1)	;GAUCHE
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)
	
YEAHH7:	NOP
	NOP
	NOP
	NOP
	NOP
	
	REPT	16
	MOVE.L	(A4)+,(A5)+
	ENDR	
	DCB.W	2,$4E71
	MOVE.B	D0,(A0)	;DROITE
	NOP	
	MOVE.W	A0,(A0)
	MOVE.L	(A4)+,(A5)+
	MOVE.L	(A4)+,(A5)+
	DCB.W	2,$4E71
	MOVE.W	A0,(A1)	;GAUCHE
	NOP
	MOVE.B	D0,(A1)	
	DCB.W	3,$4E71
	MOVE.W	(A6)+,$FFFFF8240.W	;4
	DBRA	D7,FULL_3

PAL_ZERO:	MOVE.W	A0,(A1)	
	DCB.W	2,$4E71
	MOVE.B	D0,(A1)

YEAHH8:	NOP
	NOP
	NOP
	NOP
	NOP

	MOVEM.L	ZERO,D0-D7	;21
	DCB.W	89-7-21,$4E71
	MOVE.B	D0,(A0)	
	NOP	
	MOVE.W	A0,(A0)
	DCB.W	12,$4E71
	MOVE.W	A0,(A1)	
	NOP
	MOVE.B	D0,(A1)	
	MOVEM.L	D0-D7,$FFFFF8240.W
	MOVE.W	#$2300,SR	
	JSR	GST_SCROOL
	MOVEM.L	(SP)+,D0-D7/A0-A6
INACTIF:	RTE	

ACTIF:	BCLR.B	#0,$FFFFFA0F.W	
	CLR.B	$FFFFFA1B.W
	RTE
	
****************************************************
***** FIN=>ON RETABLIE TOUTES LES INETRUPTIONS *****
****************************************************
FIN:	MOVE.L 	#$8080000,$FF8820
	MOVE.L 	#$9090000,$FF8820		
	MOVE.L	#$A0A0000,$FF8820		
	MOVE.L 	#$707FFFF,$FF8820		
	LEA	SAVE,A0		
	MOVE.L	(A0)+,$68.W
	MOVE.L	(A0)+,$70.W		 
	MOVE.L	(A0)+,$120.W		
	MOVE.L	(A0)+,$118.W		
	MOVE.L	(A0)+,$134.W		
	MOVE.B	(A0)+,$FFFFFA07.W	
	MOVE.B	(A0)+,$FFFFFA09.W	
	MOVE.B	(A0)+,$FFFFFA13.W	
	MOVE.B	(A0)+,$FFFFFA17.W	
	MOVE.B	#$8,$FFFFFC02.W	
	MOVEM.L	ZERO,D0-D7/A0-A6
	MOVE.W	#$2300,SR		

	MOVE.W	#$777,$FFF8240	
	MOVE.W	#$000,$FFF8246	
	CLR	-(SP)	
	TRAP	#1

****************************************************
********************** DATA ************************
****************************************************
	EVEN
SAVE:	DCB.L	6,0
ZERO:	DCB.L	16,0
	EVEN
PHYS:	DC.L	0
PHYS2:	DC.L	0
COUNT_X:	DC.L	0
COUNT_XF:	DC.L	0
COUNT_XFF:	DC.L	0
COUNT_XS:	DC.L	0
TAB_HARD:	INCLUDE	"TABHARD4.S2"
ZIK:	INCBIN	"FXMUS.MUS"
	EVEN

SPEED:	DC.L	4
COUNT:	DC.L	0	;BLOCK A AFFICHER
ENTET:	DC.W	$58
	INCBIN	"ENTET.DAT"	;640 octs
ADRENTET:	DC.L	0	
	DC.L	0	
	INCBIN	"ADRENTET.DAT"	;1280 octs
GRX:	;INCBIN	"ALLGRAPH.IMG" ;TOUS LES GRAPH (512Ko!!! decompacter en temps reel!.)
	EVEN
	
EQU_TAB:	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007
	DC.W	$000,$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017
	DC.W	$000,$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027
	DC.W	$000,$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037
	DC.W	$000,$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047
	DC.W	$000,$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057
	DC.W	$000,$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067
	DC.W	$000,$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077
	DC.W	$000,$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067,$076
	DC.W	$000,$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077,$075
	DC.W	$000,$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067,$076,$074
	DC.W	$000,$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077,$075,$073
	DC.W	$000,$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067,$076,$074,$072
	DC.W	$000,$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077,$075,$073,$071
	DC.W	$000,$700,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067,$076,$074,$072,$070
	DC.W	$000,$701,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077,$075,$073,$071,$070
	DC.W	$070,$702,$704,$706,$607,$407,$207,$007,$027,$047,$067,$076,$074,$072,$070,$070
	DC.W	$070,$703,$705,$707,$507,$307,$107,$017,$037,$057,$077,$075,$073,$071,$070,$070
	EVEN
BUF_EQU:	DC.W	0

PAL:	DC.W	$000,$333,$444,$555,$347,$457,$567,$777
	DC.W	$410,$521,$632,$030,$040,$050,$677,$222
	EVEN

BUFFER_IMG:	INCBIN	"LOGO.BIN"

RASTERS:	DCB.W	13+5*5,$000
	DC.W	$001,$001,$002,$002,$001
	DC.W	$002,$002,$003,$003,$002
	DC.W	$003,$003,$004,$004,$003
	DC.W	$004,$004,$005,$005,$004
	DC.W	$005,$005,$006,$006,$005
	DC.W	$006,$006,$007,$007,$006
	DC.W	$007,$007,$007,$007,$007
	DC.W	$007,$007,$017,$017,$007
	DC.W	$017,$017,$037,$037,$017
	DC.W	$037,$037,$057,$057,$037
	DC.W	$057,$057,$067,$067,$057
	DC.W	$067,$067,$077,$077,$067
	DC.W	$077,$077,$075,$075,$077
	DC.W	$075,$075,$074,$074,$075
	DC.W	$470,$470,$670,$670,$470
	DC.W	$670,$670,$770,$770,$670
	DC.W	$770,$770,$770,$770,$770
	DC.W	$770,$770,$760,$760,$770
	DC.W	$760,$760,$750,$750,$760
	DC.W	$750,$750,$740,$740,$750
	DC.W	$740,$740,$730,$730,$740
	DC.W	$730,$730,$720,$720,$730
	DC.W	$720,$720,$710,$710,$720
	DC.W	$710,$710,$700,$700,$710
	DC.W	$700,$700,$700,$700,$700

	DCB.B	256*10
ADR_ECR:	DC.W	0

PRE:	MOVE.L	#END,D0
	AND.W	#$FF00,D0
	ADD.W	#256,D0
	MOVE.L	D0,PHYSS

	JSR	SWAP
	MOVEQ	#1,D0
	JSR	ZIK

	JSR	SAVE_INT

LET_P:	JSR	PRESENTATION
FINISHED:	MOVE.W	#$2700,SR
	JMP	SUITEE

VSYNC:	TST.B	CL
	BEQ.S	VSYNC
	MOVE.B	#0,CL
	RTS

CLS1:	MOVEM.L	A0/D0,-(SP)
	MOVE.L	PHYSS,A0
	MOVE.W	#8000-1,D0
CLS_LP:	MOVE.L	#0,(A0)+
	DBRA	D0,CLS_LP
	MOVEM.L	(SP)+,A0/D0
	RTS

CLS2:	MOVEM.L	A0/D0,-(SP)
	MOVE.L	PHYSS,A0
	LEA.L	32000(A0),A0
	MOVE.W	#8000-1,D0
CLS_LP2:	MOVE.L	#0,(A0)+
	DBRA	D0,CLS_LP2
	MOVEM.L	(SP)+,A0/D0
	RTS

NO_PAL:	MOVEM.L	A0/D0,-(SP)
	MOVE.L	#$FFFFFF8240,A0
	MOVE.W	#8-1,D0
NOP_LP:	MOVE.L	#0,(A0)+
	DBRA	D0,NOP_LP
	MOVEM.L	(SP)+,A0/D0
	RTS	

FADE_IN:	MOVEM.L	D0-D7/A0/A5,-(SP)
FADE_INL:	JSR	VSYNC
	JSR	VSYNC
	JSR	VSYNC
	MOVEM.L	(A0)+,D1-D7/A5
	MOVEM.L	D1-D7/A5,$FFFFF8240.W
	DBRA	D0,FADE_INL
	MOVEM.L	(SP)+,D0-D7/A0/A5
	RTS

PAUSE:	JSR	VSYNC
	DBRA	D0,PAUSE
	RTS

SWAP:	LSR.L	#8,D0
	MOVE.B	D0,$FFFFF8203.W
	LSR.W	#8,D0
	MOVE.B	D0,$FFFFF8201.W
	RTS
	
FLASH:	MOVEM.L	D0-D1,-(SP)
	MOVE.W	#5-1,D1
	MOVE.L	PHYSS,A0
	LEA.L	32000(A0),A1

FLSLP	JSR	VSYNC
	JSR	VSYNC
	MOVE.L	A0,D0
	JSR	SWAP
	JSR	VSYNC
	JSR	VSYNC
	MOVE.L	A1,D0
	JSR	SWAP
	DBRA	D1,FLSLP

	MOVEM.L	(SP)+,D0-D1
	RTS

VBLL:
	MOVE.B	#0,$FFFFF8260.W
	MOVE.B	#0,$FFFA1B
	MOVE.B	#1,$FFFA21	
	MOVE.B	#8,$FFFA1B	
	MOVE.L	HLABEL,$120	

	TST.L	LOAD	
	BEQ	NO_LOAD
	MOVE.L	LOAD,A6

NO_LOAD	MOVEM.L	D0-D7/A0-A6,-(SP)
	JSR	ZIK+8
	MOVEM.L	(SP)+,D0-D7/A0-A6
	
	MOVE.B	#1,CL
	
	CMPI.B	#$39-$80,$FFFFFC02.W
	BNE	BOF
	ADDQ	#2,SP
	MOVE.W	#$2700,SR
	JMP	FINISHED
BOF:	RTE


HBL:	MOVE.W	(A6)+,$FFFFFFF824E.W
	RTE
	

PRESENTATION:
	JSR	NO_PAL
	JSR	CLS1
	JSR	CLS2
	
	MOVE.L	PHYSS,A0
	LEA.L	88*160+5*8(A0),A0	;FAUT'L CENTRER!
	MOVE.L	#PIC+34+76*160,A1
	MOVE.W	#21-1,D0	
NDO:
NOD	SET	0
	REPT	3
	MOVEM.L	24*NOD(A1),D1-D6
	MOVEM.L	D1-D6,24*NOD(A0)
NOD	SET	NOD+1
	ENDR
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	DBRA	D0,NDO


	MOVE.L	PHYSS,A0
	LEA.L	32000(A0),A0	;A0 = ADR ECRAN

	LEA.L	142*160(A0),A1	;A1 = OU DESSINE
	MOVE.L	#PIC+34+142*160,A2	;A2=EQUA+SCROLL
	MOVE.W	#2280-1,D0
EQUALOOP:	MOVE.L	(A2)+,(A1)+
	DBRA	D0,EQUALOOP

	LEA.L	56(A0),A1
	MOVE.L	#PIC+34,A2	;A2=WOTSIT
	MOVE.W	#25-1,D0
WOTSITL1:	MOVE.W	#12-1,D1
	MOVEQ	#0,D2
WOTSITL2:	MOVE.L	(A2,D2.W),(A1,D2.W)
	ADDQ	#4,D2
	DBRA	D1,WOTSITL2
	LEA.L	160(A1),A1
	LEA.L	160(A2),A2
	DBRA	D0,WOTSITL1
	
	LEA.L	50*160+40(A0),A1
	MOVE.L	#PIC+26*160+34,A2	;A2 = SPRITES
	MOVE.W	#50-1,D0
SPRL1:	MOVE.W	#8-1,D1
	MOVEQ	#0,D2
SPRL2:	MOVE.L	(A2,D2.W),(A1,D2.W)
	ADDQ	#4,D2
	DBRA	D1,SPRL2
	LEA.L	160(A1),A1
	LEA.L	160(A2),A2
	DBRA	D0,SPRL1
	
	MOVE.W	#50,D0
	JSR	PAUSE

	MOVE.L	#FADE_IN1,A0
	MOVE.W	#14-1,D0
	JSR	FADE_IN
	MOVEM.L	PIC+2,D0-D7
	MOVEM.L	D0-D7,$FFFFFF8240.W

	JSR	VSYNC
	MOVE.L	#HBL,HLABEL
	MOVE.L	#RAST_PAST,LOAD
	JSR	FLASH

	JSR	CLS1
	MOVE.W	#50-1,D0
	JSR	PAUSE
	JSR	FLASH
	JSR	CLS2
	MOVE.L	PHYSS,D0
	JSR	SWAP

	MOVE.L	#BOF,HLABEL
	MOVE.L	#0,LOAD

	MOVE.W	#50-1,D0
	JSR	PAUSE
	JSR	NO_PAL

	MOVE.L	PHYSS,A0
	ADD.L	#88*160+5*8,A0
	MOVE.L	#PIC+34+97*160,A1
	MOVE.W	#21-1,D0	
NDO2:
NOD	SET	0
	REPT	3
	MOVEM.L	24*NOD(A1),D1-D6
	MOVEM.L	D1-D6,24*NOD(A0)
NOD	SET	NOD+1
	ENDR
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	DBRA	D0,NDO2

	MOVE.L	#FADE_IN2,A0
	MOVE.W	#14,D0
	JSR	FADE_IN
	MOVEM.L	PIC+2,D0-D7
	MOVEM.L	D0-D7,$FFFFF8240.W

	MOVE.L	PHYSS,A0
	ADD.L	#32000+29*160+32,A0
	MOVE.L	#PIC+34+72,A1

	MOVE.W	#142-1,D0
MCSL1:	MOVE.W	#22-1,D1
	MOVEQ	#0,D2
MCSL2:	MOVE.L	(A1,D2.W),(A0,D2.W)
	ADDQ	#4,D2
	DBRA	D1,MCSL2
	LEA.L	160(A0),A0
	LEA.L	160(A1),A1
	DBRA	D0,MCSL1

	JSR	VSYNC
	MOVE.L	PHYSS,D2
	MOVE.W	#12-1,D1
SCR_LP:	JSR	VSYNC
	MOVE.L	D2,D0
	JSR	SWAP
	ADD.L	#1280,D2
	DBRA	D1,SCR_LP

	MOVEQ	#13-1,D1
SCR_LP2:	MOVE.L	D2,D0
	JSR	SWAP
	ADD.L	#1280,D2

	JSR	VSYNC

	MOVE.L	D2,A0
	ADD.L	#5*8-8*160,A0
	MOVE.L	#PIC+34+97*160,A1

	MOVE.W	#21-1,D3
MCSL3:	MOVE.W	#18-1,D4
	MOVEQ	#0,D5
MCSL4:	MOVE.L	(A1,D5.W),(A0,D5.W)
	ADDQ	#4,D5
	DBRA	D4,MCSL4
	LEA.L	160(A0),A0
	LEA.L	160(A1),A1
	DBRA	D3,MCSL3
	DBRA	D1,SCR_LP2

HOPXC	MOVE.W	#50,D0
	JSR	PAUSE
	
	MOVE.L	#FADEOUT1,A0
	MOVE.W	#15-1,D0
	JSR	FADE_IN
	JSR	CLS1
	JSR	CLS2
	MOVEM.L	DRUNKPAL,D0-D7
	MOVEM.L	D0-D7,$FFFFF8240.W
	MOVE.L	PHYSS,D0
	JSR	SWAP

	MOVE.W	#10,D0
	JSR	PAUSE
	MOVE.L	#TDRUNK1,A2
	MOVE.L	#TDRUNK3,A3
	MOVEQ	#0,D7
	MOVE.W	#280*2-2,D6
	MOVE.L	PHYSS,A4
	LEA.L	32000(A4),A5
	
	MOVE.L	#HAHA1,SPACEBAR

LOOP:	JSR	VSYNC
	;MOVE.W	#$700,$FFFFF8240.W

	MOVE.L	A4,D0
	MOVE.L	A5,A4
	MOVE.L	D0,A5
	JSR	SWAP

	MOVE.L	A5,A0
	LEA.L	3*8(A0),A0
	ADD.W	(A2,D7.W),A0
	JSR	PRINT_DRUNK1

	MOVE.L	A5,A0
	LEA.L	3*8+2(A0),A0
	ADD.W	(A2,D6.W),A0
	JSR	PRINT_DRUNK1

	MOVE.L	A5,A0
	LEA.L	3*8+4(A0),A0
	ADD.W	(A3,D7.W),A0
	JSR	PRINT_DRUNK2

	MOVE.L	A5,A0
	LEA.L	3*8+6(A0),A0
	ADD.W	(A3,D6.W),A0
	JSR	PRINT_DRUNK2

	;MOVE.W	#$000,$FFFFF8240.W
	CMPI.B	#1,CL+1
	BEQ	HAHA12
	
	CMPI.B	#$3B,$FFFFFFC02.W
	BEQ	HAHA2
	
	CMPI.B	#$23,$FFFFFFC02.W	;H
	BEQ	HURRAY

	SUBQ	#2,D6
	ADDQ	#2,D7
	CMP.W	#280*2,D7
	BNE	LOOP
	MOVEQ	#0,D7
	MOVE.W	#280*2-2,D6
	BRA	LOOP
	
HURRAY:	RTS

PRINT_DRUNK2:
	MOVE.L	#DRUNK+34+5*160,A1	
	REPT	88+10
	MOVE.W	0*8(A1),0*8(A0)	
	MOVE.W	1*8(A1),1*8(A0)	
	MOVE.W	2*8(A1),2*8(A0)	
	MOVE.W	3*8(A1),3*8(A0)	
	MOVE.W	4*8(A1),4*8(A0)	
	MOVE.W	5*8(A1),5*8(A0)	
	MOVE.W	6*8(A1),6*8(A0)	
	MOVE.W	7*8(A1),7*8(A0)	
	MOVE.W	8*8(A1),8*8(A0)	
	MOVE.W	9*8(A1),9*8(A0)	
	MOVE.W	10*8(A1),10*8(A0)	
	MOVE.W	11*8(A1),11*8(A0)	
	MOVE.W	12*8(A1),12*8(A0)	
	MOVE.W	13*8(A1),13*8(A0)	
	MOVE.W	14*8(A1),14*8(A0)	
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	ENDR
	RTS

PRINT_DRUNK1:
	MOVE.L	#DRUNK+34,A1	
	REPT	88+20
	MOVE.W	0*8(A1),0*8(A0)	
	MOVE.W	1*8(A1),1*8(A0)	
	MOVE.W	2*8(A1),2*8(A0)	
	MOVE.W	3*8(A1),3*8(A0)	
	MOVE.W	4*8(A1),4*8(A0)	
	MOVE.W	5*8(A1),5*8(A0)	
	MOVE.W	6*8(A1),6*8(A0)	
	MOVE.W	7*8(A1),7*8(A0)	
	MOVE.W	8*8(A1),8*8(A0)	
	MOVE.W	9*8(A1),9*8(A0)	
	MOVE.W	10*8(A1),10*8(A0)	
	MOVE.W	11*8(A1),11*8(A0)	
	MOVE.W	12*8(A1),12*8(A0)	
	MOVE.W	13*8(A1),13*8(A0)	
	MOVE.W	14*8(A1),14*8(A0)	
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	ENDR
	RTS

HAHA1:	MOVE.B	#1,CL+1
	MOVE.L	(SP)+,A0
	RTE
	
HAHA12:	MOVE.B	#0,CL+1
	JSR	VSYNC
	MOVE.W	#8-1,D0
	MOVE.L	#$FFFFFF8240,A5
ALLWHITE	MOVE.L	#$7770777,(A5)+
	DBRA	D0,ALLWHITE

	JSR	CLS1
	JSR	CLS2

	MOVE.L	#FADEWHITE,A0
	MOVE.W	#8-1,D0
	JSR	FADE_IN
	MOVEM.L	DRUNK+2,D0-D7
	MOVEM.L	D0-D7,$FFFFFF8240.W
	
	MOVE.L	PHYSS,D0
	MOVE.L	D0,A0
	JSR	SWAP
	LEA.L	80*160+7*8(A0),A0
	MOVE.L	#DRUNK+34+108*160,A1
	MOVE.W	#40-1,D0
HA1LP1:	MOVE.W	#12-1,D1
	MOVEQ	#0,D2
HA1LP2:	MOVE.L	(A1,D2.W),(A0,D2.W)
	ADDQ	#4,D2
	DBRA	D1,HA1LP2
	JSR	VSYNC
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	DBRA	D0,HA1LP1

	MOVE.W	#100,D0
	JSR	PAUSE
	
	JMP	FINISHED

HAHA2:	JSR	VSYNC
	MOVE.W	#8-1,D0
	MOVE.L	#$FFFFFF8240,A5
XALLWHITE	MOVE.L	#$7770777,(A5)+
	DBRA	D0,XALLWHITE

	JSR	CLS1
	JSR	CLS2

	MOVE.L	#FADEWHITE,A0
	MOVE.W	#8-1,D0
	JSR	FADE_IN
	MOVEM.L	DRUNK+2,D0-D7
	MOVEM.L	D0-D7,$FFFFFF8240.W
	
	MOVE.L	PHYSS,D0
	MOVE.L	D0,A0
	JSR	SWAP
	LEA.L	80*160+7*8(A0),A0
	MOVE.L	#DRUNK+34+148*160,A1
	MOVE.W	#22-1,D0
XHA1LP1:	MOVE.W	#12-1,D1
	MOVEQ	#0,D2
XHA1LP2:	MOVE.L	(A1,D2.W),(A0,D2.W)
	ADDQ	#4,D2
	DBRA	D1,XHA1LP2
	JSR	VSYNC
	LEA.L	160(A1),A1
	LEA.L	160(A0),A0
	DBRA	D0,XHA1LP1

	MOVE.W	#100,D0
	JSR	PAUSE
	
	JMP	FINISHED


SAVE_INT:	MOVE.L	#VBLL,$70
	MOVE.L	HLABEL,$120
	MOVE.W	#$2300,SR
	RTS

CL:	DC.B	0	
	DC.B	0
	EVEN

PHYSS:	DS.L	1

HLABEL:	DC.L	BOF		;RASTER ROUT
LOAD:	DC.L	0		;KE RASTER!
SPACEBAR:	DC.L	FINISHED		;AKEU ESPACE

FADE_IN1:	
	DC.W	0,0,0,0,0,0,$000,0,$101,$000,$000,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$202,$101,$000,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$303,$202,$101,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$404,$303,$202,$101,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$505,$404,$303,$202,0,0,0,0
	DC.W	0,0,0,0,0,0,$101,0,$606,$505,$404,$303,0,0,0,0
	DC.W	0,0,0,0,0,0,$202,0,$707,$606,$505,$404,0,0,0,0
	DC.W	0,0,0,0,0,0,$201,0,$706,$605,$504,$403,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$705,$604,$503,$402,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$704,$603,$502,$401,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$703,$602,$501,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$702,$601,$500,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$701,$600,$500,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$700,$600,$500,$400,0,0,0,0

FADE_IN2:	
	DC.W	0,0,0,0,0,0,$000,0,$110,$000,$000,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$220,$110,$000,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$330,$220,$110,$000,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$440,$330,$220,$110,0,0,0,0
	DC.W	0,0,0,0,0,0,$000,0,$550,$440,$330,$220,0,0,0,0
	DC.W	0,0,0,0,0,0,$110,0,$660,$550,$440,$330,0,0,0,0
	DC.W	0,0,0,0,0,0,$220,0,$770,$660,$550,$440,0,0,0,0
	DC.W	0,0,0,0,0,0,$210,0,$760,$650,$540,$430,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$750,$640,$530,$420,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$740,$630,$520,$410,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$730,$620,$510,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$720,$610,$500,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$710,$600,$500,$400,0,0,0,0
	DC.W	0,0,0,0,0,0,$200,0,$700,$600,$500,$400,0,0,0,0

FADEOUT1:
	DC.W	$000,0,0,0,0,0,$200,0,$700,$600,$500,$400,0,0,0,0
	DC.W	$001,0,0,0,0,0,$101,0,$601,$501,$401,$301,0,0,0,0
	DC.W	$002,0,0,0,0,0,$002,0,$502,$402,$302,$202,0,0,0,0
	DC.W	$003,0,0,0,0,0,$003,0,$403,$303,$203,$103,0,0,0,0
	DC.W	$004,0,0,0,0,0,$004,0,$304,$204,$104,$004,0,0,0,0
	DC.W	$005,0,0,0,0,0,$005,0,$205,$105,$005,$005,0,0,0,0
	DC.W	$006,0,0,0,0,0,$006,0,$106,$006,$006,$006,0,0,0,0
	DC.W	$007,0,0,0,0,0,$007,0,$007,$007,$007,$007,0,0,0,0
	DC.W	$006,0,0,0,0,0,$006,0,$006,$006,$006,$006,0,0,0,0
	DC.W	$005,0,0,0,0,0,$005,0,$005,$005,$005,$005,0,0,0,0
	DC.W	$004,0,0,0,0,0,$004,0,$004,$004,$004,$004,0,0,0,0
	DC.W	$003,0,0,0,0,0,$003,0,$003,$003,$003,$003,0,0,0,0
	DC.W	$002,0,0,0,0,0,$002,0,$002,$002,$002,$002,0,0,0,0
	DC.W	$001,0,0,0,0,0,$001,0,$001,$001,$001,$001,0,0,0,0
	DC.W	$000,0,0,0,0,0,$000,0,$000,$000,$000,$000,0,0,0,0

FADEWHITE:
	DC.W	$777,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$666,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$555,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$444,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DC.W	$000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	
RAST_PAST:
	REPT	200/28
	DC.W	$700,$710,$720,$730,$740,$750,$760,$770
	DC.W	$661,$552,$443,$334,$225,$116,$007,$017
	DC.W	$027,$037,$047,$057,$067,$077,$166,$255
	DC.W	$344,$433,$522,$611
	ENDR
DRUNKPAL:	DC.W	0,$27,6,$27,4,$27,6,$27,3,$27,6,$27,4,$27,6,$27


	REPT	192
 DC.W	$777,$400,$075,$067,$111,$043,$333,$054,$750,$700,$444,$600,$222,$555,$666,$000
	ENDR
 DC.W	$777,$400,$075,$067,$111,$043,$333,$054,$750,$700,$444,$600,$222,$555,$666,$000
 DC.W	$777,$511,$176,$177,$222,$154,$444,$165,$761,$711,$555,$711,$333,$666,$777,$111
 DC.W	$777,$622,$277,$277,$333,$265,$555,$276,$772,$722,$666,$722,$444,$777,$777,$222
 DC.W	$777,$733,$377,$377,$444,$376,$666,$377,$773,$733,$777,$733,$555,$777,$777,$333
 DC.W	$777,$744,$477,$477,$555,$477,$777,$477,$774,$744,$777,$744,$666,$777,$777,$444
 DC.W	$777,$755,$577,$577,$666,$577,$777,$577,$775,$755,$777,$755,$777,$777,$777,$555
 DC.W	$777,$766,$677,$677,$777,$677,$777,$677,$776,$766,$777,$766,$777,$777,$777,$666
 DC.W	$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777,$777

ERE:	
	DCB.W	16*200,$777

TDRUNK1:	INCLUDE	DRUNK1.DAT
TDRUNK3:	INCLUDE	DRUNK3.DAT
PIC:	INCBIN	"FUTURE.PI1"
DRUNK:	INCBIN	"DRUNK?.PI1"
END:	END	




