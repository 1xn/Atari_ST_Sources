** NO SCROLL DEMO v 2.1

** Coding and Gfx by Red Devil of Pdk!

** Muzak by Count Zero (ripped from the
** Decade Demo)

** Tsc scroll font by KnightHawks (Amiga)

*** Ready to assemble to memory on a 1040

*** Change the lines marked with ; as I do
*** not know how will you load this in
*** memory! Check BASE, change it for 
*** $60000 or something like that.

*** A big hello from RED DEVIL!!!!!!!!!!!
*** (Thanks for all!)

PI	EQU $2000
GRAD	EQU PI/4
MAX	EQU PI/2
MAY	EQU PI/4
LBAL	EQU 2
NBALLS	EQU 320
X0A	EQU 7+1
X0B	EQU 10+1
Y0	EQU 60
Y1	EQU 44
INKLI	EQU 8
BASE	EQU $E0000
LNGBASE	EQU $E000
SLI	EQU 25
	
	BRA MAINCOD
	DC.B "No Scroll Demo by Red Devil. If you like to contact me then write to: "
	DC.B "Red Devil. Po. Box 566. 03080 Alicante. Spain. (Yes, the only spanish "
	DC.B "coder in this demo!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! "
TABLE	INCBIN 'MEGASIN.RED'
MAINCOD	
	clr.l	-(sp)
	move.w	#32,-(sp)
	trap	#1
	addq.l	#6,sp
	
	MOVE.W	#$2700,SR

	BSR GETCOLS
	BSR CLS
	BSR HELLO
	BSR ROXGFX
	BSR P_BALL
	BSR SETSIN
	BSR SETNUM
	MOVEQ #1,D0
	JSR MUSIC
	LEA SINUSVAR+4(PC),A0
	MOVEM.L PREDWA+(16*2)(PC),D0-D2
	MOVE.L D0,(A0)
	MOVE.L D1,6(A0)
	MOVE.L D2,6+4(A0)
	BSR CHGSC
	BSR CALCTR
	BSR SETSCR
	BSR SINT
ME	LEA SYNC(PC),A0
	CLR.B (A0)
VSYNC	TST.B (A0)
	BEQ.S VSYNC
	JSR MUSIC+6
	MOVEM.L LOGOD(PC),D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
	BSR CHGSC
	BSR INPUTK
	BSR BOSPR
	BSR PTT
	BSR CALCTR
	BSR PTABLE
	CMP.B #$39,$FFFFFC02.W
	BNE.S ME
	BSR GINT

	ILLEGAL

SETSCR	BSR.S CLS
	LEA LOGOD+32+(((X0A-1)+(X0B-1))*6*Y0)(PC),A2
	LEA BASE,A0
	LEA BASE+LNGBASE,A1
	MOVE.W #(Y1*20)-1,D0
DDD	MOVE.L (A2),(A0)+
	MOVE.L (A2)+,(A1)+
	MOVE.W (A2),(A0)+
	MOVE.W (A2)+,(A1)+
	ADDQ.L #2,A0
	ADDQ.L #2,A1
	DBF D0,DDD
	LEA CHARSET,A5
	LEA TEXT,A0
	LEA BASE+((200+3+Y1)*160),A1
	BSR PRINT
	LEA TEXT,A0
	LEA BASE+LNGBASE+((200+3+Y1)*160),A1
	BSR PRINT
	RTS
CLS	LEA BASE,A0
	LEA BASE+(LNGBASE*2),A1
CCC	CLR.L (A0)+
	CLR.L (A0)+
	CLR.L (A0)+
	CLR.L (A0)+
	CMPA.L A0,A1
	BGT.S CCC
	RTS	
ROXGFX	BSR SETCOLS
	BSR PREPSIN
	LEA BASE,A1
	LEA LOGOD+32(PC),A0
	MOVEQ #X0A-2,D0
	MOVEQ #Y0-1,D1
	BSR PGFX3
	MOVEQ #X0B-2,D0
	MOVEQ #Y0-1,D1
	BSR PGFX3
	LEA XBUFA,A2
	LEA XBUFB,A3
	MOVEQ #16-1,D7
ROXPOS	LEA BASE,A0
	
	MOVEQ #X0A-1,D0
	MOVEQ #Y0-1,D1
	LEA (A2),A1
	BSR SAVE
	LEA (A1),A2
	MOVEQ #X0B-1,D0
	MOVEQ #Y0-1,D1
	LEA (A3),A1
	BSR SAVE
	LEA (A1),A3
	
	LEA BASE,A0
	
	MOVEQ #X0A-1,D0
	MOVEQ #Y0-1,D1
	BSR ROXX
	
	MOVEQ #X0B-1,D0
	MOVEQ #Y0-1,D1
	BSR ROXX
	DBF D7,ROXPOS
	
	RTS
PGFX3	MOVE.W D0,D3
	NEG.W D3
	ADD.W #20-2,D3
	LSL.W #3,D3
TLIN	MOVE.W D0,D2 
TROW	MOVE.L (A0)+,(A1)+
	MOVE.W (A0)+,(A1)+
	CLR.W (A1)+
	DBF D2,TROW
	CLR.L (A1)+
	CLR.L (A1)+
	LEA 0(A1,D3.W),A1
	DBF D1,TLIN
	RTS
SAVE	MOVE.W D0,D3
	NEG.W D3
	ADD.W #20-1,D3
	LSL.W #3,D3
SLAN	MOVE.W D0,D2 
SROW	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	DBF D2,SROW
	LEA 0(A0,D3.W),A0
	DBF D1,SLAN
	RTS
ROXX	MOVE.W D0,D3
	ADD.W #1,D3
	LSL.W #3,D3
	NEG.W D3
RLIN	MOVEQ #3-1,D4
RPLN	MOVE.W D0,D2 
	MOVE.B #0,CCR
RROW	ROXR (A0)
	ADDQ.L #8,A0
	DBF D2,RROW
	LEA 2(A0,D3.W),A0
	DBF D4,RPLN
	LEA 160-(2*3)(A0),A0
	DBF D1,RLIN
	RTS
SETCOLS	LEA IA0(PC),A0
	LEA LOGOD+16(PC),A1
	MOVE.W (A1),IA7+2+2-IA0(A0)
	MOVE.L (A1)+,IA3+2-IA0(A0)
	MOVE.L (A1),IA0+2-IA0(A0)
	MOVE.L (A1)+,IA4+2-IA0(A0)
	MOVE.L (A1),IA1+2-IA0(A0)
	MOVE.L (A1)+,IA5+2-IA0(A0)
	MOVE.L (A1),IA2+2-IA0(A0)
	MOVE.L (A1)+,IA6+2-IA0(A0)
	RTS
CHGSC	LEA SCREEN(PC),A0
	MOVE.L XINCSC-SCREEN(A0),D0
	EOR.L #LNGBASE,D0
	MOVE.L D0,XINCSC-SCREEN(A0)
	ADD.L #BASE,D0
	MOVE.L D0,(A0)
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	RTS
INDEX
CX0A	DS.W 1
CX0B	DC.W (ELOGOM-LOGOM)/2
CY0	DS.W 1
CTTA	DS.L 16
CTTB	DS.L 16
INC_PXA	DS.L 1
INC_GXA	DS.W 1
INC_PXB	DS.L 1
INC_GXB	DS.W 1
INC_GY	DS.W 1
B0	REPT 4
	DC.L Y1*160
	ENDR
PTT	MOVEQ #0,D1
	MOVEQ #0,D2
	MOVEQ #0,D3
	MOVEQ #0,D4
	MOVEQ #0,D5
	MOVEQ #0,D6
	MOVEQ #0,D7
	MOVE.L D1,A3
	MOVE.L D1,A4
	MOVE.L D1,A5
	MOVE.L D1,A6
	LEA INDEX(PC),A0
	MOVE.L SCREEN-INDEX(A0),A1
	MOVE.L B0+(4*2)-INDEX(A0),D0
	LEA 0(A1,D0.L),A2
	MOVEQ #0,D0
	BSR CLR8
	MOVE.L B0+(4*3)-INDEX(A0),D0
	LEA 0(A1,D0.L),A2
	BSR CLR11
	MOVE.L B0-INDEX(A0),B0+(4*2)-INDEX(A0)
	MOVE.L B0+4-INDEX(A0),B0+(4*3)-INDEX(A0)
	LEA LOGOM,A1
	MOVE.W #ELOGOM-LOGOM-1,D7
	MOVE.W CX0A-INDEX(A0),D0
	ADDQ.W #4,D0
	AND.W D7,D0
	MOVE.W D0,CX0A-INDEX(A0)
	MOVE.W CX0B-INDEX(A0),D1
	ADDQ.W #4*2,D1
	AND.W D7,D1
	MOVE.W D1,CX0B-INDEX(A0)
	MOVE.W CY0-INDEX(A0),D2
	ADDQ.W #4,D2
	AND.W D7,D2
	MOVE.W D2,CY0-INDEX(A0)
	MOVE.W 0(A1,D0.W),D0
	MOVE.W 0(A1,D1.W),D1
	MOVE.W 2(A1,D2.W),INC_GY-INDEX(A0)
	ADD.W #(3*8),D0
	MOVE.W D0,D3
	AND.W #$F,D3
	ADD.W D3,D3
	ADD.W D3,D3
	MOVE.L CTTA-INDEX(A0,D3.W),INC_PXA-INDEX(A0)
	AND.W #$FFF0,D0
	LSR.W #1,D0
	MOVE.W D0,INC_GXA-INDEX(A0)
	
	MOVE.W D1,D3
	AND.W #$F,D3
	ADD.W D3,D3
	ADD.W D3,D3
	MOVE.L CTTB-INDEX(A0,D3.W),INC_PXB-INDEX(A0)
	AND.W #$FFF0,D1
	LSR.W #1,D1
	MOVE.W D1,INC_GXB-INDEX(A0)
	LEA XBUFA,A1
	MOVE.L SCREEN-INDEX(A0),A2
	
	MOVEQ #0,D0
	MOVE.W INC_GY-INDEX(A0),D0
	ADD.W INC_GXA-INDEX(A0),D0
	ADD.W #160*Y1,D0
	MOVE.L D0,B0-INDEX(A0)
	ADD.L D0,A2
	ADD.L INC_PXA-INDEX(A0),A1
	
	BSR.S PRT8
	
	LEA INDEX(PC),A0
	LEA XBUFB,A1
	MOVE.L SCREEN-INDEX(A0),A2
	
	MOVEQ #0,D0
	MOVE.W INC_GY-INDEX(A0),D0
	ADD.W INC_GXB-INDEX(A0),D0
	ADD.W #160*(Y0+Y1),D0
	MOVE.L D0,B0+4-INDEX(A0)
	ADD.L D0,A2
	ADD.L INC_PXB-INDEX(A0),A1
	BSR PRT11
	
	RTS
PRT8	
LI0	SET 0
	REPT Y0/4
	MOVEM.L (A1)+,D0-D7/A0/A3-A6
	MOVEM.L D0-D7/A0/A3-A6,LI0(A2)
	MOVEM.L (A1)+,D0-D7/A0/A3-A6
	MOVEM.L D0-D2,(13*4)+LI0(A2)
	MOVEM.L D3-D7/A0/A3-A6,(160*1)+LI0(A2)
	MOVEM.L (A1)+,D0-D7/A0/A3-A6
	MOVEM.L D0-D5,(10*4)+(160*1)+LI0(A2)
	MOVEM.L D6-D7/A0/A3-A6,(160*2)+LI0(A2)
	MOVEM.L (A1)+,D0-D7/A0/A3-A6
	MOVEM.L D0-D7/A0,(7*4)+(160*2)+LI0(A2)
	MOVEM.L A3-A6,(160*3)+LI0(A2)
	MOVEM.L (A1)+,D0-D7/A0/A3-A5
	MOVEM.L D0-D7/A0/A3-A5,(4*4)+(160*3)+LI0(A2)
LI0	SET LI0+(160*4)
	ENDR
	RTS
PRT11	
LI0	SET 0
	REPT Y0
	MOVEM.L (A1)+,D0-D7/A0/A3-A4
	MOVEM.L D0-D7/A0/A3-A4,LI0(A2)
	MOVEM.L (A1)+,D0-D7/A0/A3-A4
	MOVEM.L D0-D7/A0/A3-A4,LI0+(11*4)(A2)
LI0	SET LI0+(160*1)
	ENDR
	RTS
CLR8	
LI0	SET 0
	REPT Y0
	MOVE.L D7,LI0(A2)
	MOVE.L D7,LI0+((X0A-1)*8)(A2)
	MOVE.W D7,LI0+4(A2)
	MOVE.W D7,LI0+4+((X0A-1)*8)(A2)
LI0	SET LI0+(160*1)
	ENDR
MLIX	MACRO
	MOVEM.L D0-D7/A3-A6,8+((\1)*160)(A2)
	ENDM
	MLIX 0
	MLIX 1
	MLIX 2
	MLIX Y0
	MLIX Y0-1
	MLIX Y0-2
	RTS
CLR11	
LI0	SET 0
	REPT Y0
	MOVE.L D7,LI0(A2)
	MOVE.L D7,LI0+((X0B-1)*8)(A2)
	MOVE.W D7,LI0+4(A2)
	MOVE.W D7,LI0+4+((X0B-1)*8)(A2)
LI0	SET LI0+(160*1)
	ENDR
MLIY	MACRO
	MOVEM.L D1-D7/A3-A4,8+((\1)*160)(A2)
	MOVEM.L D1-D7/A3-A4,8+((\1)*160)+(9*4)(A2)
	ENDM

	MLIY 0
	MLIY 1
	MLIY 2
	MLIY Y0
	MLIY Y0-1
	MLIY Y0-2
	RTS
PREPSIN	LEA LOGOM,A0
	MOVE.W #((ELOGOM-LOGOM)/4)-1,D7
GETMM	MOVE.W 2(A0),D0
	MULU #160,D0
	MOVE.W D0,2(A0)
	ADDQ.L #4,A0
	DBF D7,GETMM
	LEA CTTA(PC),A0
	LEA CTTB(PC),A1
	MOVE.W #X0A*Y0*8,D0
	MOVE.W #X0B*Y0*8,D1
	MOVEQ #0,D2
	MOVEQ #0,D3
	MOVEQ #16-1,D7
TRANST	MOVE.L D2,(A0)+
	MOVE.L D3,(A1)+
	ADD.L D0,D2
	ADD.L D1,D3
	DBF D7,TRANST
	RTS
GETCOLS	LEA COLG(PC),A0
	MOVEM.L $FFFF8240.W,D0-D7
	MOVEM.L D0-D7,(A0)
BLACK	MOVE.W #$8240,A1
	MOVEQ #8-1,D0
CLRCOLS	CLR.L (A1)+
	DBF D0,CLRCOLS
	RTS

SINT	BSR WREAD
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L $68.W,(A0)+
	MOVE.L $70.W,(A0)+
	MOVE.L $120.W,(A0)+
	MOVE.L $134.W,(A0)+
	MOVE.B $FFFFFA19-$FFFFFA00(A1),(A0)+
	MOVE.B $FFFFFA1F-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFFFA06-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFFFA12-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFF8200-$FFFFFA00(A1),(A0)+
	MOVE.W SR,(A0)+
	CLR.L $6(A1)
	CLR.L $12(A1)
	MOVE.L #VBLSYNC,$70.W
	CLR.B $FFFFFA19-$FFFFFA00(A1)
	CLR.B $FFFFFA1F-$FFFFFA00(A1)
	CLR.B $FFFFFA1B-$FFFFFA00(A1)
	CLR.B $FFFFFA21-$FFFFFA00(A1)
	MOVE.W #$2300,SR
	CLR.B SYNC
WAIT_FS	TST.B SYNC
	BEQ.S WAIT_FS
	MOVE.W #$2700,SR
	MOVE.L #$00210000,$6(A1)
	MOVE.L #$00210000,$12(A1)
	MOVE.L #NEWVBL,$70.W
	MOVE.L #BASE,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	MOVE.W #$2300,SR
	RTS

GINT	MOVE.W #$2700,SR
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L (A0)+,$68.W
	MOVE.L (A0)+,$70.W
	MOVE.L (A0)+,$120.W
	MOVE.L (A0)+,$134.W
	MOVE.B (A0)+,$FFFFFA19-$FFFFFA00(A1)
	MOVE.B (A0)+,$FFFFFA1F-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFFFA06-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFFFA12-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFF8200-$FFFFFA00(A1)
	LEA $FFFF8800.W,A0
	MOVE.L #$8000000,(A0)
	MOVE.L #$9000000,(A0)
	MOVE.L #$A000000,(A0)
	MOVEM.L COLG(PC),D0-D7
	MOVEM.L D0-D7,$FFFF8240-$FFFF8800(A0)
	BSR WREAD
	RTS

MSINT	BSR WREAD
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L $68.W,(A0)+
	MOVE.L $70.W,(A0)+
	MOVE.L $120.W,(A0)+
	MOVE.L $134.W,(A0)+
	MOVE.B $FFFFFA19-$FFFFFA00(A1),(A0)+
	MOVE.B $FFFFFA1F-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFFFA06-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFFFA12-$FFFFFA00(A1),(A0)+
	MOVE.L $FFFF8200-$FFFFFA00(A1),(A0)+
	MOVE.W SR,(A0)+
	MOVE.W #$2700,SR
	CLR.L $6(A1)
	CLR.L $12(A1)
	MOVE.L #VBLSYNC,$70.W
	CLR.B $FFFFFA19.W
	CLR.B $FFFFFA1F.W
	CLR.B $FFFFFA1B.W
	CLR.B $FFFFFA21.W
	MOVE.W #$2300,SR
	RTS
MGINT	MOVE.W #$2700,SR
	LEA INTS(PC),A0
	LEA $FFFFFA00.W,A1
	MOVE.L (A0)+,$68.W
	MOVE.L (A0)+,$70.W
	MOVE.L (A0)+,$120.W
	MOVE.L (A0)+,$134.W
	MOVE.B (A0)+,$FFFFFA19-$FFFFFA00(A1)
	MOVE.B (A0)+,$FFFFFA1F-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFFFA06-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFFFA12-$FFFFFA00(A1)
	MOVE.L (A0)+,$FFFF8200-$FFFFFA00(A1)
	MOVE.W (A0)+,SR
	BSR BLACK
	BSR WREAD
	RTS
WWRITE	BTST #1,$FFFFFC00.W
	BEQ.S WWRITE
	MOVE.B D0,$FFFFFC02.W
WEXIT	RTS
WREAD	BTST #0,$FFFFFC00.W
	BEQ.S WEXIT
	MOVE.B $FFFFFC02.W,D0
	BRA.S WREAD
INTS	DS.L 8
COLG	DS.L 8
SYNC	DS.B 1
SLIN	DS.B 1
FLAG	DS.B 1
	DS.B 1	
NEWVBL	CLR.B $FFFFFA19.W
	MOVE.B #$CD,$FFFFFA1F.W
	MOVE.B #7,$FFFFFA19.W
	MOVE.L #DBORDER,$134.W
	MOVE.L #NCZZ,$68.W
	MOVE.B #33,SLIN
	AND.W #$F1FF,(A7)
	MOVE.L #HBL0,$120.W
	CLR.B $FFFFFA1B.W
	MOVE.B #Y1,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.W #COLXX-(COLCNT+2),COLCNT+2
VBLSYNC	ST SYNC
	RTE
NCZZ	SUBQ.B #1,SLIN
	BEQ.S NET_IT
	RTE
NET_IT	MOVE.W #$2700,SR
	MOVE.L #NEWSETW,$68.W
WAITHBL	STOP #$2100
NEWSETW	MOVE.W #$2700,SR
	ADDQ.L #6,A7
	MOVEM.L D0-A6,-(A7)
	LEA $FFFF820A.W,A0
	LEA $FFFF8240-$FFFF820A(A0),A1
	MOVEQ #0,D2
	MOVEQ #2,D1
	
	REPT 35
	NOP
	ENDR
	
	MOVE.B D2,(A0)
	
	REPT 32
	NOP
	ENDR
	
	MOVE.B D1,(A0)
		
	MOVEM.L (A7)+,D0-A6
	OR.W #$300,(A7)
	RTE

DBORDER	CLR.B $FFFFFA19.W
	PEA (A0)
	MOVE.W D0,-(A7)
	LEA $FFFF8209.W,A0
CHKK	MOVE.B (A0),D0
	CMP.B #$F0,D0
	BLT.S CHKK
	NOT.W D0
	LSL.W D0,D0
	REPT 4
	NOP
	ENDR
	CLR.B $FFFF820A-$FFFF8209(A0)
	REPT 32
	NOP
	ENDR
	MOVE.B #2,$FFFF820A-$FFFF8209(A0)
	MOVE.B #$20,$FFFFFA1F.W
	MOVE.B #4,$FFFFFA19.W
	MOVE.L #XHBLS,$134.W
	MOVE.W (A7)+,D0
	MOVE.L (A7)+,A0
	BCLR #5,$FFFFFA0F.W
	RTE
HBL0	MOVE.W #$2700,SR
	MOVE.L #NEWSETX,$68.W
	STOP #$2100
NEWSETX	MOVE.W #$2700,SR
	ADDQ.L #6,A7
	MOVE.W D0,-(A7)
WAITSYN	MOVE.B $FFFF8209.W,D0
	CMP.B $FFFF8209.W,D0
	BNE.S WAITSYN
	NOT.W D0
	LSL.W D0,D0
	MOVE.W (A7)+,D0
	MOVE.W #-1,$FFFF8240.W
	CLR.B $FFFFFA1B.W
	MOVE.B #8,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #HBLXX,$120.W
	BCLR #0,$FFFFFA0F.W
IA0	MOVE.L #0,$FFFF8240+(4*1).W
IA1	MOVE.L #0,$FFFF8240+(4*2).W
IA2	MOVE.L #0,$FFFF8240+(4*3).W
IA3	MOVE.L #0,$FFFF8240+(4*4).W
IA4	MOVE.L #0,$FFFF8240+(4*5).W
IA5	MOVE.L #0,$FFFF8240+(4*6).W
IA6	MOVE.L #0,$FFFF8240+(4*7).W
	REPT 52
	NOP
	ENDR
IA7	MOVE.L #0,$FFFF8240.W
	RTE
HBL2	MOVE.W #-1,$FFFF8240.W
	CLR.B $FFFFFA1B.W
	MOVE.B #1,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #HBL3,$120.W
	CLR.L $FFFF8240+(4*1).W
	CLR.L $FFFF8240+(4*2).W
	CLR.L $FFFF8240+(4*3).W
	CLR.L $FFFF8240+(4*4).W
	CLR.L $FFFF8240+(4*5).W
	CLR.L $FFFF8240+(4*6).W
	CLR.L $FFFF8240+(4*7).W
	BCLR #0,$FFFFFA0F.W
	RTE
HBL3	
IB0	MOVE.L #$0000FFFF,$FFFF8240.W
	CLR.B $FFFFFA1B.W
	BCLR #0,$FFFFFA0F.W
	RTE
XHBLS	CLR.B $FFFFFA19.W
	MOVE.L #HBL2,$120.W
	BCLR #5,$FFFFFA0F.W
	RTE
HBLXX	
COLCNT	MOVE.W COLCNT(PC),$FFFF8240+(2*8).W
	ADDQ.W #2,COLCNT+2
	BCLR #0,$FFFFFA0F.W
	RTE
COLXX	DC.W $08F,$01F,$09F,$02F,$0AF,$03F,$0BF,$04F,$0CF,$05F,$0DF,$06F,$0DF,$05F,$0CF,$04F,$0BF,$03F,$0AF,$02F,$09F,$01F,$08F,-1
SCREEN	DS.L 1
XINCSC	DS.L 1
LOGOD	INCBIN 'LOGOM.BIN'
BOSPR	MOVE.L SCREEN(PC),A1
	LEA 6+((Y1+INKLI)*160)(A1),A1
	MOVEQ #0,D1
	LEA BOR(PC),A2
	MOVE.W INKBB-BOR(A2),D0
	ADD.W #NBALLS*2*2,D0
	CMP.W #NBALLS*2*3,D0
	BLT.S NIINKB
	SUB.W #NBALLS*2*3,D0
NIINKB	ADD.W D0,A2
	REPT NBALLS
	MOVE.W (A2)+,D0
	MOVE.W D1,0(A1,D0.W)
	ENDR
	RTS	
INPUTK	MOVEQ #0,D0
	MOVE.B $FFFFFC02.W,D0
	LEA FUNC(PC),A0
	MOVE.W -2(A0),D1
	ADDQ.W #1,D1
	AND.W #4-1,D1
	MOVE.W D1,-2(A0)
	TST.W D1
	BNE.S LETUSGO
SEARCHX	MOVE.W (A0)+,D1
	BPL.S NVETE
LETUSGO	RTS
NVETE	ADDQ.L #4,A0
	CMP.B D0,D1
	BNE.S SEARCHX
	MOVE.L -4(A0),A0
	LEA POSITBL(PC),A1
	LEA SINUSVAR(PC),A2
	JMP (A0)
	DS.W 1
FUNC	
KEU	MACRO T,F
	DC.W \1
	DC.L \2
	ENDM
	KEU $48,REXP
	KEU $50,SUXP
	KEU $4B,REXI
	KEU $4D,SUXI
	KEU $3B,FUNZ
	KEU $3C,FUNZ
	KEU $3D,FUNZ
	KEU $3E,FUNZ
	KEU $3F,FUNZ
	KEU $40,FUNZ
	KEU $41,FUNZ
	KEU $42,FUNZ
	KEU $43,FUNZ
	KEU $44,FUNZ
	DC.W -1
SUXP	ADDQ.W #2,(A1)
	AND.W #$F,(A1)
	RTS
REXP	SUBQ.W #2,(A1)
	AND.W #$F,(A1)
	RTS
SUXI	MOVE.W (A1),D0
	ADD.W D0,D0
	MOVE.W FTABLE(PC,D0.W),D1
	MOVE.W FTABLE+2(PC,D0.W),D2
	ADD.W D1,0(A2,D2.W)
	RTS
REXI	MOVE.W (A1),D0
	ADD.W D0,D0
	MOVE.W FTABLE(PC,D0.W),D1
	MOVE.W FTABLE+2(PC,D0.W),D2
	SUB.W D1,0(A2,D2.W)
	RTS
FTABLE	DC.W 4,2
	DC.W 4,16
	DC.W 2,0
	DC.W 2,14
	DC.W 4,6
	DC.W 4,10
	DC.W 2,4
	DC.W 4,12
FUNZ	SUB.B #$3B,D0
	LSL.W #4,D0
	MOVE.L PREDWA(PC,D0.W),4(A2)
	MOVE.L PREDWA+4(PC,D0.W),10(A2)
	MOVE.L PREDWA+8(PC,D0.W),14(A2)
	RTS
PREDWA	DC.W $30,$FFFC,$18,$24,$48,$7B8,0,0
	DC.W $20,$8,$FFEC,$1FBC,$FF72,$FFFC,0,0
	DC.W $20,$8,$FFEC,$2008,$F85E,$7A0,0,0
	DC.W $C,$4,$20,$FC8,$76,$74,0,0
	DC.W $22,$4,$28,$430,$FBC6,$4,0,0
	DC.W $C,$14,$20,$8,$FFF6,$3F0,0,0
	DC.W $A,$14,$40,$FFF8,$18A,$190,0,0
	DC.W $14,$10,$40,$4,$192,$190,0,0
	DC.W $14,$10,$40,$DAC,$190,$190,0,0
	DC.W 0,0,0,0,0,0,0,0
PTABLE	MOVEQ #0,D7
	LEA NUM(PC),A0
	MOVEA.L SCREEN(PC),A1
	ADD.L #(200+3+Y1)*160,A1
	LEA SINUSVAR(PC),A2
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B (A2),D0
	MOVE.B 1(A2),D1
	LEA (8*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 2(A2),D0
	MOVE.B 3(A2),D1
	LEA (8*3)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 4(A2),D0
	MOVE.B 5(A2),D1
	LEA (8*18)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 6(A2),D0
	MOVE.B 7(A2),D1
	LEA (8*13)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 14(A2),D0
	MOVE.B 15(A2),D1
	LEA (8*8)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 16(A2),D0
	MOVE.B 17(A2),D1
	LEA (8*3)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 12(A2),D0
	MOVE.B 13(A2),D1
	LEA (8*18)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #0,D1
	MOVEQ #0,D0
	MOVE.B 10(A2),D0
	MOVE.B 11(A2),D1
	LEA (8*13)+(160*8)(A1),A4
	BSR PNUM
	MOVEQ #-1,D1
	LEA TBLPOSI(PC),A0
	MOVE.W -2(A0),D0
	ADDA.W 0(A0,D0.W),A1
	MOVE.W D1,-2(A1)
	MOVE.W D1,8-2(A1)
	RTS	
PNUM	LSL.W #4,D0
	LSL.W #4,D1
	LEA 0(A0,D0.W),A3
	MOVE.W (A3)+,(A4)
	MOVE.W (A3)+,(160*1)(A4)
	MOVE.W (A3)+,(160*2)(A4)
	MOVE.W (A3)+,(160*3)(A4)
	MOVE.W (A3),(160*4)(A4)
	MOVE.W D7,(160*6)(A4)
	LEA 0(A0,D1.W),A3
	MOVE.W (A3)+,8(A4)
	MOVE.W (A3)+,8+(160*1)(A4)
	MOVE.W (A3)+,8+(160*2)(A4)
	MOVE.W (A3)+,8+(160*3)(A4)
	MOVE.W (A3),8+(160*4)(A4)
	MOVE.W D7,8+(160*6)(A4)
	RTS
POSITBL	DC.W 0
TBLPOSI	DC.W 2+(8*3)+(160*6),2+(8*3)+(160*14)
	DC.W 2+(8*8)+(160*6),2+(8*8)+(160*14)
	DC.W 2+(8*13)+(160*6),2+(8*13)+(160*14)
	DC.W 2+(8*18)+(160*6),2+(8*18)+(160*14)
SINUSVAR
POSX	DC.W 0
POSY	DC.W 0
INCX	DC.W 0*2
INCY	DC.W 0*4
POCC	DC.W 0
INKC	DC.W 0*4
INDC	DC.W 0*4
INDX	DC.W 0*2
INDY	DC.W 0*4
INKBB	DS.W 1
BOR	DS.W NBALLS*3
CALCTR	LEA TABLE,A0
	LEA (MAX*2)(A0),A1
	LEA (MAY*4)(A1),A2
	LEA SINUSVAR(PC),A4
	LEA BOR(PC),A5
	MOVE.W INKBB-BOR(A5),D0
	ADD.W #NBALLS*2,D0
	CMP.W #NBALLS*2*3,D0
	BLT.S NINKK
	MOVEQ #0,D0
NINKK	MOVE.W D0,INKBB-BOR(A5)
	ADD.W D0,A5
	MOVE.L SCREEN(PC),A3
	LEA 6+((Y1+INKLI)*160)(A3),A3
	MOVE.L 2*2(A4),D1
	MOVE.L (A4),D0
	MOVE.W #(PI-1),D4
	SWAP D4
	MOVE.W #(PI-1),D4
	ADD.W D1,D0
	SWAP D0
	SWAP D1
	ADD.W D1,D0
	SWAP D0
	SWAP D1
	AND.L D4,D0
	MOVE.L D0,(A4)
	MOVE.W 5*2(A4),D3
	MOVE.W 4*2(A4),D1
	ADD.W D3,D1
	AND.W D4,D1
	MOVE.W D1,4*2(A4)
	MOVE.L 7*2(A4),D2
	MOVE.W 6*2(A4),D3
	MOVE.W #LBAL*16,D7
	REPT NBALLS
	BSR CLALC
	ENDR
	RTS
CLALC	ADD.W D2,D0
	AND.W D4,D0
	MOVE.W 0(A1,D0.W),D6
	MOVE.W 2(A1,D0.W),D5
	SWAP D0
	SWAP D2
	ADD.W D2,D0
	AND.W D4,D0
	ADD.W 0(A0,D0.W),D5 
	SWAP D2
	SWAP D0
	ADD.W D3,D1
	AND.W D4,D1
	ADD.W 0(A2,D1.W),D6
	ADD.W 2(A2,D1.W),D5
	CMP.W D6,D7
	BGT.S NORES
	SUB.W D7,D6
	ADDQ.W #8,D5
NORES	MOVE.W D5,(A5)+ 
	MOVE.W BALL(PC,D6.W),D6
	OR.W D6,0(A3,D5.W)
	RTS
BALL	DS.W 16
SETSIN	LEA TABLE,A6
	LEA (A6),A0
	MOVE.W #MAX-1,D0
	BSR SETYSIN
	LEA (MAX*2)(A6),A0
	MOVE.W #MAY-1,D0
	BSR SETXSIN
	LEA (MAX*2)+(MAY*4)(A6),A0
	MOVE.W #GRAD-1,D0
	BSR S_XYSIN
	RTS
SETYSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	MULU #$A0,D7
	MOVE.W D7,(A0)+
	DBF D0,SETYSIN
	RTS
SETXSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	DIVU #16,D7
	MOVE.W D7,D6
	CLR.W D7
	SWAP D7
	MULU #LBAL,D7
	MOVE.W D7,(A0)+
	LSL.W #3,D6
	MOVE.W D6,(A0)+
	DBF D0,SETXSIN
	RTS
S_XYSIN	MOVEQ #0,D7
	MOVE.W (A0),D7
	DIVU #16,D7
	MOVE.W D7,D6
	CLR.W D7
	SWAP D7
	MULU #LBAL,D7
	MOVE.W D7,(A0)+
	MULU #8,D6
	MOVEQ #0,D7
	MOVE.W (A0),D7
	MULU #160,D7
	ADD.W D7,D6
	MOVE.W D6,(A0)+
	DBF D0,S_XYSIN
	RTS
NUM	DS.W 256*8
P_BALL	LEA BALL(PC),A1
	MOVE.W #$8000,D0
	MOVEQ #16-1,D1
ROTPONT	MOVE.W D0,(A1)+
	LSR.W #1,D0
	DBF D1,ROTPONT
	RTS
PRINT	LEA SET+(2*16)(PC),A2
	MOVEQ #0,D1
MOVOLOP	MOVEQ #0,D0
	MOVE.B (A0)+,D0
	BPL.S NORES1
	RTS
NORES1	TST.B D0
	BNE.S LETUSG1
	LEA 160*7(A1),A1
	BRA.S MOVOLOP
LETUSG1	BSR SCHIT
	MULU #6,D1
	LEA 0(A2,D1.W),A3
	MOVE.B (A3)+,(A1)
	MOVE.B (A3)+,160*1(A1)
	MOVE.B (A3)+,160*2(A1)
	MOVE.B (A3)+,160*3(A1)
	MOVE.B (A3)+,160*4(A1)
	MOVE.B (A3)+,160*5(A1)
SSND	MOVEQ #0,D0
	MOVE.B (A0)+,D0
	BPL.S NORES2
	RTS
NORES2	TST.B D0
	BNE.S LETUSG2
	LEA 160*7(A1),A1
	BRA.S SSND
LETUSG2	BSR SCHIT
	MULU #6,D1
	LEA 0(A2,D1.W),A3
	MOVE.B (A3)+,1(A1)
	MOVE.B (A3)+,1+(160*1)(A1)
	MOVE.B (A3)+,1+(160*2)(A1)
	MOVE.B (A3)+,1+(160*3)(A1)
	MOVE.B (A3)+,1+(160*4)(A1)
	MOVE.B (A3)+,1+(160*5)(A1)
	ADDQ.L #8,A1
	BRA.S MOVOLOP
SCHIT	LEA (A5),A3
	MOVE.W #-1,D1
	MOVEQ #0,D2
SEARCH	MOVE.B (A3)+,D2
	BMI.S NOFOUND
	ADDQ.W #1,D1
	CMP.W D0,D2
	BNE.S SEARCH
NOFOUND	RTS
SETNUM	MOVE.W #256-1,D7
	LEA NUMESET(PC),A5
	LEA NUM(PC),A4
D7LOP	LEA NUMCAD(PC),A0
	LEA BASE,A1
	BSR PRINT
	LEA BASE,A1
	MOVE.W (A1),(A4)+
	MOVE.W 160*1(A1),(A4)+
	MOVE.W 160*2(A1),(A4)+
	MOVE.W 160*3(A1),(A4)+
	MOVE.W 160*4(A1),(A4)+
	MOVE.W 160*5(A1),(A4)+
	CLR.L (A4)+
	LEA NUX(PC),A0
	ADDQ.B #1,1(A0)
	CMP.B #$10,1(A0)
	BLT.S MORE
	CLR.B 1(A0)
	ADDQ.B #1,(A0)
MORE	MOVE.B (A0)+,D0
	ADD.B #'0',D0
	MOVE.B D0,NUMCAD
	MOVE.B (A0),D0
	ADD.B #'0',D0
	MOVE.B D0,NUMCAD+1
	DBF D7,D7LOP
	RTS

HELLO	BSR GFONT
	BSR DTEXT
	BSR CLS
	BSR MSINT
	MOVEM.L FNT(PC),D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
WWAIT	LEA SYNC(PC),A0
	CLR.B (A0)
WSYNC	TST.B (A0)
	BEQ.S WSYNC
	BSR CHGSC
	MOVEA.L SCREEN(PC),A3
	LEA (100-(SLI/2))*160(A3),A3
	LEA CTEXT1(PC),A0 
	BSR TSC
	TST.B FLAG
	BEQ.S WWAIT
	BSR MGINT
	RTS

GFONT	LEA FNT+32(PC),A0
	LEA FONT,A2
	LEA CHARNU(PC),A3
	BSR QUITAM
	MOVEQ #0,D5
	MOVE.B (A3)+,D5
OTROM	BSR PLETRA
	MOVEQ #2-1,D6
SROTA	BSR SAVEL
	BSR ROTAL
	DBF D6,SROTA
	MOVE.B (A3)+,D5
	BPL.S OTROM
	LEA CTEXT1(PC),A0
	LEA TEXT1(PC),A2
	MOVE.L A2,(A0)
	MOVE.L A2,-(A0)
	RTS
SAVEL	LEA BASE,A1
	MOVE.W D5,D1
QROW	MOVEQ #SLI-1,D0
QLIN	MOVE.L (A1),(A2)+
	MOVE.L 4(A1),(A2)+
	LEA 160(A1),A1
	DBF D0,QLIN
	LEA (-160*SLI)+8(A1),A1
	DBF D1,QROW
	RTS
ROTAL	LEA BASE,A1
	MOVE.W D5,D3
	ADDQ.W #1,D3
	LSL.W #3,D3
	NEG.W D3
	ADD.W #160,D3
	MOVEQ #8-1,D7
VECESR	MOVEQ #4-1,D0
PLANOSR	MOVEQ #SLI-1,D1
LINEASR	MOVE.B #0,CCR
	MOVE.W D5,D2
ROWSR	ROXR (A1)
	ADDQ.L #8,A1
	DBF D2,ROWSR
	LEA 0(A1,D3.W),A1
	DBF D1,LINEASR
	LEA (-160*SLI)+2(A1),A1
	DBF D0,PLANOSR
	LEA BASE,A1
	DBF D7,VECESR
	RTS
PLETRA	LEA BASE,A1
	MOVE.W D5,D1
	SUBQ.W #1,D1
FLI	MOVEQ #SLI-1,D0
DLI	MOVE.L (A0)+,(A1)
	MOVE.L (A0)+,4(A1)
	LEA 160(A1),A1
	DBF D0,DLI
	LEA (-160*SLI)+8(A1),A1
	DBF D1,FLI
	MOVEQ #0,D1
	MOVEQ #SLI-1,D0
BDLI	MOVE.L D1,(A1)
	MOVE.L D1,4(A1)
	LEA 160(A1),A1
	DBF D0,BDLI
	RTS
QUITAM	LEA (A3),A4
QUITARS	MOVE.B (A4),D0
	SUB.B #"0",D0
	MOVE.B D0,(A4)+
	MOVE.B (A4),D0
	BPL.S QUITARS
	RTS
DTEXT	LEA CHARCH(PC),A2
	LEA (A2),A0
	LEA CHARNU(PC),A3
	LEA ASCII(PC),A6
	MOVEQ #0,D7
SETTXT	MOVE.W D7,D1
	BSR CALCIN
	MOVEQ #0,D3
	MOVE.B (A0)+,D3
	ADD.W D3,D3
	ADD.W D3,D3
	MOVE.W D2,0(A6,D3.W)
	MOVE.W D0,2(A6,D3.W)
	ADDQ.W #1,D7
	MOVE.B (A0),D0
	CMP.B #-1,D0
	BNE.S SETTXT
	LEA CTEXT1+8(PC),A0
	MOVE.L -8(A0),A1
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	ADD.W D0,D0
	ADD.W D0,D0
	MOVE.W 0(A6,D0.W),(A0)
	MOVE.W #-1,-2(A0)
	RTS
CALCIN	LEA (A3),A5
	MOVEQ #0,D0
	MOVEQ #0,D2
	MOVEQ #0,D4
	MOVE.B 0(A3,D1.W),D2
	SUBQ.W #1,D1
	TST.W D1
	BMI.S ESEL0
SUMALOP	MOVE.B (A5)+,D4
	ADDQ.B #1,D4
	ADD.W D4,D0
	DBF D1,SUMALOP
ESEL0	MULU #8*SLI*2,D0
	RTS
TSC	BSR BARRE
	MOVE.L (A0),A1
	MOVEQ #0,D3	
	MOVE.B (A1),D3
	ADD.W D3,D3
	ADD.W D3,D3
	LEA ASCII-CTEXT1(A0,D3.W),A1
	LEA FONT,A2 
	MOVE.W #(8*SLI),D3
	EOR.W D3,4(A0)
	BEQ.S AUMROW
	ADDQ.W #1,6(A0)
AUMROW	MOVEQ #0,D0
	MOVEQ #0,D2
	MOVE.W 6(A0),D0
	MOVE.W 8(A0),D1
	MOVE.W 4(A0),D2
	CMP.W D1,D0
	BEQ.S OTRAL
	ADDQ.W #1,D1
	MULU D2,D1
	MULU D3,D0
	ADD.W D1,D0
	ADD.W 2(A1),D0
	LEA 0(A2,D0.L),A4
	BSR PRTROW
	RTS
OTRAL	EOR.W D3,10(A0)
	ADDQ.W #1,D1
	MULU D2,D1
	MULU D3,D0
	ADD.W D1,D0
	ADD.W 2(A1),D0
	LEA 0(A2,D0.L),A4
	BSR PRTROW
	MOVE.L (A0),A1
	ADDQ.L #1,A1
	TST.B (A1)
	BPL.S XNOREV
	MOVE.L -4(A0),A1
	ST FLAG-CTEXT1(A0)
XNOREV	MOVE.L A1,(A0)
	MOVEQ #0,D0
	MOVE.B (A1),D0
	ADD.W D0,D0
	ADD.W D0,D0
	LEA ASCII-CTEXT1(A0,D0.W),A1
	MOVE.W (A1),D0
	MOVE.W D0,8(A0)
	ADDQ.W #1,D0
	MULU D2,D0
	ADD.W 2(A1),D0
	CLR.W 6(A0)
	LEA 0(A2,D0.L),A4
	BSR ORROW
	RTS
PRTROW	
PLIN	MACRO LI
	MOVE.L (A4)+,(\1*160)(A3)
	MOVE.L (A4)+,(\1*160)+4(A3)
	ENDM
	PLIN 0
	PLIN 1
	PLIN 2
	PLIN 3
	PLIN 4
	PLIN 5
	PLIN 6
	PLIN 7
	PLIN 8
	PLIN 9
	PLIN 10
	PLIN 11
	PLIN 12
	PLIN 13
	PLIN 14
	PLIN 15
	PLIN 16
	PLIN 17
	PLIN 18
	PLIN 19
	PLIN 20
	PLIN 21
	PLIN 22
	PLIN 23
	PLIN 24
	RTS
ORROW	
LIN	MACRO LI
	MOVE.L (\1*160)(A3),D0
	OR.L (A4)+,D0
	MOVE.L D0,(\1*160)(A3)
	MOVE.L (\1*160)+4(A3),D0
	OR.L (A4)+,D0
	MOVE.L D0,(\1*160)+4(A3)
	ENDM
	LIN 0
	LIN 1
	LIN 2
	LIN 3
	LIN 4
	LIN 5
	LIN 6
	LIN 7
	LIN 8
	LIN 9
	LIN 10
	LIN 11
	LIN 12
	LIN 13
	LIN 14
	LIN 15
	LIN 16
	LIN 17
	LIN 18
	LIN 19
	LIN 20
	LIN 21
	LIN 22
	LIN 23
	LIN 24
	RTS
BARRE	MOVE.L A0,-(A7)
	REPT SLI
	ADDQ.L #8,A3
	MOVEM.L (A3)+,D0-D7/A0-A2/A4-A6
	MOVEM.L D0-D7/A0-A2/A4-A6,-(14*4)-8(A3)
	MOVEM.L (A3)+,D0-D7/A0-A2/A4-A6
	MOVEM.L D0-D7/A0-A2/A4-A6,-(14*4)-8(A3)
	MOVEM.L (A3)+,D0-D7/A0-A1
	MOVEM.L D0-D7/A0-A1,-(10*4)-8(A3)
	ENDR
	LEA (-160*SLI)+(19*8)(A3),A3
	MOVE.L (A7)+,A0
	RTS
CHARCH	DC.B 'ABCDEFGHIJKLMNOPQRSTUVWXYZ!?:;0123456789"(),-.',"' ",-1
CHARNU	DC.B '222222221222222222222222221211222222222222212111',-1
	DS.L 1
CTEXT1	DS.L 1
	DS.W 1 
	DS.W 1
	DS.W 1
	DS.W 1
ASCII	DS.L 256
TEXT1	DC.B ' HI! THIS IS THE NO SCROLL DEMO, CODING AND GRAPHIX BY RED DEVIL AND MUZAK BY COUNT ZERO... A BIG HELLO TO MCS, ST CNX AND PDK!                     ',-1
FNT	INCBIN 'FONT.BIN'
LOGOM	INCBIN 'LOGOM.DAT'
ELOGOM
SET	INCBIN 'CHARSET.BIN'
MUSIC	INCBIN 'MUS3.DAT'
CHARSET	DC.B 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789[]$%/\@*()-+=:"!,.?>< ',-1
NUMESET	DC.B '9'+1,'9'+2,'9'+3,'9'+4,'9'+5,'9'+6,'GHIJKLMNOPQRSTUVWXYZ0123456789',-1
NUX	DC.B 0,0 
NUMCAD	DC.B '00',-1,0
TEXT	DC.B ' XPOS:     YPOS:     XINC:     YINC:    ',0
	DC.B ' XIND:     YIND:     ZINC:     ZIND:    ',-1
EPRG
FONT	EQU EPRG
XBUFA	EQU EPRG
XBUFB	EQU XBUFA+(X0A*Y0*8*16)

	