'
' Activer des options par la souris ou par le clavier
' GFA-BASIC             MENU2.GFA
'
' Il faut rendre de la m‚moire au GEMDOS pour rsrc_load:
'
RESERVE -33000   ! Cela devrait suffire car les
'                  fichiers ressource ne d‚passent pas 32 Ko
'
menus=0          ! Constantes comme pr‚c‚demment, mais deux de
bureau=3         ! plus pour les titres des menus
fonction=4
info=7
fin=16
'
tampon$=SPACE$(16)   ! De la place pour 8 mots
'
DEFFN p(x)=CVI(MID$(tampon$,x*2+1,2))  ! La fonction lit
'                                        le mot no X dans le tampon
'
VOID APPL_INIT()
'
' Charger le fichier ressource (MENU1.RSC):
'
IF RSRC_LOAD("MENU2.RSC")=0
  VOID FORM_ALERT(1,"[3][Pas de fichier ressource!][Quitter]")
ELSE
  '
  ' Demander l'adresse de l'arbre du menu (0 pour arbre)
  '
  VOID RSRC_GADDR(0,menus,menus_adresse%)
  '
  ' Affichage (1) de la barre des menus:
  '
  VOID MENU_BAR(menus_adresse%,1)
  '
  ' Boucle d'‚vŠnements:
  '
  sortir%=0
  '
  REPEAT
    ' evnt_multi:  17 = evnt_keybd + evnt_mesag
    '              d% est une variable leurre
    w%=EVNT_MULTI(17,0,0,0,0,0,0,0,0,0,0,0,0,0,VARPTR(tampon$),0,d%,d%,d%,d%,key%,d%)
    '
    IF (w% AND 16) AND (FN p(0)=10)  ! Cliqu‚ option menu?
      title%=FN p(3)                 ! Stocker le num‚ro du titre
      IF FN p(4)=info                ! Demand‚ Information?
        sub_info
      ENDIF
      IF FN p(4)=fin                ! ou fin du programme?
        sub_fin
      ENDIF
      '
      ' Affichage normal (1) du titre du menu:
      '
      VOID MENU_TNORMAL(menus_adresse%,title%,1)
    ENDIF
    '
    IF w% AND 1                           ! Tap‚ touche?
      tche$=UPPER$(CHR$(key% AND 255))  ! Code ASCII seulement
      IF tche$="I"                      ! (octet de poids faible)
        ' Titre menu invers‚
        VOID MENU_TNORMAL(menus_adresse%,bureau,0)
        ' Appel de fonction:
        sub_info
        ' Titre de menu … nouveau normal:
        VOID MENU_TNORMAL(menus_adresse%,bureau,1)
      ENDIF
      IF tche$="E"
        VOID MENU_TNORMAL(menus_adresse%,fonction,0)
        sub_fin
        VOID MENU_TNORMAL(menus_adresse%,fonction,1)
      ENDIF
    ENDIF
  UNTIL sortir%=1
  '
  VOID MENU_BAR(menus_adresse%,0)  ! Effacer la barre de menus
  VOID RSRC_FREE()                 ! Lib‚rer la m‚moire
ENDIF
'
RESERVE
VOID APPL_EXIT()
'
END
'
'
PROCEDURE sub_info
  VOID FORM_ALERT(1,"[1][Programme de d‚mo des menus|(c) 1989 Micro-Application][Continue]")
RETURN
'
PROCEDURE sub_fin
  IF FORM_ALERT(2,"[2][Terminer? Vraiment?][Oui|Non]")=1
    sortir%=1
  ENDIF
RETURN
