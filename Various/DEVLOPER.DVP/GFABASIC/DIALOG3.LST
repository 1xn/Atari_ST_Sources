'
' Charger, afficher boŒte de dialogue et traiter les boutons radio
' GFA-BASIC                           DIALOG3.GFA
'
DEFINT "a-z"   ! Toutes les variables en entiers 4 octets
'
dialog=0       ! Constantes dans DIALOG3.H2
om=3
fm=2
oc=4
go=5
fin=6
'
VOID APPL_INIT()
'
IF RSRC_LOAD("DIALOG3.RSC")=0
  VOID FORM_ALERT(1,"[3][Pas de fichier RSC!][Fin]")
ELSE
  '
  ' Demander l'adresse de l'arbre:
  '
  VOID RSRC_GADDR(0,dialog,arbre_adr)
  '
  ' D‚finir un bouton par d‚faut (ici: FM)
  '
  GOSUB select(arbre_adr,fm)
  '
  ' Afficher la boŒte de dialogue:
  '
  GOSUB show_dialog(arbre_adr)
  '
  ' Faire rtavailler la boŒte de dialogue
  '
  bouton=FORM_DO(arbre_adr,0)
  '
  ' Inhiber l'‚tat "selected" du bouton s‚lectionn‚:
  '
  GOSUB deselect(arbre_adr,bouton)
  '
  ' Faire disparaŒtre la boŒte de dialogue:
  '
  GOSUB hide_dialog(arbre_adr)
  '
  ' Exploitation des boutons:
  '
  IF FN selected(arbre_adr,fm)
    a$="Modulation de fr‚quence"
  ENDIF
  '
  IF FN selected(arbre_adr,om)
    a$="Ondes moyennes"
  ENDIF
  '
  IF FN selected(arbre_adr,oc)
    a$="Ondes courtes"
  ENDIF
  '
  IF FN selected(arbre_adr,go)
    a$="Grandes ondes"
  ENDIF
  '
  VOID FORM_ALERT(1,"[1][Vous avez s‚lectionn‚ la gamme|"+a$+"!][Oui!]")
  '
  ' Effacer le fichier ressource de la m‚moire
  '
  VOID RSRC_FREE()
  '
ENDIF
'
VOID APPL_EXIT()
'
END
'
'
PROCEDURE select(arbre,index)
  ' Mettre le bit 0 … 1:
  OB_STATE(arbre,index)=OB_STATE(arbre,index) OR 1
RETURN
'
'
PROCEDURE deselect(arbre,index)
  ' Effacer le bit 0:
  OB_STATE(arbre,index)=OB_STATE(arbre,index) AND -2
RETURN
'
'
DEFFN selected(arbre,index)=OB_STATE(arbre,index) AND 1
'
'
PROCEDURE show_dialog(arbre)
  LOCAL x,y,w,h
  '
  ' Centrer le formulaire … l'‚cran
  ' (n'est pas encore dessin‚)
  '
  VOID FORM_CENTER(arbre,x,y,w,h)
  '
  ' Stocker les cadres des fenˆtres:
  '
  VOID FORM_DIAL(0,x,y,w,h,x,y,w,h)
  '
  ' Dessiner un rectangle "zoom"
  '
  VOID FORM_DIAL(1,25,25,25,25,x,y,w,h)
  '
  ' Dessiner le formulaire:
  ' Commencer par l'objet no 0 (objet racine, boŒte/cadre ext‚rieur)
  ' Profondeur: 12 niveaux (valeur arbitraire)
  '
  VOID OBJC_DRAW(arbre,0,12,x,y,w,h)
  '
RETURN
'
'
PROCEDURE hide_dialog(arbre)
  LOCAL x,y,w,h
  '
  ' Redemander les coordonn‚es:
  '
  VOID FORM_CENTER(arbre,x,y,w,h)
  '
  ' Dessiner un rectangle r‚tr‚cissant:
  '
  VOID FORM_DIAL(2,25,25,25,25,x,y,w,h)
  '
  ' Restituer les cadres des fenˆtres et envoyer des messages
  ' Redraw … toutes les fenˆtres d‚truites:
  '
  VOID FORM_DIAL(3,x,y,w,h,x,y,w,h)
  '
RETURN
'
'
PROCEDURE write_text(arbre,index,text$)
  LOCAL adr,i,a$
  '
  ' Passer l'adresse du texte (te_ptext) proprement dit:
  '
  adr=LPEEK(OB_SPEC(arbre,index))
  '
  ' Ajouter un octet nul:
  '
  a$=text$+CHR$(0)
  '
  FOR i=1 TO LEN(a$)
    POKE adr+i-1,ASC(MID$(a$,i,1))
  NEXT i
RETURN
'
'
PROCEDURE read_text(arbre,index,VAR text$)
  LOCAL adr,i
  '
  ' Passer te_ptext:
  '
  adr=LPEEK(OB_SPEC(arbre,index))
  '
  text$=""
  i=0
  '
  WHILE PEEK(adr+i)<>0    ! lire jusqu'… l'octet nul:
    text$=text$+CHR$(PEEK(adr+i))
    INC i
  WEND
RETURN
'
