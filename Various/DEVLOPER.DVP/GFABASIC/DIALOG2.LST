'
' Charger, afficher boŒte de dialogue et traiter les champs Edit
' GFA-BASIC                          DIALOG2.GFA
'
DEFINT "a-z"   ! Toutes les variables sont des entiers de 4 octets
'
dialog=0       ! Constantes dans DIALOG.H2
entree=3
affichage=5
ok=6
fin=7
'
VOID APPL_INIT()
'
IF RSRC_LOAD("DIALOG2.RSC")=0
  VOID FORM_ALERT(1,"[3][Pas de fichier RSC!][Fin]")
ELSE
  '
  ' Demander l'adresse de l'arbre:
  '
  VOID RSRC_GADDR(0,dialog,arbre_adr)
  '
  ' Initialiser le champ d'affichage:
  '
  GOSUB write_text(arbre_adr,affichage,"*** aucun ***")
  '
  REPEAT
    '
    ' Effacer le champ d'entr‚e:
    '
    GOSUB write_text(arbre_adr,entree,"")
    '
    ' Afficher la boŒte de dialogue:
    '
    GOSUB show_dialog(arbre_adr)
    '
    ' Faire travailler la boŒte de dialogue, "entr‚e" du premier champ Edit
    '
    bouton=FORM_DO(arbre_adr,entree)
    '
    ' Inhiber l'‚tat "selected" du bouton s‚lectionn‚:
    '
    GOSUB deselect(arbre_adr,bouton)
    '
    ' faire disparaŒtre la boŒte de dialogue:
    '
    GOSUB hide_dialog(arbre_adr)
    '
    ' Lire entr‚e et l'‚crire dans le champ d'affichage:
    '
    read_text(arbre_adr,entree,a$)
    write_text(arbre_adr,affichage,a$)
    '
  UNTIL bouton=fin
  '
  ' Effacer le fichier ressource de la m‚moire:
  '
  VOID RSRC_FREE()
  '
ENDIF
'
VOID APPL_EXIT()
'
END
'
'
PROCEDURE select(arbre,index)
  ' Mettre le bit 0 … 1:
  OB_STATE(arbre,index)=OB_STATE(arbre,index) OR 1
RETURN
'
'
PROCEDURE deselect(arbre,index)
  ' Effacer le bit 0:
  OB_STATE(arbre,index)=OB_STATE(arbre,index) AND -2
RETURN
'
'
PROCEDURE show_dialog(arbre)
  LOCAL x,y,w,h
  '
  ' Centrer le formulaire … l'‚cran
  ' (il n'est pas encore dessin‚)
  '
  VOID FORM_CENTER(arbre,x,y,w,h)
  '
  ' Stocker les cadres de fenˆtres, etc
  '
  VOID FORM_DIAL(0,x,y,w,h,x,y,w,h)
  '
  ' Dessiner un rectangle "zoom"
  '
  VOID FORM_DIAL(1,25,25,25,25,x,y,w,h)
  '
  ' Trac‚ du formulaire:
  ' Commencer par l'objet no 0 (objet racine, boŒte/cadre ext‚rieur)
  ' Profondeur: 12 niveaux maxi (valeur arbitraire)
  '
  VOID OBJC_DRAW(arbre,0,12,x,y,w,h)
  '
RETURN
'
'
PROCEDURE hide_dialog(arbre)
  LOCAL x,y,w,h
  '
  ' Redemander les coordonn‚es:
  '
  VOID FORM_CENTER(arbre,x,y,w,h)
  '
  ' Dessiner un rectangle se r‚duisant
  '
  VOID FORM_DIAL(2,25,25,25,25,x,y,w,h)
  '
  ' R‚tablir les cadres des fenˆtres et envoyer un message Redraw
  ' … toutes les fenˆtres d‚truites:
  '
  VOID FORM_DIAL(3,x,y,w,h,x,y,w,h)
  '
RETURN
'
'
PROCEDURE write_text(arbre,index,text$)
  LOCAL adr,i,a$
  '
  ' Passer l'adresse du texte proprement dit (te_ptext):
  '
  adr=LPEEK(OB_SPEC(arbre,index))
  '
  ' Ajouter l'octet nul:
  '
  a$=text$+CHR$(0)
  '
  FOR i=1 TO LEN(a$)
    POKE adr+i-1,ASC(MID$(a$,i,1))
  NEXT i
RETURN
'
'
PROCEDURE read_text(arbre,index,VAR text$)
  LOCAL adr,i
  '
  ' Passer te_ptext:
  '
  adr=LPEEK(OB_SPEC(arbre,index))
  '
  text$=""
  i=0
  '
  WHILE PEEK(adr+i)<>0    ! lire jusqu'… l'octe nul
    text$=text$+CHR$(PEEK(adr+i))
    INC i
  WEND
RETURN
'
