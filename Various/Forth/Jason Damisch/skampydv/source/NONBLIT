\ **********************************
\ **  NON BLITTER GRAPHICS WORDS  **
\ **********************************

: nonblit ;

hex


\ ***********************
\ Screen Access Addresses 

44e constant physical-top
45e constant screen-swap-address
45a constant pallet-change-address


\ *********************************
\ *  Changing Of The Pallet Area  *
\ *********************************


\  ************************
\  ***  Rainbow Effect  ***

create color-patterns
0000 ,   0001 ,   0010 ,   0011 ,   0100 ,   0101 ,   0110 ,   0010 ,


\ *************
: rainbow-delay
	23 0 do
		noop
	loop
;


ff8240 constant background-color

\ ******
: band
\ (  index  --  )
	8 0 do
		background-color w@
		over 4 * color-patterns + @ + 
		background-color w!
		rainbow-delay
	loop
	drop
	0 background-color w!	
;


\ *********
: (rainbow)
	8 0 do
		i band
	loop
;


\ *******
: rainbow
	0 background-color w!
	80 0 do
		(rainbow)
	loop
;


\ *******
code wipe
\ (  adr  count  --  )

	long

	sp )+   d0   move
	2 l#    d0   lsr
	1 l#    d0   sub
	sp )+   a0   move

	begin
		a0 )+  clr

	never d0 dbuntil
c;


\ **************
code blit-screen  
\ (  source  destination  #raster-lines  --  )
\ moves a block of memory into another space, fast

long

sp )+ d0 move   \ d0 is #rows
sp )+ a1 move   \ a1 is destination
sp )+ a0 move   \ a0 is source

\ 4 #   d0 lsl

begin

a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move

a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move

a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move

a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move
a0 )+ a1 )+   move

never d0     dbuntil

c;


\ *************
code .playfield
\ (  grid  font  video-adr  --  )

long


000a l# d5 move    \ # lines of character
sp )+   a0 move    \ a0 is videotop
sp )+   d1 move    \ d1 is font
sp )+   a2 move    \ a2 is grid

begin
0013 l#  d4 move    \ # across
begin

d0         clr
a2 )+   d0 bmove
7 #     d0 lsl
d1      a1 move
d0      a1 adda

a1 )+        a0  )  move  \ first half
a1 )+   0004 a0 d)   move \ second half

a1 )+   00a0 a0 d) move   \ second raster line
a1 )+   00a4 a0 d) move   \ ditto

a1 )+   0140 a0 d) move
a1 )+   0144 a0 d) move

a1 )+   01e0 a0 d) move
a1 )+   01e4 a0 d) move

a1 )+   0280 a0 d) move
a1 )+   0284 a0 d) move

a1 )+   0320 a0 d) move
a1 )+   0324 a0 d) move 

a1 )+   03c0 a0 d) move
a1 )+   03c4 a0 d) move

a1 )+   0460 a0 d) move
a1 )+   0464 a0 d) move

a1 )+   0500 a0 d) move
a1 )+   0504 a0 d) move

a1 )+   05a0 a0 d) move
a1 )+   05a4 a0 d) move

a1 )+   0640 a0 d) move
a1 )+   0644 a0 d) move

a1 )+   06e0 a0 d) move
a1 )+   06e4 a0 d) move

a1 )+   0780 a0 d) move
a1 )+   0784 a0 d) move

a1 )+   0820 a0 d) move
a1 )+   0824 a0 d) move

a1 )+   08c0 a0 d) move
a1 )+   08c4 a0 d) move

a1 )+   0960 a0 d) move
a1 )+   0964 a0 d) move

8 l#     a0 adda 
never d4 dbuntil

960 l#   a0 adda
never d5 dbuntil

c;


\ ***********
code .player
\ (  x  y  data  videotop  --  )
\ plots player graphic to screen

long

sp )+    a0 move   \ a0 is videotop
sp )+    a1 move   \ a1 is array
sp )+    d0 move   \ d0 is y
00a0 #   d0 mulu   \ raster line per y
d0       a0 adda  \ videotop y +

sp )     d0 move  \ d0 is x
fffffff0 l# d0 and \ column to . player
1 #      d0 lsr
d0       a0 adda

sp )+ d0 move       \ x vector in plane
0000000f l# d0 and


ffff0000 l#  d1 move  \ create masks
d0       d1 lsr   \

d1       d2 wmove
d1          swap
d2       d1 wmove

d1       d2 move  \
d2          not   \

000f l#   d5 move
begin
    
a1 )+    d3 move  \ d3 is player data

d0       d3   ror
d3       d4   move
d2       d3   and
d1       d4   and
d4            swap	
d1  0 a0 d)    and  \ !
d3  0 a0 d)    or 
d2  8 a0 d)    and  \ !
d4  8 a0 d)    or

a1 )+    d3 move  \ d3 is player data

d0       d3   ror          
d3       d4   move     
d2       d3   and
d1       d4   and            
d4            swap
d1  4 a0 d)    and  \ !
d3  4 a0 d)    or     
d2  c a0 d)    and  \ !
d4  c a0 d)    or

00a0 l#   a0  adda 
never d5 dbuntil

c;


\ **********
code .missle
\  ( x y ary videotop -- )
\ plots player graphic to screen

long

sp )+   a0 move   \ a0 is videotop
sp )+   a1 move   \ a1 is array

sp )+   d0 move   \ d0 is y
00a0 #   d0 mulu   \ raster line per y
d0       a0 adda  \ videotop y +

sp )    d0 move  \ d0 is x
fffffff0 l# d0 and \ column to . player
 1 #        d0 lsr
d0         a0 adda

sp )+ d0 move       \ x vector in plane
0000000f l# d0 and


ffff0000 l#  d1 move  \ create masks
d0       d1 lsr   \

d1       d2 wmove
d1          swap
d2       d1 wmove

d1       d2 move  \
d2          not   \

000f l#   d5 move
begin

ffffffff l# d3 move
a1 )+    d3 wmove \ get mask
d0       d3 ror

word

d3  0 a0 d)   and
d3  2 a0 d)   and
d3  4 a0 d)   and
d3  6 a0 d)   and

d3         swap
d3  8 a0 d)   and
d3  a a0 d)   and
d3  c a0 d)   and
d3  e a0 d)   and

long
    
a1 )+    d3 move  \ d3 is player data

d0       d3   ror
d3       d4   move
d2       d3   and
d1       d4   and
d4            swap
d3  0 a0 d)    or 
d4  8 a0 d)    or

a1 )+    d3 move  \ d3 is player data

d0       d3   ror          
d3       d4   move     
d2       d3   and
d1       d4   and            
d4            swap
d3  4 a0 d)    or     
d4  c a0 d)    or

00a0 l#   a0  adda 
never d5 dbuntil

c;


\ *************
code .my-number
\ (  x  y  data  videotop  --  )

long
	sp )+   a0 move    \ a0 is memtop
	sp )+   a1 move    \ a1 is data

	sp )+   d0 move    \ d0 is y
	8c0 #   d0 mulu    \ raster lines down
	d0      a0 adda    \ y memtop +

	sp )    d0 move   \ d0 is x
	1   #   d0 lsr
	8   #   d0 mulu   \ 40 characters across
	d0      a0 adda   \ x memtop +

	sp )+   d0 move
	1  l#   d0 and
	d0      a0 adda

	byte

	a1 )+   0000 a0 d) move
	a1 )+   0002 a0 d) move 
	a1 )+   0004 a0 d) move 
	a1 )+   0006 a0 d) move

	a1 )+   00a0 a0 d) move
	a1 )+   00a2 a0 d) move
	a1 )+   00a4 a0 d) move
	a1 )+   00a6 a0 d) move

	a1 )+   0140 a0 d) move
	a1 )+   0142 a0 d) move
	a1 )+   0144 a0 d) move
	a1 )+   0146 a0 d) move

	a1 )+   01e0 a0 d) move
	a1 )+   01e2 a0 d) move
	a1 )+   01e4 a0 d) move
	a1 )+   01e6 a0 d) move

	a1 )+   0280 a0 d) move
	a1 )+   0282 a0 d) move
	a1 )+   0284 a0 d) move
	a1 )+   0286 a0 d) move

	a1 )+   0320 a0 d) move
	a1 )+   0322 a0 d) move 
	a1 )+   0324 a0 d) move
	a1 )+   0326 a0 d) move

	a1 )+   03c0 a0 d) move
	a1 )+   03c2 a0 d) move
	a1 )+   03c4 a0 d) move
	a1 )+   03c6 a0 d) move

	a1 )+   0460 a0 d) move
	a1 )+   0462 a0 d) move
	a1 )+   0464 a0 d) move
	a1 )+   0466 a0 d) move

	a1 )+	0500 a0 d) move
	a1 )+   0502 a0 d) move
	a1 )+   0504 a0 d) move	
	a1 )+   0506 a0 d) move

	a1 )+	05a0 a0 d) move
	a1 )+   05a2 a0 d) move
	a1 )+   05a4 a0 d) move
	a1 )+   05a6 a0 d) move
	
	a1 )+	0640 a0 d) move
	a1 )+   0642 a0 d) move
	a1 )+   0644 a0 d) move
	a1 )+   0646 a0 d) move
		
	a1 )+	06e0 a0 d) move
	a1 )+   06e2 a0 d) move
	a1 )+   06e4 a0 d) move
	a1 )+   06e6 a0 d) move

	a1 )+	0780 a0 d) move
	a1 )+   0782 a0 d) move
	a1 )+   0784 a0 d) move
	a1 )+   0786 a0 d) move
	
	a1 )+   0820 a0 d) move
	a1 )+	0822 a0 d) move  
	a1 )+   0824 a0 d) move
	a1 )+   0826 a0 d) move
c;


code obscure
\ (  x  y  videotop  --  )

long
sp )+   a0 move    \ a0 is memtop
sp )+   d1 move    \ d1 is y
0a00 #  d1 mulu
sp )+   d0 move    \ d0 is x
0008 #  d0 mulu
d0      a0 adda
d1      a0 adda

0000 a0 d) clr   \ first half
0004 a0 d) clr   \ second half

00a0 a0 d) clr   \ second raster line
00a4 a0 d) clr   \ 

0140 a0 d) clr
0144 a0 d) clr

01e0 a0 d) clr
01e4 a0 d) clr

0280 a0 d) clr
0284 a0 d) clr

0320 a0 d) clr
0324 a0 d) clr 

03c0 a0 d) clr
03c4 a0 d) clr

0460 a0 d) clr
0464 a0 d) clr

0500 a0 d) clr
0504 a0 d) clr

05a0 a0 d) clr
05a4 a0 d) clr

0640 a0 d) clr
0644 a0 d) clr

06e0 a0 d) clr
06e4 a0 d) clr

0780 a0 d) clr
0784 a0 d) clr

0820 a0 d) clr
0824 a0 d) clr

08c0 a0 d) clr
08c4 a0 d) clr

0960 a0 d) clr
0964 a0 d) clr

c;


decimal
