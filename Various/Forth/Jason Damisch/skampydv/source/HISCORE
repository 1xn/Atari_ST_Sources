\ **********************
\ **  H I  S C O R E  **
\ **********************

: hiscore ;


create score-table   20 ( name ) 4 ( score ) 4 ( level ) + + 10 * allot
\   (   level   score   "name"   )


\ ******
: score!
\ (  address len   score  level  position  --  )
	1-   28 *  score-table +
	swap over !
	swap over 4 + !
	8 + dup 20 bl fill
	swap cmove
;


\ **
: sp
\ (  char  -- )
	1 #collumn +!
;


\ *********
: .template
	wipe-drawee
	0 #row !
	0 #collumn !
	."         #$%&'()*   +,`abcdefghi"
	 my-cr 
	." ----------------------------------------"  my-cr
	."     NAME                SCORE     LEVEL "  my-cr
	." ----------------------------------------"  my-cr
;


\ ************
: .score-table
	28 10 * score-table +   score-table do
		35 #collumn !   i @        3 .r
		22 #collumn !   i 4 + @    9 .r
		0  #collumn !   i 8 + 20 type  
		1  #row +!
	28 +loop
		-1 #row +! 
;


\ *******
: .scores
	.template  .score-table
;


\ ***********
: load-scores
	" hiscores" "remember
;

\ ********
create "sp  ascii " c,  bl c,


\ ********
create eol  carret c,   linefeed c,


\ ***
: ->f
	ofd @ fputs
;

\ ***********
: save-scores
\ (  adr cnt  --  )
	" hiscores" file-name pack new-file
	1
	28 10 * score-table +   score-table do	
		"sp 2 			->f
		i 8 +  20		->f
		"sp 2 			->f
		i 4 + @   <# #s #> 	->f
		"  " 			->f
		i @   <# #s #>		->f	
		"  "			->f
		dup   <# #s #> 		->f
		"  score!"		->f
		eol 2 			->f
	1+
	28 +loop
	drop
	ofd @ close
;


\ ****
: bump
\ (  position  --  )
	>r
	r@ 1- 28 *  score-table +
	dup 28 +
	280 r> 28 * - 
	cmove>
;


\ ************
variable score    0  score  !
variable #level   0  #level !
 

\ ***********
: high-score?
\ (  --  f | position )
	0
	1 10 do
		i 1-  28 * 4 +   score-table +  @
		score @ < if   drop i   then
	-1 +loop
;


\ *****
: legal
\ (  char  --  char  )
		dup 08 < 		if   00 swap   		then
		dup 08 =		if    8 swap   		then
 		dup 09 12 between 	if   00 swap   		then
		dup 13 = 		if   13 swap   		then
		dup 14 31 between	if   00 swap   		then
		dup 32 =		if   32 swap   		then
		dup 33 =		if   33 swap		then
		dup 34 45 between 	if   00 swap   		then
		dup 46 95 between 	if   dup  		then
		dup 96 =		if   00  swap 		then	
		dup 97 122 between      if   dup 32 - swap	then
		    122 >		if   00			then
;


\ ****
: <bs>
\ (  position   --  )
	#collumn @ 0 > if
		-1 #collumn +!   32 emit   -1 #collumn +!
		1-   28 *   8 +   #collumn @ +   score-table +   32 swap c!
	else
		drop
	then
;


\ *******
: implant
\ (  char  position  --  )
	#collumn @ 20 < if
		over emit
	  	1-   28 *   7 +   #collumn @ +   score-table +   c!	
	else
		2drop
	then
;


\ ***********
: gather-name
\ (  position  --  )
	0 #collumn !   dup 3 + #row !
	+click
	begin
		key legal
	dup 13 <> while
		dup 8 = if
			over <bs>
		then
		dup 8 > if
			over implant		
			0
		then
		drop
	repeat
	2drop
	-click
;


\ *************************
variable <<attract-mode-b>>


\ ************
: \_save-score
	load-scores
	high-score?
	dup if
		dup bump
		dup 1-   28 *   0 +   score-table +   #level @ swap !
		dup 1-   28 *   4 +   score-table +   score @ swap !
		dup 1-   28 *   8 +   score-table +   20 32 fill
		.scores
		drawee @  screen-swap-address !
		gather-name
		save-scores
		<<attract-mode-b>> @ execute 
	else
		drop
	then
;
