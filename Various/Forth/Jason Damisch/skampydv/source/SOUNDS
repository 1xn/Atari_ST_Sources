
\ **************************
\ ***  SOUND DEPARTMENT  ***
\ **************************

: sounds ;


hex

\ ******
: -click
	6 484 c! 
;


\ ******
: +click
	7 484 c!
;


decimal


: check
	-click
	   0 +tone
	15 0 volume
	40 0 frequency
        02 0 step-size
	;

defer o((.))0voice
defer o((.))1voice
defer o((.))2voice


\ ************
: -((.))0voice
	['] noop is o((.))0voice
	0  -tone
	0  -noise
	0 0 volume
;


\ ************
: -((.))1voice
	['] noop is o((.))1voice
	1 -tone
	1 -noise
	0 1 volume
;


\ ******
: -((.))2voice
	['] noop is o((.))2voice
	2 -tone
	2 -noise
	0 2 volume
;


\ ******************
\ *****  STEP  *****


\ ******************
variable step-volume


\ ***********
variable time     0  time   !


\ ********************
15 constant step-pitch


\ ****
: step
\ (  atom  --  )
	>compass @ 0=
	time @ 1 < 
	or if
		2 -noise
	else
		2 +noise
	then
;


\ ************
: <((.))step>
	step-volume @
	1-
	dup 0 = 7 and +
	dup 2+ 2 volume
	step-volume !
;


\ *********
alias -step  -((.))2voice


\ ******
: +step
	7  step-volume !
	2 +noise   2 -tone
	step-pitch noise-pitch
	['] <((.))step> is   o((.))2voice
;


\ *****   ((.))SIREN   *****

hex

create <scampy-pallet>
0000 w,   0333 w,   0555 w,   0777 w, 
0300 w,   0500 w,   0700 w,   0030 w,
0050 w,   0070 w,   0003 w,   0005 w,
0007 w,   0330 w,   0550 w,   0770 w,

decimal

\ *************
: scampy-pallet
	<scampy-pallet> change-pallet 
;


variable siren-counter
variable siren-volume
variable siren-direction


\ ************
: <((.))siren>      
\ main body of siren
	siren-direction @   siren-volume +!
	1 siren-counter +!
	siren-counter @ 8 = if
		0 siren-counter !
		siren-direction @ negate siren-direction !
		<scampy-pallet> w@ 1792 xor <scampy-pallet> w!   scampy-pallet
	then

	siren-volume @ 2 volume
	129  siren-volume @  8 * -   2 frequency 
;


\ **********
: ((.))siren
\  Activates the sound
	00 siren-counter   !
	07 siren-volume    !
	01 siren-direction !
	['] <((.))siren> is o((.))2voice
	2 +tone
	2 -noise
	01 2 step-size
	1792 <scampy-pallet> w!   scampy-pallet 
;


\ *****   ((.))WUNWUN   *****

variable wunwun-counter
variable wunwun-volume

\ ************
: <((.))wunwun>      
\ main body of wunwun
	wunwun-volume @
	1+
	dup 15 = 5 and -
	dup 1- 0 volume
	wunwun-volume !

	70   wunwun-counter @   +   0 frequency
	4 wunwun-counter +!
	wunwun-counter @ 60 = if   -((.))0voice   then
;


\ ***********
: ((.))wunwun
\  Activates the sound
	00 wunwun-counter !
	10 wunwun-volume  !
	['] <((.))wunwun> is o((.))0voice
	0 +tone
	40 0 frequency
	01 0 step-size
;

\ *****   ((.))WENWEN   *****

variable wenwen-counter
variable wenwen-volume

\ ************
: <((.))wenwen>      
\ main body of wenwen
	wenwen-volume @
	1+
	dup 15 = 5 and -
	dup 1- 0 volume
	wenwen-volume !

	70   wenwen-counter @   -   0 frequency
	4 wenwen-counter +!
	wenwen-counter @ 60 = if   -((.))0voice   then
;


\ **********
: ((.))wenwen
\  Activates the sound
	00 wenwen-counter !
	10 wenwen-volume  !
	['] <((.))wenwen> is o((.))0voice
	0 +tone
	40 0 frequency
	01 0 step-size
;


\ *****   ((.))BLONG   *****

variable blong-counter


\ ************
: <((.))blong>      
\ main body of blong
	blong-counter @ 2/ 0 volume
	-1 blong-counter +!
	blong-counter @ 0 = if   -((.))0voice   then
;


\ **********
: ((.))blong
\  Activates the sound
	30 blong-counter !
	['] <((.))blong> is o((.))0voice
	0 +tone
	255 0 frequency
	140 0 step-size
;


\ *****  ((.))GLIMP   *****

\ ********************
variable glimp-counter


\ ************
: <((.))glimp>      
\ main body of glimp
	glimp-counter @ 10 +   0 volume
	glimp-counter @ 0 step-size 
	1 glimp-counter +!
	glimp-counter @ 5 = if   -((.))0voice   then
;


\ **********
: ((.))glimp
\  Activates the sound
	000 glimp-counter !
	['] <((.))glimp> is o((.))0voice
	0 +tone
	255 0 frequency
;


\ *****  ((.))GLOMP  *****

\ ********************
variable glomp-counter


\ ************
: <((.))glomp>      
\ main body of glomp
	glomp-counter @ 10 +   0 volume
	glomp-counter @ 5 +    0 step-size 
	1 glomp-counter +!
	glomp-counter @ 5 = if   -((.))0voice   then
;


\ **********
: ((.))glomp
\  Activates the sound
	000 glomp-counter !
	['] <((.))glomp> is o((.))0voice
	0 +tone
	255 0 frequency
;


\ *****  ((.))POK  *****

\ ******************
variable pok-counter


\ **********
: <((.))pok>      
\ main body of pok
	pok-counter @ 10 +   1 volume 
	-1 pok-counter +!
	pok-counter @ 0 = if
		-((.))1voice   1 -noise   
		step-pitch noise-pitch	
	then
;


\ ********
: ((.))pok
\  Activates the sound
	003 pok-counter !
	['] <((.))pok> is o((.))1voice
	255 noise-pitch   1 -tone   1 +noise
;


\ *****  ((.))WEEN  *****

\ *******************
variable ween-counter


\ ***********
: <((.))ween>
\ main body of ween
	ween-counter @  1 volume
	-1 ween-counter +!
	50 ween-counter @ - 1 frequency
	ween-counter @ 0 = if   -((.))1voice   1 -tone   then
;


\ *********
: ((.))ween
\  Activates the sound
	015 ween-counter !
	['] <((.))ween> is o((.))1voice
	50 1 frequency
	1 +tone
;


\ **********
: sound-task
\  Execute this once every game loop to have changing sounds	
	o((.))0voice
	o((.))1voice
	o((.))2voice
;


\ ************
: reset-sounds
	-click
	-((.))0voice
	-((.))1voice
	-((.))2voice
;
