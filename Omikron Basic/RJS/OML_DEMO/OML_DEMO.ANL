 '' DEMO-Version vom 14.01.1991 Exklusiv fÅr TOS-Magazin
 '
 '  EingeschrÑnkte Demoversion:
 '                       a.) nicht compilierbar.
 '                       b.) kein Rechnen in den Dialogen mîglich.
 '                       c.) maximal 3 DialogbÑume erlaubt.
 '                       d.) Form_Do-Routine (Exit$) nur UNDO und HELP erlaubt.
 '                       e.) gekÅrzter Befehls- und Funktionsumfang.
 '                       f.) lÑuft nicht mit EASYGEM.
 '                       g.) keine Flydial's mîglich 
 '/////////////////////////////////////////////////////////////////////////////
 '                                 COPYRIGHT
 '   Aufruf : Omlib
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         INITIALISIEREN DER OMLIB
 '   Aufruf : Omlib_Init("Programmname")
 '            Omlib_Init
 '
 '   GLOBALE Variabeln     - Screen_W%    : Pixelbreite der Auflîsung
 '   -----------------     - Screen_H%    : Pixelhîhe          -"-
 '   Diese dÅrfen von      - Screen_Color%: Anz. der darstellbaren Farben
 '   Ihrem Programm        - Lw$          : angeschlossene Laufwerke ABCDE....
 '   nicht genutzt         - Akt_Path$    : Aktuelle Dateipfad nach dem Start
 '   werden !!!            - Command_Tail$: Eingabe$ beim Starten des Compilat
 '                                          als .TTP Programm
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                            PROGRAMM BEENDEN
 '   Aufruf : Omlib_Exit
 '            Desktop
 '
 '   Achtung: Beachten Sie die von Ihnen benutzte Library. Wenn Sie z.B. die
 '            EasyGem-Library benutzen, so mÅûen Sie Appl_Exit durch Easy_Exit
 '            ersetzen.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                              Der Menu-Manager
 '   Aufruf : Menu_On(Menue_Adresse%L)
 '                 - Menue anzeigen
 '            Menu_Off
 '                 - Menue ausschalten
 '            I%=FN Menu_Checked%(Menue_Obj%)
 '                 - Wenn Menue-Eintrag ein HÑkchen hat, so wird -1 zurÅckge-
 '                   geben, sonst eine 0
 '            I%=FN Menu_Disabled%(Menue_Obj%)
 '                 - Wenn Menue-Eintrag hellgeschrieben ist, so wird -1 zurÅck-
 '                   gegeben, sonst eine 0
 '            Menu_Rechecked(Menue_Obj%)
 '                 - ÅberprÅft selbststÑndig ob ein Menue-Eintrag ein HÑkchen
 '                   besitzt und stellt es ohne HÑkchen dar.(und umgekehrt)
 '            Menu_Renabled(Menue_Obj%)
 '                 - ÅberprÅft selbststÑndig ob ein Menue-Eintrag hellgeschrieben
 '                   ist und stellt es normal dar.(und umgekehrt)
 '
 '                            Menue-Leisten Abfragen
 '  Aufruf :  Menu(M_Leiste%,M_Punkt%)
 '            Menu(M_Leiste%,M_Punkt%,M_Taste$,M_Scan%,M_Con_Alt%)
 '            Menu(Desktop_Adresse%L,M_Leiste,M_Punkt%,M_Taste$,M_Scan%,M_Con_Alt%,M_Icon%)
 '
 '   öbergabe-Variable 'Desktop_Adresse%L' wird nur benîtigt, wenn ein internes
 '   Desktop mit Icon's abgefragt werden soll. In M_Icon% steht die Nummer des
 '   angeklickten Icon.
 '
 '   RÅckgabe-Variabeln - M_Leiste% : selektierte MenÅleiste
 '                      - M_Punkt%  : selektierter MenÅpunkt
 '                      - M_Taste$  : ASCII-String der gedrÅckten Taste
 '                      - M_Scan%   : Scan-Code der gedrÅckten Taste
 '                      - M_Con_Alt%: Status der Tasten Control,Alternate,
 '                      - M_Icon%   : Nummer des selektiertes Desktop-Icon's
 '                                    linke Shift-Taste und rechte Shift-Taste
 '                                    1 = rechtes Shift
 '                                    2 = linkes Shift
 '                                    4 = Control-Taste
 '                                    8 = Alternate-Taste
 '                                    Werden z.B. Control & Alternate gedrÅckt,
 '                                    so ergibt der RÅckgabewert 12 (4+8)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                      DIALOGBOX ZEICHNEN UND LôSCHEN
 '   Aufruf :  Dialog_On(Baum_Adresse%L)
 '             Dialog_Off(Baum_Adresse%L)
 '                 - Dialogbox zentriert zeichnen/lîschen
 '
 '             Dialog_On(Baum_Adresse%L,Bildmemory_Adresse)
 '             Dialog_Xy_On(Baum_Adresse,Bildmemory_Adresse,X%,Y%)
 '                 - Dialogbox zeichnen und Bildhintergrund retten
 '
 '             Dialog_Xy_On(Baum_Adresse%L,X%,Y%)
 '             Dialog_Xy_Off(Baum_Adresse%L)
 '                 - Dialogbox an Position X%,Y% zeichnen/lîschen
 '
 '             Dialog_Off(Baum_Adresse%L,Bildmemory_Adresse)
 '                 - Dialogbox lîschen und Bildhintergrund zurÅckkopieren
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          TEXT AUS ED-Objekt LESEN
 '   Aufruf : Text$=FN FN Get_Te_Ptext$(Baum_Adresse%L,Objekt_Nummer%)
 '            Text$=FN Get_Te_Ptmplt$(Baum_Adresse%L,Objekt_Nummer%)
 '            Text$=FN Get_Te_Pvalid$(Baum_Adresse%L,Objekt_Nummer%)
 '
 '   Achtung: Nur mîglich bei nachfolgenden Objekttypen  : G_Text    = 21 = $15
 '                                                         G_Boxtext = 22 = $16
 '                                                         G_String  = 28 = $1C
 '                                                         G_Ftext   = 29 = $1D
 '                                                         G_Fboxtext= 30 = $1E
 '                                                         G_Title   = 32 = $20
 '                      - Baum_Adr    : Baum Adresse
 '                      - Ed_Obj%     : Objekt Nummer
 '                      - Te_Ptext    : Zeiger auf Text
 '                      - Te_Ptmplt   : Zeiger auf Eingabemaske
 '                      - Te_Pvalid   : Zeiger auf Eingabeschablone
 '                      - Ob_type%    : Typ des Objekt
 '                      - Text$       : RÅckgabe-String
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         TEXT IN EIN ED-Objekt SCHREIBEN
 '   Aufruf : Set_Te_Ptext(Baum_Adresse%L,Objekt_Nummer%,"Garfield")
 '            Set_Te_Ptmplt(Baum_Adresse%L,Objekt_Nummer%,"Name : ________")
 '            Set_Te_Pvalid(Baum_Adresse%L,Objekt_Nummer%,"XXXXXXXX")
 '
 '   Achtung: Nur mîglich bei nachfolgenden Objekttypen  : G_Text    = 21 = $15
 '                                                         G_Boxtext = 22 = $16
 '                                                         G_String  = 28 = $1C
 '                                                         G_Ftext   = 29 = $1D
 '                                                         G_Fboxtext= 30 = $1E
 '                                                         G_Title   = 32 = $20
 '                      - Baum_Adr     : Baum Adresse
 '                      - Ed_Obj%      : Objekt Nummer
 '                      - Te_Ptext     : Zeiger auf Text
 '                      - Te_Pvalid    : Zeiger auf Eingabeschablone
 '                      - Te_Ptmplt    : Zeiger auf Eingabemaske
 '                      - Ob_type%     : Typ des Objekt
 '                      - Te_tmplen%   : LÑnge der Eingabemaske
 '                      - Te_Txtlen%   : LÑnge des Textes
 '                      - Te_Pvalidlen%: LÑnge der Schablone
 '                      - Text$        : RÅckgabe-String
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                  TEXT IN EIN BUTTON-OBJEKT SCHREIBEN ODER LESEN
 '   Aufruf : Set_Buttontext(Baum_Adresse%L,Objekt_Nummer%,"Speichern")
 '            Text$=FN Get_Buttontext$(Baum_Adresse%L,Objekt_Nummer%)
 '
 '   Achtung: Nur mîglich bei Objekttyp G_BUTTON = 26 = $1A
 '            Die LÑnge eines Button-Textes kann und darf nicht geÑndert werden.
 '            Am sichersten ist es, man Åbergibt die gleiche LÑnge und zentriert
 '            den neuen Text. Beispiel: "   OK   " oder "  SAVE  "
 '            Wird ein zu kleiner String Åbergeben, so wird dieser mit Leerzei-
 '            chen aufgefÅllt. Ein zu langer String wird gekÅrzt.
 '
 '                      - Baum_Adr     : Baum Adresse
 '                      - Ed_Obj%      : Objekt Nummer
 '                      - Te_Ptext     : Zeiger auf Text
 '                      - Ob_type%     : Typ des Objekt
 '                      - Te_Txtlen%   : LÑnge des Button-Textes
 '                      - Text$        : RÅckgabe- oder Schreibe-String
 '                      - Textlen%     : LÑnge des Schreibe-String
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          TEDINFO-ADRESSE ERMITTELN
 '   Aufruf : Tedinfo_Adresse=FN ob_spec(Baum_Adresse%L,Objekt_Nummer%)
 '                      - Baum_Adr    : Baum Adresse
 '                      - Ed_Obj%     : Objekt Nummer
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          TEDINFO-STRUKTUREN ERMITTELN
 '   Aufruf : Te_Ptext=FN Te_Ptext(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Ptmplt=FN Te_Ptmplt(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Pvalid=FN Te_Pvalid(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Font%=FN te_font%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Resvd1%=FN te_Resvd1%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Just%=FN te_just%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Color%=FN te_color%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Resvd2%=FN te_resvd2%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Thickness%=FN te_thickness%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Txtlen%=FN te_txtlen%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Tmplen%=FN te_tmplen%(Baum_Adresse%L,Objekt_Nummer%)
 '            Te_Pvalidlen%=FN te_pvalidlen%(Baum_Adresse%L,Objekt_Nummer%)
 '
 '            Te_Ptext      - Zeiger auf Text
 '            Te_Ptmplt     - Zeiger auf Maske
 '            Te_Pvalid     - Zeiger auf erlaubte Zeichen fÅr die Eingabe
 '            Te_Font%      - Benutzter Zeichensatz (3=normal, 5= kleine Schrift)
 '            Te_Resvd1%    - reserviert
 '            Te_Just%      - Randausgleich (0=links, 1=rechts, 2=zentriert)
 '            Te_Color%     - Zeichenfarbe
 '            Te_Resvd2%    - reserviert
 '            Te_Thickness% - Dicke der Rahmens (<0=Ñuûere Randlinie,>0=innere Randlinie)
 '            Te_Txtlen%    - LÑnge des Textstrings te_ptext
 '            Te_Tmplen%    - LÑnge der Eingabemaske
 '            Te_Pvalidlen% - LÑnge der erlaubten Zeichen
 '                          - Adr      : Baum Adresse
 '                          - Obj%     : Objekt Nummer
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '               SCHREIBEN-,LôSCHEN UND SETZEN EINED OBJEKT-FLAG'S
 '   Aufruf : Flag%=FN ob_flag%(Baum_Adresse%L,Obj%)
 '            Set_Ob_Flag(Baum_Adresse%L,Obj%,Flag%)
 '            Clear_Ob_Flag(Baum_Adresse%L,Obj%,Flag%)
 '
 '   Folgende Flags gibt es:     NONE       =   0  = %000000000 = $000
 '                               SELECTABLE =   1  = %000000001 = $001
 '                               DEFAULT    =   2  = %000000010 = $002
 '                               EXIT       =   4  = %000000100 = $004
 '                               EDITABLE   =   8  = %000001000 = $008
 '                               RBUTTON    =  16  = %000010000 = $010
 '                               LASTOB     =  32  = %000100000 = $020
 '                               TOUCHEXIT  =  64  = %001000000 = $048
 '                               HIDETREE   = 128  = %010000000 = $080
 '                               INDIRECT   = 256  = %100000000 = $100
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '              SCHREIBEN-,LôSCHEN UND SETZEN EINED OBJEKT-ZUSTAND'S
 '   Aufruf : State%=FN ob_state%(Baum_Adresse%L,Obj%)
 '            Set_Ob_State(Baum_Adresse%L,Obj%,State%)
 '            Clear_Ob_State(Baum_Adresse%L,Obj%,State%)
 '
 '   Folgende ZustÑnde gibt es :      NORMAL    =  0 = %000000 = $00
 '                                    SELECTED  =  1 = %000001 = $01
 '                                    CROSSED   =  2 = %000010 = $02
 '                                    CHECKED   =  4 = %000100 = $04
 '                                    DISABLED  =  8 = %001000 = $08
 '                                    OUTLINED  = 16 = %010000 = $10
 '                                    SHADOWED  = 32 = %100000 = $20
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                             LESE OBJEKT-TYP
 '   Aufruf : Type%=FN ob_type%(Baum_Adresse%L,Obj%)
 '
 '   Folgende Objekt-Typen gibt's:      G_BOX        =  20  =  $14
 '                                      G_TEXT       =  21  =  $15
 '                                      G_BOXTEXT    =  22  =  $16
 '                                      G_IMAGE      =  23  =  $17
 '                                      G_PROGDEF    =  24  =  $18
 '                                      G_IBOX       =  25  =  $19
 '                                      G_BUTTON     =  26  =  $1A
 '                                      G_BOXCHAR    =  27  =  $1B
 '                                      G_STRING     =  28  =  $1C
 '                                      G_FTEXT      =  29  =  $1D
 '                                      G_FBOXTEXT   =  30  =  $1E
 '                                      G_ICON       =  31  =  $1F
 '                                      G_TITLE      =  32  =  $20
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          ERMITTELN DER OBJEKT-KOORDINATEN
 '   Aufruf : Ob_Pos(Baum_Adresse%L,Objekt_Nummer%,X%,Y%,W%,H%)
 '
 '   RÅckgabe-Variabeln          - X%  : X-Koordinate relativ zum Elternobjekt
 '                               - Y%  : Y-Koordinate relativ zum Elternobjekt
 '                               - W%  : Breite des Objekt's
 '                               - H%  : Hîhe des Objekt's
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          SETZEN DER OBJEKT-KOORDINATEN
 '   Aufruf : Set_Ob_Pos(Baum_Adresse%L,Objekt_Nummer%,X%,Y%)
 '
 '   öbergabe-Variabeln          - X%  : X-Koordinate relativ zum Elternobjekt
 '                               - Y%  : Y-Koordinate relativ zum Elternobjekt
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                     Vereinfachter Objc_Draw-Aufruf
 '   Aufruf : Objc_Draw(Baum_Adresse%L,Object%,Tiefe%)
 '   Achtung: Dieser Aufruf reicht im allgemeinen aus.
 '            - Object%   : Nummer des ersten zu zeichnenden Objekt's
 '            - Tiefe%    : Anzahl der Ebenen, die im Baum ab Object% gezeichnet
 '                          werden sollen.
 '                          - 0 : Nur Objekt
 '                          - 1 : Objekt und eine Ebene von Nachfolgern, usw.
 '                          - 8 : maximale Tiefe
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                    Vereinfachter Objc_Change-Aufruf
 '   Aufruf : Objc_Redraw(Baum_Adresse%L,Object%,Ob_state%)
 '   Achtung: Dieser Aufruf reicht im allgemeinen aus. Er zeichnet das Objekt
 '            sofort mit dem neuen Status.
 '            - Object%   : Nummer des zu zeichnenden Objekt's
 '            - Ob_state% : neuer Objekt-Status
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          OBJEKT VERSTECKEN ODER HERVORHOLEN
 '   Aufruf : Hide_Object(Baum_Adresse%L,Objekt_Nummer%)
 '                - Button- bzw. Objekt verstecken
 '
 '            Unhide_Object(Baum_Adresse%L,Objekt_Nummer%)
 '                - Button- bzw. Objekt verstecken
 '
 '            I%=FN Object_Hide(Baum_Adresse%L,Objekt_Nummer%)
 '                - ist Button- bzw. Objekt versteckt =1 sonst 0
 '
 '            Change_Hide(Baum_Adresse%L,Objekt_Nummer%,Draw%)
 '                - wechselt selbststÑndig zwisches Hide/Unhide. Ist
 '                  Draw% -1, so wird das Objekt sofort neu gezeichnet.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                     OBJEKT SELEKTIEREN ODER NORMAL DARSTELLEN
 '   Aufruf : Select_Object(Baum_Adr,Obj%)
 '                  - Button- bzw. Objekt selektieren
 '
 '            Deselect_Object(Baum_Adr,Obj%)
 '                  - Button- bzw. Objekt wieder normal darstellen
 '
 '            I%=FN Object_Selected(Baum_Adr,Obj%)
 '                  - ist Button- bzw. Objekt selektiert =1 sonst 0
 '
 '            Change_Select(Baum_Adresse%L,Objekt_Nummer%,Draw%)
 '                - wechselt selbststÑndig zwisches Selekt/Deselekt. Ist
 '                  Draw% -1, so wird das Objekt sofort neu gezeichnet.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         OBJEKT ANKLICKBAR ODER NICHT
 '   Aufruf :  Disable_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt nicht selektierbar (Disable)
 '
 '             Enable_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt wieder selektierbar (Enable)
 '
 '             I%=FN Object_Disabled(Baum_Adr,Obj%)
 '                 - ist Button- bzw. Objekt nicht selektierbar =1 sonst 0
 '
 '            Change_Disable(Baum_Adresse%L,Objekt_Nummer%,Draw%)
 '                - wechselt selbststÑndig zwisches Enable/Disable. Ist
 '                  Draw% -1, so wird das Objekt sofort neu gezeichnet.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         OBJEKT DURCHKREUZT ODER NICHT
 '   Aufruf :  Crossed_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt durchkreutzen (Crossed)
 '
 '             Uncrossed_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt nichtmehr durchkreutzen (UnCrossed)
 '
 '             I%=FN Object_Crossed(Baum_Adr,Obj%)
 '                 - ist Button- bzw. Objekt durchkreutzt =1 sonst 0
 '
 '            Change_Crossed(Baum_Adresse%L,Objekt_Nummer%,Draw%)
 '                - wechselt selbststÑndig zwisches Crossed/Uncrossed. Ist
 '                  Draw% -1, so wird das Objekt sofort neu gezeichnet.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         OBJEKT mit HÑkchen oder nicht
 '   Aufruf :  Crossed_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt durchkreutzen (Crossed)
 '
 '             Uncrossed_Object(Baum_Adr,Obj%)
 '                 - Button- bzw. Objekt nichtmehr durchkreutzen (UnCrossed)
 '
 '             I%=FN Object_Crossed(Baum_Adr,Obj%)
 '                 - ist Button- bzw. Objekt durchkreutzt =1 sonst 0
 '
 '            Change_Checked(Baum_Adresse%L,Objekt_Nummer%,Draw%)
 '                - wechselt selbststÑndig zwisches Checked/Unchecked. Ist
 '                  Draw% -1, so wird das Objekt sofort neu gezeichnet.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                 FELDER EINER DIALOGBOX LôSCHEN BZW. DESELEKTIEREN
 '   Aufruf : Clear_Dialog(Baum_Adresse%L)
 '
 '   Alle selektierten Buttons und Felder werden wieder normal dargestellt
 '   Alle Editierbaren Felder werden gelîscht.Cursor steht am Anfang d. Feldes
 '
 '                      -  Adr      : Adresse des Dialogbaums
 '                      -  Startob% : erstes Objekt im Dialog
 '                      -  Endob%   : letztes Objekt im Dialog
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                           Der neue FORM_DO Manager
 '   Aufruf :  Form_Do(Baum_Adresse,Editobjekt%,Ex$,Last_Obj%,Ex_Scan%,Ex_Obj%,Cursor%)
 '             Form_Do(Baum_Adresse,Editobjekt%,Ex$,Ex_Scan%,Ex_Obj%,Cursor%)
 '             Form_Do(Baum_Adresse,Editobjekt%,Ex$,Ex_Scan%,Ex_Obj%)
 '             Form_Do(Baum_Adresse,Editobjekt%,Ex_Obj%,Cursor%)
 '             Form_Do(Baum_Adresse,Ex_Obj%)
 '
 '   öbergabe-Variabeln :   - Baum_Adresse%L : Dialog-Adresse
 '                          - Editobjekt%    : Nummer des Feldes in dem der
 '                                             Cursor stehen soll.
 '                          - Ex$            : Scan-Code im ASCII-Format
 '                                             Beispiel: Abbruch mit Tasten
 '                                             ALT & UNDO und ALT & F10
 '                                             Ex$=chr$(97)+chr$(68)
 '   RÅckgabe-Variabeln:    - Ex_Scan%       : Scan-Code der mit Ex$ definierten
 '                                             Taste
 '                          - Ex_Obj%        : Nummer des Exit-Objekt's das mit
 '                                           : der Maus angeklickt wurde.
 '                          - Cursor%        : Nummer des Objekt, wo zuletzt der
 '                                             Cursor stand.
 '   Wird mit ENTER oder ALTERNATE & RETURN der Dialog beendet, so wird der
 '   Scan-Code und die Nummer des Default-Exit-Objektes zurÅckgegeben.
 '
 '
 '   Die BenutzerfÅhrung:
 '   RETURN             -  Der Cursor springt in die nÑchste Zeile
 '   TAB                -                -dito-
 '   Cursor runter      -                -dito-
 '   Cursor hoch        -  Der Cursor springt zum vorhergehenden ED-Objekt
 '   Cursor links       -  Cursor links im ED-Objekt
 '   Cursor rechts      -  Cursor rechts im ED-Objekt
 '   ESC                -  lîscht die momentane Eingabezeile
 '   BACKSPACE          -  lîscht das Zeichen das hinter dem Cursor steht
 '   DELETE             -  lîscht das Zeichen das vor dem Cursor steht
 '   CONTROL & DELETE   -  lîscht ab dem Cursor den Rest der Zeile
 '   CLR/HOME           -  positioniert den Cursor im ersten ED-Feld
 '   CONTROL & CLR/HOME -  lîscht alle ED-Felder und deselektiert alle Button's
 '   ALTERNATE & Taste  -  beendet den Dialog mit der in Ex$ definierten Taste
 '   ALTERNATE & RETURN -  beendet den Dialog
 '   ENTER              -  beendet den Dialog
 '   Beide Maustasten   -  deselektiert einen Radio-Button
 '
 '   Wurde ein ED-Objekt mit Set_Calc_Obj(Adr,Obj%,Nachkommastellen%) definiert,
 '   so kann in diesem Feld mit +-*/ gerechnet werden. Mit ENTER wird das Feld
 '   errechnet und angezeigt. Erst nach dem ausrechnen kann der Dialog mit der
 '   ENTER-Taste beendet werden. Beispiel : 10+10-5 ENTER = 15
 '
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                         DEFAULT-EXIT-Objekt finden
 '  Aufruf : Objekt%= FN Default_Object%(Baum_Adresse)
 '  Achtung: Diese Funktion kann feststellen, ob ein DEFAULT-EXIT Objekt
 '           existiert. Es wird die Objekt_Nummer zurÅckgegeben. Findet die
 '           Funktion keines, so wird -1 zurÅckgegeben.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '               Suche nÑchstes EDITABLE-Feld ab Objekt_Nummer%
 '  Aufruf : Objekt%=FN Next_Ed_Obj%(Baum_Adresse,Objekt_Nummer%)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '             Suche vorhergehendes EDITABLE-Feld ab Objekt_Nummer%
 '  Aufruf : Objekt%=FN Last_Ed_Obj%(Baum_Adresse,Objekt_Nummer%)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                   Suche nÑchstes Objekt ab Objekt_Nummer%
 '  Aufruf : Objekt%=FN Next_Obj%(Baum_Adresse%,Objekt_Nummer%)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '     Suche erstes beigeordnetes Objekt zu Objekt_Nummer% ab Baum_adresse
 ' Aufruf : Objekt%= FN Add_Obj%(Baum_Adresse,Objekt_Nummer%)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                   Suche öbergeordnetes Objekt ab Objekt_Nummer%
 '  Aufruf : Objekt%=FN Over_Obj%(Baum_Adresse,Objekt_Nummer%)
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          RADIO-BUTTON SELEKTIEREN
 '  Aufruf :  Change_Rbut(Baum_Adresse,Objekt_Nummer%)
 '
 '  Achtung: alle RButton's auf einer Ebene werden zuerst deselektiert und
 '           dann wird der RButton (Objekt_Nummer%) selektiert.
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                       Klick-Simulation eines Button's
 '  Aufruf :  Form_Button(Baum_Adresse,Objekt%)
 '                 - Button wird 10/100tel Sekunden invertiert
 '            Form_Button(Baum_Adresse,Objekt%,Time%)
 '                 - Button wird 'Time%' Sekunden invertiert
 '  Achtung:  Simuliert das anklicken eines Button's in der Form_DO-Procedur
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                             Tastaturabfrage
 '  Aufruf :  Get_Key(Taste$,Scan_code%,shift_Status%)
 '
 '  RÅckgabe-Variabeln   - Key$    : Buchstabe oder Ziffer der Taste
 '                                   z.B. "1" oder "a" ....
 '                       - Scan%   : Scan-Code der Taste (1-114)
 '                       - Kbshift%: Status der Control,-Shift,- und Alt-Taste
 '                                   Bit 0 = rechte Shift-Taste
 '                                   Bit 1 = linke Shift-Taste
 '                                   Bit 2 = CONTROL-Taste
 '                                   Bit 3 = ALTERNATE-Taste
 '                                   Bit 4 = CAPS-LOC-Taste
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '         INVERTIEREN EINES TEXTES ( Ausgabe nur auf Bildschirm nÅtzlich)
 '   Aufruf : PRINT FN Invers$("Alle meine Hasen")
 '   oder   : Text$=FN Invers$("Alle meine Hasen")
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                          SETZEN DER MAUSFORM
 '   Aufruf : Set_Pfeil oder Set_Cursor oder Set_Biene ..........
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '                        ERMITTELN DES AKTUELLEN DATEI-PFAD'S
 '   Aufruf : Path$=Get_Path$
 '            - LW%    : Aktuelles Laufwerk (0 bis 15)
 '            - Buffer : Adresse des Pfad-Strings
 '            - Path$  : Aktuelle Dateipfad
 '/////////////////////////////////////////////////////////////////////////////
 '////////////////////////////////////////////////////////////////////////////
 '                   Fenster mit Doppelrahmen Zeichnen
 ' AUFRUF: Win_on (X_Pos%,Y_Pos%,Breite%,Hîhe%)
 '////////////////////////////////////////////////////////////////////////////
 '////////////////////////////////////////////////////////////////////////////
 '               Programminfo in die linke obere Ecke Zeichnen
 ' AUFRUF: Layer("Dies ist eine Info")
 '////////////////////////////////////////////////////////////////////////////
 '////////////////////////////////////////////////////////////////////////////
 '      Steuerinfo in die MenÅzeile schreiben (nicht fÅr Low-Auflîsung)
 ' AUFRUF: Minfo_Help(I%)   = HELP
 '         Minfo_Undo(I%)   = UNDO                    Achtung: I%=1 zeichnen
 '         Minfo_Key(I%)    = TASTATUR                         I%=0 lîschen
 '         Minfo_Fkey(I%)   = F-Tasten
 '////////////////////////////////////////////////////////////////////////////
 '////////////////////////////////////////////////////////////////////////////
 '                      MODE LPRINT "D" fÅr OPEN "P"
 ' AUFRUF  :  PRINT #1,FN Lprint$(TEXT,"D")
 '            PRINT #1,FN Lprint$(TEXT,"USA")
 '
 ' Achtung :  Siehe MODE LPRINT Befehl im Omikron.BASIC-Handbuch
 '////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '             Testen ob ein Drucker angeschlossen ist (Centronics)
 '  AUFRUF   : OK%=FN Prn_Online%
 '             IF FN Prn_Online% THEN LPRINT "Prima, der Drucker ...."
 '
 '  Achtung  : Ist kein Drucker angeschlossen, erscheint eine Alert-Box
 '             RÅckgabewert  -1 = OK
 '                            0 = Abbruch
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '            MS-DOS MenÅabfrage -  z.B.     [S]peichern
 '                                           [L]aden
 '                                           [E]nde
 '  AUFRUF   :  Wahl%=FN Taste%("SLE")
 '
 '  Achtung  :  RÅckgabewerte ist die Stelle im String (S=1, L=2, E=3, ....)
 '
 '/////////////////////////////////////////////////////////////////////////////
 '/////////////////////////////////////////////////////////////////////////////
 '           Wechselt fÅr eine halbe Sekunde das RTS-Bit an der RS-232
 '
 '  Aufruf   : Datei_Pfad$= FN get_file_path$("OMLIBGEM.LIB")
 '                          FN get_file_path$("OMLIBGEM.LIB","A:\")
 '  Achtung  : Sucht in allen Unterverzeichnissen nach einer Datei.
 '             RÅckgabewert$= Der gefundene Verzeichnisspfad
 '/////////////////////////////////////////////////////////////////////////////
 '///////////////////////////////////////////////////////////////////////////
 '    Ermittelt die sekunden zwischen Start_Timer und FN Stop_Timer
 '///////////////////////////////////////////////////////////////////////////
 '///////////////////////////////////////////////////////////////////////////
 '//           Errechnet den Speicherplatz (Byte's) einer Dialogbox
 '//
 '//  Aufruf : Rette_Bild_Nr1= MEMORY(FN Dialog_Memory(Bild_Nr1))
 '//
 '//  Wird benîtigt um mit dem BITBLT-Befehl den Hintergrund zu sichern
 '///////////////////////////////////////////////////////////////////////////
 '///////////////////////////////////////////////////////////////////////////
 '//                              Flydial's
 '//
 '//  Aufruf :  Flydial(Baum_Adresse%L,Rette_Bild_Memory)
 '//
 '//  Rette_Bild_Memory ist der Speicherplatz um den Hintergrung zu retten
 '///////////////////////////////////////////////////////////////////////////
 '//////////////////////////////////////////////////////////////////////////
 '//                 Schneidet Dateinahmen vom Pfad ab
 '//
 '//  Aufruf : ? FN Check_Path$("A:\Librarys\*.*")
 '//           A$ = FN Check_Path$(Pfad$)
 '//////////////////////////////////////////////////////////////////////////

