10 rem  ____________________________
20 rem |                            |
30 rem |  STOS Tutorial for ICTARI  |
40 rem |     Slideshow program      |
50 rem |            #1              |
60 rem |                            |
70 rem |  David Preston  - Jan '97  |
80 rem |____________________________|
90 rem
100 key off : curs off : show on : hide 
110 if mode=2 then locate 0,10 : centre "Colour systems only - Press a key..." : wait key : default : end 
120  : 
130 mode 0
140 reserve as screen 5
145 dim PAL(15),TILE_MAP(9,9)
150 TEST$=".PI1.NEO"
160  : 
170 show : palette $666,$0 : DUMMY$=file select$("*.*","Select path for picture files.  (Enter 'Q' in filename to Quit)") : hide 
180 if DUMMY$<>"" and left$(DUMMY$,1)="Q" then default : end 
190  : 
200 rem /// Main loop ///
210 EXIT_FLAG=false
220 repeat 
230  : F$=dir first$("*.*",32)
240  : if F$="" then cls : locate 0,10 : centre "No pictures! Press a key..." : wait key : EXIT_FLAG=true : goto 370
250  : repeat 
260  :  : gosub 410
270  :  : F$=left$(F$,12)-" "
280  :  : EXT$=right$(F$,4)-"."
290  :  : gosub 410
300  :  : L0ADED=false
310  :  : gosub 460
320  :  : gosub 410
330  :  : if L0ADED then gosub 560
340  :  : gosub 410
350  :  : F$=dir next$
360  : until F$=""
370 until EXIT_FLAG
380 goto 170
390  : 
400 rem /// Check for ESC key ///
410 K$=inkey$ : SC=scancode : AXI=asc(K$)
420 if AXI=27 then EXIT_FLAG=true
430 return 
440  : 
450 rem /// Test file extender and branch to load routine ///
460 FTYPE=(instr(TEST$,EXT$)+3)/4
470 on FTYPE gosub 510,510
480 return 
490  : 
500 rem /// Load Degas (*.PI1) or Neochrome (*.NEO) ///
510 load F$,5
520 L0ADED=true
530 return 
540  : 
550 rem /// Choose FX ///
560 FX=rnd(15)+1
570 on FX gosub 620,670,730,890,1050,1150,1260,1340,1480,1560,1660,1820,2040,2420,2570,2670
580 return 
590  : 
600 rem /// FX ///
610 rem ### Fade + appear ###
620 fade 12 to 5
630 appear 5
640 return 
650  : 
660 rem ### Fade down & up again ###
670 fade 6 : wait 42
680 screen copy 5 to physic
690 fade 6 to 5 : wait 42
700 return 
710  : 
720 rem ### Tiles 1 ###
730 for Y=0 to 9
740 for X=0 to 9
750 cls physic,0,X*64/divx,Y*20 to X*64/divx+64/divx,Y*20+20
760 wait 1
770 next X
780 next Y
790 fade 3 to 5 : wait 21
800 for Y=0 to 9
810 for X=0 to 9
820 screen copy 5,X*64/divx,Y*20,X*64/divx+64/divx,Y*20+20 to physic,X*64/divx,Y*20
830 wait 1
840 next X
850 next Y
860 return 
870  : 
880 rem ### Tiles 2 ###
890 for X=0 to 9
900 for Y=0 to 9
910 cls physic,0,X*64/divx,Y*20 to X*64/divx+64/divx,Y*20+20
920 wait 1
930 next Y
940 next X
950 fade 3 to 5 : wait 21
960 for X=0 to 9
970 for Y=0 to 9
980 screen copy 5,X*64/divx,Y*20,X*64/divx+64/divx,Y*20+20 to physic,X*64/divx,Y*20
990 wait 1
1000 next Y
1010 next X
1020 return 
1030  : 
1040 rem ### Overwrite tile + fade - vert ###
1050 fade 12 to 5
1060 for X=0 to 9
1070 for Y=0 to 9
1080 screen copy 5,X*64/divx,Y*20,X*64/divx+64/divx,Y*20+20 to physic,X*64/divx,Y*20
1090 wait 1
1100 next Y
1110 next X
1120 return 
1130  : 
1140 rem ### Overwrite tile + fade - horiz ###
1150 fade 12 to 5
1160 for Y=0 to 9
1170 for X=0 to 9
1180 screen copy 5,X*64/divx,Y*20,X*64/divx+64/divx,Y*20+20 to physic,X*64/divx,Y*20
1190 wait 1
1200 next X
1210 next Y
1220 return 
1230  : 
1240 rem ### Pour out & pour in again (gelatin) ###
1250 rem Not pretty code, but faster than single statement lines!
1260 BANK_ADR=start(5)
1270 for X=physic to physic+32000-160 step 160 : for Z=X to physic step-160 : copy X,X+160 to Z : next Z : next X
1280 fade 3 to 5 : wait 21
1290 FT=physic+32000
1300 for X=BANK_ADR+32000-160 to BANK_ADR step-160 : FT=FT-160 : for Z=physic to FT step 160 : copy X,X+160 to Z : next Z : next X
1310 return 
1320  : 
1330 rem ### Collapse to centre line then expand ###
1340 for Z=0 to 100
1350 fill physic+Z*160 to physic+Z*160+160,0
1360 fill physic+32000-Z*160 to physic+32000-Z*160+160,0
1370 wait 1
1380 next Z
1390 fade 3 to 5 : wait 21
1400 for Z=100 to 0 step-1
1410 copy start(5)+Z*160,start(5)+Z*160+160 to physic+Z*160
1420 copy start(5)+32000-Z*160,start(5)+32000-Z*160+160 to physic+32000-Z*160
1430 wait 1
1440 next Z
1450 return 
1460  : 
1470 rem ### Wipe transition + fade ###
1480 fade 28 to 5
1490 for Z=0 to 199
1500 copy start(5)+Z*160,start(5)+Z*160+160 to physic+Z*160
1510 wait vbl 
1520 next Z
1530 return 
1540  : 
1550 rem ### Spread from centre ###
1560 fade 5 to 5
1570 Y=95
1580 for X=320/divx to 0 step-32/divx
1590 screen copy 5,X,Y,640/divx-X,200-Y to physic,X,Y
1600 wait 5
1610 Y=Y-10
1620 next X
1630 return 
1640  : 
1650 rem ### Clear from centre then spread from centre ###
1660 Y=90
1670 for X=320/divx-32/divx to 0 step-32/divx
1680 cls physic,0,X,Y to 640/divx-X,200-Y
1690 wait 2
1700 Y=Y-10
1710 next X
1720 fade 3 to 5 : wait 21
1730 Y=95
1740 for X=320/divx to 0 step-32/divx
1750 screen copy 5,X,Y,640/divx-X,200-Y to physic,X,Y
1760 wait 2
1770 Y=Y-10
1780 next X
1790 return 
1800  : 
1810 rem ### Random tiles + fade ###
1820 TT=0
1830 for X=0 to 9
1840 for Y=0 to 9
1850 TILE_MAP(X,Y)=TT : inc TT
1860 next Y
1870 next X
1880 for X=0 to 9
1890 for Y=0 to 9
1900 XX=rnd(9) : YY=rnd(9)
1910 swap TILE_MAP(X,Y),TILE_MAP(XX,YY)
1920 next Y
1930 next X
1940 fade 10 to 5
1950 for XX=0 to 9
1960 for YY=0 to 9
1970 Q=TILE_MAP(XX,YY) : X=Q/10 : Y=Q mod 10
1980 screen copy 5,X*64/divx,Y*20,X*64/divx+64/divx,Y*20+20 to physic,X*64/divx,Y*20 : wait 1
1990 next YY
2000 next XX
2010 return 
2020  : 
2030 rem ### Sequential fade ###
2040 fade 2,0 : wait 14
2050 fade 2,,0 : wait 14
2060 fade 2,,,0 : wait 14
2070 fade 2,,,,0 : wait 14
2080 fade 2,,,,,0 : wait 14
2090 fade 2,,,,,,0 : wait 14
2100 fade 2,,,,,,,0 : wait 14
2110 fade 2,,,,,,,,0 : wait 14
2120 fade 2,,,,,,,,,0 : wait 14
2130 fade 2,,,,,,,,,,0 : wait 14
2140 fade 2,,,,,,,,,,,0 : wait 14
2150 fade 2,,,,,,,,,,,,0 : wait 14
2160 fade 2,,,,,,,,,,,,,0 : wait 14
2170 fade 2,,,,,,,,,,,,,,0 : wait 14
2180 fade 2,,,,,,,,,,,,,,,0 : wait 14
2190 cls : fade 2 to 5 : wait 14
2200 for Z=0 to 15 : PAL(Z)=colour(Z) : next Z
2210 Z=PAL(0) : fade 2,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z : wait 14
2220 screen copy 5 to physic
2230 fade 2,PAL(0) : wait 14
2240 fade 2,,PAL(1) : wait 14
2250 fade 2,,,PAL(2) : wait 14
2260 fade 2,,,,PAL(3) : wait 14
2270 fade 2,,,,,PAL(4) : wait 14
2280 fade 2,,,,,,PAL(5) : wait 14
2290 fade 2,,,,,,,PAL(6) : wait 14
2300 fade 2,,,,,,,,PAL(7) : wait 14
2310 fade 2,,,,,,,,,PAL(8) : wait 14
2320 fade 2,,,,,,,,,,PAL(9) : wait 14
2330 fade 2,,,,,,,,,,,PAL(10) : wait 14
2340 fade 2,,,,,,,,,,,,PAL(11) : wait 14
2350 fade 2,,,,,,,,,,,,,PAL(12) : wait 14
2360 fade 2,,,,,,,,,,,,,,PAL(13) : wait 14
2370 fade 2,,,,,,,,,,,,,,,PAL(14) : wait 14
2380 fade 2,,,,,,,,,,,,,,,,PAL(15) : wait 14
2390 return 
2400  : 
2410 rem ### Scroll up, fade, then scroll up again ###
2420 cls back
2430 def scroll 1,0,0 to 640/divx,200,0,-1
2440 for Y=0 to 199
2450 screen copy back,0,Y,640/divx,Y+1 to physic,0,199
2460 scroll 1
2470 next Y
2480 fade 2 to 5 : wait 15
2490 screen copy 5 to back
2500 for Y=0 to 199
2510 screen copy back,0,Y,640/divx,Y+1 to physic,0,199
2520 scroll 1
2530 next Y
2540 return 
2550  : 
2560 rem ### Scroll up while fading ###
2570 def scroll 1,0,0 to 640/divx,200,0,-1
2580 fade 35 to 5
2590 screen copy 5 to back
2600 for Y=0 to 199
2610 screen copy back,0,Y,640/divx,Y+1 to physic,0,199
2620 scroll 1
2630 next Y
2640 return 
2650  : 
2660 rem ### Vertical blinds + fade ###
2670 fade 21 to 5
2680 for Y=0 to 199
2690 for X=0 to 79/divx step 2
2700 screen copy 5,X*16,Y,X*16+16,Y+1 to physic,X*16,Y
2710 screen copy 5,(X+1)*16,199-Y,(X+1)*16+16,199-Y+1 to physic,(X+1)*16,199-Y
2720 next X
2730 next Y
2740 return 
