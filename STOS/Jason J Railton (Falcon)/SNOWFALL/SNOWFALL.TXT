  This demonstrates my SNOWFALL code, which moves pixels in colour 8
down the screen in a flow, but stopping them when they encounter fixed
pixels of any colour.  If you draw anything on the screen in colour 8,
then run the code repeatedly, it will fall until it hits something,
then collapse into a pile.  Anything you draw in colours 1-7 will stop
the falling colour 8 pixels.  If you draw anything in colours 9-15,
the '8' will actually drop away, leaving colours 1-7 instead!

  The key to this process is a machine code program that doesn't stand
alone, but is loaded into a STOS memory bank.  See the source code and
the STOS BASIC examples for how to use it.

  In the sub-folder M_CODE is SNOWMOVE.S.  This is assembly source
code for a .PRG, to be used as a program loaded into a STOS memory
bank.  The code can NOT be run on its own, from the desktop.  You may
however want to use it as a subroutine in your own code.

  The STOS BASIC programs SNOWFALL.BAS and SNOWBALL.BAS demonstrate
different uses of the code.  A flashing point in the centre of the
screen is your mouse cursor.  Use the left and right mouse buttons to
draw and erase lines on the screen to block or redirect the falling
snow, and press the C key to clear the screen and re-start.

  SNOWTREE.BAS is the fractal tree generator from XMASDECS, but
converted to run in low-res with added snow.

  SNOWFALL.PRG is a compiled and GenFixed version of SNOWFALL.BAS, but
I haven't provided compiled versions of SNOWBALL.BAS and SNOWTREE.BAS.

  In all these demos, press SPACE to quit.


Jason J Railton
March '97
