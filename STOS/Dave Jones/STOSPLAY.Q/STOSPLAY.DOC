
 ZZD  STOS Player of Quartet Music V1.0 - 3/93
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 STOSPLAY.PRG  is  a  machine-code program  for  playing  Quartet 
 modules by interrupt from within a STOS program.  It is based on 
 my stand-alone Quartet player and is the result of encouragement  
 and information from  Steve Delaney of  Floppyshop and  from Bob 
 Pond,  a STOS punter who appealed for  someone to produce such a 
 player.

 Using  STOSPLAY involves loading it and Quartet  module(s)  into 
 memory,  then calling the player program with various parameters 
 passed  to the 68000's data and address registers via  the  STOS 
 pseudo registers.  See below.

 Limitations
 ~~~~~~~~~~~ 
 Unlike my stand-alone player, STOSPLAY doesn't unpack compressed           
 Quartet modules.  Use normal files.
 
 DO  NOT  use the STOS commands WAIT or BELL  while  STOSPLAY  is 
 installed. You are unlikely to need BELL while music is playing, 
 and WAIT can be replaced with a FOR-NEXT counting loop.   
   
 DO NOT access disk drives while playing music.
 
 Sprite movement using interrupts, as with the MOVE X, MOVE Y and 
 MOVE ON commands,  can become jerky when music is playing. Other 
 STOS commands that use interrupts may also be affected.

 Music  is  liable  to slow down when the mouse  or  joystick  is 
 moved.  This  effect  can be avoided by disabling  mouse  and/or 
 joystick   with  an  XBIOS  function   called   "IKBDWS".    See 
 MOUSEJOY.OFF folder for details. 

 Loading the player
 ~~~~~~~~~~~~~~~~~~
 Reserve  9948  bytes of memory for STOSPLAY.PRG in  one  of  the  
 STOS memory banks numbered 5 to 15,  say bank No 15,  then  LOAD 
 the  player  as  a  .PRG into that  bank  with  the  two  direct 
 commands:

         RESERVE AS DATA 15, 9948 : LOAD "STOSPLAY.PRG",15 

 You  need do this only once,  as a databank is permanent and  is 
 saved and loaded with the .BAS listing.  

 Loading the song and voice set
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 The  simplest way of holding a .4V song file and its voice  .SET 
 file  in  memory  is to BLOAD these files into  two  other  data 
 banks, say Nos 5 and 6. 

 First, note the length of each file.    Using  direct  commands, 
 reserve the required length of bank 5 for the song and BLOAD it:

         RESERVE AS DATA 5,file-length : BLOAD "FILENAME.4V",5

 Do the same for its voice set:

         RESERVE AS DATA 6,file-length : BLOAD "FILENAME.SET",6 
 
 If you want the user to choose a song  or  songs  from  disk,you  
 can find the length of each chosen file,  then clear and reserve 
 temporary work-space banks, as shown in QUARTET.BAS.   
 
 In what follows  I'll continue referring to banks 15, 5 and 6 as 
 above, but you can use any Nos from 5 to 15.

 Starting, stopping, etc
 ~~~~~~~~~~~~~~~~~~~~~~~  
 STOSPLAY has several functions,  each activated by CALL 15  with 
 parameters to tell the player what to do.     

 A) INSTALL PLAYER CODE with:     dreg(0)=0 : call 15

 B) START MUSIC with:  

    dreg(0)=1 : areg(0)=start(5) : areg(1)=start(6) : call 15

    STOS  tells the player the addresses of the song and set data
    with start(5) and start(6).

 C) STOP MUSIC with:              dreg(0)=2 : call 15

 D) DE-INSTALL PLAYER with:       dreg(0)=3 : call 15

    Unless you intend to restart the music, de-install the player
    after stopping play.

 E) RESTART MUSIC with:           dreg(0)=4 : call 15

    This restarts previously-stopped music where it left off.

 F) SELECT SOUND DEVICE with:     

    dreg(0)=5 : dreg(1)=x : call 15

    This function tells the player where to send the sound.  The
    choices are:

    Destination                x [number for dreg(1)]

    Soundchip                  0             
    Replay 8 cartridge         1             
    Replay Pro cartridge       2            
    Playback Stereo cartridge  3             
    STE DMA sound system       4             

 Changing the music
 ~~~~~~~~~~~~~~~~~~
 If you want to play more than one tune  during the  course  of a 
 STOS program,  you can load more song and set files  into  other 
 banks and put the new bank Nos into the  start( ) brackets  each 
 time you use the START MUSIC call above.

 Note that Quartet modules  occupy a lot  of  memory,  especially 
 voice sets.  If possible,  arrange for several songs to use  one 
 set of samples.

 Dave Jones
 100 Radford Road
 Hyson Green
 NOTTINGHAM NG7 5FU
