                ABS                              Print ABS(1.2)                            ? ABS(2.4)                Returns absolute value of number.                                                   Print ABS(8.4)                       Output 8                                                                        ACCLOAD                         ACCLOAD "Sprite.acb"                                                     Loads accessory into memory.                                           ACCLOAD "Sprite.acb".Access with the  HELP key then Function key shown on   the dialog box that appears.                         ACCNB                              PRINT ACCNB                               ? accnb               Returns no. of installed accessory.   Value zero returned if none present.  The number of the accesory is equal   to the function key number + 4.                                                           ACCNEW                                ACCNEW                           (Direct Command)              Clears all installed accessories      from memory.                          ACCNEW "Sprite.acb". Clears Sprite    editor from memory. ACCNEW alone      clears all accessories from memory.                 ACOS                           PRINT acos (1.2)                          ? ACOS (2.4)                  Reverses action of cosine.           ASIN reverses action of SIN.               PRINT ACOS (0.8)                        B# = acos(1)                                                                      ANIM                            ANIM 1,"(1,10)"                       anim 2,"(2,10)"              Enables you to page through a chain   of sprite images one after another.   ANIM 1,"(1,10)". Display sprite no.   1 for 10/50ths of a second. Used      along with MOVE instruction.                     ANIM FREEZE                          ANIM FREEZE                          ANIM FREEZE 1                      Turns animation off.               Turns selected sprite off.         ANIM FREEZE turns all animation       off. ANIM FREEZE 1 turns sprite no.   1 off.                                             ANIM ON                               ANIM ON                               anim on                  Turns on animation of sprites you     have defined.                         ANIM ON 3. Activates animation of     sprite no. 3. If no no. is declared   all sprites are animated.                          ANIM OFF                              ANIM OFF                             anim off 2                Turns off animation of sprites you    have defined.                         ANIM OFF - Turns off all animation.   ANIM OFF 2 - Turns off animation of   sprite no. 2.                                       APPEAR                               APPEAR 5                            appear 5,10                Enables production of fancy fades     between pictures stored in BANK.      APPEAR 5,10 - Screen stored in bank   no. 5 will appear using fade no.10.   Fade range (optional) is 1 to 79.                    ARC                               ARC 10,10,5                           arc 20,10,8                Draws a segment of a circle on the    screen. Can draw a complete circle.   ARC 15,15,6 - Draws an arc starting   angle of 15 and ending angle of 15    where the radius is 6.                              AREG                                 AREG(1)                               areg(5)                  Variable used to pass info to the     68000(CPU) address registers.         AREG(2) - Contents of AREG loaded     to A2. * MACHINE CODE INSTRUCTION *   USE WITH CARE. SEE MANUAL FOR USE.                   ASC                             PRINT ASC("C")                            ? asc("d")               Returns the ASCII code of the first   letter in the string.                 Print ASC("A") - Returns 65 after     being called. 65 being the ASCII      code of uppercase A.                                 ASIN                             PRINT ASIN(0.5)                           ? asin(1.2)             Takes a number between -1 and +1      to calculate angle using SIN.         If X#=SIN(1.2) then 1.2=ASIN(X#).     Use along with SIN and HSIN and       also PI.                                             ATAN                                 ATAN(6)                               atan(3)                 Generates the arctan of a number.     Mathematical function. SEE MANUAL.    C#=ATAN(0.5). PRINT ATAN(0). Arctan   of a number is the ARC related to     TANGENT size.                                        AUTO                                AUTO 10                              auto 100,5                Turns on automatic line numbering.    Defaults to increments of 10.         AUTO 25 - Starts at line 25. Next     line is 35. AUTO 150,20 - Starts at   line 150. Next line is 170.                      AUTOBACK ON                           AUTOBACK ON                           autoback on                Toggles between screens using the     AUTOBACK OFF command.                 As a default graphics are sent to     both screens. AUTOBACK OFF turns      off one screen improving speed.                  AUTOBACK OFF                          AUTOBACK OFF                          autoback off               Reverses the action of AUTOBACK ON.   Reverts to default (2 screens).           Use along with AUTOBACK ON.                                                                                                 BACK                               PRINT BACK                                ? back                 Variable (back) holds address of      screen used as sprite background.     PRINT BACK - 458752 for 520ST and     983040 for 1040ST.                                                                         BAR                             BAR 0,0 TO 10,15                      bar 1,2 to 20,13             Draws a filled rectangle using the    current INK colour.                   BAR 0,1 to 10,12 - Draw BAR from      0 lines across 1 line down to 10      lines across to 12 lines down.                      BCHG                                BCHG 1,A                              bchg 2,b                  Changes bit number in variable.                                             BCHG 1,A - Changes bit no.1 in the    variable A to 0 if it is a 1. If      bit is 0 then it is changed to 1.                   BCLR                                BCLR 7,A                              bclr 7,b                  Changes bit no. in variable to 0.                                           BCLR 5,A - Changes bit no.5 in the    variable A to 0 irrespective of       original state.                                     BCOPY                             BCOPY 5 TO 6                          bcopy 8 to 5                Copies contents of one BANK to a      specified BANK.                       BCOPY 5 to 10 - Copies contents of    BANK 5 to BANK 10. BANK range is 1    to 15.                                               BELL                                  BELL                                  bell                   Simple BELL sound for inclusion in    your programs.                        Use to draw attention to an INPUT     or error in program.                                                                      BGRAB                                BGRAB 1,2                             bgrab 2                  Copies one or more banks stored at    prog. no. into the current prog.      BGRAB 1,2 - Copies bank 2 into the    prog.1. Bank no. is optional and if   not stated all banks are copied.                     BIN$                           PRINT BIN$ (255)                          ? bin$ (181)              Convert no. to a binary string with   all the digits or just some.          PRINT BIN$ (244,10) - Prints binary   no. of 244 up to the tenth place.                                                         BLOAD                         BLOAD "MOUSE.ACB",PHYSIC              bload "mouse.acb",back          Loads file into address specified     by statement following filename.      BLOAD "MOUSE.ACB",BACK - Loads the    accessory MOUSE into address that     is occupied by BACK.                                 BOOM                                  BOOM                                  boom                   Generates noise like an explosion.                                          Use in your progs to simulate the     explosion effect or to command the    attention of the user.                             BORDER                               BORDER 15                             border 11                 Creates a fancy border on screen      which enhances output.                BORDER 12 - Draws border no.12 in     the current window. Border range is   1 to 16.                                             BOX                             BOX 1,1 TO 8,9                        box 2,3 to 6,8               Draws box on screen whose size is     governed by co-ordinates.             BOX 0,0 to 10,12 - Draws box on the   screen 0 across,0 down to 10 across,  12 down. SEE MODE.                                  BREAK                                 BREAK                                 break                   Interrupt the running of program.                                           Press Control+C and program will      stop. Break off can be used in a      program line. USE WITH CAUTION.                     BSAVE                   BSAVE "8X8.CRO" START(5) TO START(5)  +LENGTH(5)                            Saves a block of memory in binary     format.                               Example shown saves character set in  bank 5 as file called 8X8.CRO.                                                            BSET                                BSET A,8                              bset a,8                  Sets the bit at posistion specified   to 1.                                 BSET A,8 - Sets bit no.8 in the       variable A to 1. Variable must be     a simple variable not expression.                   BTST                                BTST B,2                              btst a,3                  Allows you to test the binary digit   of variable at posistion specified.   BTST C,5 - Tests no.5 digit in the    variable C. If true returns a 1. If   false returns 0.                                    CALL                               CALL 50000                            call 32000                 Calls a machine code program held     in memory.                            CALL 60500 - Executes M/C routine     residing at address 60500.            MACHINE CODE. SEE MANUAL.                           CDOWN                                 CDOWN                                 cdown                   Pushes the text cursor down one       line.                                 CDOWN can be subsituted with the      command PRINT CHR$(10).                                                                  CENTRE                            CENTRE "centre"                         centre a$                  Centres text on screen on the line    currently occupied by the cursor.     CENTRE "STOS" - Will output string    "STOS" in centre of currently open    window.                                            CHANGE                        CHANGE "STOS" TO "JAWX"               change "1234" to "4567"          Changes all occurences of the first   string with the second.               CHANGE "BASIC" to "TUTOR" - Every     occurence of BASIC in a list will     be changed to TUTOR.                            CHANGE MOUSE                         CHANGE MOUSE 3                        change mouse 5               Changes the mouse image to anything   you define.                          CHANGE MOUSE 1 - Arrow (by default).  CHANGE MOUSE 2 - Pointing hand.        SEE MANUAL ON HOW TO DEFINE OTHERS.               CHARCOPY                           CHARCOPY 1 TO 5                       charcopy 8 to 6              Copies specified character set to     bank no. specified.                   CHARCOPY 1 to 5 - Copies character    set 1 (system set) to bank 5. Sets    4 to 16 are user defined.                          CHARLEN                          PRINT CHARLEN (1)                         ? charlen (7)             Returns the length of character set   specified.                            PRINT charlen (1) - Returns length    of character set no. 1. Sets 4 to     16 are user defined.                                CHR$                             PRINT CHR$(65)                            ? chr$(82)               Creates string of the character with  the ASCII code in the brackets.       PRINT CHR$(67) - Returns uppercase    C. ? chr$(104) - Returns lowercase    h.                                                 CIRCLE                            CIRCLE 10,12,6                        circle 12,10,8               Draws filled circle on screen who's   co-ordinates are specified.           CIRCLE 5,2,10 - Draws circle who's    centre lies 5 across 2 down and is    size 10 in radius.                                  CLEAR                                 CLEAR                                 clear                   Clears all the program variables.                                           Also repositions the READ pointer     to the first DATA statement. Erases   all memory banks in current program.              CLEAR KEY                             CLEAR KEY                             clear key                 Clears the keyboard buffer of all     garbage.                              Generally a good idea to call this    function before an INKEY$ operation.                                                      CLEFT                                 CLEFT                                 cleft                   Displaces text cursor one character   to the left.                          PRINT "Example":CLEFT:cleft: PRINT    "of cleft". Print CHR$(3) has the     same effect.                                      CLICK ON                              CLICK ON                              click on                  Turns on the keyboard click after     turning it off with CLICK OFF.                  SEE CLICK OFF                         _____________                         _____________                           CLICK OFF                             CLICK OFF                             click off                 Turns off the keyboard click which    interferes with the PLAY command.     This problem does not occur with      music generated by the MUSIC.ACB.                 SEE PLAY                                CLIP                            CLIP 4,5 TO 10,10                     clip 0,0 to 14,20             Restrict the actions of all graphic   commands to specified rectangle.      CLIP 1,4 TO 11,16 - Restrict all the  graphic commands to a rectangle 1     across 4 down to 11 across 16 down.                CLOSE #                               CLOSE #1                              close #3                 Closes the file associated with the   channel specified.                    If you forget to close a file after   you have finished with it,all the     changes will be completely ignored.                  CLS                                   CLS                               cls physic,6               Clears the whole screen. Expanded     version detailed below.              CLS BACK,6 - Clears whole screen and  fills it with colour 6.                            SEE MANUAL                               CLW                                   CLW                                   clw                    Clears the current window and will    replace with current PAPER colour.   CLW - Clears window 0. CLW 1 - Clears window 1.                                                                                 COLLIDE                          COLLIDE (1,10,10)                     collide (5,12,15)             Test to find if 2 or more sprites     have collided. Sprite range 0 to 15.  If COLLIDE (2,10,6)=6 then BOOM.      2 is no. of sprite. 10,6 is the area  of sensitivity. 6 is bit no. result.               COLOUR                             COLOUR 5,$770                         colour 3,$707               Assigns a colour to an index,input    being in RGB format.                  COLOUR 8,$777 - Change colour no.8    to white. To find colour no. use      command PEN 5 etc.,from direct mode.                CONT                                  CONT                                  cont                    Restart a program after stopping it   with STOP or Control+C.               CONT - Renters program at the next    instruction. Program must not have    been changed in the interval.                       COPY                    COPY BACK,BACK+10000 TO BACK+10000         copy 32000,40000 to 50000        Copies large chunks of memory from    one address to another.               COPY 30000,40000 TO 60000 - Copies    10000 bytes starting at 30000 to      address 60000. Even address's only.                  COS                             PRINT COS(PI/2)                           ? COS(PI/5)              Returns the cosine of a number in     the brackets. All angles in radians.  PRINT COS(PI*4) - Returns the cosine  of PI*4 as a floating point number.   SEE SIN,ASIN,ACOS,HCOS and PI.                     CRIGHT                                CRIGHT                                cright                   Opposite effect of CLEFT. Moves the   cursor one place to the right.        PRINT "Example":cright - Moves the    cursor one place to the right. You    can also use command PRINT CHR$(9).                  CUP                                   CUP                                   cup                    Moves the cursor up one line. The     opposite of CDOWN.                    PRINT "123":cup:?"456" - Prints 123   and then 456 on the line above. You   can also use the command ? CHR$(11).                DATA                              DATA "1,2,4 "                       data "stos basic"             Allows you to incorporate lines of    useful data to be read by READ.       DATA "6,7,8,9 " - Each variable must  be separated by a comma. DATA must    be the only instruction on the line.                DATE$                              PRINT DATE$                               ? date$                Stores the current date as a string   in the format DD/MM/YYYY.             PRINT DATE$ - Prints the date. If     you don't have a clockcard you will   need to input e.g. DATE$=14/10/1989.                 DEC                                  DEC A                                 dec b                   Subtracts 1 from the variable which   you declare.                                                                R=10:DEC R:PRINT R - Result 9.                                                            DEEK                            PRINT DEEK (450)                       ? deek (50000)               Returns 2 byte word at the address    you specify.                          PRINT DEEK(50000) - Returns contents  of memory at address 50000. Can be    used to DEEK any part of memory.                   DEF FN                        DEF FN REG(R)=R*PI/180                 def fn ian(i)=i*1500            Create a user-defined function for    use within a STOS basic prog.         DEF FN SEGMENT (A$,X,Y)=MID$(A$,X,Y)  :PRINT FN SEGMENT ("Hello" 2,3). DEF  FN always declared before using.                  DEF SCROLL                  DEF SCROLL 2,0,0 TO 10,12,16         def scroll 15,8,3 to 12,14,-20       Define area to be scrolled allowing   up to 16 scrolling zones.             DEF SCROLL 8,1,1 TO 6,8,20 - No.8 is  the zone,1,1 to 6,8 is co-ordinates   and 20 pixels to right. SEE SCROLL.                DEFAULT                               DEFAULT                               default                 Reset the editor and redraw current   window.                                DEFAULT - Resets back to editor.      CAUTION ** Do not confuse with the    other instruction DEFAULT BACK etc.                  DEG                              PRINT DEG(90)                            ? deg(180)              Converts angles expressed as radians  to degrees.                            ? DEG(90) - Returns 5156.62015618.    A degree is approximately equal to    57 radians.                                        DELETE                             DELETE 20-30                          delete 10-50                Used to selectively erase lines in    a basic program.                      DELETE 110-150 - Erases lines 110 to  150. If lines do not exist no action  is taken.                                          DETECT                              C=DETECT(2)                           d=detect(8)                Used to detect collisions between     sprites. Variable returns colour.     C=DETECT(5) - C returns colour of     the point under the HOT SPOT of a     sprite no.in brackets. Range 0-16.                  DFREE                              PRINT DFREE                               ? dfree                Variable DFREE holds the amount of    free space left on disc.              PRINT DFREE - Returns no.of bytes     left free on disc. e.g. 302115.                                                            DIM                           DIM A$(10),B(10,10)                        dim a(25)                 Used to set up table of variables     limited to max.of 65535 elements.     DIM A(25) - To access an individual   element use PRINT A(1) or ? a(10).    IMPORTANT - Element nos. start at 0.                 DIR                              DIR "A:*.BAS"                        dir "\stos\*.*"              Prints directory of files on disc     according to path specified.          DIR "A:*.BAS" - Lists all BAS progs   on disc in drive A. DIR "\stos\*.*"   - Lists all files in folder STOS.                DIR FIRST$                         DIR FIRST$ (A,-1)                     dir first$ (b,10)             Gets first file in directory which    satisfies path name.                  DIR FIRST$ (A,-1) - Returns all the   files on disc in drive A. Second      parameter in brackets is bit no.                  DIR NEXT$                             DIR NEXT$                             dir next$                 Gets the next file in the path you    have specified.                       SEE DIR FIRST$ - Can only be used     after DIR FIRST$ - SEE MANUAL for     fuller explanation.                                 DIR$                              DIR$="\STOS"                          dir$="\auto"                Sets current directory to the path    specified.                            DIR$="\TUTOR" - Sets the directory    to load from and save to the folder   named TUTOR.                                        DIVX                      RBOX 0,0 TO 639/DIVX,399/DIVY         rbox 5,5 to 639/divx,399/divy       Allows graphics to be drawn in any    mode using DIVX and DIVY.             RBOX 0,0 TO 639/DIVX,399/DIVY - An    assumption is made that the screen    size is 640 by 400. SEE DIVY.                       DIVY                      RBOX 0,0 TO 639/DIVX,399/DIVY         rbox 2,2 to 639/divx,399/divy       Allows graphics to be automatically   calculated for different modes.       Assume screen to be 640 by 340 and    use DIVX and DIVY to automatically    compensate for different modes.                     DOKE                             DOKE 32000,255                        doke 50000,128               Loads 2 byte number to an address     specified.                            DOKE 65000,65535 - Loads 2 byte no.   65535 into address 65000.             CAUTION MACHINE CODE * SEE MANUAL.                  DRAW                           DRAW 0,20 TO 200,5                    draw 10,5 to 150,2             Allows drawing of straight lines      within co-ordinates specified.        DRAW 1,5 TO 10,20 - Draw a straight   line starting at 1 across,5 down TO   10 across,20 down.                                  DREG                               DREG(1)=100                           dreg(2)=300                Variable used to pass info to the     68000's data registers.               DREG(6)=100 - Loads data register     no.6 with 100.                        CAUTION MACHINE CODE * SEE MANUAL.                  DRIVE                                DRIVE=1                               drive=0                  Variable containing the number of     the drive current.                    PRINT DRIVE - Prints current drive    in use. 0=drive A. 1=drive B etc.                                                        DRVMAP                         PRINT BIN$(DRVMAP,26)                 print bin$(drvmap,26)           DRVMAP holds a binary no. denoting    the no. of drives connected.          BIT 0=Drive A. BIT 1=Drive B etc.     If the bit at a particular place      is at 1,then drive attached.                        EARC                            EARC 10,12,50,60                      earc 20,20,10,20              Draws an elliptical arc centre of     which is at first 2 statments.        EARC 10,12,50,60 - Draw arc centre    at 10 across,12 down,50 size in       the horizontal,60 in the vertical.                 ELLIPSE                         ELLIPSE 10,12,80,90                   ellipse 13,15,70,60            Draws a filled ellipse with centre    at first 2 statements.                ELLIPSE 100,150,90,80 - Draws a       filled ellipse 100 across,150 down,   with radii 90 by 80.                                 END                                   END                                   end                    Exit from a basic program that is     running.                              Programs which have been stopped      using END,cannot be restarted by      using CONT. SEE STOP.                              ENGLISH                               ENGLISH                               english                  Uses English for all messages as      default.                              Two options here. ENGLISH or if       you prefer FRANCAIS.                                                                      ENVEL                             ENVEL 10,100                          envel 2,1000                Activates one of the 16 different     envelopes of sound.                   ENVEL 5 100 - Shape a sound using     envelope no.5. Use with NOISE and     VOLUME.                                             EOF#                                 EOF#10                                eof#15                   Test to see if end of file has        been reached.                         EOF#2 - Tests file end on channel     2. If result true end of file has     been reached. Otherwise false.                      EPIE                       EPIE 100,100,100,20,0 2215            epie 110,110,100,20,8,3600         Draws a solid elliptical pie chart    with centre at first 2 statements.    EPIE 100,100,100,20,0,2215 - Draws    elliptical pie chart,centre 100,100,  radius 100,20,0,2215 start/endangle.                ERASE                                ERASE 1                               erase 5                  Erases contents of memory bank and    frees it for use in your program.     Memory bank range from 1 to 15.                                                                                                 ERRL                       PRINT "ERROR AT LINE";ERRL            print "error at line";errl         Variable holds the line no. of the    last error that occured.              PRINT "Error at line";errl - Will     give you the line no. of the last     error. SEE ERRN.                                    ERRN                        PRINT "ERROR NUMBER";ERRN                 ? "error number";errn         Variable holding no. of the last      error.                                PRINT "Error Number";ERRN - Will      give you the no. of the last error    that occured. SEE ERRL.                             ERROR                                ERROR 2                               error 6                  Actually creates an error which is    quite useful.                         ERROR 17 - Prints BREAK inferring     that you have stopped the running     of the program.                                      EXP                                 EXP(Y#)                               exp(y#)                  Returns the exponential of a no.      as double precision.                  Print EXP(y#) - Returns the value     of y# as a double precision no.       SEE BOOK ON MATHEMATICS.                            FALSE                              PRINT FALSE                               ? false                Useful for testing the value of a     variable.                             Test if X>10 - If the condition is    true then -1 is produced. If the      condition is FALSE then it is 0.                    FADE                              FADE 10 TO 6                          fade 15 to 8                Powerful fade command to enhance      the screen output.                    FADE 10 - Fades screen to black.      FADE 10 to 9 - Fades to colours       of screen in bank 9. SEE MANUAL.                   FIELD#                        FIELD#1,15 AS SURNAME$                  field#5,10 as add$             Used with Random Access file to       create length of fields.              Field#1,12 as name$ - Creates the     variable name$ capable of holding     12 characters.                                   FILESELECT$                       X$=FILESELECT$(*.*)                   a$=fileselect$(*.*)            Creates a fancy dialogue box which    allows you to select a file.          Z$=Fileselect$(*.*):Print Z$ - Will   produce a fancy box on screen which   you can select a file from.                         FILL                         FILL 32000 TO 35000,0                     fill 1 to 2,0                Copies a specified longword into a    section of memory.                    Fill 50000 to 60000,0 - Fills the     memory from 50000 to 60000 with 0.    Address must be even.                               FIRE                                 F=FIRE                                d=fire                   Returns a value of true if the fire   button on joystick has been pressed.  If f=-1 then fire button has been     operated. If f=0 then fire button     has not been operated.                               FIX                                  FIX(2)                                fix(3)                  Fixes the precision of numbers that   are to be printed on the screen.      FIX(5):PRINT PI - Limits number to    5 numbers after the decimal point.    FIX(16):? PI - Reverts to normal.                   FKEY                            ON FKEY GOSUB 150                     on fkey goto 2000             Reads the function keys directly.     Used to test function key press.      ON FKEY GOSUB 1000 - If a function    keypress is detected go subroutine    at line 1000.                                       FLASH                          FLASH 1,"(700,50)"                    flash 5,"(007,20)"             Allows you to flash any colour in     the index at a specified speed.       FLASH 2,"(700,50)(070,5)" - Flash     colour index no.2 RED (700) for 50    50ths=1 sec to green. Cycle repeats.                FLIP$                         PRINT FLIP$("ABCDE")                  print flip$("basic")            Reverses the order of the chr$ in     the string.                           PRINT FLIP$("ATARI") - String will    be printed IRATA. PRINT FLIP$("IH")   - String will be printed HI.                        FLOAD                             FLOAD "*.BAS"                         fload "*.acb"               Load a file with the file selector.   Selector appears allowing choice.     FLOAD "*.bas" - Selector box will     appear with all .bas files in it.     Take your pick.                                      FN                           PRINT "SQUARE IS ";FN                 print "number is ";fn           Used to execute a function defined    by DEF FN.                            DEF FN SQ(X)=X*X:INPUT "NUMBER";L:    PRINT "The square of ";L;"is";FN(SQ)  L - Must be used with DEF FN.                      FOLLOW                             FOLLOW 10-200                         follow x y z                Tracks through a STOS basic prog.     line by line if required.             FOLLOW 5-100 - Tracks operation of    prog. starting at line 5 finish at    line 100. Page with any key.                      FOR NEXT                   FOR A=32 TO 255:? CHR$(A):NEXT A        for f=1 to 1000:? f*5:next f       The classic For Next command. Use     in your basic and watch the speed.    AS ABOVE and numerous examples in     any book on BASIC.                    SEE MANUAL FOR FURTHER DETAILS.                   FRANCAIS                              FRANCAIS                              francais                  Changes all error reports to the      French language.                      CETTE LIGNE N'EXISTE PAS - Line does  not exist. ERROR DE SYNTAXE - Syntax  error you fool. GET A TUTORIAL.                     FREE                               PRINT FREE                               free                    Forces garbage collection within a    basic program.                        PRINT FREE - Print amount of free     bytes left in memory.                                                                    FREEZE                                FREEZE                                freeze                   Temporarily halts the action of any   sprites or music.                     FREEZE - Halts all sprites and also   stops the music. Start again with     UNFREEZE.                                         FREQUENCY                             FREQUENCY                             frequency                 Changes the scan rate from 50hz to    60hz.                                 Only useful with a Med.Res monitor    or Multi-Sync monitor.                WARNING * Do NOT use with normal TV.                FSAVE                           FSAVE "BASIC.BAS"                     fsave "logic.mbk"             Same selector box appears allowing    you to type in filename for save.     FSAVE "SCREEN.PI1" - Saves current    screen as a .PI1 file. Use also the   F5 key or point mouse and click.                    FULL                                  FULL                                  full                    Expand the current window into the    full screen area.                     This does not effect the status of    any of the other programs which may   be in memory at the time.                           GET#                                 GET#1,R                               get#1,8                  Reads record no. from random access   file after using OPEN# channel.       GET#8,10 - Get record no.10 from a    random access file stored on disc.    Channel must first be opened.                    GET PALETTE                         GET PALETTE(5)                        get palette(8)               Loads colour settings of a screen     stored in specified bank.             GET PALETTE(6) - Gets colour setup    of screen in bank no.6 and displays   them to the present screen.                      GET SPRITE                         GET SPRITE 1,2,6                      get sprite 5,9,2              Grab any image off the screen and     use as a sprite.                      GET SPRITE 2,5,6 - 1st 2 statements   refer to start of rectangle. 3rd      refers sprite no. which MUST exist.                 GOSUB                              GOSUB 10000                           gosub 15000                Similar to GOTO but enables you to    jump back to start using RETURN.      GOSUB 1000 - Jump to subroutine at    line 1000. When RETURN is found the   program returns to line after GOSUB.                GOTO                                GOTO 100                              goto 500                  Jumps to new line no. specified.      Can also be used as an expression.    LABEL=20:GOTO LABEL - Program will    goto line 20 on encountering this     instruction.                                     GR WRITING                           GR WRITING 3                          gr writing 2                Allows 4 modes. 1=default(normal),    2=Transparent,3=XOR,4=Inverse(tran).  GR WRITING 3 - Sets further screen    graphics to combine with those that   are on the screen. SEE MANUAL.                      GRAB                                 GRAB 3                             grab 2,10-50                Copies all or part of a program to    the current program.                  GRAB 3 - Copies all program no.3.     GRAB 2,10-80 - Copies only lines      10 to 80. Program range 1 to 4.                   HARDCOPY                              HARDCOPY                              hardcopy                  Dumps a copy of the screen to your    printer. Printer type must be set.    Same as using ALT+HELP keys. See      TRAP instruction in manual to set     up correct printer type.                            HCOS                                  HCOS                                  hcos                    Returns a double precision number     denoting hyperbolic tan of angle.     HCOS(180) - As above.                 Useful in calculating circles and     arcs.                                               HEXA$                           PRINT HEXA$(1000)                     print hexa$(8000)             Converts number into chr$ with a      hexadecimal notation.                 PRINT HEXA$(65536) - Outputs as an    answer $10000. Try your own numbers   in for a quick conversion.                         HEXA ON                               HEXA ON                               hexa on                  Sets bank listing to hexadecimal.     Use along with LISTBANK.              HEXA ON - All calls to LISTBANK       will be output in hexadecimal.                 SEE HEXA OFF.                            HEXA OFF                              HEXA OFF                              hexa off                  Set bank listings to decimal. Use     along with LISTBANK.                  HEXA OFF - All further calls with     LISTBANK will be output in decimal.              SEE HEXA ON.                             HIDE                                  HIDE                                  hide                    Remove the mouse pointer from the     screen.                               HIDE - Wot!!  NO MOUSE POINTER !!     A variety of situations arise where   this is very useful.                                HSIN                                HSIN(180)                             hsin(126)                 Returns a double precision number     denoting hyperbolic sin of angle.     HSIN(150) - Returns double precision  number of sine of angle number.       SEE HTAN,HCOS,ATAN,ACOS,ASIN & PI.                  HOME                                  HOME                                  home                    Returns cursor to top left hand       corner.                               HOME - Moves cursor to co-ordinates   0,0. This being the top left hand     corner of the screen.                               HTAN                                HTAN(180)                             htan(125)                 Returns a double precision number     denoting hyperbolic tan of angle.     HTAN(150) - Returns double precision  number of tangent of angle in the     brackets. SEE HSIN,HCOS & PI.                       HUNT                         X=HUNT(32000-50000,A$)                x=hunt(60000-70000,b$)           Allows search through memory for a    specific character string.            X=HUNT(30000-32000,D$) - Search in    memory for location of D$. If not     found X returns a 0.                                ICON$                            PRINT ICON$(5)                            ? icon$(8)               Generate an icon at the posistion     of the cursor.                        LOCATE 0,0:PRINT ICON$(6) - Will      print to the screen at 0,0 icon no.   6. Design your own with ICONS.ACB.                 IF THEN                     IF A=10 THEN NEW ELSE 1000         if d=20 then gosub 100 else stop      Choose between alternative actions    within a basic program.               IF X=5 THEN GOTO 100 ELSE 50 - Can    give better control over program.     ELSE parameter is optional.                          INC                                  INC A                                 inc g                   Adds 1 to an integer variable with    one instruction. Very fast.           INC B - Include in preference to a    FOR NEXT loop if possible. Executes   considerably faster.                                 INK                                  INK 8                                 ink 1                   Sets colour of graphic drawings on    screen. No. is index of colour.       INK 5 - Sets INK to colour index 5.   CAUTION * Mode 0=16 index numbers.    Mode 1=4 numbers. Mode 2=2 numbers.                INKEY$                               K$=INKEY$                             k$=inkey$                 Detects if a key has been pressed     without halting action of program.    WHILE K$="":K$=INKEY$:WEND:?" You     pressed ";KS - K$ will return ASCII   character of key pressed.                          INPUT#                             INPUT#1,F$(1)                         input#2,a$(5)               Input a list of variables from a      file or device.                       INPUT#3,B$(2) - Read info from file   B$ using channel 3. Can also be of    use to address MIDI interface.                      INPUT                                INPUT A                          input "Month";m$              Input a number or some text to a      string variable.                      INPUT "Day ";D$ - Will prompt for     an input and place info into D$.      Prompt is optional. i.e. "Day".                    INPUT$                             INPUT$ #1 100                         input$ #2 120               Reads no.of characters from file or   device connected to channel.          INPUT$ #3 50 - Reads 50 chr$ from     file previously specified through     channel 3.                                        INPUT$(n)                           C$=INPUT$(10)                         a$=input$(20)               Reads chr$ from keyboard and loads    them to string pausing each one.      ?"Type ten letters":L$=INPUT$(10)     - L$ will now hold the ten letters.   Do not confuse with INPUT.                          INSTR                             INSTR(D$,A$)                          instr(f$,b$)                Searches for occurence of a string    within another string.                INSTR (A$,B$) - Will find occurence   of A$ within B$ and return you with   the posistion of same.                               INT                             PRINT INT(1.25)                       print int(2.28)              Converts decimal value into a whole   number.                               PRINT INT(1.15) - Returns answer as   1. Rounds down the decimal value.     Negative values can also be used.                INVERSE ON                            INVERSE ON                            inverse on                 Swaps text and background colours     which inverts any new text.           INVERSE ON - Uses current PEN and     PAPER unless changed beforehand.              SEE INVERSE OFF.                         INVERSE OFF                           INVERSE OFF                           inverse off                Takes you back to normal after the    call INVERSE ON.                                SEE INVERSE ON                                                                                                        JDOWN                                X=JDOWN                               a=jdown                  Tests joystick movement down and      returns true -1 or 0 false.           C=JDOWN - Returns C with condition    either true or false.                        YOU GOTTA JOYSTICK ?                         JLEFT                                X=JLEFT                               b=jleft                  Test joystick movement left and       returns -1 true and 0 false.          IF JLEFT THEN PRINT "Left" - Can      be used in IF THEN statement.         SEE JRIGHT,JUP,JDOWN,JOY & FIRE.                     JOY                                  X=JOY                                 j=joy                   Returns binary no.which represents    the current status of the joystick.   0=Joystick up.   1=Joystick down.     2=Joystick left. 3=Joystick right.          4=Fire button pressed.                       JRIGHT                               X=JRIGHT                              d=jright                  Tests movement of joystick right.     Returns -1 if true and 0 false.                                              SEE JLEFT,JUP,JDOWN,JOY & FIRE.                                                           JUP                                  X=JUP                                 r=jup                   Tests joystick movement up and will   return -1 if true or 0 if false.                                            SEE JDOWN,JLEFT,JRIGHT,JOY & FIRE.                                                         KEY                              KEY(1)="LOAD"                         key(3)="list"               Assigns a string to function key.     1 to 10 and shifted 11 to 20.         KEY(11)="Hardcopy'" - Assigns the     command HARDCOPY to function key      shifted F1. NOTE the '. TRY IT.                    KEY ON                                KEY ON                                key on                   Turns on the function key window      allowing selection of options.                                                         SEE KEY OFF                                                                   KEY OFF                               KEY OFF                               key off                  Turns off function key window and     frees the space for further use.                                                       SEE KEY ON                                                                   KEY SPEED                          KEY SPEED 10,30                       key speed 50,60              Tailor the speed of the keyboard to   your own particular taste.            KEY SPEED 5,10 - 1st parameter is     repeatspeed in 50ths/sec. 2nd one     is delay in 50ths/sec.                            KEY LIST                              KEY LIST                              key list                  Lists current function key strings.   1 to 10 and shifted 11 to 20.         KEY LIST - Gives complete list of     all function key assignments. i.e.    F1 is last line entered.                            KILL                             KILL "STOS.BAS"                       kill "font.acb"              As the name implies KILLS the file    named or series of files.             CAUTION - Use with care as files      named are permanently deleted from    the disc.                                           LDIR                                  LDIR                                  ldir                    List a directory of a disc to the     printer if you got one.               Printer uses parallel port and must   be set up before use. See DIR for     more details.                                       LEEK                              PRINT LEEK(8)                       print leek(32000)             Returns 4 byte long word stored at    address specified.                    ? LEEK(68000) - Returns 4 byte long   word at address 68000. If bit no.31   is set number will be negative.                     LEFT$                         PRINT LEFT$("STOS",2)                 print left$("left",3)           Returns the leftmost characters of    a string.                             PRINT LEFT$("TUTOR",3) - Will give    output as TUT. PRINT LEFT$("520",1)   - Will output as 5.                                  LEN                           PRINT LEN("SEVENS")                   print len("metres")            Calculates length of string held in   parameters between brackets.          PRINT LEN("520STFM") - Will output    7 as answer. All chr$ are counted     even if they are not visible.                      LENGTH                            PRINT LENGTH(5)                       print length(8)              Returns length of BANK in bytes. If   0 is returned BANK is empty.          RESERVE AS SCREEN 5:PRINT LENGTH(5)   - Length returned as 32768 being      the length reserved for BANK 5.                     LET                                LET A=68000                          let a$="stos"               Used to assign variable a specific    value.                                LET C=520 - If you now print C the    return would be 520. LET command is   optional and can be omitted.                     LIMIT MOUSE                    LIMIT MOUSE 0,0 TO 50,150             limit mouse 6,6 to 20,200         Restricts mouse to a rectangular      area specified.                       LIMIT MOUSE 10,10 TO 100,150 - Will   not allow mouse to move outside the   defined rectangle.                              LIMIT SPRITE                   LIMIT SPRITE 0,0 TO 150,200           limit sprite 5,8 to 10,120         Limits the area where sprites will    be displayed.                         LIMIT SPRITE 10,10 TO 100,50 - Will   only display the sprites within the   parameters specified.                            LINE INPUT#                         LINE INPUT#1,A$                      line input#5,;,b$             Input a list of variables which are   not separated by a comma.             LINE INPUT#2,-,D$ - Input list of     D$ by channel 2 separated by minus    signs. No separator=Return assumed.              LINE INPUT                         LINE INPUT,A,B,C$                     line input d,e,f$             Exactly same as INPUT except that     Return is used as separator.                                                      SEE INPUT,LINE INPUT#                                                               LIST                                LIST 200                            list 200-500                Used to list program to screen for    subsequent editing.                   LIST - Lists all lines. LIST 200 -    List only line 200.   LIST 200-500    - List only 200 to 500.                           LISTBANK                              LISTBANK                              listbank                  List the banks in use. Default is     Hexadecimal. SEE HEXA OFF.            Use the mouse to point & click on     the function from the function bar    or press the relative function key.                 LLIST                               LLIST 100                          llist 1000-5000              Lists to printer with parameters      identical to LIST.                    LLIST - All lines to printer. LLIST   100 - Only line 100. LLIST 20-100 -   Lines 20 to 100.                                     LN                               PRINT LN(120)                         print ln(200)               Calculates the natural or naperian    logarithm of number in brackets.      PRINT LN(10):R#=LN(100) - The use     of LN is exactly opposite to EXP.     SEE BOOK ON LOGARITHMS.                             LOAD                             LOAD "STOS.BAS"                       load "stos.bak"              Loads all or part of a STOS basic     program.                              EXT's allowed - Basic - .BAS .BAK     .ACB .ASC. Images - .NEO .PI1 .PI2    .PI3. Banks - .MBK .MBS. See SAVE.                 LOCATE                              LOCATE 0,10                           locate 10,5                Position the cursor at a specified    point on the screen for text.         LOCATE 12 18 - Posistion the cursor   12 chrs. across and 18 chrs. down     and start PRINTing from there.                      LOF#                                  LOF#1                                 lof#5                   Returns length of file on channel     specified.                            It makes no sense to use this call    in conjunction with devices other     than the disc.                                       LOG                              PRINT LOG(10)                         print log(18)               Returns the logarithm in base 10      (log 10) as a double precision no.    PRINT LOG(20):V#=LOG(100) - Quite     a complicated subject.                PURCHASE A BOOK ON MATHEMATICS.                     LOGIC                              PRINT LOGIC                               ? logic                Address of logical screen which is    normally the same as the physical.    PRINT LOGIC - Returns address of the  logical screen. See SCREEN SWAP.      Try BACK=LOGIC in your program.                     LOKE                            LOKE 32000,$FFFFF                     loke 65000,$aaaaa             Change long word at the address you   specify in first parameter.           LOKE 50000,$FFFFFFFF - Change the     long word at address 50000 to ?.      You work it out!!!                                  LOWER                                 LOWER                                 lower                   Instructions in listing in lowercase  and variables in uppercase.           This is the default mode. Use this    command after UPPER.                         See UPPER & UPPER$                          LOWER$                         PRINT LOWER$("BASIC")                 print lower$("TUTOR")           Translates all the chrs. in string    to lowercase.                         PRINT LOWER$("EXAMPLE") - Will give   the string "EXAMPLE" a lowercase      format and output "example".                       LPRINT                           LPRINT "PRINTING"                     lprint "12345678"             Directs string contents to printer    connected to parallel port.           LPRINT "STOS BASIC" - Will print to   printer STOS BASIC.                              SEE LLIST.                               MATCH                            MATCH(D$(O),A$)                       match(a$(l),p$)              Find the closest match to a value     in an array.                          MATCH(A$(O),T$) - Search A$ for the   closest MATCH of O in T$. Must be a   SORTed table before using MATCH.                     MAX                             PRINT MAX(10,5)                    print max("Hello","Hi")         Returns the maximum of two values     in the string.                        PRINT MAX(25,8) - Returns 25 being    the highest. Do not mix numbers with  strings.                                         MENU FREEZE                           MENU FREEZE                           menu freeze                Temporarily freezes the action of     the menu.                             The menu can be restarted with the    command MENU ON.                      See MENU$,MENU$(x,y) & MENU$ ON.                   MENU ON                               MENU ON                               menu on                  Menu on has a number of possible      extentions.                           MENU ON(1),(1) - 1st parameter is     border option with range 1 to 16.     2nd is 1 drop menu or 2 pull down.                MENU OFF                              MENU OFF                              menu off                  Permanently switches off the entire   menu and clears it from memory.       Actually stops the menu interrupt.                                          See MENU,MENU$,MENU ON & MENU OFF.                  MENU$                         MENU$(1)="STOS BASIC"              menu$(2)="paper & pen",2,3         The first stage in creating a menu    bar. Defines what text will show.     MENU$(1)="TUTOR",3,8 - Will create    a menu which will show as TUTOR.      3,8 represent paper & pen colours.                MENU$ OFF                         MENU$(STOS,1)OFF                      menu$(stos,2)off              This instruction disables one of the  list of menu items.                   MENU$(DROP DOWN,1)OFF - Will turn     off drop down menu titled drop down.  See MENU$ ON.                                     MENU$ ON                           MENU$(STOS,1)ON                       menu$(stos,2)on              Reverses the action of MENU$ OFF.     Menus are stored in BANK 15.          MENU$(PULL DOWN,2)ON - Will enable    menu titled PULL DOWN. 1 is a drop    down menu 2 is a pull down menu.                 MENU$(x,y)                       MENU$(1,1)="QUIT"2,5                  menu$(2,1)="Hand"3,8            Set a menu option. The x y decide     the menu number. Text is your pick.   MENU$(1,2)"1st ROW 2nd DOWN"9,5 -     Sets a menu on 1st row but 2nd menu   down,PAPER 9,PEN 5. EXPERIMENT.                     MERGE                             MERGE "STOS1"                         merge "stos2"               Merges program stored on disk into    current program in memory.            MERGE "MERGE.BAS" - Merges program    titled MERGE into current program.    Any like line numbers overwritten.                  MID$                         PRINT MID$("TUTORIAL",5)              print mid$("fourteen",4)         Returns string of chrs. from within   a string expression.                  PRINT MID$("TWENTY",3) - Returns      enty as string. GOT IT!! No it's      not a misprint. ENTY.                                MIN                             PRINT MIN(10,5)                       print min(80,8)              Returns the smallest of the two       expressions specified.                PRINT MIN(8,7) - Returns 7 as being   the smallest. Strings can also be     tested but you cannot mix.                          MKDIR                            MKDIR "FOLDER1"                       mkdir "folder2"              Create a folder with a specified      name.                                 MKDIR "TUTORIAL" - Create a folder    with the name TUTORIAL.               See DIR.                                            MNBAR                           ON MNBAR GOTO 90                      on mnbar goto 50              MNBAR holds the number denoting the   menu you have chosen.                 Use in conjunction with MNSELECT.     See Page 177 for complete example     of MNBAR and MNSELECT.                            MNSELECT                     IF MNSELECT=1 THEN GOTO 900           if mnselect=2 then goto 950        MNSELECT contains specific option     you have highlighted with mouse.      Use in conjunction with MNBAR and     refer to example on Page 177 for      fuller details. See MNBAR.                          MODE                                 MODE 0                                mode 1                   Change the graphics mode. NOTE that   MODE 2 only works HI-RES monitors.    MODE 0 - Low res. 16 colours of 512.  Index 0 to 15. MODE 1 - Med res. 4    colours of 512. Index 0 to 3.                     MOUSE KEY                 IF MOUSE KEY=1 THEN PRINT "LEFT"      if mouse key=2 then print "right"     Test quickly which mouse button has   been pressed.                         IF MOUSE KEY=3 THEN PRINT "LEFT AND   RIGHT BUTTON" - Must be in a loop     to be detected. See YMOUSE & XMOUSE.             MOVE FREEZE                           MOVE FREEZE                         move freeze(6)               Used to temporarily halt some or all  sprites. Restart with MOVE ON.        MOVE FREEZE - Halts all sprites.      MOVE FREEZE(8) - Halts sprite no.8.   Design your own with SPRITE EDITOR.                MOVE ON                               MOVE ON                             move on (5)                Before any sprite movements will be   performed MOVE ON must be called.     MOVE ON - All sprites defined by a    MOVE X & MOVE Y set up will be put    in motion. MOVE ON(2) - Moves no.2.               MOVE OFF                              MOVE OFF                             move off(6)                Kils the movements of the sprites.    Sprites moves must be redefined.      MOVE OFF - Kills all sprite moves.    MOVE OFF(1) - Kills moves of no.1.    See MOVE ON but read about MOVEON.                 MOVE X                     MOVE X 2,"(1,1,100)(1,-1,100)"        move x 5,"(1,5,150)(1,-1,150)"      Move a sprite horizontal. Parameters  in brackets are Speed Step & Count.   MOVE X 3,"(1,5,125)"- Move sprite 3   at Speed 1/50th sec,5 pixels,with a   Count of 125 steps,in one movement.                MOVE Y                     MOVE Y 9,"(1,5,25)(1,-5,25)"          move y 2,"(1,1,60)(1,-1,60)"        Move sprite vertically. Parameters    in brackets are Speed Step & Count.   MOVE Y 5,"(1,5,25)" - Move sprite     5 Speed 1/50th sec,Step 5 pixels &    Count 25 steps in single movement.                 MOVEON                            PRINT MOVEON(1)                       print moveon(8)              Returns 0 if sprite is stationary     and non 0 if it is in motion.         PRINT MOVEON(2) - If sprite no.2 is   in motion a no. other than 0 will be  returned. 0 means sprite is stopped.                MULTI                                MULTI 2                               multi 3                  Displays a number of programs in      memory simultaneously.                MULTI 4 - Display 4 programs at one   time. Each program can be accessed    with HELP key. Value range 2 to 4.                  MUSIC                                MUSIC 1                               music 6                  Play piece of music composed using    the MUSIC.ACB.                        MUSIC 20 - Play tune no.20. Music is  stored in BANK 3. No slowing down of  your prog. Maximum allowed is 32.                    NEW                                   NEW                                   new                    Erases the current program in the     memory.                               It has no effect on other programs    stored in different segments. See     MULTI and UNNEW.                                    NOISE                                NOISE 15                             noise 1,20                Produces sound like a rushing wind.   Use in conjunction with ENVEL.        NOISE 2,25 - 1st parameter is voice   (range 1-3 optional). 2nd is pitch    (range 1 very high to 31 very low).                  NOT                              PRINT NOT(-1)                         print not(-1)               Changes every binary digit in a no.   from 1 to 0 and vice versa.           Since True=-1 and False=0 NOT(True)   =False. - If NOT(True)=False then     Print "False". See Page 225.                         OFF                                   OFF                                   off                    Turns off all sprite movements and    clears them from the screen.          If you have broken out of a program   using Control+C,use OFF to turn off   the sprites. Assigned to key F10.               ON ERROR GOTO                       ON ERROR GOTO 500                     on error goto 150             Used to trap errors within a basic    program.                              ON ERROR GOTO 600 - On encountering   an error the operation of the prog.   will be directed to line 600.                      ON MENU                          ON MENU GOTO 1000                     on menu goto 1500             Using interrupts can jump to line     number specified to activate menu.    ON MENU GOTO 120 - Jump to line 120   when menu is selected. See MNBAR,     MENU ON,MENU FREEZE and MNSELECT.                 ON GOSUB                           ON N GOSUB 1500                       on p gosub 1000              Identical to the ON GOTO instruction  except that a gosub is used.         ON X GOSUB 100,200,300 - X can be an  INPUT and the relavent line will be   jumped to according to value of X.                  ON GOTO                            ON N GOTO 205                         on j goto 150               Jump to one of a list of lines which  depends on the value of variable.     ON R GOTO 300 - Jump to line 300 if   the value of R holds a figure which   allows jump to line number.                         OPEN#                             OPEN#1,"MIDI"                         open#5,"file"               Open a channel to a random file or    device.                               OPEN#1,"STOS" - Open a random file    STOS. OPEN#2,"MIDI" - Open channel    to MIDI port.                                     OPEN IN#                          OPEN IN#1,"STOS"                      open in#2,"file"              Used to open a file for reading. If   you try to write an error occurs.     OPEN IN#1,"TUTOR" - Open file TUTOR   through channel 1 to read from only.  Use in conjunction with OPEN OUT#.                OPEN OUT#                       OPEN OUT#1,"FILE.SEQ"                 open out#5,"stos.seq"           Open a sequential file for writing    using PRINT#.                         OPEN OUT#3,"TUTOR" - Opens file with  the name TUTOR,through channel,3 to   write only to. Filename your choice.                PACK                                PACK 5,6                              pack 5,8                  Function to PACK screen within your   basic program.                        PACK 6,8 - Pack screen stored in no.  6 BANK and place in no.8 BANK.        Easier with COMPACT.ACB. Try it.                    PAINT                              PAINT 50,50                           paint 20,10                Fills any hollow surface using the    current or specified INK.             INK 3:PAINT 10,10 - Surface to be     filled must be totally enclosed.      10,10 is point inside fill area.                   PALLETE                          PALLETE $777,$000                     pallete $353,$705             A more powerful command than COLOUR.  Allows string of parameters.          PALLETE $777,$000 - Changes pallete   and allows parameters to maximum of   amount available in current MODE.                   PAPER                                PAPER 6                               paper 8                  Sets the colour of the background     of text.                              PAPER 3 - Sets paper colour to index  3 and all further text instructions   will have background colour index 3.                PEEK                              PRINT PEEK(0)                       print peek(32000)             Returns 8 bit byte stored at the      address specified.                    PRINT PEEK(10) - PEEK derives the     info in supervisor mode so you can    happily peek the ROM.                                PEN                                  PEN 8                                 pen 5                   Sets the colour of the text to be     printed from colour index number.     PEN 6 - Sets all subsequent print     of text in colour index 6. LO-RES     allows 0-15 colour indexes.                        PHYSIC                             PRINT PHYSIC                          print physic                Reserved variable containing the      address of the physical screen.       PRINT PHYSIC - 491520 on 520 which    can be changed if you prefer.         1015808 on 1040. Wish I had one!!                    PI                                 PRINT PI                              print pi                  Returns the number called PI which    is used to calculate angles.          Result of the division of diameter    of circle by the circumference.       Used in trigonometric functions.                     PIE                        PIE 100,110,60,1500,3600              pie 120,100,50,2000 3600          Produces segment of circle in the     current fill colour.(PIE CHART.)      PIE - X and Y co-ords.then radius,    Startangle,Endangle,range from 0      to 3600.(X and Y denote centre.)                    PLAY                               PLAY 10,20                            play 20,60                 Play a pure note out through the      loudspeaker of your monitor.          PLAY 1,15,35 - Play a note,voice 1    (optional),pitch 15 (range 0-96)      and duration 35 (in 1/50ths sec).                   PLOT                               PLOT 100,10                           plot 150,60                Plot a point on the screen and set    it to the current INK colour.         PLOT 100,150,8 - Plot a point on      the screen 100 across,150 down and    set INK index 8 (optional).                         POF#                               POF(#1)=1000                          pof(#2)=2000               Changes the current read or write     posistion of an open file.            POF(#1)=500 - Sets the read/write     position to 500chrs past the start    of the file.                                        POINT                            C=POINT(10,100)                       p=point(50,150)              Returns the colour of the point at    the co-ordinates specified.           G=POINT(10,20) - Returns colour of    point at 10 20 in the variable G.     Any variable can be used.                           POKE                              POKE 32000,90                         poke 68000,80               Load specified address with value     range 0 to 255.                       POKE 83000,128 - Load address 83000   with value 128. CAUTION * Use with    care or you will CRASH your ST!!                   POLYGON                  POLYGON 0,20 TO 200,20 TO 100,100     polygon 2,10 to 150,20 to 120,130     Draw a filled polygon in current      INK colour and SET PAINT pattern.     POLYGON 0,20 TO 200,20 TO 100,100     Draw a filled polygon within range    of specified co-ordinates.                        POLYLINE                  POLYLINE 0,20 TO 200,20 TO 100,100    TO 0,20. (Last pair same as 1st).     Draws complex hollow polygons using   one line of code.                     In order to create a closed polygon   the last group of co-ordinates will   be the same as the first.                         POLYMARK                  POLYMARK 100,100;200,100;300,100      polymark 100,150;150,200;200,180      Useful facility to plot crosses and   squares etc. as easily as points.     Default polymark is a ".". This can   be changed using SET MARK. 2=+sign,   3=*,4=Square,5=Diag X,6=Diamond.                     POP                            IF A>100 THEN POP                     if h<500 then pop             Remove the return address generated   by a GOSUB.                           Allows exit from a subroutine with-   out execution of the final RETURN     statement.                                          PORT#                               X=PORT#1                              x=port#5                  Test to check if an input device is   waiting for you to INPUT info.        X=PORT#2 - X holds -1 if condition    is true or 0 if false.                See GET#,PUT#,FIELD# and INPUT#.                  PREVIOUS                              PREVIOUS                              previous                  Move the search path up to the next   outer subdirectory.                  DIR$="/STOS":DIR:PREVIOUS:DIR - Sets  the current path up one directory.    See DIR$.                                           PRINT#                            PRINT#1,"BASIC"                       print#5,"tutor"              Identical to screen print command     but outputs to file or device.        PRINT#2,"HELLO" - Will output to a    device connected to channel 2.        Device can be printer or drive etc.                 PRINT                             PRINT "BASIC"                             ? "tutor"               Print a list of variables on the      screen.                               PRINT "Hello" - Will print to the     screen Hello. Use with LOCATE to      posistion cursor. ? same as PRINT.               PRIORITY ON                           PRIORITY ON                           priority on                Decides order of priority when the    sprites are displayed.                Highest priority goes to the lowest   numbered sprites OR the sprite with   the highest Y co-ordinate.                      PRIORITY OFF                          PRIORITY OFF                          priority off                Resets the priority of displaying     sprites back to normal.               See PRIORITY ON and also study the    posistion of the Hot Spot of the      sprite which affects the commands.                   PSG                               PRINT PSG(1)                          print psg(1)               CAUTION * This command is extremely   dangerous.                            CAUTION * Incorrect usage can cause   serious damage to any disc in the     current drive. See Manual please.                   PUT#                                 PUT#1,1                               put#2,a                  Moves a record from the ST's memory   into record no. specified to disc.    PUT#1,1 - Will write record no.1 to   a random acces file on the disc.      Contents must be defined by FIELD$.                PUT KEY                             PUT KEY"NEW"                          put key"run"               Used to load a string of chrs into    the keyboard buffer.                  PUT KEY"RUN`" - After a program has   terminated the RUN command will be    automatically called. NOTE the `.                 PUT SPRITE                           PUT SPRITE 8                          put sprite 6               Places a copy of sprite specified     onto the screen.                      PUT SPRITE 2 - Places sprite no.2     on to the screen at it's current      position. Allows lot's of sprites.                 PVOICE                            PRINT PVOICE(1)                       print pvoice(2)              Enables you to determine when music   reaches a particular point.           PRINT PVOICE(3) - Variable P will     return a number representing the      address of the note requested.                     QWINDOW                              QWINDOW 8                             qwindow 5                 Sets the current window to window     number specified.                     QWINDOW 6 - Sets the current window   to window number 6 but does not re-   draw it. Use with WINDOPEN.                          RAD                          PRINT RAD(3452.11211)                 print rad(2866.52561)           Converts angles expressed in degrees  into radians.                         PRINT RAD(5156.62015618) - Returns    90. A radian is approx. equal to      57 degrees. See DEG,SIN,COS & TAN.                  RBAR                           RBAR 0,0 TO 150,200                   rbar 8,3 to 100,150            Draws filled rectangle with rounded   corners.                              RBAR 0,0 to 50,50 - Draws rectangle   within co-ordinates specified.        See BAR,POLYGON,CIRCLE & ELLIPSE.                   RBOX                           RBOX 0,0 TO 100,150                   rbox 8,3 to 150,200            Draws a hollow rectangle on screen    with rounded corners.                 RBOX 10,10 TO 150,100 - Identical     instructions as BOX but the corners   are rounded. See BOX,RBAR & ARC.                    READ                                 READ A                            read a$,b,c,d$               Will read data from data statements   into variable specified.              READ A:DATA 3 - Will read into the    variable A number 3 as declared in    the DATA statement. See RESTORE.                   REDRAW                                REDRAW                                redraw                   Redraws all sprites at their current  posistion on the screen.              REDRAW - Unlike UPDATE this command   takes no account of whether sprite    has been changed,since last update.                REDUCE                        REDUCE 5 TO 10,10,80,80               reduce 8 to 20,30,95,60          Reduces the entire screen to within   the co-ordinates specified.           REDUCE 7 TO,60,80,150,200 - Reduce    screen in bank 7 to 60 across,80      down,by 150 across,200 down.                         REM                              REM REMINDERS                         rem start off               Remark which can be placed after a    REM statement is ignored by STOS.     REM Go out and buy STOS Basic. This   statement is good advice but will     be ignored. - Can also use '.                      RENAME                   RENAME "TUTOR.BAS" TO "TUTOR1.BAS"    rename "names.acb" to "street.acb"    As implied,renames file named first   to file named second.                 RENAME "DUMP.ACB" TO "PRINT.ACB" -    Renames accessory DUMP to PRINT.      If 2nd file exists error generated.                 RENUM                               RENUM 100                            renum 200,5                Renumber all or part of a program.    Starts at line specified if needed.   RENUM 50,10 - Starts at line 50 and   renumbers in steps of 10. If RENUM    only is called all lines renumbered.             REPEAT UNTIL                       REPEAT UNTIL A=0                      repeat until k=0              Repeat until condition is false or    specified condition is met.           REPEAT:M=MOUSE KEY:UNTIL M<>0 - If    mouse key is pressed condition then   ceases to be 0. Move on in program.            RESERVE AS DATA                   RESERVE AS DATA 6,32000               reserve as data 3,10000          Resrves a permanent bank of memory    for use as a workspace.               RESERVE AS DATA 9,5000 - Reserve in   bank 9 workspace length 5000 bytes.   See RESERVE AS WORK.                        RESERVE AS DATASCREEN                RESERVE AS DATASCREEN 8               reserve as datascreen 4          Reserves a permanent bank of memory   32k long,for use as a screen.         RESERVE AS DATASCREEN 6 - Reserves    bank 6 for a screen. Screen is also   saved along with your program.                RESERVE AS SCREEN                    RESERVE AS SCREEN 6                   reserve as screen 9            Reserves a temporary bank of memory   32k long,for a screen.                RESERVE AS SCREEN 10 - Reserves bank  no 10 for a screen. NOTE Important    difference of temporary & permanent.           RESERVE AS SET                     RESERVE AS SET 8,4000                 reserve as set 9,8000           Reserves a permanent bank of memory   for use as a character set.           RESERVE AS SET 6,5000 - Reserve the   bank no.6,5000 bytes long to hold     a new character set.                           RESERVE AS WORK                    RESERVE AS WORK 6,300                 reserve as work 8,900           Reserves a temporary bank of memory   for use as a workspace.               RESERVE AS WORK 5,9000 - Reserve as   a workspace bank no.5,9000 bytes in   length. NOTE Temporary bank.                        RESET                                 RESET                                 reset                   Simply reinitialises the editor and   redraws the current screen.                                                 USE IN DIRECT MODE ONLY.                                                               RESET ZONE                            RESET ZONE                           reset zone(8)               Erases any of the zones created by    SET ZONE.                             RESET ZONE - Erases all zones. The    parameter in brackets erases the      specified zone.                                    RESTORE                             RESTORE 100                           restore 200                Changes the line number at which a    subsequent READ will expect DATA.     RESTORE 150 - Set start of the data   statements from line 150. Use along   with READ and DATA.                                RESUME                              RESUME NEXT                           resume 1000                Used from within an error trap to     jump back to before or after error.   RESUME - Jump back and try again.     RESUME NEXT - Jump back to the next   statement. RESUME 100 - To line 100.               RETURN                                RETURN                                return                   Returns from a GOSUB to process the   next instruction.                     RETURN - Exits from a subroutine to   the statement after the initial       GOSUB. See GOSUB,POP and GOTO.                     RIGHT$                     PRINT RIGHT$ ("STOS BASIC",5)         print right$ ("right-left",4)       Returns the rightmost character of    the string.                           PRINT RIGHT$ ("LEFT-RIGHT",5) - Will  print to the screen RIGHT. Got it?    See LEFT$,MID$ and INSTR.                           RMDIR                            RMDIR "FOLDER"                        rmdir "delete"               Deletes an empty folder from your     disc.                                 RMDIR "TEST" - Deletes empty folder   named TEST. Can be useful since it    will obviate the need to exit STOS.                  RND                                  RND(9)                                rnd(2)                  Used to generate a random number      which is between 0 and specified.     RND(50) - Will generate a random      number between 0 and 50. Useful in    debugging without parameters.                        ROL                                 ROL 1,A                              rol.w 2,a                 Takes the binary representation of    a number and rotates it left.         A=1:ROL 1,A:PRINT A - Produces 2.     Effectively multiplies number by a    power of 2. See MANUAL.                              ROR                                 ROR 1,A                              ror.w 2,a                 Similar to ROL but rotates the no.    (binary) to the right.                A=8:ROR1,A:PRINT A - Will produce     4. A very fast way of dividing a      number by a power of 2. See MANUAL.                  RUN                                  RUN 5                           run "tester1.bas"             Executes the current STOS program.    RUN 10 - Starts at line 10.           RUN "TUTORIAL.BAS" - Will load and    run TUTORIAL. Can be used within a    program to chain them together.                     SAVE                             SAVE "TUTORIAL"                       save "dump.acb"              Save all or part of a basic program.  .BAS added if no extender added.      Extenders allowed - .BAS,.ACB,.PI1,   .PI2,.PI3,.NEO,.MBK,.MBS,.VAR,.ASC    & .PRG (only runs from desktop).                  SCANCODE                              SCANCODE                              scancode                  Used to detect if user has pressed    a key which hasn't an ASCII code.     PRINT "THE SCANCODE IS";SCANCODE -    Use in conjunction with INKEY$ to     detect input of non-ASCII keycodes.              SCREEN COPY                     SCREEN COPY 10 TO LOGIC               screen copy 5 to physic          Very powerful function to copy all    or parts of screens.                  SCREEN COPY 6,10,10,80,100 TO 8,0,0   - Copy screen 6 within co-ordinates   to screen 8 block start 0,0.                     SCREEN SWAP                           SCREEN SWAP                           screen swap                Swaps the address of the logical &    physical screens.                     Needs some study to understand but    will effectively swap screens from    one to another instantaneously.                    SCREEN$                      A$=SCREEN$ 5,0,0 TO 50,60           s$=screen$ 9,50,95 to 150,300       Load a section of a screen into a     string.                               Very useful for moving large areas    of the screen around. Must be well    studied to get the maximum benefit.                 SCRN                               SCRN 50,10                            scrn 20,40                 Returns the ASCII character at the    text co-ordinates specified.          PRINT CHR$(SCRN(1,1)) - Will return   the ASCII character of what is at     the co-ordinates 1 across,1 down.                  SCROLL                               SCROLL 5                              scroll 8                  Scroll the screen in any direction.   Define with DEF SCROLL beforehand.    DEF SCROLL 1,80,0 to 240,200,0,-50:   SCROLL 1 - Define as scroll 1. See    manual for full explanation.                     SCROLL DOWN                           SCROLL DOWN                           scroll down                Scrolls the area below the cursor     one line down.                                                              See SCROLL UP & SCROLL.               Do not confuse with DEF SCROLL.                   SCROLL ON                             SCROLL ON                             scroll on                 A new line is inserted when cursor    reaches the screen bottom.            Do not confuse with DEF SCROLL.       See SCROLL OFF.                                                                        SCROLL OFF                            SCROLL OFF                            scroll off                 Whenever the cursor reaches past the  screen bottom it will appear at top.  Do not confuse with DEF SCROLL.       See SCROLL ON.                                                                          SCROLL UP                             SCROLL UP                             scroll up                 Moves a section of the window above   the cursor one line up.               Anything on the top line is erased.   Do not confuse with DEF SCROLL.       See SCROLL DOWN & SCROLL ON/OFF.                   SEARCH                            SEARCH "PRINT"                        search "gosub"               Search a basic program for any of     the STOS basic instructions.          SEARCH "RETURN" - Will search prog.   for first occurence. To find next     type SEARCH with no parameters.                   SET CURS                            SET CURS 1,8                          set curs 1,4                Set the size of the text cursor in    the range specified.                  SET CURS 1,8 - Set the text cursor    to topmost point 1 to base point 8.   Range 1 to 8 in MED and LOW res.                  SET LINE                  SET LINE %1111111100000000,10,0,1     set line %0000000011111111,20,0,0     Sets up a line style governed by the  bitmap for the line.                  SET LINE %1111111111111111,5,0,1 -    Sets a solid line style thicknes 5    (1-40) start square & end arrowed.                SET MARK                            SET MARK 4,83                         set mark 2,61               Set type and size of marker used by   POLYMARK. 8 sizes wide 6-83 pixels.   SET MARK 5,17 - Set marker type 5,    17 pixels wide. Types 1=.,2=+,3=*,    4=Square,5=Diag.cross & 6=Diamond.                SET PAINT                          SET PAINT 1,1,0                       set paint 2,8,1              Select fill pattern by type,pattern   and border. Type range 0-4.           SET PAINT 1,1,0 - Set fill pattern    to type 1(current INK),pattern 1      and border 0(range either 0 or 1).               SET PATTERN                        SET PATTERN 58000                     set pattern 60000             Set a user-defined fill pattern by    using address where pattern lies.     Address refers to memory where the    new pattern is found. Patterns can    be stored in MBK. See MANUAL.                     SET ZONE                      SET ZONE 1,0,0 TO 10,150              set zone 2,8,6 to 30,200          Set a zone for testing. Up to 128     rectangular zones can be set up.      SET ZONE 80,1,5 to 50,80 - Set zone   no.80 to size 1 across,5 down,to 50   across,80 down for test. See ZONE.                   SGN                                 SGN(15)                               sgn(10)                  Find the sign of a number. One of     3 possible values can occur.          INPUT X - If SGN(X)=-1 then number    negative. If SGN(X)=0 then number     is zero. If SGN(X)=1 then positive.               SHADE ON                              SHADE ON                              shade on                  Shade highlights text in window by    reducing brightness of characters.                                          See SHADE OFF.                                                                          SHADE OFF                             SHADE OFF                             shade off                 Reverses the action of SHADE ON and   reverts to normal for characters.                                           See SHADE ON.                                                                             SHIFT                                SHIFT 5                              shift 8,3                 Rotates entire palette(512 colours)   with delay and start specified.       SHIFT 10 5 - Rotate colours with a    delay of 10/50ths sec. between each   colour. 5(optional) start at no.5.                  SHOOT                                 SHOOT                                 shoot                   Simply produces sound of a shotgun    being fired.                          SHOOT:SHOOT:SHOOT:PRINT "Bang!! You   are DEAD". Try it out. See BOOM and   BELL.                                               SHOW                                  SHOW                                 show on                  Redisplays the mouse hidden by the    HIDE command.                         A count is kept of the no. of calls   to HIDE. An equal number of a SHOW    calls are needed. SHOW ON overrides.                 SIN                             PRINT SIN(PI/4)                       print sin(pi/8)              Calculates the sine of the angle.     Always returns floating point no.     SIN(PI/2) - Mathematical function     which calculates the sine of the      angle. Get book on MATHEMATICS.                     SORT                                SORT A(0)                            sort a$(0)                 Sort all elements in an array,into    ascending order very quickly.         SORT A$(0) - Sort all the elements    in array A$ into order. Starting      point must always be set to 0.                     SPACE$                    PRINT SPACE$(20)"      :SPACES"       print space$(50)"      :spaces"      Generate a string containing amount   of specified spaces.                  PRINT SPACE$(5)":Spaces" - Will out   -put Spaces preceded by 5 spaces.     Useful to pad out text.                            SPRITE                           SPRITE 6,10,150,5                     sprite 8,60,200,8             Display sprite no. specified at the   co-ordinates required.                SPRITE 7,0,0,6 - Display sprite no.   7 at 0,0. Last parameter 6 decides    which image from bank 1 is used.                     SQR                              PRINT SQR(25)                         print sqr(72)               Calculates the square root of a no.   specified.                            INPUT "POSITIVE NO.";N:PRINT "THE     SQUARE ROOT OF ";N;"IS";SQR(N) -      Try this short routine.                            SQUARE                            SQUARE 10,10,3                        square 15,15,8               Draw a square at the current cursor   posistion of size specified.          SQUARE 12,8,6 - Draw square 12 chrs   wide,8 chrs. high and BORDER no. 6.   Border range 1 to 16. Try it out.                   START                               START(14)                            start(3,15)                Returns the start address of bank     no. specified.                        START(8) - Returns address of bank    no. 8. START(3,15) shown above,will   give start of bank 15 in prog no.3.                 STOP                                  STOP                                  stop                    Stops the running of a program and    returns you to the editor.            Can be used anywhere in a program.    Unlike END programs can be restarted  using CONT.                                         STR$                                STR$(FREE)                            str$(free)                Will convert a number in a string     of characters.                        Can be very useful since functions    such as CENTRE do not allow use of    numbers as a parameter.                            STRING$                    PRINT STRING$("THE BASIC",10)         print string$("hello you",20)       Creates a string of characters all    the same using 1st character.         ? STRING$("PRINT",5) - Will create    a string all P's,equal to length of   second parameter. In this case 5.                   SWAP                               SWAP A$,D$                             swap a,b                  Swaps data between any 2 variables    of the same type.                     A=5:B=10:SWAP A,B - B will now be     equal to 5 and A will be equal to     10. Can be useful in some programs.                SYNCHRO                             SYNCHRO OFF                           synchro on                 Synchronises the scrolling of the     screen with the sprites.              SYNCHRO - Executes all sprite move-   ments once. SYNCHRO OFF - Turns off   sprite interrupt or on SYNCHRO ON.                 SYSTEM                                SYSTEM                                system                   Will return to GEM if option Y/N is   answered Y.                           CAUTION * All programs in STOS basic  not saved to disc,will be lost. So    think carefully before answering Y.                  TAB                                 TAB(10)                               tab(20)                  Move the cursor to the right,by the    amount of spaces specified in TAB.   PRINT TAB(5);"STOS" - Will move the   string STOS,5 spaces to the right     on execution. See CRIGHT.                            TAN                             PRINT TAN(PI/4)                       print tan(pi/6)              Generate the tangent of a specified   angle.                                PRINT TAN(PI/5) - Will return the     tangent of the angle PI/5.            See ATAN,HTAN and PI.                               TEMPO                                TEMPO 8                              tempo 100                 Modify the speed of any tune played   with the MUSIC command.               TEMPO 35 - Alter the speed of music   to 35. Speed range 1 (very slow) to   100 (very fast. See TRANSPOSE.                      TIME$                              PRINT TIME$                        time$="23:59:59"              Time$ holds a string containing the   current time in format HH:MM:SS.      TIME$="14:25:45":PRINT TIME$ - Will   print current time to screen updated  every 1/50th of a second.                           TIMER                                TIMER=0                              timer=100                 Timer is a reserved variable which    increases by 1 every 1/50th of sec.   10 PRINT "STARTED" 20 TIMER=0 30 IF   TIMER<500 THEN GOTO 30                40 PRINT "FINISHED".                                TITLE                         TITLE "STOS TUTORIAL"                 title "centre topper"           Sets the top line of current window   to the title in string.               If the length of the string is less   than the width of the window,it is    centered and displayed in window.                 TRANSPOSE                            TRANSPOSE 8                          transpose -10               Alters the pitch of a piece of music  by adding value specified to note.    TRANSPOSE 40 - Adds 40 to each note   before it is played. Range -90 to     +90. Neg.nos lower,Pos.nos. higher.                 TRAP                                 TRAP 1                                trap 7                   Large libraries of assembly language  functions from single instructions.   CAUTION * These commands if used by   novices will certainly create a lot   of problems. Suggest SEE MANUAL.                    TRUE                                  TRUE                                  true                    If a test is made of i.e. X>10 then   a number is produced.                 If that test reveals number to be     0 then the condition is FALSE. If     number is -1 then it is TRUE.                     UNDER ON                              UNDER ON                              under on                  Causes the text in the current line   to be underlined.                     UNDER ON:?"STOS BASIC"- Will print    STOS with underlining. Change back    with UNDER OFF.                                   UNDER OFF                             UNDER OFF                             under off                 Reverses the command UNDER ON.                                                                                    See UNDER ON,SHADE,INVERT & WRITING.                                                    UNFREEZE                              UNFREEZE                              unfreeze                  Resume sprite movements and music     halted by FREEZE.                                                                                                                                                     UNNEW                                 UNNEW                                 unnew                   Recover from a NEW and restore the    current program.                      It will only work if you have not     entered any further basic program     lines since the original NEW.                      UNPACK                             UNPACK 8 BACK                        unpack 5 physic              Unpack a screen compacted with the    accessory COMPACT.ACB.                UNPACK 6 PHYSIC - Will unpack the     screen stored in bank 6 into the      physical screen.                                   UPDATE                              UPDATE OFF                             update on                 UPDATE alone redraws sprites which    have changed at new posistions.       UPDATE ON - Returns the sprite up-    dating to normal. UPDATE OFF - Will   turn off updating of sprites.                       UPPER                                 UPPER                                 upper                   Normally any instructions typed in-   to basic are listed in lower case.    UPPER changes all listing to upper    case and variables normally upper     case to lower case.                                UPPER$                              UPPER$(A$)                            upper$(g$)                 Converts the specified string to      uppercase.                            PRINT UPPER$("lowercase") - Will      output as LOWERCASE. Do not confuse   with editor command UPPER.                          USING                    PRINT USING "STOS ~~ BEST";"IS"       print using "good ~~ ever";"as"      All occurences of ~ use the second    string as characters.                 Quite involved this one and other     symbols can be used i.e. # + - . ;    and ^. See MANUAL for more details.                  VAL                              PRINT VAL(A$)                         print val(d$)               Converts a string to a number. If     string has no number VAL will be 0.   A$=10:? VAL(A$) - Will output 10 as   what A$ is equal to.                  See LEN and STR$.                                  VARPTR                          LOKE VARPTR(A),1000                   deek(varptr(a$)-2)             Returns the location in memory of     a variable.                           Different variables are stored in     different ways. Quite complex so      advise see MANUAL.                                  VOICE                              VOICE ON(1)                          voice off(3)                Turn off or on one or more voices     of a tune played by MUSIC.            VOICE OFF(3) - Will turn off voice    no.3. If used without parameters      all voices addressed.                              VOLUME                               VOLUME 8                              volume 1                  Allows you to change the volume of    any subsequently generated sounds.    VOLUME 1,14 - Will make voice no.1    volume 14. Voice (optional) range     1-3. Volume range 1(soft)-15(loud).                 WAIT                                WAIT 500                              wait 250                  Suspends basic program for a fixed    time.                                 WAIT 1000 - Will suspend prog. for    approx. 20 secs. 1=1/50th of a sec.   Interrupts not affected.                          WAIT KEY                              WAIT KEY                              wait key                  Halts the program until user hits     a key.                                10 PRINT "PRESS A KEY" 20 WAIT KEY    30 PRINT "KEY PRESSED". See WAIT.                                                       WAIT VBL                              WAIT VBL                              wait vbl                  Halts the ST until the next vertical  blank is performed.                   Commonly used after PUT SPRITE or     SCREEN SWAP instruction. If your      prog. works intermittent,check VBL.              WHILE WEND                    WHILE X<5000:INC X:? X:WEND           while a>1000:inc a:? a:wend        Repeat series of instructions until   condition is met.                     WHILE Y<100:INC Y:? Y:WEND - Will     print Y as long as Y is less than     100 (condition is true).                          WINDCOPY                              WINDCOPY                              windcopy                  Prints out the text of the window     which is currently open.              WINDCOPY - Will print to printer      all the text of open window. This     command is faster than HARDCOPY.                   WINDEL                               WINDEL 1                              windel 2                  Deletes the window specified and      erases it from the screen.            WINDEL 3 - Will delete window 3 and   if current window will redraw next    window down which is no.2.                        WINDMOVE                            WINDMOVE 5,3                          windmove 8,6                Moves the current window and it's     contents to co-ordinates specified.   WINDMOVE 10,5 - Move current window   to 10 across,5 down.                  See WINDOW,QWINDOW & WINDOPEN.                     WINDON                             PRINT;WINDON                          print;windon                Variable containing number of the     current window.                       Up to 13 windows can be open at one   time and this variable helps you to   keep track of them.                               WINDOPEN                      WINDOPEN 1,10,12,5,9,16,3             windopen 2,12,20,6,8,10,8         Create a window. 1st parameter is     window number and then co-ordinates.  Followed by width and height (5x9)    then BORDER (16) and lastly chr.set   (3). 10,12 is top left of window.                  WINDOW                               WINDOW 2                              window 8                  Sets the current window to number     specified.                            WINDOW 6 - Sets the current window    to window number 6 and redraws the    window along with contents.                        WRITING                              WRITING 1                             writing 2                 Allows you to alter the mode of the   text output.                          1=Replacement mode(default).          2=OR mode. Merge with logical OR.     3=XOR mode. Combine characters(XOR).               X MOUSE                             PRINT X MOUSE                         print x mouse              Returns the current X co-ordinate     of the mouse.                         Useful to establish a specific part   of the screen.                        See Y MOUSE.                                      X SPRITE                          PRINT X SPRITE(5)                     print x sprite(8)             Returns the X co-ordinate of sprite   number specified.                     Use in conjunction with DETECT to     establish collision detection with    various sprites.                                    XCURS                              PRINT XCURS                           print xcurs                Returns the X co-ordinate of the      text cursor in text format.           LOCATE 10,0:PRINT XCURS - Will give   10 as output. 10 being the location   across,of the cursor.                             XGRAPHIC                          PRINT XGRAPHIC(8)                     print xgraphic(2)             Convert an X co-ordinate from text    format to graphic format.             In MODE 0,text format equals screen   0-39 across and 0-24 down. Graphic    format equals 0-319 and 0-199.                      XTEXT                            PRINT XTEXT(200)                      print xtext(150)             Convert an X co-ordinate graphic to   text co-ordinate.                     In MODE 1,text co-ordinates range     is 0-79 across and 0-24 down. The     graphic range is 0-639 and 0-199.                  Y MOUSE                            PRINT Y MOUSE                         print y mouse               Returns the Y co-ordinate of the      mouse pointer.                        Depending on which mode you are in    this function gives,in MODE 0 range   0-319 across and 0-199 down.                      Y SPRITE                          PRINT Y SPRITE(2)                     print y sprite(8)             Returns the Y co-ordinate of the      specified sprite.                     Very useful in collision detection    if you have a lot of sprites going    around. See X SPRITE.                               YCURS                              PRINT YCURS                           print ycurs                Returns the Y co-ordinate of the      cursor.                               In MODE 1 the screen co-ordinates     for graphic operations are 0-639      across and 0-199 down. See XCURS.                 YGRAPHIC                          PRINT YGRAPHIC(3)                     print ygraphic(8)             Convert a Y co-ordinate from text     format,to graphic co-ordinates.       In MODE 1 text co-ordinates range     from 0-79 across to 0-24 down.        See X GRAPHIC,XCURS and YCURS.                      YTEXT                             PRINT YTEXT(20)                       print ytext(50)             Convert a Y co-ordinate from graphic  to text co-ordinate.                  NOTE * In MODE 0 and MODE 1 any of    the conversion commands will work     relative to the current window.                     ZONE                                T=ZONE(8)                             t=zone(6)                 Tests a sprite,to see if it is in     a zone.                               T will hold either the number of the  zone where sprite was detected or a   value of zero. See SET ZONE.                        ZOOM                     ZOOM 10,10,50,60 TO 0,0,319,199       zoom 20,30,80,90 to 8,3,200,150      Magnifies a section of the screen     specified by co-ordinates.            ZOOM 10,50,80,90 TO 0,0,319,199 -     Will magnify 10 across 50 down by     80 across 90 down to full screen.                  SAMPLAY                              SAMPLAY 1                             samplay 9                 Will play one of 32 possible samples  stored in BANK.                       SAMPLAY 31 - Will play sample no.31   and SAMPLAY 2 - Will play no.2.       Samples normally stored in BANK 5.               SOUND INIT                            SOUND INIT                            sound init                 Kills existing sounds and prepares    the sound chip for sampler use.       SEE CLICK OFF.                                                                                                              SAMSPEED AUTO                         SAMSPEED AUTO                         samspeed auto               Automatically selects appropriate     sample speed for current sample.      This info is included with all the    samples produced using STOS MAESTRO   sampler program.                               SAMSPEED MANUAL                       SAMSPEED MANUAL                       samspeed manual              Exit the automatic sampling mode.                                           It immediately returns the sample     speed back to the rate which was      set by the last SAMSPEED command.                 SAMMUSIC                         SAMMUSIC 2,"C","D"                    sammusic 4,"e","f"             Allows alteration of a sample when    it is played.                         Sample range 1-32. Notes allowed in   string are C,C#,D,D#,E,F,F#,G,G#,A,   A#,B. Current pitch assumed Mid C.               SAMLOOP ON                            SAMLOOP ON                            samloop on                 Repeat a sampled sound. See SAMPLAY,  SAMMUSIC and SAMRAW.                  After this command any sample which   is subsequently played will be re-    peated from beginning to end.                    SAMLOOP OFF                           SAMLOOP OFF                           samloop off                Exits from a sample loop currently    in operation. See SAMSTOP.            Instructs sample routine to play any  future samples exactly once.                                                         SAMDIR FORWARD                        SAMDIR FORWARD                        samdir forward               Play a sample from the start to the   finish.                               Samples are normally played back in   the direction they were recorded.     See SAMDIR BACKWARD.                           SAMDIR BACKWARD                       SAMDIR BACKWARD                       samdir backward              Play a sample backwards. Reverses     the action of playback commands.      Any samples played after calling      this command will be played back-     wards. Cancel with SAMDIR FORWARD.               SAMSWEEP ON                           SAMSWEEP ON                           samsweep on                Repeatedly plays a sample forwards    and backwards.                        Ideal to create a 'swishing' noise    like an aeroplane. Sweeping action    only takes effect from next sample.             SAMSWEEP OFF                          SAMSWEEP OFF                          samsweep off                Stop sweeping effect for the next     sample.                               This has no effect on the current     sample being played. Takes effect     on the next sample. See SAMLOOP OFF.               SAMRAW                          SAMRAW 32000,60000                    samraw 62000,80000             Play a sample straight from memory.   Can also be loaded into a string.     SAMRAW 45000,80000 - Play sample      stored at address 45000 to 80000.     Raw samples can be manipulated.                    SAMBANK                              SAMBANK 10                            sambank 15                Allocate a BANK to store samples.     Defaults to BANK 5.                   SAMBANK 12 - Allocate BANK 12 for     storage of samples used by SAMPLAY    and SAMMUSIC. Range 1-15.                          SAMCOPY                      SAMCOPY 32000,40000,60000             samcopy 65000,80000,30000         Copy a sample from one place in the   memory to another.                    SAMCOPY 30000,40000,70000 - Copy      sample starting address 30000 to      40000 into address starting 70000.                SAMPLACE                             P=SAMPLACE                            s=samplace                 Return the current posistion in a     sample currently being played.        Y=SAMPLACE:PRINT Y - Will return      Y with a value equal to how far       the sample has progressed in bytes.               SAMRECORD                         SAMRECORD 5,10000                     samrecord 8,50000             Records a sample using the sound      cartridge,if you have one.            SAMRECORD 10,50000 - Record sample    into BANK 10 with a length reserved   of 50K. BANK range 1-15.                           SAMTHRU                               SAMTHRU                               samthru                  Play input from the sampler through   the monitor's speaker.                This allows you to listen to the      sample without creating an actual     sample. Interrupt with SAMSTOP.                    SAMPLE                               R=SAMPLE                              y=sample                  Read the sample value directly from   the cartridge port.                   P=SAMPLE:PRINT P - Will return the    sample value in P. Range -127 to      +127 representing volume digitally.                SAMSTOP                               SAMSTOP                               samstop                  Stop the current sample.                                                                                          Terminates all current sampling       operations.                                       SAMSPEED                             SAMSPEED 5                            samspeed 9                 Set the sampling rate in KHZ's.       Range 5-22.                          SAMSPEED 20 - Set the sampling rate   to 20 Kilohertz.                                                            