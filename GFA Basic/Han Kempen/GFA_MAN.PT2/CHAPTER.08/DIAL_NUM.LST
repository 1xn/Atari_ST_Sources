' *** DIAL_NUM.LST ***                                2nd GFA-Manual, page 8-10
> PROCEDURE dial_number(line,text$,start,min,max,step1,step2,loop!,VAR choice)
  '
  ' *** Dial a number choice& (min&-max&) with the mouse
  ' *** Text$ appears on line line&, default choice is start&
  ' *** Step1& for left mouse-click, step2& for right mouse-click
  ' *** click on number (or press <Return>) to confirm number
  ' *** If loop!=TRUE, numbers are cyclic (after max& you'll get min&)
  ' *** Press <Help> for a short manual
  ' *** Works in High and Medium resolution only!
  '
  ' *** Standard:  char.height&  char.width&
  ' *** Procedure:  Dial_number_help
  '
  LOCAL ready!,key$,field$
  LOCAL delta,number.col,k,len.sp,len.tk,minus.col,plus.col
  LOCAL text.col,x,x1,x2,y,y1,y2,field
  minus.col=46
  len.sp=14
  len.tk=37
  text$=LEFT$(text$+SPACE$(len.tk),len.tk)
  field=LEN(STR$(max))
  field$=STRING$(field,"#")
  x1=MUL(char.width,SUCC(minus.col))
  x2=MUL(char.width,(SUB(ADD(minus.col,ADD(field,6)),3)))
  y1=PRED(MUL(PRED(line),char.height))
  y2=MUL(line,char.height)
  number.col=ADD(minus.col,3)
  plus.col=ADD(ADD(minus.col,field),5)
  PRINT AT(1,line);text$;
  LOCATE minus.col,line
  OUT 5,2
  LOCATE plus.col,line
  OUT 5,1
  PRINT AT(number.col,line);USING field$,start;
  BOX SUB(x1,24),y1,ADD(x2,24),y2
  LINE x1,y1,x1,y2
  LINE x2,y1,x2,y2
  DEFMOUSE 0
  SHOWM
  choice=start
  ready!=FALSE
  DO
    MOUSE x,y,k
    key$=INKEY$
    IF key$=CHR$(13)                  ! <Return>, ready
      ready!=TRUE
    ELSE IF key$=CHR$(0)+CHR$(98)     ! <Help>
      @dial_number_help(field$,step1,step2)
    ENDIF
    IF k=1 OR k=2
      IF y>=y1 AND y<=y2
        IF x>x1 AND x<x2
          ready!=TRUE
        ELSE
          ready!=FALSE
          IF x>SUB(x1,24) AND x<x1
            SELECT k
            CASE 1
              SUB choice,step1
            CASE 2
              SUB choice,step2
            ENDSELECT
          ELSE IF x>x2 AND x<ADD(x2,24)
            SELECT k
            CASE 1
              ADD choice,step1
            CASE 2
              ADD choice,step2
            ENDSELECT
          ENDIF
        ENDIF
        IF choice>max
          IF NOT loop!
            choice=max
            OUT 2,7
          ELSE
            choice=min
          ENDIF
        ENDIF
        IF choice<min
          IF NOT loop!
            choice=min
            OUT 2,7
          ELSE
            choice=max
          ENDIF
        ENDIF
        PRINT AT(number.col,line);USING field$,choice
        PAUSE 5
      ENDIF
    ENDIF
    EXIT IF ready!
  LOOP
  PRINT AT(minus.col,line);USING "   "+field$+"   ",choice
  PAUSE 5
RETURN
> PROCEDURE dial_number_help(field$,step1,step2)
  '
  ' *** Help-Procedure for Procedure Dial-number
  '
  ' *** Standard:  char.height&  char.width&
  '
  LOCAL screen$,step$,x
  SGET screen$                  ! save screen
  GRAPHMODE 4
  DEFFILL 1,2,4
  PBOX 0,0,x.max,y.max
  GRAPHMODE 1
  DEFFILL 0,1
  x=14
  PBOX MUL(SUB(x,3),char.width),MUL(4,char.height),MUL(ADD(ADD(x,51),LEN(field$)),char.width),MUL(21,char.height)
  BOX MUL(SUB(x,3),char.width),MUL(4,char.height),MUL(ADD(ADD(x,51),LEN(field$)),char.width),MUL(21,char.height)
  step$=STRING$(LEN(STR$(MAX(step1,step2))),"#")
  {ADD(XBIOS(14,1),6)}=0                        ! clear keyboard-buffer
  WHILE MOUSEK                                  ! mouse released?
  WEND
  LOCATE x,6
  OUT 5,2
  f$=" = decrease number with mouse_-click (lowest  = "+field$+")"
  PRINT USING f$,min
  LOCATE x,8
  OUT 5,1
  PRINT USING " = increase number with mouse_-click (highest = "+field$+")",max
  PRINT AT(ADD(x,8),10);USING "left  button: step = "+step$,step1
  PRINT AT(ADD(x,8),12);USING "right button: step = "+step$,step2
  IF loop!
    PRINT AT(x,14);"numbers cycle (lowest after highest and vice versa)"
  ENDIF
  PRINT AT(x,16);"click on number to confirm choice or press <Return>"
  PRINT AT(ADD(x,17),20);"  press any key"
  BOX MUL(ADD(x,15),char.width),SUB(MUL(19,char.height),2),MUL(ADD(x,34),char.width),ADD(MUL(20,char.height),2)
  REPEAT
  UNTIL LEN(INKEY$) OR MOUSEK
  SPUT screen$                  ! restore screen
RETURN
' *********
'
