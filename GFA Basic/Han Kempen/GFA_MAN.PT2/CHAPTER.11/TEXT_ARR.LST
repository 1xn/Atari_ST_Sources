' *** TEXT_ARR.LST ***                               2nd GFA-Manual, page 11-23
> PROCEDURE text_array_init(VAR array$())
  '
  ' *** Fill array$() with text from DATA-lines
  ' *** Use 70 characters/line in High and Medium resolution (margins of 5)
  ' *** Use 40 characters/line in Low resolution (no margins)
  '
  ' *** Standard:  low.res!
  '
  LOCAL margin,last.line,i
  IF low.res!
    margin=0             ! no margin in Low resolution
  ELSE
    margin=5             ! left and right margin of 5 spaces
  ENDIF
  RESTORE text.data
  READ last.line
  IF DIM?(array$())>0
    ERASE array$()
  ENDIF
  DIM array$(PRED(last.line))
  FOR i=0 TO PRED(last.line)
    READ array$(i)
    array$(i)=SPACE$(margin)+array$(i)
  NEXT i
  '
  text.data:
  ' *** number of text-lines in first DATA-line
  DATA 4
  DATA ""
  DATA "If you would like to put not too many text-lines into a string-array"
  DATA "you could use the Procedure Text_array_init. After that it's easy to"
  DATA "PRINT the text on the screen."
  '    "1234567890123456789012345678901234567890123456789012345678901234567890"
  '                                         40 ^                          70 ^
RETURN
' *********
'
