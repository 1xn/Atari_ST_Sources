' *** DIRECTRY.LST ***                               2nd GFA-Manual, page 11-20
> PROCEDURE directory(path$,VAR file$(),n.files)
  '
  ' *** Put all files and folders with path path$ in string-array
  ' *** file$(i,0) = name (including path)    file$(i,1) = length
  ' *** file$(i,2) = date (dd-mm-yyyy)        file$(i,3) = time (hh:mm:ss)
  ' *** Use "A:" to get the entire directory of drive A
  ' *** Use "A:\DEMO\" to get everything inside the folder DEMO on drive A
  ' *** With TOS 1.0 you should take into account the 40-folder limit
  '
  ' *** Procedure:  Directory_read
  '
  LOCAL buffer%,attr|,folders,folder,length%,max,dta.old%
  max=999           ! not more than 1000 files/folders       <<< adapt this >>>
  CLR n.files
  IF DIM?(file$())>0
    ERASE file$()
  ENDIF
  DIM directory.folder$(DIV(max,2)),file$(max,3)
  INLINE buffer%,44
  ABSOLUTE length%,ADD(buffer%,26)
  ABSOLUTE attr|,ADD(buffer%,21)
  dta.old%=FGETDTA()
  ~FSETDTA(buffer%)                     ! temporary DTA-buffer
  @directory_read(path$)
  WHILE folders>folder
    INC folder
    @directory_read(directory.folder$(folder))
  WEND
  ERASE directory.folder$()
  ~FSETDTA(dta.old%)                    ! restore original DTA-buffer
RETURN
> PROCEDURE directory_read(folder$)
  '
  ' *** Called by Procedure Directory
  '
  ' *** Procedure:  Directory_calc
  '
  LOCAL file$,ready,i|,c$,d$,day$,month$,year$,sec$,min$,hour$
  ready=FSFIRST(folder$+"*.*",-1)
  DO UNTIL ready
    file$=CHAR{ADD(buffer%,30)}
    IF file$<>"." AND file$<>".."
      IF BTST(attr|,3)
        ' *** disk-name (not used)
      ELSE
        IF BTST(attr|,4)
          INC folders
          directory.folder$(folders)=folder$+file$+"\"
        ELSE
          INC n.files
          file$(n.files,0)=folder$+file$            ! name
          file$(n.files,1)=STR$(length%)            ! length
          ' *** date
          CLR c$,d$
          FOR i|=8 DOWNTO 1
            c$=c$+MID$(BIN$(PEEK(ADD(buffer%,25)),8),i|,1)
            d$=d$+MID$(BIN$(PEEK(ADD(buffer%,24)),8),i|,1)
          NEXT i|
          @directory_calc(LEFT$(c$+d$,5),day$)
          @directory_calc(MID$(c$+d$,6,4),month$)
          @directory_calc(RIGHT$(c$+d$,7),year$)
          file$(n.files,2)=day$+"-"+month$+"-"+STR$(ADD(VAL(year$),1980))
          ' *** time
          CLR c$,d$
          FOR i|=8 DOWNTO 1
            c$=c$+MID$(BIN$(PEEK(ADD(buffer%,23)),8),i|,1)
            d$=d$+MID$(BIN$(PEEK(ADD(buffer%,22)),8),i|,1)
          NEXT i|
          @directory_calc(LEFT$(c$+d$,5),sec$)
          @directory_calc(MID$(c$+d$,6,6),min$)
          @directory_calc(RIGHT$(c$+d$,5),hour$)
          file$(n.files,3)=hour$+":"+min$+":"+sec$
        ENDIF
      ENDIF
    ENDIF
    ready=FSNEXT()
  LOOP
RETURN
> PROCEDURE directory_calc(g$,VAR p$)
  '
  ' *** Convert binary to decimal
  ' *** Called by Procedure Directory_read
  '
  LOCAL i,d,a
  FOR i=1 TO LEN(g$)
    ADD d,MUL(VAL(MID$(g$,i,1)),2^(PRED(i)))
  NEXT i
  p$="00"
  a=1
  IF d<10
    a=2
  ENDIF
  MID$(p$,a)=STR$(d)
RETURN
' *********
'
