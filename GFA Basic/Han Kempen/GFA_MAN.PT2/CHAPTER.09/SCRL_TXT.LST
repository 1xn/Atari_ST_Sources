' *** SCRL_TXT.LST ***                                2nd GFA-Manual, page 9-10
> PROCEDURE scroll_text(text$,x,y,w)
  '
  ' *** Scroll text$ in box of width w& with TEXT (smoother than Scroll_print)
  ' *** Character-height is set at the default (8x16 or 8x8) with DEFTEXT
  ' *** Procedure uses invisible second screen for smooth animation
  '
  ' *** Standard:  high.res!  char.width&
  ' *** Procedure:  Screen2_init  Screen2_swap  Screen2_restore
  '
  LOCAL box$,txt.y,width,h,i,in$,k,x1,y1,x2,y2
  DEFFILL 0,1
  IF high.res!
    DEFTEXT ,,0,13
    h=20
    txt.y=y+h-5
  ELSE
    DEFTEXT ,,0,6
    h=11
    txt.y=y+h-3
  ENDIF
  width=LEN(text$)*char.width
  GET x,y,x+w,y+h,box$                          ! save rectangle
  BOX x,y,x+w,y+h
  CLIP x+1,y+1 TO x+w-1,y+h-1
  WHILE MOUSEK
  WEND                                          ! mouse released?
  {ADD(XBIOS(14,1),6)}=0                        ! clear keyboard-buffer
  @screen2_init(on!,s1%,s2%)
  x1=SUCC(x)
  y1=SUCC(y)
  x2=PRED(ADD(x,w))
  y2=PRED(ADD(y,h))
  REPEAT
    FOR i=ADD(x,w) DOWNTO SUB(x,width)
      k=MOUSEK
      in$=INKEY$
      EXIT IF in$<>"" OR k>0
      TEXT i,txt.y,text$
      @screen2_swap(off!,s1%,s2%)
      VSYNC
      PBOX x1,y1,x2,y2
    NEXT i
  UNTIL in$<>"" OR k>0
  CLIP OFF
  @screen2_restore
  PUT x,y,box$                                  ! restore screen
RETURN
' *********
'
