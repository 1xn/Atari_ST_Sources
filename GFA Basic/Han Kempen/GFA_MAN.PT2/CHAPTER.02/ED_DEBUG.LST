' *** ED_DEBUG.LST ***                                2nd GFA-Manual, page 2-10
> PROCEDURE edit_debug
  '
  ' *** Activate with: TRON edit_debug
  ' *** Press <Alternate> <Control> <Right Shift> for debug-menu
  ' *** Procedure uses VT52-commands, therefore only suitable for TOS-screen
  ' *** Word-wrap switched off while printing TRON-lines
  '
  ' *** Standard:  physbase%  lin.max&  char.height&  x.max&
  ' *** Global  :  debug.speed&  debug.tron!  debug.line$  debug.lines&
  '
  LOCAL c,l,screen$,dump.par$,scr%,sy,dy,m$,k
  IF BIOS(11,-1)=13 OR INSTR(TRACE$,debug.line$)
    LPOKE ADD(XBIOS(14,1),6),0  ! clear keyboard-buffer
    c=CRSCOL                    ! cursor-position
    l=CRSLIN
    SGET screen$                ! save screen
    DO
      IF debug.lines<1
        debug.lines=4
      ENDIF
      CLS
      PRINT AT(1,2);" *** GFA-BASIC DEBUGGER ***"
      PRINT
      PRINT " <S> Stop program (Command mode)"
      PRINT
      PRINT " <F> TRON Slowdown-Factor"
      PRINT " <N> Number of TRON-lines on screen"
      IF debug.tron!
        PRINT " <T> TRON off"
      ELSE
        PRINT " <T> TRON on"
      ENDIF
      PRINT
      PRINT " <V> Show Variables"
      PRINT " <P> Show Procedures/Functions"
      PRINT " <L> Show Labels"
      PRINT
      PRINT " <B> Search Breakpoint-string"
      PRINT
      PRINT " <C> Continue program"
      PRINT
      PRINT " <Q> Quit program, go to editor"
      PRINT AT(1,20);" Factor= ";debug.speed;"/50 s    TRON= ";
      IF debug.tron!
        IF debug.lines<=1
          PRINT "on (1 line)"
        ELSE
          PRINT "on (";debug.lines;" lines)"
        ENDIF
      ELSE
        PRINT "off"
      ENDIF
      IF debug.line$<>""
        PRINT " Breakpoint-string: ";debug.line$
      ENDIF
      '
      IF INSTR(TRACE$,debug.line$)
        PRINT AT(1,23);"  Breakpoint:"
      ELSE
        PRINT AT(1,23);"  Line:"
      ENDIF
      OUT 5,3
      PRINT " ";TRACE$;
      '
      SELECT UPPER$(CHR$(INP(2)))
      CASE "S"
        KEYPRESS &H1C000D       ! press <Return> in Alert-box...
        STOP
      CASE "F"
        PRINT AT(1,21);SPACE$(80);
        PRINT AT(1,21);" Factor (in 1/50 s): ";
        INPUT "",debug.speed
      CASE "N"
        PRINT AT(1,21);SPACE$(80);
        PRINT AT(1,21);" TRON-lines (ò1): ";
        INPUT "",debug.lines
      CASE "T"
        debug.tron!=NOT debug.tron!
      CASE "V"
        PRINT AT(1,21);SPACE$(80);
        PRINT AT(1,21);" DUMP-Parameter: ";
        INPUT "",dump.par$
        m$="|Dump variable-names | |to screen or printer?"
        ALERT 2,m$,1,"Screen|Printer",k
        IF k=1
          CLS
          PRINT " Screendump of variable-names"
          PRINT " Use <CapsLock> or right <Shift> "
          PRINT
          PAUSE 75
          DUMP dump.par$
          PRINT
          PRINT " (Press any key)";
          ~INP(2)
        ELSE
          LPRINT "Dump of variable-names"
          LPRINT
          DUMP dump.par$ TO "LST:"
          LPRINT CHR$(12);
        ENDIF
      CASE "P"
        m$="|Dump Procedure- and |Function-names to |screen or printer?"
        ALERT 2,m$,1,"Screen|Printer",k
        IF k=1
          CLS
          PRINT " Screendump of Procedure-/Function-names"
          PRINT " Use <CapsLock> or right <Shift> "
          PRINT
          PAUSE 75
          DUMP "@"
          PRINT
          PRINT " (Press any key)";
          ~INP(2)
        ELSE
          LPRINT "Dump of Procedure- and Function-names"
          LPRINT
          DUMP "@" TO "LST:"
          LPRINT CHR$(12);
        ENDIF
      CASE "L"
        m$="|Dump label-names | |to screen or printer?"
        ALERT 2,m$,1,"Screen|Printer",k
        IF k=1
          CLS
          PRINT " Screendump of label-names"
          PRINT " Use <CapsLock> or right <Shift> "
          PRINT
          PAUSE 75
          DUMP ":"
          PRINT
          PRINT " (Press any key)";
          ~INP(2)
        ELSE
          LPRINT "Dump of label-names"
          LPRINT
          DUMP ":" TO "LST:"
          LPRINT CHR$(12)
        ENDIF
      CASE "B"
        PRINT AT(1,21);SPACE$(80);
        PRINT AT(1,21);" Breakpoint: ";
        INPUT "",debug.line$
      CASE "C"
        EXIT IF TRUE
      CASE "Q"
        EDIT
      ENDSELECT
    LOOP
    SPUT screen$                ! restore screen
    LOCATE c,l                  ! restore cursor-position
  ENDIF
  '
  PAUSE debug.speed
  '
  IF debug.tron!
    c=CRSCOL
    l=CRSLIN
    IF debug.lines>1
      scr%=physbase%
      sy=MUL(SUCC(SUB(lin.max,debug.lines)),char.height)
      dy=SUB(sy,char.height)
      RC_COPY scr%,0,sy,x.max,MUL(PRED(debug.lines),char.height) TO scr%,0,dy
    ENDIF
    PRINT AT(1,lin.max);CHR$(27);"w";CHR$(27);"K";TRACE$;CHR$(27);"v";
    LOCATE c,l
  ENDIF
RETURN
' *********
'
