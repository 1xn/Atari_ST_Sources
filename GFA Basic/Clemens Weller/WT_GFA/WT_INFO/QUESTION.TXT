        Weller-TOOLS for GFA-BASIC: Questions and Answers
        -------------------------------------------------


Theme: Local Variables, global Variables


Question:
------

The  Weller-TOOLS for GFA-BASIC does not find all variables.  It 
will  then gives a report like '...  appears only once'  as it's
output. What is right now?


Answer:
--------

The Weller-TOOLS for GFA-BASIC distinguishes with the Cross-
Reference,sensibly between local and global variables.
 When one and the same variable names as local variable and 
as global variable have been used, then you have got two 
different variables with it, that it doesn't 'know'.  In the 
example the error will be correctly recognized:

text$............... report     13
  *** Appears in only one Procedure! Possibly define local.
  *** Error: text$ appears only once! Typing error?


 1 ' Program, that uses the same names for a global variable
 2 ' and a local Variable.
 3 '
 4 init             ! "Hello" will be output.
 5 report           ! An empty line will be output.
 6 '
 7 PROCEDURE init
 8   LOCAL text$
 9   text$="Hello"
10   PRINT text$
11 RETURN
12 PROCEDURE meldung
13   PRINT text$        ! text$ is global and does not know the
14 RETURN               ! local variable text$ from hello.


Translation of this is also valid for parameters passed.

See: GFA-BASIC 3.0 Handbook Page 7-26



Question:
------

The  Weller-TOOLS for GFA-BASIC also see such variables as 
global,  this from an established Procedure will be defined
as local. The Cross-Reference is then incorrect. Is that 
correct?

Answer:
--------

See Handbook Chap. 3.4.5 Shortcomings:

In GFA-BASIC valid local variables not only in those 
Procedures as local,that they have been defined in, but also 
in all of those Procedures calling Procedures.  There admittedly
may be no better Programming style,such variables are not 
passed on as variables-passed, it is allowed in GFA-BASIC 
however. With the Weller-TOOLS for GFA-BASIC however a local 
variable will only be seen within those Procedures as local,
and in it should be defined.

VAR-Variables will be handled like local variables,it 
alters however the value of global variables.  The X-REF-Function 
is not so intelligent, for Pointer-Operations (Call by Reference,
what the VAR-Function portrays)  to follow. That is indifferent
for the *-Pointer-Operators.

 1 ' Program, in which a local variable in Procedures
     called,also uses.
 2 '
 3 init                  ! "Hello" will be output.
 4 report                ! An empty line will be output.
 5 '
 6 PROCEDURE init
 7   LOCAL text$
 8   text$="Hello"
 9   PRINT text$
10   report             ! "Hello" will be output.
11 RETURN
12 PROCEDURE report
13   PRINT text$        ! text$ is for the first time the 
                          local variable from init,
14 RETURN               ! for the second time a (blank) 
                          global variable.

