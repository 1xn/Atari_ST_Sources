1. Example: Protocol-File (*.LOG)
------------------------------------

X-REF Protocol on 21.11.88 at 22:45
------------------------------------
  23  0.4% pd
           Local Variables : pd_menu0%
  60  1.6% e_select
           Local Variables : pos_nn% d%
 100  3.0% e_pars
           Local Variables : pos_nn% e_lw%
 123  3.5% e_statistics
...

1142 35.9  new_var_typ
           variables passed: v_typ% field%
1149 36.1  test_error
           variables passed: v_typ% field% nr%
           Local Variables : wrong_var$ howoft_var%
1195 37.3  xref_out_lines
           variables passed: v_typ% field% nr%
           Local Variables : part% no%
1212 37.8  xref_out_procs
           variables passed: v_typ% field% nr%
           Local Variables : no% proc_ptr% xref_line%
1311 40.7% xref_out_locals
           Local Variables : proc_nn% loc_var_nn% loc_line$ 
...

   1 Real-Variables
   1 Real-Fields
  41 Integer-Variables
   3 Integer-Fields
  32 String-Variables
   9 String-Fields
  22 Boolean-Variables
   0 Boolean-Fields
 102 Procedures
  11 Procedures with parameters passed
   7 Labels


2. Example: X-REF output
------------------------
The following List will additionally be seen with Comments (+).


Cross-Reference-List for : E:\WT_GFA\WT_110.LST
Generated by X-REF of the Weller-TOOLS for GFA-Basic
on 21.11.1988 at 23:18:38
=================================================================

            File: E:\WT_GFA\WT_110.LST
            Size: 101033 Byte
     Number of Lines: 3254
Number of Procedures: 113
   1 Real-Variables
   1 Real-Fields
  41 Integer-Variables
   3 Integer-Fields
  32 String-Variables
   9 String-Fields
  22 Boolean-Variables
   0 Boolean-Fields
 102 Procedures
  11 Procedures with parameters passed
   7 Labels

1 Real-Variables
------------------------------------

o...................xref_show_max_nam_nos      996
  *** Appears in only one Procedure ! Evt. local defined!
  *** Error: o appears only once! Typing error?

+ Here it actually deals with a typing error.The digit 0 was meant 
+ to be here.  The error never steps as a runtime-error , 
+ as in the following:  FOR  i%=o  to 5.  It will however need 6 
+ bytes of memory,  also when the variable 'o' is never required.
+ MERGE-Files from Resource-Construction-Sets  produce possibly
+ more declarations, than will actually be required.
...

41 Integer-Variables   (=41 * 4 Byte = 164 Byte)
------------------------------------

adr%................e_select          87
                    e_statistics     124  130  133  138
                    statistics       177  185  208  233
                    xref_make        573  627
                    xref_proc_nam    671  675  698  701
                    ol_filter       1556 1603
                    traps           1725 1745
                    num_lines       1782 1796
                    look_between    1974 1982 1988 1992
                    remkill         2044 2064
                    print_listing   2201 2222 2242
                    head            2299
                    line_input      2719 2721 2722 2723

+ Soooo obvious!  You can recognize exactly,where these variables 
+ occur overall. The instruction of the corresponding procedure is 
+ considerably informative with it as the line number alone.

cnt_c%..............statistics       184  187  192
  *** Appears in only one Procedure! Evt. local defined!

+ Here the advice will not be followed, the Procedure statistics 
+ will be called on now and then,while possibly already calculated
+ values should not have been calculated once.

...

3 Integer-Fields
------------------------------------

proc_start%().......xref_make        547  550  551
                    xref_proc_nam    656
                    xref_out_procs  1225 1243

...

32 String-Variables
------------------------------------

e_ext$..............xref_clear      1487
  *** Appears in only one Procedure! Possibly define local!
  *** Error: e_ext$ appears only once! Typing error?

+ Actually, there was a variable from previous versions still here, 
+ that was no longer necessary, and inadvertently had not been 
+ removed from it.

info$...............MAINPROGRAM       12   13
                    xref_clear      1487
                    init_vars       2488 2489
                    info            2799 2801

+ So you can see,when a variable not only happens in Procedures, 
+ but also in the Main program.

...

9 String-Fields
------------------------------------

bomb$().............bombs           2727 2728 2729 2733 2736 2739
  *** Appears in only one Procedure! ERASE in this Procedure?

+ This report should help to avoid the deplorable state, that fields, you 
+ above all think are necessary (here:  Sprites) will no longer be  
+ removed.

...

22 Boolean-Variables
------------------------------------

comm_found!.........xref_remove_comm   762  767  771
  *** Appears in only one Procedure! Possibly define local!

+ Here it was when Programming not even safe,whether these variables 
+ are still not required externally also (what was then obviously 
+ not the case). Also taken over in the LOCAL-List.

prt_ready!..........print_listing   2154 2157 2159 2161
  *** Appears in only one Procedure! Possibly define local!

+ Ditto
...


102 Procedures without parameters passed
----------------------------------------

...
xref_out............pd                39
                    xref_out        1012

xref_out_items......xref_out        1058
                    xref_out_items  1083

xref_out_locals.....xref_out        1061
                    xref_out_locals 1311

xref_out_multi......xref_out        1064
                    xref_out_multi  1368

xref_proc_nam.......xref_make        609  612   + twice used
                    xref_proc_nam    650        + once defined

xref_proc_ref.......pd                40
                    xref_proc_ref   1445

+ In larger programs you have a better overview, when groups of 
+ functions and variables are named after set schemes -
+  (orthogonal names structure,hungarian  Notation,  ...). 
+ Here are a couple of Procedures from the MODULE  xref. The 
+ local variables here begin likewise with xref_.

...

11 Procedures with parameters passed
------------------------------------

test_error()........xref_out_items  1134
                    test_error      1149

away$()..............xref_make        605
                    xref_seek_nam    848
                    test_error      1157
                    xref_out_procs  1278
                    xref_out_multi  1382 1387 1391 1393 1407 1412 
                    scrn_halt       2788

+ Here unfortunately is yet an error in the Weller-TOOLS  for  GFA-
+ Basic:  away$()  is not a Procedure,  but a defined function.
+ This will be seen as a Procedure at present. IN 
+ GFA-BASIC V3 there are many line functions.

...

7 Labels
------------------------------------

bomb_data...........bombs           2730
                                    3038
+ Where is line 3038?  It stands behind the last Procedure, 
+  where many other DATA's also are  ('DATA-Section).
+   There the DATA-values, provided they are numbers  e.g. 
+ a Machine program handle, not much can be seen, the DATA 
+ from the algorithmical section are taken out and placed at the 
+ end of the program.
...

* Procedures with local Variables and/or  parameters passed:
------------------------------------------------------------

+ The functions and variables  will be called upon in the 
+ sequence, in which it appears in the program listing.

pd..................pd_menu0% 
e_select............pos_nn%   d%        
e_pars..............pos_nn%   e_lw%     
statistics..........d%        pos_nn%   d$        t$        test$     
a_file_control......m$        bak%      pos_nn%   
f_del...............f_del$    
f_copy..............f_copy_source$      f_copy_target$      f_copy_len%         
f_ren...............f_ren_source$       f_ren_target$       
dir_make............dir_make$ 
d_free..............lw$       
...
bombs...............bomb_nn%  bomb_front%         bomb_rear%          

Manyfold uses of Names in different Variable types:
---------------------------------------------------

act_lw% for Integer-Variables and act_lw$ for String-Variables
away% for Integer-Variables and away$ for String-Variables
proc$ for String-Variables and proc$() for String-Fields
line$ for String-Variables and line$() for String-Fields
Altogether 4 Manyfold uses for Names

+ With help from this last List you can likewise find Typing errors. 
+ How often inadvertently has a '%'  been forgotten or the '5' 
+ been accidentally pressed instead.
