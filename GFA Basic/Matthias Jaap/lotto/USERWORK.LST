> PROCEDURE lottozahlen
ERASE a()
DIM a(wert|+2)
wert2|=49
a$="|"
FOR i=1 TO wert|+2
  DO
    a(i)=INT(RND(1)*wert2|)+1
  LOOP UNTIL INSTR(a$,"|"+STR$(a(i))+"|")=0
  a$=a$+STR$(a(i))+"|"
NEXT i
LET zusatzzahl_var$=STR$(a(7))
LET superzahl_var$=STR$(a(8))
a(8)=200
a(7)=200
QSORT a()
LET lotto1_var$=STR$(a(1))
LET lotto2_var$=STR$(a(2))
LET lotto3_var$=STR$(a(3))
LET lotto4_var$=STR$(a(4))
LET lotto5_var$=STR$(a(5))
LET lotto6_var$=STR$(a(6))
@rsc_setup_tree(lotto&)
index&=@win_get_index(lottowin&)
@win_send_redraw(index&,-1,-1,-1,-1)
'  @rsc_ob_reset(lotto,superzahl&)
RETURN
'
ENDFUNC
> PROCEDURE user_rsc_var_init
'
'  You MUST set these variables (and DIMension any listbox arrays here).
'  This is read ONCE, at startup, and the corresponding dialog objects
'  will be set accordingly.
'
'
' snap_windows!=TRUE
quit_alert!=TRUE
'
LET lotto1_var$=""                        ! Max lenght: 2 - tree: lotto&
LET lotto2_var$=""                        ! Max lenght: 2 - tree: lotto&
LET lotto3_var$=""                        ! Max lenght: 2 - tree: lotto&
LET lotto4_var$=""                        ! Max lenght: 2 - tree: lotto&
LET lotto5_var$=""                        ! Max lenght: 2 - tree: lotto&
LET lotto6_var$=""                        ! Max lenght: 2 - tree: lotto&
LET zusatzzahl_var$=""                    ! Max lenght: 2 - tree: lotto&
LET superzahl_var$=""                     ! Max lenght: 2 - tree: lotto&
'
wert|=6
RETURN
> PROCEDURE user_on_open
'
' This procedure is called when the program is run, after the RSC is
' loaded and just before the main loop. You can open program windows,
' toolboxes etc. here, or  init things for your program like
' loading an *.INF or .DAT file.
'
' If run as an accessory, this procedure is called EVERY TIME
' THE ACCESSORY IS OPENED. If you need to do anything just ONCE,
' like disable menu-entries spesific to PROGRAM execution, set a global
' flag here to avoid doing things EVERY time the accessory is opened.
'
' ÍÍwsnippetÍÍ  - Wrinkle code: (don't change or delete this flag)
'
@gemscriptcmd_init                                         !ÍÍFVW:GEMScriptCMDÍÍ
'
' ÍÍwsnippetÍÍ  - End of Wrinkle code: (don't change or delete this flag)
'
lottowin&=@win_open_dialog(2,lotto&,icfyicon&)
RETURN
> PROCEDURE user_rsc_interact(index&,tree&,object&,mc&,sub_me&)
'
'  <index&> is the index of this window in window_array&(index&,x)
'           If the object tree is the normal menu bar, <index&>=-1
'   <tree&> is the object tree number
' <object&> is the object that was selected (clicked on OR shortcut)
'     <mc&> is the number of clicks (1=normal/2=double clicked/1 if shortcut)
' <sub_me&> is the chosen menuitem in a popup menu
'
SELECT tree&
'
' ------------------------------------------------------------------------
'
CASE lotto&
SELECT object&
CASE neuezahl&
@lottozahlen
CASE ende&
LET exit_program!=TRUE
CASE info&
~@win_open_dialog(2,about&,icfyicon&)
ENDSELECT
'
' ------------------------------------------------------------------------
'
CASE about&
SELECT object&
CASE infook&
@win_close_dialog(about&)
ENDSELECT
'
' ------------------------------------------------------------------------
'
CASE fvt_altr&
alert_result&=SUB(object&,7)
@win_close(@find_handle_from_tree(fvt_altr&))
'
' ------------------------------------------------------------------------
'
'
' ÍÍwsnippetÍÍ  - Wrinkle code: (don't change or delete this flag)
' ÍÍwsnippetÍÍ  - End of Wrinkle code: (don't change or delete this flag)
'
ENDSELECT
RETURN
> PROCEDURE user_rsc_context_help(tree&)
SELECT tree&
' ÍÍwsnippetÍÍ  - Wrinkle code: (don't change or delete this flag)
' ÍÍwsnippetÍÍ  - End of Wrinkle code: (don't change or delete this flag)
DEFAULT
@call_st_guide("LOTTO.HYP","")
ENDSELECT
RETURN
> FUNCTION user_rsc_bubble_help$(tree&,object&)
LOCAL help_str$
help_str$=""
'
' To enter a bubble help text for an object, simply write
' help_str$="My help text"like this into its CASE entry
' (directly below it). If you do not want bubble help for
' a given object, just delete its CASE entry...
'
SELECT tree&
CASE lotto&
SELECT object&
CASE lotto1&
help_str$="Die erste gezogene Zahl."
CASE lotto2&
help_str$="Die zweite gezogene Zahl."
CASE lotto3&
help_str$="Die dritte gezogene Zahl."
CASE lotto4&
help_str$="Die vierte gezogene Zahl."
CASE lotto5&
help_str$="Die fÅnfte gezogene Zahl."
CASE lotto6&
help_str$="Die sechte gezogene Zahl."
CASE zusatzzahl&
help_str$="Zusatzzahl"
CASE superzahl&
help_str$="Superzahl"
CASE neuezahl&
help_str$="Neue Zahlen ziehen"
CASE ende&
help_str$="Programm beenden"
CASE info&
help_str$="Infos Åber dieses Programm"
ENDSELECT
'
' ----------------------------------------------------------------------------
CASE about&
SELECT object&
CASE infook&
help_str$="Diesen Dialog schlieûen"
ENDSELECT
'
' ----------------------------------------------------------------------------
'
' ÍÍwsnippetÍÍ  - Wrinkle code: (don't change or delete this flag)
' ÍÍwsnippetÍÍ  - End of Wrinkle code: (don't change or delete this flag)
'
' ----------------------------------------------------------------------------
ENDSELECT
RETURN help_str$
ENDFUNC
