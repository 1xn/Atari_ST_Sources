' GFATIP12.BAS  Written by John B. Holder, Marathon Computer Press¿
'
'                             11 Nov 1987
Top_label:
Cls
@Screenflipdata
' bios function call for screen resolution and returned values
Bios_rez=4
Mrez=1
Hrez=2
'
' screen size (to be used with Rez)
Scr_org_x=640
Scr_org_y=200
'
' get screen resolution from Xbios/Trap #14, opcode=Bios_rez=4
Rez=Xbios(Bios_rez)
If Rez<1
  Alert 1," This demo for Med or | High Rez Only!! | ",1," OK ",Out%
  End
Endif
'
' calc to allow this demo to function in med or Hi rez
Scr_max_y=Scr_org_y*Rez-1
Scr_max_x=Scr_org_x-1
If Rez=1 Then
  Deffill 3,2,8
Else
  Deffill 1,2,4
Endif
Pbox 0,0,Scr_max_x,Scr_max_y
Print At(18,24);" Quick GEM Windows With GFA Basic!!, GFATIP12 ";
Sget Tempuse$
@Display_files
If Ex_code=1
  Goto Top_label
Endif
End
Rem ############################## display_files procedure #################
Procedure Display_files
  Clr Ex_code
  '
  Erase Chapter$()
  Dim Chapter$(2500) ! Allows up to 2500 Lines in a file
  '
  True=-1
  False=0
  '
  '
  ' GEM opcodes
  W_get=104
  W_set=105
  W_calc=108
  '
  ' working margin on GFA basic screen at top
  Top_margin=11*Rez
  '
  ' vars for tracking window full state
  Wfull=False
  Old_fulx=0
  Old_fuly=Top_margin
  Old_fulw=Scr_max_x
  Old_fulh=Scr_max_y-Top_margin
  '
  ' window attributes
  Wattribs=&H1C2
  '
  ' event messages return values in Menu
  Wclosed=22
  Warrowed=24
  Wvslided=26
  '
  ' vars to track sliders
  Slid_vert_pos=1
  Slid_vert_size=1
  '
  ' vars to track and calc text size
  Char_cell_width=8
  Char_cell_height=10*Rez
  '
  ' position in string array for upper left corner of window
  Txt_char=1
  Txt_line=1
  '
  ' window size in chars for text to display
  Txt_wind_w=1
  Txt_wind_h=1
  Tot_txt_len=92
  File$=""
  Closew 0
  Repeat
    Fileselect Dir$(0)+"\*.DOC",File$,Dummy$
    Exit If Dummy$=""
  Until Len(Dummy$)<>1
  If Dummy$<>"" Then
    @Strip_file_path
    Open "I",#1,File$
    Print At(27,12);" Please Wait...Loading.. "
    For X=1 To 1500
      Exit If Eof(#1)
      Line Input #1,Temp$
      Chapter$(X)=Temp$
    Next X
    Close
    '
    Sput Tempuse$
    Chapter$(X)=Space$(92)
    If X<24 Then
      For Cnt_1=(25-X) To 25
        Chapter$(X+Cnt_1)=" "
      Next Cnt_1
      X=X+Cnt_1
    Endif
    Tot_txt_lines=X
    '
    ' defined fill pattern & fill entire screen
    ' for color - 3=color=green,   2,8=pattern=solid
    ' for mono  - 1=color=black,   2,4=pattern=med screen(dots)
    '
    If Rez=1
      Adjust=8
    Else
      Adjust=15
    Endif
    Graphmode 1
    Text 120,Adjust," Written by John B. Holder, Marathon Computer Press¿ "
    Sget Tempuse$
    '
    Deftext 1
    ' assign our vars to match(point to) Window paramater table
    Attr=Windtab+2
    Xpos=Windtab+4
    Ypos=Windtab+6
    Width=Windtab+8
    Height=Windtab+10
    '
    ' set up window with all attributes functioning
    Dpoke Attr,Wattribs
    '
    ' assign title for window 1
    Titlew 1,"  Blazing Window Redraws with GFA Basic  "
    '
    ' windows dimensions based on screen resolution
    Wx=15
    Wy=10*Rez
    Ww=615
    Wh=170*Rez
    '
    ' ** set up handling for GEM messages **
    On Menu Message Gosub Msg_event
    '
    ' open and clear window 1
    @Open_window(Wx,Wy,Ww,Wh)
    '
    ' *** Main program loop ***
    Do
      ' break out on GEM message
      On Menu
      Exit If Ex_code=1
    Loop
  Endif
  ' *************************
Return
'
' ** handler for any message
'
Procedure Msg_event
  '  menu() array = event message buffer array +1
  M=Menu(1)
  If M=Wclosed
    Alert 2,"Quit Text Display        |  Of this File?",1,"Yes|No",A
    If A=1
      Closew 1
      Closew 0
      Rem heres where you return
      Sput Tempuse$
      Erase Text$()
      Alert 0,"Do Another File now?  | |",1," Yes | No ",Out%
      If Out%=1
        Ex_code=1
      Else
        Closew 0
        End
      Endif
    Endif
  Endif
  If M=Warrowed
    On Menu(5)+1 Gosub Page_up,Page_dn,Row_up,Row_dn
  Endif
  If M=Wvslided
    @Setvslid(Menu(5))
  Endif
Return
'
' *** Routines to service Msg_event procedure ***
'
Procedure Page_up
  Txt_line=Max(1,Txt_line-Txt_wind_h)
  '  Clearw 1
  @Calc_vert_pos
  @Setwindvslid(Slid_vert_pos)
  @Draw_window
Return
'
Procedure Page_dn
  Txt_line=Min(Txt_line+Txt_wind_h,Tot_txt_lines-Txt_wind_h+1)
  '  Clearw 1
  @Calc_vert_pos
  @Setwindvslid(Slid_vert_pos)
  @Draw_window
Return
'
Procedure Row_up
  If Txt_line>1 Then
    Dec Txt_line
    '    Clearw 1
    @Calc_vert_pos
    @Setwindvslid(Slid_vert_pos)
    @Draw_window
  Endif
Return
'
Procedure Row_dn
  If Txt_line+Txt_wind_h<=Tot_txt_lines Then
    Inc Txt_line
    '    Clearw 1
    @Calc_vert_pos
    @Setwindvslid(Slid_vert_pos)
    @Draw_window
  Endif
Return
'
Procedure Page_lt
  Txt_char=Max(1,Txt_char-Txt_wind_w)
  '  Clearw 1
  @Calc_horz_pos
  @Setwindhslid(Slid_horz_pos)
  @Draw_window
Return
'
'
'
Procedure Setvslid(Mark)
  ' set pos of vert slider, service routine for user moving slider directly
  ' must adjust starting vert text pos to match 0..1000 slider range
  '  Clearw 1
  I1=Tot_txt_lines-Txt_wind_h+1
  Txt_line=Max(1,Trunc(Mark/1000*I1+0.5))
  Dpoke Gintin,Dpeek(Windtab)
  Dpoke Gintin+2,9
  Dpoke Gintin+4,Mark
  Gemsys W_set
  @Draw_window
Return
'
'
' *** open window ***
'
Procedure Open_window(X,Y,W,H)
  Sput Tempuse$
  ' main open service routine for procedures in this program
  Dpoke Xpos,X
  Dpoke Ypos,Y
  ' force window to open on multiple of character cell size
  ' to show complete text characters in window
  ' W=Char_cell_width*(W Div Char_cell_width)-3*Rez
  ' H=Char_cell_height*(H Div Char_cell_height)-1*Rez
  Dpoke Width,W
  Dpoke Height,H
  '
  Openw 1
  Clearw 1
  ' get working co-ords of new window position
  @Calc_txt_wind
  '  make sure that fulled/expanding window resets beginning txt_char/line if necessary
  Txt_char=Min(Txt_char,Tot_txt_len-Trunc((Wtemp/Char_cell_width)+0.5)+1)
  Txt_line=Min(Txt_line,Tot_txt_lines-Trunc((Htemp/Char_cell_height)+0.5)+1)
  @Calc_vert_pos
  @Size_sliders(Xtemp,Ytemp,Wtemp,Htemp)
  @Setwindvslid(Slid_vert_pos)
  @Draw_window
Return
'
' *** Support routines for displaying text in window
'
Procedure Calc_txt_wind
  ' calc the size of the text window for Txt_wind_w & h
  ' also prepares _temp vars for window open
  Dpoke Gintin,Dpeek(Windtab)
  Dpoke Gintin+2,4
  Gemsys W_get
  Xtemp=Dpeek(Gintout+2)
  Ytemp=Dpeek(Gintout+4)
  Wtemp=Dpeek(Gintout+6)
  Htemp=Dpeek(Gintout+8)
  Txt_wind_w=Wtemp Div Char_cell_width
  Txt_wind_h=Htemp Div Char_cell_height
Return
'
'
'
'
' &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Procedure Draw_window
  ' draw text within window
  ' calc avail size of window in chars and *Text* into window what we need
  @Calc_txt_wind
  Textscreen=Xbios(5,L:Page2,L:Log,-1)
  Cls
  Print At(1,1);
  Clr Count
  Repeat
    Print Chapter$(Txt_line+Count)
    Inc Count
  Until Count=Txt_wind_h+1
  If Rez=2
    Get 5,40,590,345,Quickscreen$
    Textscreen=Xbios(5,L:Log,L:Page1,-1)
    Put 25,50,Quickscreen$
  Else
    Get 5,30,590,170,Quickscreen$
    Textscreen=Xbios(5,L:Log,L:Page1,-1)
    Put 20,35,Quickscreen$
  Endif
Return
'
'
' &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
'
'
' *** Slider support routines ***
'
'
Procedure Setwindvslid(Mark)
  ' set position of vert slider
  Slid_vert_pos=Mark
  Dpoke Gintin,Dpeek(Windtab)
  Dpoke Gintin+2,9
  Dpoke Gintin+4,Mark
  Gemsys W_set
Return
'
Procedure Size_sliders(Xtemp,Ytemp,Wtemp,Htemp)
  @Calc_vert(Htemp)
  Dpoke Gintin,Dpeek(Windtab)
  Dpoke Gintin+2,16
  Dpoke Gintin+4,Slid_vert_size
  Gemsys W_set
Return
'
Procedure Calc_vert(Htemp)
  Slid_vert_size=Trunc((Htemp/(Tot_txt_lines*Char_cell_height))*1000+0.5)
Return
'
'
Procedure Calc_vert_pos
  Slid_vert_pos=Abs(Trunc(Txt_line/(Tot_txt_lines-Txt_wind_h)*1000))-21
Return
'
Rem ###################### strip_file_path procedure #######################
Procedure Strip_file_path
  Local Size
  Size=Len(Dummy$)
  For Strippat=Size To 1 Step -1
    If Mid$(Dummy$,Strippat,1)="\" Then
      File$=Right$(Dummy$,(Size-Strippat))
      Strippat=1
    Endif
  Next Strippat
Return
Procedure Screenflipdata
  Sget Fscreen$
  Page1=Xbios(2)
  Log=Xbios(3)
  Page2=Varptr(Fscreen$)+160
  Active_page=Page1
  Hidden_page=Page2
Return
