' GFATIP11.BAS    Written By John B. Holder
'                 Senior Software Engineer
'                 Marathon Computer Press
'
'               "This is a Public Domain Software Solution"
'                      See GFATIP11.DOC for Details
'
'
Rez=Xbios(4)
' Rez=0 if machine is in low resolution
' Rez=1 if machine is in medium resolution
' Rez=2 if machine is in high resolution
'
'
' Let's dimension an array to hold our menu
Dim M$(100)
' The extra room is in case you want to add more items later
'
M$(0)=" Desk "
M$(1)=" About Program "
M$(2)="-----------------------"
M$(3)="1"
M$(4)="2"
M$(5)="3"
M$(6)="4"
M$(7)="5"
M$(8)="6"
M$(9)=""
M$(10)=" Accessory "
M$(11)=" Use An Accessory  "
M$(12)=" Return            "
M$(13)=""
M$(14)=" Quit "
M$(15)=" Your Routine " ! You supply these..
M$(16)=" Your Routine "
M$(17)=" Your Routine "
M$(18)=" Quit Demo    "
M$(19)=""
M$(20)=""
'
'
' Now for the GEM¿ menu handling routines:
'
'
Menu M$()
On Menu  Gosub Main
On Menu
For X=3 To 8
  Menu X,2
Next X
'
' Put up a sample screen to look at
'
Text 10,50,"Desk Accessories Won't Punch a Hole In"
Text 10,70,"         This Screen Folks!"
Text 7,90,"Compliments of Marathon Computer Press¿"
Text 10,110,"  Written by John B. Holder  11/1/87"
Text 10,130,"   At Marathon, We Go The Distance!"
'
'
'
Do
  On Menu
Loop
'
'
'
'
'
'
' Now for your menu handling (MAIN) program
'
Procedure Main
  ' We'll assign the variable Button to whatever the menu item selection is
  Button=Menu(0)
  '
  Menu Off
  '
  '
  If Button=1 Then
    Alert 1," The Desk Accessory |      Solution! | ",1," Thanks ",Out%
  Endif
  '
  '
  ' Remember to leave Buttons 2 through 9 vacant as these are for ACC's and
  ' routine menu management.
  '
  If Button=11  ! Use an Accessory?
    '
    If Accshow<>1 ! Make sure it wasn't already selected.
      ' First a quick memory check
      '
      Clr Oops%
      If Fre(0)<32000
        Alert 1,"Not enough Memory!  | | ",1," Sorry ",Oops%
      Endif
      ' Here we define the fill pattern for the background
      If Oops%<>1
        ' Set the accshow variable to one to show that it's selected!
        Accshow=1
        If Rez<=1
          Deffill 3,2,8
        Else
          Deffill 1,2,4
        Endif
        For X=3 To 8
          Menu X,3
        Next X
        For X=13 To 100
          Menu X,2
        Next X
        If Rez=0
          Sget Accscreen$
          Pbox 0,11,319,199
        Endif
        If Rez=1
          Sget Accscreen$
          Pbox 0,11,639,199
        Endif
        If Rez=2
          Sget Accscreen$
          Pbox 0,18,639,399
        Endif
      Endif
    Endif
  Endif
  '
  '
  If Button=12
    ' Test to see if this is a valid call first
    ' then do it!
    If Accshow=1
      '
      ' Here you must redefine the fill patterns if necessary
      '
      For X=3 To 8
        Menu X,2
      Next X
      For X=13 To 100
        Menu X,3
      Next X
      Sput Accscreen$
      Clr Accscreen$ ! This frees up the memory and returns the 32k to the pool.
      Clr Accshow
      Void Fre(0) ! Do some forced Garbage Collection
    Endif
  Endif
  '
  If Button=18
    Alert 1,"     Solved by    |     John B. Holder |Marathon Computer Press¿",1," Bye ",Out%
    End
  Endif
  '
  '
  '
  ' At this point you can continue on with menu routines
  '
  '
Return
