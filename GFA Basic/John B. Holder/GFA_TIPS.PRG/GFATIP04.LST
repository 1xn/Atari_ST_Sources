' ****************************** GFATIP04.BAS *********************************
'
'
'                              By John B. Holder
'                                 GRIFJOHN
'
'                Designed to display the possiblities with displaying
'                                 Disk Directories
'
'                        Includes a Fast Shell Sort Routine
'
' Warning:  No Error checking routines are installed with this version.  You must
' install your own.  For example if a disk is write protected, the program will
' crash.
'
'  A Good project for an enterprising GFA Basic Programmer would be to incorporate
'  Tim Purve's Sort Routine to this procedure.  Have fun!
Rez=Xbios(4)
If Rez<1 Then
  Alert 1,"For High or Med Rez!",1,"Sorry",Out%
  End
Endif
'
'
Print At(7,1);"Sorted Columnar Directory Listing by John B. Holder For GFATIP04"
Dim File1$(1000)! Up to 1,000 file names. Only Hard disks could go higher.
Print At(23,3);"Writing a Temp file first...."
Files "" To "tempfile.tmp"
Open "I",#1,"tempfile.tmp"
Count=0
Do
  ' Now let's read the file that has the listing of current files in it.
  '
  Line Input #1,File1$(Count)
  Count=Count+1
  Exit If Eof(#1)
Loop
File1size=Count
Close
' Now let's get rid of the pesky thing!
'
Kill "tempfile.tmp"
' ************************************* Shell Sort of the Directory ***************
'
'
Rem actual sorting
'
Shell=Int(File1size/2)
' This next series of periods on the screen shows the activity of the sort.
'
Print At(5,5);"Now Sorting.";
Repeat
  Exit If Shell<1
  For Count=0 To Shell
    Print ".";
    For Pass=Count To File1size-Shell Step Shell
      Num1=Pass
      Temp$=File1$(Pass+Shell)
      Sortjumpopt2:
      If Num1<Count Then
        Goto Sortjumpopt1
      Endif
      If (Temp$>=File1$(Num1)) Then
        Goto Sortjumpopt1
      Endif
      Swap File1$((Num1+Shell)),File1$(Num1)
      Num1=Num1-Shell
      Goto Sortjumpopt2
      Sortjumpopt1:
      Swap File1$(Pass+Shell),File1$(Pass+Shell)
    Next Pass
  Next Count
  Shell=Int(Shell/2)
Until Shell<1
Print
Print
Print "                        We are fully sorted now......"
Pause 120! for effect only.
Deftext 1,0,0,4
Cls
' Let's display the directory in columns and in Graphic text format.
For X=0 To File1size Step 48
  For Inloop=1 To 48
    Text 0,(Inloop*4),File1$(X+Inloop)
    Text 0+380,(Inloop*4),File1$(X+Inloop+1)
    Inloop=Inloop+1
  Next Inloop
  If X+48<File1size Then
    Print At(19,25);"Please Press a key to display next page...";
    A=Inp(2)
  Else
    '
    ' Here is where we find out some goodies about the current disk!
    '
    '
    Print At(8,25);" Please Wait Because I'm Calculating Vital Statistics.......";
    Pause 30
    Print At(5,25);"Total of "+Str$(File1size-1)+" files  "+"Free Disk Space = "+Str$(Dfree(0))+"  Press space bar to quit...";
    A=Inp(2)
  Endif
  Cls
Next X
End! of program.
' This is not supposed to be a screamer.  As a matter of fact the program has
' been slowed down a bit to allow you to see what is happening.  It works just great
' with hard disks as well as floppys.  You can speed it up by taking out all of
' the unnecessary narration print lines and the sort periods...
'
'  There is a fast way to do a columnar sort, but it is a bit above the level of
'  this GFATIP file series.  You may prepare the directory totally in memory if
'  so desired, but the concepts are a bit complicated.  Perhaps in a future file?
'
'  This file should help you to build on some sound fundamentals.
' ***************************************************************************
