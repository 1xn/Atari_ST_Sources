.**************************************
.* Routine de distorsion en GfA-Basic *
.* par Jedi of Sector One from T.H.K. *
.**************************************
.
SETCOLOR 0,0
SETCOLOR 15,1911
HIDEM
CLS
SPOKE &HFFFFFC02,&H12 ! Bloque la souris
.
.On fait un boooooooo dessin...
GRAPHMODE 2
DEFFILL 2,4
PRBOX 0,0,159,49
RBOX 0,0,159,49
COLOR 4
RBOX 1,1,158,48
COLOR 5
RBOX 2,2,157,47
DEFTEXT 3,1+8,,16
TEXT 6,30,"GFA IS GOOD 4 U"
GRAPHMODE 1
.
.Sa taille: 160x50
largeur%=160
hauteur%=50
largeur%=AND(ADD(largeur%,15),65520)
.
.On compte 8 octets suppl‚mentaires
.bikoz le pr‚d‚calage vers la droite
largeur%=ADD(SHR(largeur%,1),8)
taille_du_buffer_necessaire%=ADD(largeur%,16)
MUL taille_du_buffer_necessaire%,hauteur%
.
.Il faut pr‚voir les seize phases
MUL taille_du_buffer_necessaire%,16
RESERVE FRE(0)-taille_du_buffer_necessaire%
precalc%=MALLOC(taille_du_buffer_necessaire%)
rose%=precalc%
COLOR 0
.
.
.------------------------------------------
.- Mergez ici la d‚finition des variables -
.------------------------------------------
.
.
.Precalculation proprement dite
FOR phase%=0 TO 15
  FOR li%=0 TO PRED(hauteur%)
    .
    .Espace pr‚cedent le motif
    LONG{rose%}=0
    LONG{rose%+4}=0
    ADD rose%,8
    adresse_sur_l_ecran%=XBIOS(2)
    ADD adresse_sur_l_ecran%,colonne%
    ADD adresse_sur_l_ecran%,MUL(li%,160)
    BMOVE adresse_sur_l_ecran%,rose%,largeur%
    ADD rose%,largeur%
    .
    .Espace post-motif
    LONG{rose%}=0
    LONG{rose%+4}=0
    ADD rose%,8
  NEXT li%
  GET 0,0,318,PRED(hauteur%),nathalie$
  PUT 1,0,nathalie$
  LINE 0,0,0,PRED(hauteur%)
NEXT phase%
CLS
OPEN "i",#1,"*.wav"
courbe$=INPUT$(LOF(#1),#1)
CLOSE #1
.
.Reserve 32K pour le second ‚cran
ecran2$=STRING$(32255,0)
.
.Mieux vaut faire un FRE(0) avant de
.d‚clarer des pointeurs sur l'adresse
.de variables.
~FRE(0)
eclipse_sct1%=XBIOS(2) ! Mem.video originale
.
.Adresses relatives … la courbe
debut_de_la_courbe%=V:courbe$
pnt%=debut_de_la_courbe%
fin_de_la_courbe%=debut_de_la_courbe%
ADD fin_de_la_courbe%,LEN(courbe$)
SUB fin_de_la_courbe%,MUL(hauteur%,6)
ecran1%=XBIOS(2)
ecran2%=AND(ADD(V:ecran2$,255),&HFFFFFF00)
.
.Vide l'‚cran que nous venons de reserver
BMOVE ecran1%,ecran2%,32000
.
.Boucle principale
DO
  ~XBIOS(5,L:ecran1%,L:ecran2%,-1)
  VSYNC
  SWAP ecran1%,ecran2%
  .
  .Il faut retirer 8 octets en raison
  .de l'espace pr‚c‚dent le motif
  ecran%=ADD(ecran2%,152)
  .
  .
  .-------------------------
  .- Mergez ici les BMOVEs -
  .-------------------------
  .
  .
  ADD pnt%,6                 ! Pos. suivante
  IF pnt%>=fin_de_la_courbe% ! Courbe finie ?
    pnt%=debut_de_la_courbe% ! => boucle
  ENDIF
LOOP UNTIL INKEY$=" "
~MFREE(precalc%)
~XBIOS(5,L:eclipse_sct1%,L:eclipse_sct1%,-1)
SPOKE &HFFFFFC02,8
EDIT
