.*************************
.*       BIG SPRITE      *
.*  par DENEB (FANTASY)  *
.*************************
.
.CE PROGRAMME DOIT ETRE COMPILE POUR TOURNER EN 1 VBL
.
HIDEM                         ! la souris se cache...
OUT 4,18                      ! ...pour se suicider
xb%=XBIOS(2)                  ! Sauve l'‚cran xbios(2)
RESERVE 30000                 ! R‚servation
a%=MALLOC(256000)             ! Buffer du pr‚d‚calage
c%=MALLOC(1000)               ! Buffer de la courbe
im%=MALLOC(40256)             ! Ecran de synchro
i1%=AND(im%,&HFFFFFF00)+7936  ! Un ‚cran ...
i2%=XBIOS(3)                  ! Et un autre ...
ON BREAK GOSUB fin            ! en cas d'arret
@load
@sin
.
.BOUCLE PRINCIPALE
.
DO
  e%={ADD(c%,pe%)}            ! Calcul de la position
  o%=ADD({ADD(c%,po%)},i1%)   ! Calcul du d‚calage
  BMOVE e%,o%,32000           ! Affichage du sprite
  @sync                       ! Synchro
  ADD pe%,8                   ! Pointeur de position
  po%=ADD(pe%,4)              ! Pointeur de pr‚d‚calage
  IF pe%>lon&                 ! bouclage de la courbe
    pe%=0
    po%=0
  ENDIF
LOOP UNTIL PEEK(&HFFFC02)=57  ! Press space ?
@fin                          ! C'est la fin ...
.
.
PROCEDURE load
  .
  .Proc‚drue de chargement d'une image .NEO
  .et de pr‚d‚calage du sprite
  .
  BLOAD "*.neo",XBIOS(2)-128  ! Charge image
  ~XBIOS(6,L:XBIOS(2)-124)    ! Restaure palette
  DEFFILL 0                   ! Remplit en couleur 0
  PBOX 0,0,320,16             ! Efface 16 pixels en haut...
  PBOX 0,184,320,200          ! ...et en bas
  DIM pr%(8)                  ! Adresse des sprites d‚cal‚s
  FOR i%=0 TO 7               ! Pr‚d‚calage ...
    RC_COPY XBIOS(2),0,0,320,200 TO a%+i%*32000,i%*2,0
    pr%(i%)=a%+i%*32000
  NEXT i%
RETURN
.
PROCEDURE sin
  .
  .Proc‚dure de calcul et de conversion
  .de la courbe du sprite.
  .
  lon&=1430                   ! Longueur courbe
  FOR i%=0 TO lon&/8          ! calcul de la courbe ...
    ADD n%,2
    SUB j,1.783
    x%=640+160*COSQ(n%)*COSQ(n%*2)+j ! ... en X
    y%=20*SINQ(n%*2)                 ! ... et en Y
    x%=DIV(x%,2)*2                   ! Pr‚d‚calage de 16/2
    SUB x%,MUL(320,DIV(x%,320))      ! Si d‚bordement ...
    .
    .calcul de l'adresse d'affichage et du d‚calage
    .
    {c%+i%*8+4}=ADD(MUL(y%,160),SHR(x%,1) AND 248)
    {c%+i%*8}=pr%(DIV(x%,2) AND 7)
  NEXT i%
RETURN
.
PROCEDURE fin
  VOID XBIOS(5,L:xb%,L:xb%,-1)! Restoration xbios(2)
  ~MFREE(a%)                  ! On lib‚re la memoire...
  ~MFREE(c%)                  ! ... l… aussi ...
  ~MFREE(im%)                 ! ... encore une fois ...
  ~MFREE(imm%)                ! ... et une autre ...
  OUT 4,8                     ! la souris est l… !!
  EDIT                        ! Et hop … l'editeur...
RETURN
.
PROCEDURE sync
  SWAP i1%,i2%                ! Echange les ‚crans
  ~XBIOS(5,L:i1%,L:i2%,-1)    ! Initialisation des ‚crans
  VSYNC                       ! Attend la prochaine VBL
RETURN
