.
.LISTING 1 - SPRITE CONSTRUCTION KIT
.par Jedi of Sector One from The Heavy Killers
.
.Ce programme cr‚e absolument tous les fichiers
.n‚cessaires … l'animation de sprites
.sauvegardant le fond en GfA-Basic
.
VSYNC
CLS
VSYNC
SETCOLOR 0,0
SETCOLOR 15,1911
.
.Chargement de l'image dans laquelle
.on va d‚couper le sprite
.
ALERT 2," | |    Charger une image | ",0," Degas | Neo | Quit ",format%
SELECT format%
CASE 3
  EDIT
CASE 1
  FILESELECT "\*.PI1","",nfile$
  nfile$=nfile$+".PI1"
  IF EXIST(nfile$)
    OPEN "I",#1,nfile$
    SEEK #1,2
    pal$=INPUT$(32,#1)
    img$=INPUT$(32000,#1)
    CLOSE #1
  ELSE
    RUN
  ENDIF
CASE 2
  FILESELECT "\*.NEO","",nfile$
  nfile$=nfile$+".NEO"
  IF EXIST(nfile$)
    OPEN "I",#1,nfile$
    SEEK #1,4
    pal$=INPUT$(32,#1)
    SEEK #1,128
    img$=INPUT$(32000,#1)
    CLOSE #1
  ELSE
    RUN
  ENDIF
ENDSELECT
VSYNC
.
.Voir listing du mois dernier
.
GRAPHMODE 3
FOR a%=0 TO 15
  SETCOLOR a%,0
NEXT a%
SPUT img$
~XBIOS(6,L:V:pal$)
VSYNC
IF DPEEK(&HFFFF8240)=DPEEK(&HFFFF825E)
  SDPOKE &HFFFF825E,NOT DPEEK(&HFFFF8240)
ENDIF
WHILE MOUSEK
WEND
HIDEM
xol%=512
yol%=512
REPEAT
  MOUSE x1%,y1%,z%
  IF x1%<>xol% OR y1%<>yol%
    VSYNC
    SPUT img$
    LINE x1%,0,x1%,199
    LINE 0,y1%,319,y1%
    xol%=x1%
    yol%=y1%
  ENDIF
UNTIL z%
xol%=512
yol%=512
WHILE z%
  MOUSE x2%,y2%,z%
  IF x2%<>xol% OR y2%<>yol%
    VSYNC
    SPUT img$
    BOX x1%,y1%,x2%,y2%
    xol%=x2%
    yol%=y2%
  ENDIF
WEND
VSYNC
SPUT img$
GRAPHMODE 1
GET x1%,y1%,x2%,y2%,bloc$
VSYNC
CLS
PUT 0,0,bloc$
sizex%=SUCC(ABS(x1%-x2%))
sizey%=SUCC(ABS(y1%-y2%))
sizex%=ADD(sizex%,15) AND &HFFF0
PRINT AT(1,22);"Taille en X: ";sizex%''"Taille en Y: ";sizey%
PRINT "Soit ";sizex%*sizey%/16;" blocs de 16 pixels."
INPUT "Nombre de plans: ",nplan%
nplan%=MAX(1,MOD(nplan%,5))
ace%=SHR(sizex%,1)
DEC sizey%
.
.Efface les plans en trop
.
IF nplan%<>4
  FOR ligne%=0 TO sizey%
    FOR col%=0 TO ace% STEP 8
      adresse%=XBIOS(2)+col%+ligne%*160
      SELECT nplan%
      CASE 1
        CARD{adresse%+2}=0
        LONG{adresse%+4}=0
      CASE 2
        LONG{adresse%+4}=0
      CASE 3
        CARD{adresse%+6}=0
      ENDSELECT
    NEXT col%
  NEXT ligne%
ENDIF
PRINT "Ok pour le sprite ? ( O/N )";
REPEAT
  key$=UPPER$(INPUT$(1))
  IF key$="N"
    RUN
  ENDIF
UNTIL key$="O"
GET 0,0,319,167,sprite$
CLS
.
ALERT 2," | D‚sirez-vous une sauvegarde |    du fond sans BMOVE ?",0," Oui | Non ",aksey%
IF aksey%=1
  .
  .Technique des CARDs et LONGs
  .
  PRINT "Entrez le nom du fichier .LST"
  PRINT "destin‚ … la sauvegarde du fond"
  FILESELECT "\*.LST","SAVEFOND.LST",nfile$
  nfile$=nfile$+".LST"
  IF nfile$=".LST"
    EDIT
  ENDIF
  CLS
  PRINT "Entrez le nom du fichier .LST"
  PRINT "destin‚ … la restauration du fond"
  FILESELECT "\*.LST","RESTAURE.LST",nfile2$
  nfile2$=nfile2$+".LST"
  IF nfile2$=".LST"
    EDIT
  ENDIF
  CLS
  OPEN "o",#1,nfile$
  PRINT #1,"PROCEDURE sauve_fond"
  OPEN "o",#2,nfile2$
  CLR odc%
  FOR ligne%=0 TO sizey%
    FOR col%=0 TO ace% STEP 8
      offset%=col%+ligne%*160
      .
      .Si l'offset est nul, inutile
      .d'additionner 0 … la variable
      .( Cet imb‚cile de compilateur
      .est incapable de l'optimiser )
      .
      IF odc%
        PRINT #1,"LONG{sav%+";odc%;"}=LONG{jedi%+";offset%;"}"
        PRINT #1,"LONG{sav%+";odc%+4;"}=LONG{jedi%+";offset%+4;"}"
        PRINT #2,"LONG{jedi%+";offset%;"}=LONG{sav%+";odc%;"}"
        PRINT #2,"LONG{jedi%+";offset%+4;"}=LONG{sav%+";odc%+4;"}"
        ADD odc%,8
      ELSE
        PRINT #1,"LONG{sav%}=LONG{jedi%}"
        PRINT #1,"LONG{sav%+4}=LONG{jedi%+4}"
        PRINT #2,"LONG{jedi%}=LONG{sav%}"
        PRINT #2,"LONG{jedi%+4}=LONG{sav%+4}"
        odc%=8
      ENDIF
    NEXT col%
  NEXT ligne%
  CLOSE #2
  PRINT #1,"RETURN"
  CLOSE #1
ELSE
  .
  .Technique des BMOVEs
  .
  PRINT "Entrez le nom du fichier .LST"
  PRINT "destin‚ … la sauvegarde du fond"
  FILESELECT "\*.LST","SAVEFOND.LST",nfile$
  nfile$=nfile$+".LST"
  IF nfile$=".LST"
    EDIT
  ENDIF
  OPEN "o",#1,nfile$
  odc%=MUL(160,SUCC(sizey%))
  PRINT #1,"PROCEDURE sauve_fond"
  PRINT #1,"BMOVE jedi%,sav%,";odc%
  PRINT #1,"RETURN"
  CLOSE #1
  CLS
  PRINT "Entrez le nom du fichier .LST"
  PRINT "destin‚ … la restauration du fond"
  FILESELECT "\*.LST","RESTAURE.LST",nfile$
  nfile$=nfile$+".LST"
  IF nfile$=".LST"
    EDIT
  ENDIF
  OPEN "o",#1,nfile$
  PRINT #1,"BMOVE sav%,jedi%,";odc%
  CLOSE #1
ENDIF
CLS
.
.D‚claration des buffers
.
PRINT "Entrez le nom du fichier .LST"
PRINT "destin‚ … la reservation des"
PRINT "zones de sauvegarde."
FILESELECT "\*.LST","RESERVE.LST",nfile$
nfile$=nfile$+".LST"
IF nfile$=".LST"
  EDIT
ENDIF
OPEN "o",#1,nfile$
PRINT #1,"RESERVE memoire%-32256-";odc%;"*2"
PRINT #1,"sav1%=MALLOC(";odc%;")"
PRINT #1,"sav2%=MALLOC(";odc%;")"
.
.Recopie le fond dans les buffers
.( pour ne pas effacer le fond lors...
...de la premiŠre restauration )
.
IF aksey%=2
  PRINT #1,"BMOVE XBIOS(2),sav1%,";odc%
ELSE
  PRINT #1,"sav%=sav1%"
  PRINT #1,"jedi%=XBIOS(2)"
  PRINT #1,"sauve_fond"
ENDIF
PRINT #1,"BMOVE sav1%,sav2%,";odc%
CLOSE #1
CLS
.
.Routine d'affichage masqu‚
.
PRINT "Entrez le nom du fichier .LST"
PRINT "destin‚ … l'affichage du sprite"
FILESELECT "\*.LST","AFFICHE.LST",nfile$
nfile$=nfile$+".LST"
IF nfile$=".LST"
  EDIT
ENDIF
OPEN "o",#1,nfile$
FOR phase%=0 TO 15
  CLS
  PUT phase%,0,sprite$
  PRINT AT(1,25);"Phase nø";phase%;"/15";
  PRINT #1,"PROCEDURE sprite";phase%
  FOR ligne%=0 TO sizey%
    FOR col%=0 TO ace% STEP 8
      offset%=col%+ligne%*160
      alpha%=ADD(XBIOS(2),offset%)
      .
      .Creation du masque en superposant
      .les 4 plans du mot courant
      .
      masque%=OR(CARD{alpha%},CARD{alpha%+2})
      masque%=OR(masque%,CARD{alpha%+4})
      masque%=OR(masque%,CARD{alpha%+6})
      masque%=AND(NOT masque%,&HFFFF)
      masquel%=OR(masque%,SWAP(masque%))
      .
      IF masque%
        .
        .Meme remarque que pr‚c‚demment
        .en ce qui concerne l'offset nul
        .
        IF offset%
          SELECT nplan%
          CASE 1 ! 1 plan
            IF CARD{alpha%}
              PRINT #1,"LONG{jedi%+";offset%;"}=";
              PRINT #1,"OR(AND(LONG{jedi%+";offset%;"},";
              PRINT #1,masque%;"),";
              PRINT #1,SWAP(CARD{alpha%});")"
              PRINT #1,"LONG{jedi%+";offset%+4;"}=";
              PRINT #1,"AND(LONG{jedi%+";offset%+4;"},";
              PRINT #1,masquel%;")"
            ENDIF
          CASE 2 ! 2 plans
            IF LONG{alpha%}
              IF XOR(LONG{alpha%},masquel%)<>-1
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(AND(LONG{jedi%+";offset%;"},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(LONG{jedi%+";offset%;"},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
              PRINT #1,"LONG{jedi%+";offset%+4;"}=";
              PRINT #1,"AND(LONG{jedi%+";offset%+4;"},";
              PRINT #1,masquel%;")"
            ENDIF
          CASE 3 ! 3 plans
            IF LONG{alpha%}
              IF XOR(alpha%,masquel%)<>-1
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(AND(LONG{jedi%+";offset%;"},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(LONG{jedi%+";offset%;"},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"AND(LONG{jedi%+";offset%;"},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
            IF CARD{alpha%+4}
              PRINT #1,"LONG{jedi%+";offset%+4;"}=";
              PRINT #1,"OR(AND(LONG{jedi%+";offset%+4;"},";
              PRINT #1,masquel%;"),";
              PRINT #1,SWAP(CARD{alpha%+4});")"
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+";offset%+4;"}=";
                PRINT #1,"AND(LONG{jedi%+";offset%+4;"},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
          CASE 4 ! 4 plans
            IF LONG{alpha%}
              IF XOR(LONG{alpha%},masquel%)<>-1
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(AND(LONG{jedi%+";offset%;"},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"OR(LONG{jedi%+";offset%;"},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+";offset%;"}=";
                PRINT #1,"AND(LONG{jedi%+";offset%;"},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
            IF LONG{alpha%+4}
              IF XOR(LONG{alpha%+4},masquel%)<>-1
                PRINT #1,"LONG{jedi%+";offset%+4;"}=";
                PRINT #1,"OR(AND(LONG{jedi%+";offset%+4;"},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%+4};")"
              ELSE
                PRINT #1,"LONG{jedi%+";offset%+4;"}=";
                PRINT #1,"OR(LONG{jedi%+";offset%+4;"},";
                PRINT #1,LONG{alpha%+4};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+";offset%+4;"}=";
                PRINT #1,"AND(LONG{jedi%+";offset%+4;"},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
          ENDSELECT
        ELSE
          .
          .Offset nul
          .
          SELECT nplan%
          CASE 1
            IF CARD{alpha%}
              PRINT #1,"LONG{jedi%}=";
              PRINT #1,"OR(AND(LONG{jedi%},";
              PRINT #1,masque%;"),";
              PRINT #1,SWAP(CARD{alpha%});")"
              PRINT #1,"LONG{jedi%+4}=";
              PRINT #1,"AND(LONG{jedi%+4},";
              PRINT #1,masquel%;")"
            ENDIF
          CASE 2
            IF LONG{alpha%}
              IF XOR(LONG{alpha%},masquel%)<>-1
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(AND(LONG{jedi%},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(LONG{jedi%},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
              PRINT #1,"LONG{jedi%+4}=";
              PRINT #1,"AND(LONG{jedi%+4},";
              PRINT #1,masquel%;")"
            ENDIF
          CASE 3
            IF LONG{alpha%}
              IF XOR(LONG{alpha%},masquel%)<>-1
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(AND(LONG{jedi%},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(LONG{jedi%},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"AND(LONG{jedi%},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
            IF CARD{alpha%+4}
              PRINT #1,"LONG{jedi%+4}=";
              PRINT #1,"OR(AND(LONG{jedi%+4},";
              PRINT #1,masquel%;"),";
              PRINT #1,SWAP(CARD{alpha%+4});")"
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+4}=";
                PRINT #1,"AND(LONG{jedi%+4},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
          CASE 4
            IF LONG{alpha%}
              IF XOR(LONG{alpha%},masquel%)<>-1
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(AND(LONG{jedi%},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%};")"
              ELSE
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"OR(LONG{jedi%},";
                PRINT #1,LONG{alpha%};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%}=";
                PRINT #1,"AND(LONG{jedi%},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
            IF LONG{alpha%+4}
              IF XOR(LONG{alpha%+4},masquel%)<>-1
                PRINT #1,"LONG{jedi%+4}=";
                PRINT #1,"OR(AND(LONG{jedi%+4},";
                PRINT #1,masquel%;"),";
                PRINT #1,LONG{alpha%+4};")"
              ELSE
                PRINT #1,"LONG{jedi%+4}=";
                PRINT #1,"OR(LONG{jedi%+4},";
                PRINT #1,LONG{alpha%+4};")"
              ENDIF
            ELSE
              IF masquel%<>-1
                PRINT #1,"LONG{jedi%+4}=";
                PRINT #1,"AND(LONG{jedi%+4},";
                PRINT #1,masquel%;")"
              ENDIF
            ENDIF
          ENDSELECT
        ENDIF
      ELSE
        .
        .Cas ou le masque serait nul
        .
        IF offset%
          SELECT nplan%
          CASE 1
            PRINT #1,"LONG{jedi%+";offset%;"}=";
            PRINT #1,SWAP(CARD{alpha%})
            PRINT #1,"LONG{jedi%+";offset%+4;"}=0"
          CASE 2
            PRINT #1,"LONG{jedi%+";offset%;"}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+";offset%+4;"}=0"
          CASE 3
            PRINT #1,"LONG{jedi%+";offset%;"}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+";offset%+4;"}=";
            PRINT #1,SWAP(CARD{alpha%+4})
          CASE 4
            PRINT #1,"LONG{jedi%+";offset%;"}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+";offset%+4;"}=";
            PRINT #1,LONG{alpha%+4}
          ENDSELECT
        ELSE
          SELECT nplan%
          CASE 1
            PRINT #1,"LONG{jedi%}=";
            PRINT #1,SWAP(CARD{alpha%})
            PRINT #1,"LONG{jedi%+4}=0"
          CASE 2
            PRINT #1,"LONG{jedi%}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+4}=0"
          CASE 3
            PRINT #1,"LONG{jedi%}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+4}=";
            PRINT #1,SWAP(CARD{alpha%+4})
          CASE 4
            PRINT #1,"LONG{jedi%}=";
            PRINT #1,LONG{alpha%}
            PRINT #1,"LONG{jedi%+4}=";
            PRINT #1,LONG{alpha%+4}
          ENDSELECT
        ENDIF
      ENDIF
    NEXT col%
  NEXT ligne%
  PRINT #1,"RETURN"
  .
  .D‚calage suivant
  .
NEXT phase%
CLOSE #1
sector_one:
CLS
.
.Centrage de la courbe
.
extreme_x%=SUB(320,sizex%)
extreme_y%=SUB(199,sizey%)
middle_x=extreme_x%/2
middle_y=extreme_y%/2
PRINT "Parametres relatifs a la courbe"
INPUT "Coefficient 1 ";c1%
INPUT "Coefficient 2 ";c2%
INPUT "Coefficient 3 ";c3%
INPUT "Coefficient 4 ";c4%
CLS
.
.Repr‚sentation graphique de la fonction
.
FOR angle%=0 TO 359
  x=middle_x
  x=x+middle_x*COSQ(angle%*c1%)*SINQ(angle%*c2%)
  y=middle_y
  y=y+middle_y*COSQ(angle%*c3%)*SINQ(angle%*c4%)
  VSYNC
  PSET ROUND(x),ROUND(y),15
NEXT angle%
PRINT AT(1,25);"C'est bon ? ( O/N )";
REPEAT
  key$=UPPER$(INPUT$(1))
UNTIL key$="O" OR key$="N"
IF key$="N"
  GOTO sector_one
ENDIF
PRINT AT(1,1);"Entrez le nom du fichier"
PRINT AT(1,2);"destin‚ … recevoir la courbe"
FILESELECT "\*.INL","COURBE.INL",nfile$
nfile$=nfile$+".INL"
IF nfile$=".INL"
  EDIT
ENDIF
.
.Sauvegarde de la courbe
.
OPEN "o",#1,nfile$
FOR angle%=0 TO 359
  PRINT AT(1,3);"Traitement position #";angle%;"/359";
  x=middle_x
  x=x+middle_x*COSQ(angle%*c1%)*SINQ(angle%*c2%)
  y=middle_y
  y=y+middle_y*COSQ(angle%*c3%)*SINQ(angle%*c4%)
  y=MIN(y,extreme_y%)
  adrx%=AND(SHR(ROUND(x),1),65528)
  adry%=MUL(160,ROUND(y))
  adresse%=ADD(adrx%,adry%)
  deca%=AND(ROUND(x),15)
  PRINT #1,MKI$(adresse%);
  PRINT #1,MKI$(SUCC(deca%));
NEXT angle%
CLOSE #1
EDIT
