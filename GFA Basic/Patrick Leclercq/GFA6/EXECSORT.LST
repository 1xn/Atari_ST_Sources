' DATA Num‚ro Sort, Nom, Points de Magie
DATA 1,"Ouverture Porte",1
DATA 2,"Fermeture Porte",2
DATA 3,"Boule de Feu",5
DATA 4,"Gu‚rison de Blessures",2
DATA 5,"Gu‚rison de Blessures Majeure",5
DATA 6,"Protection Magique",4
DATA 7,"Detection Poison",1
DATA -1
'
DIM nom_sort$(100)
DIM cout_sort%(100)
DIM creature%(100,20)
' creature%(n,19)=Points de magie actuels
' creature%(n,20)=Points de magie maximum
'
' *************************
' *  LANCEMENT D'UN SORT  *
' *************************
PROCEDURE lancement_sort(magicien%,num_sort%,cible%)
  LOCAL cout_magie%,energie%
  '
  energie%=creature%(magicien%,19)
  cout_magie%=cout_sort%(num_sort%)
  ' ************************************
  ' *  TEST SI L'ENERGIE MAGIQUE EST   *
  ' *  SUFFISANTE POUR LANCER LE SORT  *
  ' ************************************
  IF cout_magie%>energie%
    PRINT "Pas assez d'‚nergie ";
    PRINT "pour lancer ce sort"
  ELSE
    ' ***********************
    ' *  EXECUTION DU SORT  *
    ' ***********************
    SUB creature%(magicien%,19),cout_magie%
    @exec_sort(num_sort%,cible%)
  ENDIF
RETURN
'
' *************************
' *  EXECUTION D'UN SORT  *
' *************************
PROCEDURE exec_sort(num_sort%,cible%)
  SELECT num_sort%
  CASE 1
    @sort_ouverture_porte(cible%)
  CASE 2
    @sort_fermeture_porte(cible%)
  CASE 3
    @sort_boule_feu(cible%)
  CASE 4
    @sort_guerison_blessure(cible%)
  CASE 5
    @sort_guerison_majeure(cible%)
  CASE 6
    @sort_protection_magique(cible%)
  CASE 7
    @sort_detection_poison(cible%)
  ENDSELECT
RETURN

