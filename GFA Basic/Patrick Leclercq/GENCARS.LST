' ********************************************
' *  FABRICATION D'UNE POLICE DE CARACTERES  *
' *  BINAIRE A PARTIR D'UNE LISTE DE DATAS   *
' ********************************************
' *  (C) 1992 Patrick Leclercq               *
' *  (C) 1992 Artipresse                     *
' ********************************************
' *  Programme GENCARS.GFA                   *
' ********************************************
RESERVE 50000
DIM img$(256)               ! STOCKAGE DES CARACTERES
READ nom_police$            ! LECTURE NOM FICHIER
@gen_police                 ! DESSIN DES CARACTERES
@sauve_police(nom_police$)  ! SAUVER POLICE BINAIRE
END
'
' ***************************************
' *  SAUVEGARDE POLICE DANS UN FICHIER  *
' ***************************************
PROCEDURE sauve_police(nom$)
  LOCAL n%,t%
  '
  OPEN "O",#1,nom$                ! OUVERTURE FICHIER
  FOR n%=0 TO 256                 ! DEBUT BOUCLE
    t%=LEN(img$(n%))              ! LECTURE TAILLE CAR
    IF t%<>0                      ! TST SI CAR EXISTE
      BPUT #1,VARPTR(n%),4        ! SAUVER NUMERO CAR
      BPUT #1,VARPTR(t%),4        ! SAUVER TAILLE CAR
      BPUT #1,VARPTR(img$(n%)),t% ! SAUVER FORME CAR
    ENDIF
  NEXT n%                         ! FIN BOUCLE
  n%=-1                           ! CODE FIN DE CAR
  BPUT #1,VARPTR(n%),4            ! ECRIRE CODE FIN
  CLOSE #1                        ! FERMER FICHIER
RETURN
'
' *****************************
' *  GENERATION D'UNE POLICE  *
' *****************************
PROCEDURE gen_police
  DO                   ! DEBUT BOUCLE
    READ c$                ! LECTURE CARACTERE
    EXIT IF c$="*FIN"      ! SORTIE SI FIN DE DONNEES
    @gen_car(c$)           ! DESSIN CARACTERE
    CLS                    ! EFFACEMENT ECRAN
  LOOP                     ! FIN BOUCLE
RETURN
'
' ***************************
' *  DESSIN D'UN CARACTERE  *
' ***************************
' *  Le dessin se fait      *
' *  par bloc de 16 pixels  *
' ***************************
PROCEDURE gen_car(c$)
  LOCAL tx%,ty%
  LOCAL px%,py%
  LOCAL px2%,py2%
  LOCAL valeur%,n%
  '
  READ tx%,ty%
  FOR py%=1 TO ty%        ! BOUCLE DES LIGNES
    READ valeur%          ! LECTURE PREMIER BLOC
    n%=0                  ! COMPTEUR DE BITS=0
    FOR px%=1 TO tx%      ! BOUCLE DES PIXELS
      IF BTST(valeur%,n%) ! TEST SI LE BIT n%
        '                 ! DE valeur% EST 1
        COLOR 1           ! FIXATION COULEUR DE DESSIN
        PLOT px%,py%      ! AFFICHAGE POINT SUR ECRAN
      ENDIF
      INC n%                 !INC COMPTEUR DE BITS
      IF (n%=16) AND px%<tx% !TST PASSAGE BLOC SUIVANT
        n%=0                 !COMPTEUR DE BITS=0
        READ valeur%         !LECTURE NOUVEAU BLOC
      ENDIF
    NEXT px%
  NEXT py%
  '
  px%=1                           ! PX CAR
  py%=1                           ! PY CAR
  px2%=px%+tx%-1                  ! PX2 CAR
  py2%=py%+ty%-1                  ! PY2 CAR
  n%=ASC(c$)                      ! NUMERO CAR
  GET px%,py%,px2%,py2%,img$(n%)  ! MEMORISATION CAR
RETURN
'
' ------------------
' LES DATAS DOIVENT ETRES MERGES
' A LA FIN DU PROGRAMME
