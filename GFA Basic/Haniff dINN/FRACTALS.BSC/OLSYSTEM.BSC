\
\ FRACTAL CURVES & PLANTS 
\ USING OL SYSTEMS
\
\ MEDIUM RES!
\
\ HANIFF D. 89
\ 

PROC_Initialise
PROC_Set_Listing
PROC_Create_Turtle
PROC_Show_Listing
PROC_Edit_Listing
END

DEFPROC_Run
 CLS
 PROC_Draw_Border(ScrW-1,ScrH-1)

 PROC_Move(Stx,Sty)
 PROC_Fractal_Curve(Axiom$,0)
 BEEP
 PRINTTAB(0,0)"Press Any Key"
 Key=GET
 CLS
ENDPROC

DEFPROC_Create_Turtle
\ Initial Angle 
Ang=-90
SAng=Ang
\ Base Length
L=10
\ Starting Position
Stx=320
Sty=100
ENDPROC
\
DEFPROC_Set_Listing
\ Max Level Of Recursion Required (>0)
RecMax=3
\ How Many Labels & Commands Are There?
MaxInList=2
\ Turning Angle For Curve
TurnAng=30

\ These Are Just Dummy Vars
   Rule=0
Command=1
Axiom$="[F]++[F]++[F]++[F]++[F]++[F]"

\ RECURSIVE OL-LISTING OF IMAGE GOES HERE

   List$(Rule,1)="F"
List$(Command,1)="F[[-F]+F]"

   List$(Rule,2)="F"
List$(Command,2)="F"   

   List$(Rule,3)=""
List$(Command,3)=""

   List$(Rule,4)=""
List$(Command,4)=""

   List$(Rule,5)=""
List$(Command,5)=""

   List$(Rule,6)=""
List$(Command,6)=""

ENDPROC

DEFPROC_Initialise
\ Set Up Screen
ScrW= SCREENWIDTH
ScrH=SCREENHEIGHT
TXTRECT  0,0,ScrW,ScrH
GRAFRECT 0,0,ScrW,ScrH
HIDEMOUSE
CLS
\ Create A Stack
StackMax=200
DIM Stack(StackMax,4)
\ Stack Pointer
Sp=0
\ Space For OL Listing
 ListMax=50
DIM List$(1,ListMax)
\ Reset Positions
Xold=0
Yold=0
Xnew=0
Ynew=0
NAME$="SNOWFLAKE"
ENDPROC

DEFPROC_Fractal_Curve(Axiom$,RecLevel)

IF INKEY$="Q" THEN ENDPROC


IF K=81 THEN ENDPROC
LOCAL CharInAxiom%,CommandPos%,CharInRule$,CharInCommand$,RulePos%

CharInAxiom%=1

CharInRule:

CharInRule$=MID$(Axiom$,CharInAxiom%,1)

\ Scan Through And Find The Rule
RulePos%=0

REPEAT
 	RulePos%=RulePos%+1
UNTIL List$(Rule,RulePos%)=CharInRule$ OR RulePos%>MaxInList

\ Do command as long as you're in list and within recursion level
 IF NOT(NOT(RulePos% >MaxInList) AND RecMax<>RecLevel) THEN PROC_Turtle(CharInRule$):GOTO NextCharInRule
 
\ Scan Through Command String & Call Self With Each Char 
CommandPos%=1

CharInCommand:

CharInCommand$=MID$( List$(Command,RulePos%),CommandPos%,1)
PROC_Fractal_Curve(CharInCommand$,RecLevel+1)
CommandPos%=CommandPos%+1

\ End Of Command String Yet?
IF CommandPos% < (LEN(List$(Command,RulePos%))+1) THEN GOTO CharInCommand

NextCharInRule:

CharInAxiom%=CharInAxiom%+1

\ End Of Rule/Axiom String Yet?
IF CharInAxiom% < (LEN(Axiom$)+1) THEN GOTO CharInRule
ENDPROC

DEFPROC_Draw_Border(X,Y)
LINE 0,0 TO X,0
LINE X,0 TO X,Y
LINE X,Y TO 0,Y
LINE 0,Y TO 0,0
ENDPROC


DEFPROC_Store_Pos
StackPtr=StackPtr+1
IF StackPtr>StackMax THEN PRINT"Stack Overflow....":STOP
Stack(StackPtr,0)=Xold
Stack(StackPtr,1)=Yold
Stack(StackPtr,2)=Ang
ENDPROC

DEFPROC_Recall_Pos
Xold=Stack(StackPtr,0)
Yold=Stack(StackPtr,1)
 Ang=Stack(StackPtr,2)
StackPtr=StackPtr-1
IF StackPtr<0         THEN PRINT"Stack Underflow....":STOP
ENDPROC

DEFPROC_Rotate(psi)
Ang=Ang+psi
IF Ang > 360 THEN Ang=Ang-360
IF Ang <-360 THEN Ang=Ang+360
ENDPROC

DEFPROC_TurnBack
Ang=Ang+180
IF Ang > 360 THEN Ang=Ang-360
IF Ang <-360 THEN Ang=Ang+360
ENDPROC

DEFPROC_Forward(L)
Xnew=L*COSRAD(Ang)+Xold
Ynew=L*SINRAD(Ang)+Yold
PROC_Draw(Xnew,Ynew)
ENDPROC

EFPROC_MoveForward(L)
Xnew=L*COSRAD(Ang)+Xold
Ynew=L*SINRAD(Ang)+Yold
PROC_Move(Xnew,Ynew)
ENDPROC

DEFPROC_Turtle(Char$)
IF Char$="F" THEN PROC_Forward(L)
IF Char$="f" THEN PROC_Move_Forward(L)
IF Char$="+" THEN PROC_Rotate( TurnAng)
IF Char$="-" THEN PROC_Rotate(-TurnAng)
IF Char$="|" THEN PROC_TurnBack
IF Char$="[" THEN PROC_Store_Pos
IF Char$="]" THEN PROC_Recall_Pos
ENDPROC

DEFPROC_Move(X,Y)
Xold=X
Yold=Y
ENDPROC

DEFPROC_Draw(X,Y)
LINE Xold,Yold TO X,Y
Xold=X
Yold=Y
ENDPROC

DEFPROC_Show_Listing
PRINT'"           Title=";NAME$
PRINT "        Origin X=";Stx
PRINT "        Origin Y=";Sty
PRINT " Recursive Level=";RecMax
PRINT "   Turning Angle=";TurnAng;" Deg"
PRINT "  Starting Angle=";SAng;" Deg"
PRINT "     Base Length=";L
PRINT'TAB(10)" Axiom=";Axiom$
IF MaxInList=0 THEN ENDPROC
FOR l=1 TO MaxInList
PRINT "(";l;")";TAB(10)"Rule ";List$(Rule,l);"=";List$(Command,l)
NEXT l
ENDPROC

DEFPROC_Edit_Listing
REPEAT
 PRINT'"(P)arameters (A)xiom (E)dit_Rule (L)ist (R)un (F)ile (Q)uit"
 INPUT'"Enter Choice";I$
 I$=LEFT$(I$,1)
 IF I$="L" OR I$="l" THEN PROC_Show_Listing
 IF I$="R" OR I$="r" THEN PROC_Run
 IF I$="Q" OR I$="q" THEN END
 IF I$="P" OR I$="p" THEN PROC_Parameters
 IF I$="A" OR I$="a" THEN PROC_Axiom
 IF I$="E" OR I$="e" THEN PROC_Rule
 IF I$="F" OR I$="f" THEN PROC_File
UNTIL FALSE

DEFPROC_Parameters
PRINT'"Return Key Keeps Current Value"
PRINT'" Recursive Level=";RecMax;
RecMax=FN_Get_Num(RecMax)
PRINT"        Origin X=";Stx;
Stx=FN_Get_Num(Stx)
PRINT"        Origin Y=";Sty;
Sty=FN_Get_Num(Sty)
PRINT"   Turning Angle=";TurnAng;" Deg";
TurnAng=FN_Get_Num(TurnAng)
PRINT "  Starting Angle=";SAng;" Deg";
SAng=FN_Get_Num(SAng)
Ang=SAng
PRINT"     Base Length=";L;
L=FN_Get_Num(L)
ENDPROC

DEFFN_Get_Num(Val)
INPUT;TAB(30);" New Value";NUM%
IF NUM%=0 THEN =Val
=NUM%
ENDPROC

DEFPROC_Axiom
PRINT'" Enter The Axiom,Return Keeps Current String"
PRINT 
INPUT"Axiom=";AX$
IF AX$="" THEN ENDPROC
PRINT" Is This Correct: Axiom=";AX$
INPUT"(Y/N)";A$
A$=LEFT$(A$,1)
IF A$="Y" OR A$="y" THEN Axiom$=AX$
ENDPROC

DEFPROC_Rule
PRINT'" (E)nter A Rule"
PRINT " (D)elete Previous Rule"
INPUT'"Enter Choice";I$
IF I$="D" OR I$="d" THEN PROC_Delete_Rule
IF I$="E" OR I$="e" THEN PROC_Enter_Rule
ENDPROC

DEFPROC_Delete_Rule
l=MaxInList
IF l=0 THEN PRINT'"There Are'nt Any Rules!":ENDPROC
PRINT '"(";l;")";TAB(10)"Rule ";List$(Rule,l);"=";List$(Command,l)
PRINT '"Delete This";
INPUT;" (Y/N)";A$
A$=LEFT$(A$,1)
IF A$="Y" OR A$="y" THEN MaxInList=MaxInList-1:ENDPROC
ENDPROC

DEFPROC_Enter_Rule
IF MaxInList=ListMax THEN PRINT'"Out Of Memory":ENDPROC
REPEAT
 PRINT"First Enter Rule Label Then Rule"
 PRINT'"Enter Rule Label,ie ?=RULE"
 INPUT ">";Lab$
 Lab$=LEFT$(Lab$,1)
 PRINT'"Enter The Rule"
 PRINT Lab$;"=";
 INPUT;Rule$
 PRINT" Is This Correct:"
 PRINT Lab$;"=";Rule$
 INPUT"(Y/N)";A$
 A$=LEFT$(A$,1)
UNTIL A$="Y" OR A$="y" 
MaxInList=MaxInList+1
List$(Rule,MaxInList)=Lab$
List$(Command,MaxInList)=Rule$
ENDPROC

DEFPROC_File
CLS
SHOWMOUSE
A=ALERT("[1][SELECT OPTION][LOAD|SAVE]",1)
IF A=1 THEN PROC_LOAD
IF A=2 THEN PROC_SAVE
HIDEMOUSE
CLS
ENDPROC

DEFPROC_SAVE
PROC_UPBOUNCE
CLS
PRINT"SAVE FRACTAL CURVE....."
LOCAL P$,F%
	P$=PATH$+"*.FRC"
	F$=""
	F%=0
	FSELECT P$,F$,F%
	IF F%=0 THEN CLS:ENDPROC
	WHILE RIGHT$(P$,1)<>"\"
	P$=LEFT$(P$,LEN(P$)-1)
	WEND
	PATH$=P$
CLS
N$=F$
file%=OPENOUT  N$
PRINT#file%,Stx
PRINT#file%,Sty
PRINT#file%,RecMax
PRINT#file%,TurnAng
PRINT#file%,Ang
PRINT#file%,SAng
PRINT#file%,L
PRINT#file%,Axiom$
PRINT#file%,MaxInList
FOR Loop=0 TO MaxInList
PRINT#file%,List$(Rule,Loop)
PRINT#file%,List$(Command,Loop)
NEXT Loop
CLOSE#file% 
NAME$=N$
CLS
ENDPROC

DEFPROC_LOAD
PROC_UPBOUNCE
CLS
PRINT"LOAD FRACTAL CURVE......."
LOCAL P$,F%
	P$=PATH$+"*.FRC"
	F$=""
	F%=0
	FSELECT P$,F$,F%
	IF F%=0 THEN CLS:ENDPROC
	WHILE RIGHT$(P$,1)<>"\"
	P$=LEFT$(P$,LEN(P$)-1)
	WEND
	PATH$=P$
CLS
N$=F$
file%=OPENIN  N$
INPUT#file%,Stx
INPUT#file%,Sty
INPUT#file%,RecMax
INPUT#file%,TurnAng
INPUT#file%,Ang
INPUT#file%,SAng
INPUT#file%,L
INPUT#file%,Axiom$
INPUT#file%,MaxInList
FOR Loop=0 TO MaxInList
INPUT#file%,List$(Rule,Loop)
INPUT#file%,List$(Command,Loop)
NEXT Loop
CLOSE#file%  
NAME$=N$
CLS
ENDPROC

DEFPROC_UPBOUNCE
REPEAT
MOUSE X%,Y%,L%,R%
UNTIL L%=0
ENDPROC
