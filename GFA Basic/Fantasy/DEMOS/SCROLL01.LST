supervisor%=GEMDOS(32,L:0)
@init
@ininew
@get
REPEAT
  VSYNC
  '  CARD{&HFFFF8240}=0
  @scroll
  @swap
  c|=BYTE{&HFFFFC02}
  '  CARD{&HFFFF8240}=&H333
UNTIL c|=57
@the_end
> PROCEDURE scroll
  INC tt%
  tt%=tt% MOD tl%
  BMOVE xb2%+8,xb2%,32*160-8
  ' @coul
  PUT 304,0,alf$(BYTE{scr%+tt%})
  PUT 312,0,alf$(BYTE{scr%+tt%+1})
RETURN
> PROCEDURE swap
  SWAP xb2%,xb3%
  ~XBIOS(5,L:xb2%,L:xb3%,-1)
RETURN
> PROCEDURE init
  RESERVE 100000
  BYTE{&H484}=2
  '  inter|=BYTE{&HFFFFFA09}
  '  BYTE{&HFFFFFA09}=0
  rez%=XBIOS(4)
  ~XBIOS(5,L:-1,L:-1,W:0)
  basepal$=SPACE$(32)
  VSYNC
  BMOVE &HFFFF8240,V:basepal$,32
  @fade
  x3%=XBIOS(3)
  screen%=MALLOC(32255)
  xb2%=screen% AND &HFFFF00
  xb3%=XBIOS(3)
  PRINT AT(1,11)
  @ce("PLEASE WAIT...")
  @music
  SETCOLOR 15,&H777
  ~XBIOS(5,L:xb2%,L:xb3%,W:-1)
RETURN
> PROCEDURE ininew
  CLR i%
  raster%=MALLOC(900)
  FOR r%=1 TO 7
    ADD i%,6
    CARD{raster%+i%}=VAL("$1"+STR$(r%)+"00")
  NEXT r%
  FOR r%=7 TO 1 STEP 1
    ADD i%,6
    CARD{raster%+i%}=VAL("$1"+STR$(r%)+"00")
  NEXT r%
  FOR g%=1 TO 7
    ADD i%,6
    CARD{raster%+i%}=VAL("$0"+STR$(g%)+"0")
  NEXT g%
  FOR g%=7 TO 1 STEP 1
    ADD i%,6
    CARD{raster%+i%}=VAL("$0"+STR$(g%)+"0")
  NEXT g%
  FOR b%=1 TO 7
    ADD i%,6
    CARD{raster%+i%}=VAL("$00"+STR$(b%))
  NEXT b%
  FOR b%=7 TO 1 STEP 1
    ADD i%,6
    CARD{raster%+i%}=VAL("$00"+STR$(b%))
  NEXT b%
  '
  CLR i%
  pattern%=MALLOC(900)
  FOR q%=0 TO 900 STEP 2
    CARD{pattern%+q%}=q%
  NEXT q%
RETURN
> PROCEDURE get
  CLS
  DIM alf$(250)
  FOR q%=32 TO 91
    GET 0,0,0,0,alf$(q%)
  NEXT q%
  @chargimage("FONTS")
  CLR q%
  FOR y%=0 TO 5
    FOR x%=0 TO 9
      GET x%*32,y%*32,x%*32+7,y%*32+31,alf$(q%)
      GET x%*32+8,y%*32,x%*32+15,y%*32+31,alf$(q%+1)
      GET x%*32+16,y%*32,x%*32+23,y%*32+31,alf$(q%+2)
      GET x%*32+24,y%*32,x%*32+31,y%*32+31,alf$(q%+3)
      ADD q%,4
    NEXT x%
  NEXT y%
  OPEN "I",#1,"SCROLL.TXT"
  t$=INPUT$(LOF(#1)-1,#1)
  CLOSE
  tl%=LEN(t$)
  scr%=MALLOC(tl%*4)
  CLR i%
  FOR q%=0 TO tl%
    a%=(ASC(MID$(t$,q%,1))-32)*4
    BYTE{scr%+i%}=a%
    BYTE{scr%+i%+1}=a%+1
    BYTE{scr%+i%+2}=a%+2
    BYTE{scr%+i%+3}=a%+3
    ADD i%,4
  NEXT q%
  MUL tl%,4
  CLS
  BMOVE xb2%,xb3%,32000
  CLR i%,q%
  OUT 4,18
  HIDEM
  BMOVE pal%,&HFFFF8240,32
  ~FRE(0)
RETURN
> PROCEDURE the_end
  @fade1
  VSYNC
  ~XBIOS(5,L:x3%,L:x3%,W:rez%)
  BMOVE V:basepal$,&HFFFF8240,32
  SETCOLOR 0,1911
  OUT 4,8
  VSYNC
  '  BYTE{&HFFFFFA09}=inter|
  BYTE{&H484}=7
  ~MFREE(screen%)
  ~MFREE(pal%)
  ~MFREE(scr%)
  ~MFREE(raster%)
  ~MFREE(pattern%)
  ~GEMDOS(32,L:supervisor%)
  EDIT
RETURN
> PROCEDURE ce(a$)
  LOCAL x%
  ll%=LEN(a$)
  x%=((XBIOS(4)+1)*40-ll%)/2
  PRINT TAB(x%);a$
RETURN
> PROCEDURE chargimage(image$)
  image$=image$+".PI1"
  i%=MALLOC(32066)
  pal%=MALLOC(32)
  BLOAD image$,i%
  BMOVE i%+34,XBIOS(3),32000
  BMOVE i%+2,pal%,32
  ~MFREE(i%)
RETURN
> PROCEDURE fade
  FOR q%=7 DOWNTO 0
    FOR z%=0 TO 15
      SETCOLOR z%,q%,q%,q%
    NEXT z%
    VSYNC
    VSYNC
  NEXT q%
RETURN
> PROCEDURE fade1
  FOR g%=0 TO 7
    FOR z%=15 DOWNTO 0
      SETCOLOR z%,q%,q%,q%
    NEXT z%
    VSYNC
    VSYNC
  NEXT q%
RETURN
> PROCEDURE music
