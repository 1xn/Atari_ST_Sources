.
.Exemple de scrolltext horizontal en GfA-Basic
.par Jedi of Sector One from The Heavy Killers
.
INLINE txt%,262
INLINE pal%,32
VSYNC
CLS
HIDEM
VSYNC
~XBIOS(6,L:pal%)        ! Installe la palette
VSYNC
SPOKE &HFFFFFC02,&H12   ! Bloque la souris
megatizer%=FRE(0)       ! M‚moire originale
RESERVE megatizer%-83600-32256-4*160*19*3
ON BREAK GOSUB fin      ! Par pr‚caution
ON ERROR GOSUB fin
fonte%=MALLOC(83600)    ! Buffer pour la fonte
lecran2%=MALLOC(32256)  ! Second ‚cran
ecran2%=ADD(AND(lecran2%,-256),256)
BMOVE XBIOS(2),ecran2%,32000
BLOAD "horizfnt.thk",fonte%
fintxt%=ADD(txt%,262)   ! Fin du texte
pntxt%=txt%             ! Position dans le texte
buffer1%=MALLOC(160*19*3)
buffer2%=MALLOC(160*19*3)
buffer3%=MALLOC(160*19*3)
buffer4%=MALLOC(160*19*3)
bf1%=ADD(buffer1%,160*19)
bf2%=ADD(buffer2%,160*19)
bf3%=ADD(buffer3%,160*19)
bf4%=ADD(buffer4%,160*19)
BMOVE XBIOS(2),buffer1%,160*19*3
BMOVE buffer1%,buffer2%,160*19*3
BMOVE buffer2%,buffer3%,160*19*3
BMOVE buffer3%,buffer4%,160*19*3
finbuf1%=buffer1%+160*19*2
finbuf2%=buffer2%+160*19*2
finbuf3%=buffer3%+160*19*2
finbuf4%=buffer4%+160*19*2
old%=fonte%+49*1672     ! Adresse de l'espace
new%=old%
ecran1%=XBIOS(2)        ! Ecran 1
REPEAT
  SWAP ecran1%,ecran2%  ! Echange les ‚crans
  ~XBIOS(5,L:-1,L:ecran2%,-1)
  VSYNC
  SELECT phase%         ! Selon la phase
  CASE 0
    phase%=1            ! Phase suivante
    old%=new%
    car%=BYTE{pntxt%}   ! Lit le texte
    INC pntxt%          ! Position suivante
    IF pntxt%>=fintxt%  ! Texte fini ???
      pntxt%=txt%       ! On boucle
      car%=BYTE{txt%}   ! Et on prend le d‚but
    ENDIF
    new%=ADD(fonte%,MUL(car%,1672))
    ADD bf1%,8          ! Incr‚mente origine
    IF bf1%=finbuf1%    ! Fin du buffer ???
      bf1%=buffer1%+160*19
    ENDIF
    adr%=bf1%           ! Adresse de transfert
    avec_or
  CASE 1
    phase%=2
    ADD bf2%,8
    IF bf2%=finbuf2%
      bf2%=buffer2%+160*19
    ENDIF
    adr%=bf2%
    avec_or
  CASE 2
    phase%=3
    ADD bf3%,8
    IF bf3%=finbuf3%
      bf3%=buffer3%+160*19
    ENDIF
    adr%=bf3%
    avec_or
  CASE 3
    phase%=4
    ADD bf4%,8
    IF bf4%=finbuf4%
      bf4%=buffer4%+160*19
    ENDIF
    adr%=bf4%
    sans_or
  CASE 4
    phase%=5
    ADD bf1%,8
    IF bf1%=finbuf1%
      bf1%=buffer1%+160*19
    ENDIF
    adr%=bf1%
    sans_or
  CASE 5
    phase%=6
    ADD bf2%,8
    IF bf2%=finbuf2%
      bf2%=buffer2%+160*19
    ENDIF
    adr%=bf2%
    sans_or
  CASE 6
    phase%=7
    ADD bf3%,8
    IF bf3%=finbuf3%
      bf3%=buffer3%+160*19
    ENDIF
    adr%=bf3%
    sans_or
  CASE 7
    phase%=0
    ADD bf4%,8
    IF bf4%=finbuf4%
      bf4%=buffer4%+160*19
    ENDIF
    adr%=bf4%
    sans_or
  ENDSELECT
  BMOVE adr%,ecran1%,160*19
UNTIL INKEY$<>""        ! Touche ???
fin                     ! Fini
PROCEDURE avec_or
  d%=LONG{old%} OR LONG{new%}
  LONG{adr%+152}=d%
  LONG{adr%-160*19+152}=d%
  d%=LONG{old%+4} OR LONG{new%+4}
  LONG{adr%+156}=d%
  LONG{adr%-160*19+156}=d%
  d%=LONG{old%+8} OR LONG{new%+8}
  LONG{adr%+160+152}=d%
  LONG{adr%-160*19+160+152}=d%
  d%=LONG{old%+12} OR LONG{new%+12}
  LONG{adr%+160+156}=d%
  LONG{adr%-160*19+160+156}=d%
  d%=LONG{old%+16} OR LONG{new%+16}
  LONG{adr%+160*2+152}=d%
  LONG{adr%-160*19+160*2+152}=d%
  d%=LONG{old%+20} OR LONG{new%+20}
  LONG{adr%+160*2+156}=d%
  LONG{adr%-160*19+160*2+156}=d%
  d%=LONG{old%+24} OR LONG{new%+24}
  LONG{adr%+160*3+152}=d%
  LONG{adr%-160*19+160*3+152}=d%
  d%=LONG{old%+28} OR LONG{new%+28}
  LONG{adr%+160*3+156}=d%
  LONG{adr%-160*19+160*3+156}=d%
  d%=LONG{old%+32} OR LONG{new%+32}
  LONG{adr%+160*4+152}=d%
  LONG{adr%-160*19+160*4+152}=d%
  d%=LONG{old%+36} OR LONG{new%+36}
  LONG{adr%+160*4+156}=d%
  LONG{adr%-160*19+160*4+156}=d%
  d%=LONG{old%+40} OR LONG{new%+40}
  LONG{adr%+160*5+152}=d%
  LONG{adr%-160*19+160*5+152}=d%
  d%=LONG{old%+44} OR LONG{new%+44}
  LONG{adr%+160*5+156}=d%
  LONG{adr%-160*19+160*5+156}=d%
  d%=LONG{old%+48} OR LONG{new%+48}
  LONG{adr%+160*6+152}=d%
  LONG{adr%-160*19+160*6+152}=d%
  d%=LONG{old%+52} OR LONG{new%+52}
  LONG{adr%+160*6+156}=d%
  LONG{adr%-160*19+160*6+156}=d%
  d%=LONG{old%+56} OR LONG{new%+56}
  LONG{adr%+160*7+152}=d%
  LONG{adr%-160*19+160*7+152}=d%
  d%=LONG{old%+60} OR LONG{new%+60}
  LONG{adr%+160*7+156}=d%
  LONG{adr%-160*19+160*7+156}=d%
  d%=LONG{old%+64} OR LONG{new%+64}
  LONG{adr%+160*8+152}=d%
  LONG{adr%-160*19+160*8+152}=d%
  d%=LONG{old%+68} OR LONG{new%+68}
  LONG{adr%+160*8+156}=d%
  LONG{adr%-160*19+160*8+156}=d%
  d%=LONG{old%+72} OR LONG{new%+72}
  LONG{adr%+160*9+152}=d%
  LONG{adr%-160*19+160*9+152}=d%
  d%=LONG{old%+76} OR LONG{new%+76}
  LONG{adr%+160*9+156}=d%
  LONG{adr%-160*19+160*9+156}=d%
  d%=LONG{old%+80} OR LONG{new%+80}
  LONG{adr%+160*10+152}=d%
  LONG{adr%-160*19+160*10+152}=d%
  d%=LONG{old%+84} OR LONG{new%+84}
  LONG{adr%+160*10+156}=d%
  LONG{adr%-160*19+160*10+156}=d%
  d%=LONG{old%+88} OR LONG{new%+88}
  LONG{adr%+160*11+152}=d%
  LONG{adr%-160*19+160*11+152}=d%
  d%=LONG{old%+92} OR LONG{new%+92}
  LONG{adr%+160*11+156}=d%
  LONG{adr%-160*19+160*11+156}=d%
  d%=LONG{old%+96} OR LONG{new%+96}
  LONG{adr%+160*12+152}=d%
  LONG{adr%-160*19+160*12+152}=d%
  d%=LONG{old%+100} OR LONG{new%+100}
  LONG{adr%+160*12+156}=d%
  LONG{adr%-160*19+160*12+156}=d%
  d%=LONG{old%+104} OR LONG{new%+104}
  LONG{adr%+160*13+152}=d%
  LONG{adr%-160*19+160*13+152}=d%
  d%=LONG{old%+108} OR LONG{new%+108}
  LONG{adr%+160*13+156}=d%
  LONG{adr%-160*19+160*13+156}=d%
  d%=LONG{old%+112} OR LONG{new%+112}
  LONG{adr%+160*14+152}=d%
  LONG{adr%-160*19+160*14+152}=d%
  d%=LONG{old%+116} OR LONG{new%+116}
  LONG{adr%+160*14+156}=d%
  LONG{adr%-160*19+160*14+156}=d%
  d%=LONG{old%+120} OR LONG{new%+120}
  LONG{adr%+160*15+152}=d%
  LONG{adr%-160*19+160*15+152}=d%
  d%=LONG{old%+124} OR LONG{new%+124}
  LONG{adr%+160*15+156}=d%
  LONG{adr%-160*19+160*15+156}=d%
  d%=LONG{old%+128} OR LONG{new%+128}
  LONG{adr%+160*16+152}=d%
  LONG{adr%-160*19+160*16+152}=d%
  d%=LONG{old%+132} OR LONG{new%+132}
  LONG{adr%+160*16+156}=d%
  LONG{adr%-160*19+160*16+156}=d%
  d%=LONG{old%+136} OR LONG{new%+136}
  LONG{adr%+160*17+152}=d%
  LONG{adr%-160*19+160*17+152}=d%
  d%=LONG{old%+140} OR LONG{new%+140}
  LONG{adr%+160*17+156}=d%
  LONG{adr%-160*19+160*17+156}=d%
  d%=LONG{old%+144} OR LONG{new%+144}
  LONG{adr%+160*18+152}=d%
  LONG{adr%-160*19+160*18+152}=d%
  d%=LONG{old%+148} OR LONG{new%+148}
  LONG{adr%+160*18+156}=d%
  LONG{adr%-160*19+160*18+156}=d%
  ADD old%,152
  ADD new%,152
RETURN
PROCEDURE sans_or
  d%=LONG{new%}
  LONG{adr%+152}=d%
  LONG{adr%-160*19+152}=d%
  d%=LONG{new%+4}
  LONG{adr%+156}=d%
  LONG{adr%-160*19+156}=d%
  d%=LONG{new%+8}
  LONG{adr%+160+152}=d%
  LONG{adr%-160*19+160+152}=d%
  d%=LONG{new%+12}
  LONG{adr%+160+156}=d%
  LONG{adr%-160*19+160+156}=d%
  d%=LONG{new%+16}
  LONG{adr%+160*2+152}=d%
  LONG{adr%-160*19+160*2+152}=d%
  d%=LONG{new%+20}
  LONG{adr%+160*2+156}=d%
  LONG{adr%-160*19+160*2+156}=d%
  d%=LONG{new%+24}
  LONG{adr%+160*3+152}=d%
  LONG{adr%-160*19+160*3+152}=d%
  d%=LONG{new%+28}
  LONG{adr%+160*3+156}=d%
  LONG{adr%-160*19+160*3+156}=d%
  d%=LONG{new%+32}
  LONG{adr%+160*4+152}=d%
  LONG{adr%-160*19+160*4+152}=d%
  d%=LONG{new%+36}
  LONG{adr%+160*4+156}=d%
  LONG{adr%-160*19+160*4+156}=d%
  d%=LONG{new%+40}
  LONG{adr%+160*5+152}=d%
  LONG{adr%-160*19+160*5+152}=d%
  d%=LONG{new%+44}
  LONG{adr%+160*5+156}=d%
  LONG{adr%-160*19+160*5+156}=d%
  d%=LONG{new%+48}
  LONG{adr%+160*6+152}=d%
  LONG{adr%-160*19+160*6+152}=d%
  d%=LONG{new%+52}
  LONG{adr%+160*6+156}=d%
  LONG{adr%-160*19+160*6+156}=d%
  d%=LONG{new%+56}
  LONG{adr%+160*7+152}=d%
  LONG{adr%-160*19+160*7+152}=d%
  d%=LONG{new%+60}
  LONG{adr%+160*7+156}=d%
  LONG{adr%-160*19+160*7+156}=d%
  d%=LONG{new%+64}
  LONG{adr%+160*8+152}=d%
  LONG{adr%-160*19+160*8+152}=d%
  d%=LONG{new%+68}
  LONG{adr%+160*8+156}=d%
  LONG{adr%-160*19+160*8+156}=d%
  d%=LONG{new%+72}
  LONG{adr%+160*9+152}=d%
  LONG{adr%-160*19+160*9+152}=d%
  d%=LONG{new%+76}
  LONG{adr%+160*9+156}=d%
  LONG{adr%-160*19+160*9+156}=d%
  d%=LONG{new%+80}
  LONG{adr%+160*10+152}=d%
  LONG{adr%-160*19+160*10+152}=d%
  d%=LONG{new%+84}
  LONG{adr%+160*10+156}=d%
  LONG{adr%-160*19+160*10+156}=d%
  d%=LONG{new%+88}
  LONG{adr%+160*11+152}=d%
  LONG{adr%-160*19+160*11+152}=d%
  d%=LONG{new%+92}
  LONG{adr%+160*11+156}=d%
  LONG{adr%-160*19+160*11+156}=d%
  d%=LONG{new%+96}
  LONG{adr%+160*12+152}=d%
  LONG{adr%-160*19+160*12+152}=d%
  d%=LONG{new%+100}
  LONG{adr%+160*12+156}=d%
  LONG{adr%-160*19+160*12+156}=d%
  d%=LONG{new%+104}
  LONG{adr%+160*13+152}=d%
  LONG{adr%-160*19+160*13+152}=d%
  d%=LONG{new%+108}
  LONG{adr%+160*13+156}=d%
  LONG{adr%-160*19+160*13+156}=d%
  d%=LONG{new%+112}
  LONG{adr%+160*14+152}=d%
  LONG{adr%-160*19+160*14+152}=d%
  d%=LONG{new%+116}
  LONG{adr%+160*14+156}=d%
  LONG{adr%-160*19+160*14+156}=d%
  d%=LONG{new%+120}
  LONG{adr%+160*15+152}=d%
  LONG{adr%-160*19+160*15+152}=d%
  d%=LONG{new%+124}
  LONG{adr%+160*15+156}=d%
  LONG{adr%-160*19+160*15+156}=d%
  d%=LONG{new%+128}
  LONG{adr%+160*16+152}=d%
  LONG{adr%-160*19+160*16+152}=d%
  d%=LONG{new%+132}
  LONG{adr%+160*16+156}=d%
  LONG{adr%-160*19+160*16+156}=d%
  d%=LONG{new%+136}
  LONG{adr%+160*17+152}=d%
  LONG{adr%-160*19+160*17+152}=d%
  d%=LONG{new%+140}
  LONG{adr%+160*17+156}=d%
  LONG{adr%-160*19+160*17+156}=d%
  d%=LONG{new%+144}
  LONG{adr%+160*18+152}=d%
  LONG{adr%-160*19+160*18+152}=d%
  d%=LONG{new%+148}
  LONG{adr%+160*18+156}=d%
  LONG{adr%-160*19+160*18+156}=d%
  ADD new%,152
RETURN
PROCEDURE fin
  ~MFREE(buffer4%)      ! LibŠre les buffers
  ~MFREE(buffer3%)
  ~MFREE(buffer2%)
  ~MFREE(buffer1%)
  ~MFREE(lecran2%)
  ~MFREE(fonte%)
  ~FRE(0)               ! Garbage-collection
  RESERVE megatizer%    ! Restaure la m‚moire
  VSYNC
  ~XBIOS(5,L:-1,L:XBIOS(3),0)
  VSYNC
  SPOKE &HFFFFFC02,8    ! La souris est vivante !
  EDIT                  ! Bye
RETURN
