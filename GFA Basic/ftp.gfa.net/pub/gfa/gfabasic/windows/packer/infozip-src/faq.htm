<HTML>
<HEAD>
<LINK REV="made" HREF="mailto:Zip-Bugs@lists.wku.edu">
<!--  Copyright (c) 1995-1997 Greg Roelofs.  -->

<TITLE>Info-ZIP Frequently Asked Questions</TITLE>
</HEAD>

<!-- BODY BGCOLOR="#dfcf7f" -->
<BODY>
<H1 ALIGN="center">
<A HREF="Info-ZIP.html"><IMG WIDTH=500 HEIGHT=105 ALT="[Info-ZIP]" BORDER=0
 LOWSRC="images/InfoZIP-gold2-bw.gif" SRC="images/InfoZIP-gold2.gif"></A>
</H1>
<P>

<HR>
<P>

<H2 ALIGN="center"> Frequently Asked Questions </H2>
<P>

<UL>
    <LI><A HREF="#download">How do I get UnZip (or Zip)?</A>
    <LI><A HREF="#UnZip">How do I use UnZip?</A>
    <LI><A HREF="#multivol">Do you support multi-volume archives?  How do I
        extract one?</A>
    <LI><A HREF="#commercial">Can I use the Zip or UnZip source code or
        executables in my commercial product?</A>
    <LI><A HREF="#crypto">Why are encrypting versions of Zip not distributed
        from your main site?</A>
    <LI><A HREF="#VMS">Why does my VMS UnZip say ``too many parameters''?</A>
    <LI><A HREF="#MVS">Where can I get MVS executables?</A>
    <LI><A HREF="#lfn">How do I extract Windows 95 long filenames (VFAT) under
        plain DOS?</A>
    <LI><A HREF="#recursion">How do I make the Win32 version (Win95 or NT) of
        Zip 2.1 recurse through subdirectories?</A>
    <LI><A HREF="#OS2_times">Why do files with extended attributes get
        extracted under OS/2 with the current time while all other files
        retain their original timestamps as expected?</A>
    <LI><A HREF="#VB">Can I use the Windows DLLs with Visual BASIC?</A>
    <LI><A HREF="#unixSFX">How do I make a DOS (or other non-native)
        self-extracting archive under Unix?</A>
    <LI><A HREF="#Mac">Are there any plans to port Zip to the Macintosh?</A>
    <LI><A HREF="#Y2K">Can I expect any problems when 1999 rolls over to
        2000?</A>
    <LI><A HREF="#JPL">Your web page says Jet Propeller Laboratory!  That's
        <B>wrong</B>!</A>
</UL>
<P>

<HR>
<P>

<OL>
    <A NAME="download"></A>
    <!-- 1 -->
    <LI><I>How do I get UnZip (or Zip)?</I>
    <P>

    <DL>
        <DT><B>Short answer</B>:  <A HREF="ftp://ftp.cdrom.com/pub/infozip/"
            >ftp://ftp.cdrom.com/pub/infozip/</A> :  either cd into
            an appropriate subdirectory and grab an appropriate executable 
            distribution, or else get the source code from the <B>src</B>
            subdirectory and compile your own.
        </DT>
        <P>

        <DT><B>Long answer</B>:  do something similar to the following.  This
            is for a Unix-like, text-mode ftp client, but others will work
            similarly.  (The stuff after "//" is comments; don't type any of
            it.  This example assumes you want UnZip for a Windows 95 or NT
            system, but the procedure is similar for other systems.)
            <P>

            <PRE>
ftp ftp.cdrom.com      // run the ftp program and connect to Walnut Creek
anonymous              // username for anonftp
you@your.email.addr    // use your real e-mail address for password
cd <A HREF="ftp://ftp.cdrom.com/pub/infozip/">/pub/infozip</A>        // change into the Info-ZIP subdirectory
dir                    // list the contents of the subdirectory
cd <A HREF="ftp://ftp.cdrom.com/pub/infozip/WIN32/">WIN32</A>               // change into the WIN32 subdirectory
dir                    // list the contents of the subdirectory
bin                    // set transfer mode to binary (IMPORTANT!)
get <A HREF="ftp://ftp.cdrom.com/pub/infozip/WIN32/unz531xN.exe">unz531xN.exe</A>       // get self-extracting Win95/NT UnZip 5.31 archive
quit                   // quit the ftp program
            </PRE>
            <P>

            [Download unz531xN.exe in binary mode to your Win95/NT system if
             necessary.]
            <P>

            <B>Remember</B>:  if the file size of the downloaded archive isn't
            <B>EXACTLY</B> the same as the size listed on the original ftp site
            with the "dir" command, you did something wrong.  It is probably
            corrupted in that case.  (Yes, this is a little harder to check
            via WWW since the size is usually given in KB or MB, but our README
            file in the same directory lists exact byte sizes.  Also, most
            browsers automatically download in binary mode, so it shouldn't be
            a problem with them.)
        </DT>
        <P>
    </DL>

    <A NAME="UnZip"></A>
    <HR>
    <P>

    <!-- 2 -->
    <LI><I>How do I use UnZip?</I>
    <P>

    <DL>
        <DT>For self-extracting archives such as the one used in the example
            above, simply copy or move it into the directory of your choice,
            cd into that directory and run the self-extracting archive:
            <P>

            <PRE>
unz531xN            // extract contents of unz531xN.exe
                    //  archive to the current directory
            </PRE>
            <P>

            This can be done either from a command-line prompt or via a "Run
            This" menu item (e.g., in Windows).  If the archive doesn't run,
            either you don't have enough memory available (try exiting to plain
            DOS if running a graphical shell) or you didn't download the
            archive properly (see FAQ #1).
            <P>

            After successful extraction, read the enclosed unzip.doc file for
            explicit directions on using the newly extracted unzip.exe program.
            Then use it!  For example:
            <P>

            <PRE>
unzip -t foo.zip    // test the archive `foo.zip' (see
                    //  unzip.doc for other examples)
            </PRE>
            <P>

            Note that currently <B>all but three ports are command-line
            only</B>!  The three exceptions are the Macintosh port
            (<I>MacUnZip</I>), the Windows 3.x/95/NT port (<I>WizUnZip</I>,
            soon to be integrated with Zip and renamed <I>WiZ</I>), and the
            Windows CE/NT port (<I>Pocket UnZip</I>).
            <P>
        </DT>
    </DL>

    <HR>
    <P>

    <A NAME="multivol"></A>
    <!-- 3 -->
    <LI><I>Do you support multi-volume archives?  How do I extract one?</I>
    <P>

    <DL>
        <DT>Alas, we're <I>really</I> slow and still don't support the creation
            of multi-volume (or multi-disk) archives.  After the UnZip 5.3 and
            Zip 2.2 releases, that's at the top of the to-do list.  Look for
            UnZip 6.0 and Zip 3.0 sometime in 1997.
            <P>

            Extraction is currently supported, however, albeit in a crude
            manner.  First concatenate all of the pieces together (in order!),
            using whatever command is appropriate for your system:
            <P>

            <PRE>
copy/b part1.zip+part2.zip+etc.zip monster.zip   // under DOS, OS/2 or Win*
cat part1.zip part2.zip etc.zip > monster.zip    // under Unix
            </PRE>
            <P>

            Then use Zip's ``zipfix'' option to patch up the big archive
            (optionally get rid of all of the little pieces first if you're
            short on disk space):
            <P>

            <PRE>
zip -F monster.zip       // fix up the concatenated archive
            </PRE>
            <P>

            The archive is now a large but perfectly ordinary zipfile; extract,
            test or list its contents just like you normally would.
        </DT>
        <P>
    </DL>

    <A NAME="commercial"></A>
    <HR>
    <P>

    <!-- 4 -->
    <LI><I>Can I use the Zip or UnZip source code or executables in my
        commercial product?</I>
    <P>

    <DL>
        <DT>Yes, with some fairly benign restrictions.  See the
            <A HREF="doc/COPYING">COPYING</A> file within all official UnZip
            distributions (both source and executable) or the README file in
            official Zip distributions.  If those don't answer your questions,
            ask the authors at:
            <A HREF="mailto:Zip-Bugs@lists.wku.edu">Zip-Bugs@lists.wku.edu</A>
        </DT>
        <P>
    </DL>

    <A NAME="crypto"></A>
    <HR>
    <P>

    <!-- 5 -->
    <LI><I>Why are encrypting versions of Zip not distributed from your main
        site?</I>
    <P>

    <DL>
        <DT>The encryption key in Zip is 96 bits long, which requires an
            export license to export from the US, even though the encryption
            code is <I>imported</I> into the US in the first place.  We don't
            have one.  Ergo, no encryption binaries on US sites.
            <P>

            Note, however, that the encryption scheme used in all versions of
            Zip (including PKWARE's products) is quite weak; see ``<A HREF=
            "ftp://ripem.msu.edu/pub/crypt/docs/kocher-pkzip-attack.txt">A
            Known-Plaintext Attack on the PKZIP Stream Cipher</A>'' (also as <A
            HREF="ftp://ripem.msu.edu/pub/crypt/docs/kocher-pkzip-attack.ps.gz"
            >gzip'd PostScript</A>) by Eli Biham and <A HREF=
            "http://www.cryptography.com/">Paul C. Kocher</A>.
        </DT>
        <P>
    </DL>

    <A NAME="VMS"></A>
    <HR>
    <P>

    <!-- 6 -->
    <LI><I>Why does my VMS UnZip say ``too many parameters'' and do nothing but
        print the usage screen for me?</I>
    <P>

    <DL>
        <DT>UnZip (and Zip, and all of the other Info-ZIP utilities) must be
            set up as a VMS <I>foreign command</I>, as noted in the README.VMS
            file included with our VMS distributions.  Add some lines similar
            to the following to your LOGIN.COM file:
            <P>

            <PRE>
$ unzip == "$disk:[dir]unzip.exe"
$ zipinfo == "$disk:[dir]unzip.exe ""-Z"""
            </PRE>
            <P>

            ...where "disk" and "dir" refer to the true disk and directory
            where unzip.exe is located.  The "$" before the disk name is
            important; i.e., don't delete it.  All of the quotes in the
            ZipInfo line are necessary, too, so don't delete any of them,
            either.
            <P>

            Finally, run UnZip just as on any other system (see FAQ #2).  Do
            not type ``run'' before the command.
            <P>
        </DT>
    </DL>

    <A NAME="MVS"></A>
    <HR>
    <P>

    <!-- 7 -->
    <LI><I>Where can I get MVS executables?</I>
    <P>

    <DL>
        <DT>You have two options.  If you have a C compiler, you can grab the
            official release sources from 
            <A HREF="ftp://ftp.cdrom.com/pub/infozip/src/"
            >ftp://ftp.cdrom.com/pub/infozip/src/</A> as above, unpack them on
            some other system, translate to EBCDIC, transfer to your MVS box,
            and compile.  This hasn't been tested, but the VM/CMS port is very
            similar and works fine.  With luck we'll have pre-compiled versions
            soon, but no promises.
            <P>

            Your alternative is to grab the old beta executables from <A HREF=
            "MVS/beta/">here</A> (or <A HREF=
            "ftp://ftp.cdrom.com/pub/infozip/MVS/beta/">via ftp</A>) and try
            those.  We don't know much about them, but at least they're
            already compiled.
        </DT>
        <P>
    </DL>

    <A NAME="lfn"></A>
    <HR>
    <P>

    <!-- 8 -->
    <LI><I>How do I extract Windows 95 long filenames (VFAT) under plain
        DOS?  It works fine in a Win95 DOS window, but I want to be able to
        restore a backed-up Win95 system from scratch.</I>
    <P>

    <DL>
        <DT>You're hosed.  Info-ZIP's utilities use the normal C library
            functions to read and write files; those functions, in turn,
            depend on the operating system to provide file-system support.
            Plain DOS, even the DOS 7.0 at the heart of Windows 95, <B>does
            not support the VFAT file system</B>.  And writing very low-level,
            OS-dependent code to support one system violates Info-ZIP's goal
            of maximal portability (even if most of the necessary code is 
            already freely available in Linux and elsewhere).
            <P>

            So while Info-ZIP's <A HREF=
            "http://www.cdrom.com/pub/infozip/WIN32/">Win32 versions</A> do
            support long filenames in Win95 DOS boxes, they don't even run
            under plain DOS.  And the <A HREF=
            "http://www.cdrom.com/pub/infozip/MSDOS/">DOS versions</A> don't
            support long filenames at all.  (Well, that's not entirely true:
            if UnZip is compiled with the free djgpp 2.x compiler, it will
            support long filenames under Windows 95 or short filenames under
            plain DOS.  The currently available 32-bit executable in
            <A HREF="MSDOS/unz531x3.exe"><TT>unz531x3.exe</TT></A> was compiled
            with djgpp 2.x.)
            <P>

            Your best bet is to hope that someone writes (or maybe has already
            written) a VFAT device driver for DOS, similar to the OS/2 HPFS
            device drivers already available for DOS (e.g., <A HREF=
          "http://www.student.informatik.th-darmstadt.de/~akinzler/hpfseng.html"
            >HPFS-Access</A>, Amos, etc.).  If you hear about such a thing,
            <A HREF="mailto:Zip-Bugs@lists.wku.edu">let us know</A> and we'll
            provide pointers and, if possible, test our code with it.  In the
            meantime, <A HREF="http://www.pair.com/dmurdoch/">Duncan
            Murdoch</A>'s <A HREF=
            "http://www.pair.com/dmurdoch/programs/doslfnbk.htm">DOSLFNBK</A>
            and <A HREF="http://www8.pair.com/dmurdoch/programs/lfnsort.htm"
            >LFNSORT</A> utilities may prove useful.
        </DT>
        <P>
    </DL>

    <A NAME="recursion"></A>
    <HR>
    <P>

    <!-- 9 -->
    <LI><I>How do I make the Win32 version (Win95 or NT) of Zip 2.1 recurse
        through subdirectories and archive only files matching a certain
        pattern?  The documented method doesn't work.</I>
    <P>

    <DL>
        <DT>Yup, this is a bug either in the Win32 port of Zip 2.1 or in the
            compiler that was used to create the binary.  The documented way
            is this:
            <P>

            <PRE>
zip -r foo.zip . -i *.exe   // doesn't recurse as expected under Windows 95, NT
            </PRE>
            <P>

            <B>This is what actually works</B>:
            <P>

            <PRE>
zip -r foo.zip * -i *.exe   // recursively archive all *.exe files
            </PRE>
            <P>

            This bug will be fixed in Zip 2.2, coming soon!  Sorry for
            the inconvenience.
        </DT>
        <P>
    </DL>

    <A NAME="OS2_times"></A>
    <HR>
    <P>

    <!-- 10 -->
    <LI><I>Why do files with extended attributes get extracted under OS/2 with
        the current time while all other files retain their original timestamps
        as expected?</I>
        <P>

        Two reasons:
        <P>

        <UL>
            <LI TYPE="disc">you're using an old version of UnZip (5.12 or
                            earlier);
            <LI TYPE="disc">you're extracting to an HPFS386-based drive.
        </UL>
        <P>

        This is a known bug with HPFS386-based network drives (LAN Server 4.0
        or Warp Server), and IBM has not provided a patch.  UnZip 5.2 and later
        have a work-around for the problem, however.  (Note that the same bug
        will affect any program that uses the DosSetPathInfo() call.)
        <P>
    </LI>

    <A NAME="VB"></A>
    <HR>
    <P>

    <!-- 11 -->
    <LI><I>Can I use the Windows DLLs with Visual BASIC?</I>
    <P>

    <DL>
        <DT>Not with the publicly available DLLs, but the coming 5.32 release
            will have VB support and some example files.  The coming Zip 2.2
            release should have VB support as well, although the code hasn't
            been tested yet.
        </DT>
        <P>
    </DL>

    <A NAME="unixSFX"></A>
    <HR>
    <P>

    <!-- 12 -->
    <LI><I>How do I make a DOS (or other non-native) self-extracting archive
        under Unix?</I>
    <P>

    <DL>
        <DT>The procedure is basically described in the UnZipSFX man page.
            First grab the appropriate UnZip binary distribution for your
            target platform (DOS, Windows, OS/2, etc.), as described above;
            we'll assume DOS in the following example.  Then extract the
            UnZipSFX stub from the distribution and prepend as if it were a
            native Unix stub:
            <P>

            <PRE>
unzip <A HREF="ftp://ftp.cdrom.com/pub/infozip/MSDOS/unz531x.exe">unz531x.exe</A> unzipsfx.exe                 // extract the DOS SFX stub
cat unzipsfx.exe yourzip.zip > yourDOSzip.exe  // create the SFX archive
zip -A yourDOSzip.exe                          // fix up internal offsets
            </PRE>
            <P>

            That's it.  You can still test, update and delete entries from
            the archive; it's a fully functional zipfile.  Note that Zip
            versions prior to 2.2 will emit a warning about a ``preamble of
            xxx bytes.''  This can be ignored.
        </DT>
        <P>
    </DL>

    <A NAME="Mac"></A>
    <HR>
    <P>

    <!-- 13 -->
    <LI><I>Are there any plans to port Zip to the Macintosh?</I>
    <P>

    <DL>
        <DT>Not at this time, sorry.  The guy who did the current UnZip port,
            Antoine Verheijen, is too busy to port Zip to the Mac. Alternatives
            include Thomas Brown's ZipIt and Aladdin Systems' StuffIt Deluxe.
            A pointer to the former can be found on our <A HREF="Info-ZIP2.html"
            >More Stuff</A> page.
        </DT>
        <P>
    </DL>

    <A NAME="Y2K"></A>
    <HR>
    <P>

    <!-- 14 -->
    <LI><I>Can I expect any problems when 1999 rolls over to 2000?</I>
    <P>

    <DL>
        <DT>It depends a bit on how you use Zip and UnZip, but by and large
            there shouldn't be any problems.  UnZip displays only two digits
            of the year when listing files (in most formats), so if you take
            that output and sort on the year field, it will fail.  Internally
            it uses DOS-format dates by default (no problems until 2108; i.e.,
            128 years after 1 January 1980) and Unix-format dates where
            available (no problems until almost the end of 2037, when
            2<SUP>32</SUP> seconds will have elapsed since 1 January 1970).
            You also have the option of displaying dates in yyyymmdd.hhmmss
            format (<TT>unzip -ZT</TT>) for sorting, if you wish.
            <P>

            Zip currently has a <TT>-t</TT> option that doesn't appear to have
            been Y2K-ized yet, but that seems to be the only problem and should
            be fixed when version 2.2 is released.
            <P>

            Note that it's possible that some PC-based C compilers or libraries
            have Y2K bugs in them that would affect Zip and UnZip.  The Info-ZIP
            group has not explicitly tested any compilers for such problems.
        </DT>
        <P>
    </DL>

    <A NAME="JPL"></A>
    <HR>
    <P>

    <!-- 15 -->
    <LI><I>Your web page says Jet Propeller Laboratory!  That's
        <B>wrong</B>!</I>
    <P>

    <DL>
        <DT>Yes, Sherlock, we know.  It's intentional.  It's humor.  Ar ar.
            Now go away.
        </DT>
        <P>
    </DL>

</OL>
<P>

<HR>
<P>

<CENTER>
<A HREF="Info-ZIP.html"> <IMG WIDTH=101 HEIGHT=21
 SRC="images/InfoZIP-gold-sml.gif" ALT="[Info-ZIP]" BORDER=0 ALIGN=bottom></A>
 Return to the <A HREF="Info-ZIP.html">Info-ZIP Home Page</A>.
</CENTER>
<P>

<HR>
Please send non-HTML-related comments and questions to
<A HREF="mailto:Zip-Bugs@lists.wku.edu"><B>Zip-Bugs@lists.wku.edu</B></A> .
<HR>
Last updated 11 September 1997.  Maintained by Greg Roelofs 
(<A HREF="mailto:newt@pobox.com">newt@pobox.com</A>).
<HR>
<P>

<FONT SIZE="-1">
Copyright &#169; 1995-1997 <A HREF="http://pobox.com/~newt/">Greg Roelofs</A>.
</FONT>

</BODY>
</HTML>
