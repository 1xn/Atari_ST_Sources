$c+                     ! Sauve les registres avant un void c:
'
' **********************************************************
' *            Audio Sculpture Replay Routines             *
' *  Copyright 1991 Synchron Assembly and Expose Software  *
' **********************************************************
' *         Bugged version debugged by THYREX / NLC        *
' *             STE DMA control by THYREX / NLC            *
' **********************************************************
'
'           j'suis vraiment un mec sympa !!! non ???
'
'       pour les commentaires, voir le replay de sample ste
'
INLINE rout%,9776
' ^^^^^^^^^^^^^^^
' n'oubliez pas de chargez l'inline
'
GOSUB test_ste
GOSUB play_mod
'
> PROCEDURE play_mod
  '
  r%=XBIOS(4)
  IF NOT (r%=1)
    ~XBIOS(5,L:-1,L:-1,1)
  ENDIF
  '
  RESERVE 100000
  a%=MALLOC(100000)
  '
  VSYNC
  SETCOLOR 0,7,7,7
  CLS
  ' ****** Select a module ******
  '
  PRINT AT(1,1);"Select a M.K. module."
  '
  FILESELECT "A:\*.mod","",mname$
  '
  CLS
  '
  IF a%>0
    '
    ' ***** Instal replay routine ******
    '
    BMOVE rout%,a%,9776
    prg_base%=a%+28
    '
    ' Load the desired module!
    '
    OPEN "i",#1,mname$                    ! Find length of Module
    len%=LOF(#1)
    CLOSE #1
    '
    b%=MALLOC(len%)                       ! Request Memory
    '
    IF b%>0
      '
      ' ****** Loading the module ******
      '
      BLOAD mname$,b%
      '
      {prg_base%+20}=b%       ! Pointer to Start of Module
      {prg_base%+24}=b%+len%  ! Pointer to End of Module
      '
      ' ****** Set output options ******
      '
      POKE prg_base%+37,output%    ! Output Mode Selector
      POKE prg_base%+38,1    ! Volume Control, 0=Off, 1=On
      POKE prg_base%+39,2    ! STE frequency (0=6.25kHz/1=12.5kHz/2=25kHz/3=50kHz)
      POKE prg_base%+40,49   ! Interrupt Frequency = 614400 divided by this value
      POKE prg_base%+41,0    ! Oversample, 0=Off, 1=On, only output mode 8
      '
      ' Output mode table:
      '
      '  0= MONO YM2149 (STF)  1= MONO ST REPLAY      2= MONO PRINTER
      '  3= YM2149/ST REPLAY   4= YM2149/ST REPLAY    5= ST REPLAY/PRINTER
      '  6= PLAYBACK           7= REPLAY PRO/MV 16    8= STE/TT DMA
      '  9= STE HIFI 50 KHZ   10= STE 16 BITS
      '
      treble&=7
      bass_s&=7
      main_vol&=39           ! valeurs de depart -1
      vol_left&=19
      vol_right&=19
      '
      d0&=0
      '
      SETCOLOR 0,0
      SETCOLOR 3,5,0,5
      '
      PRINT AT(1,1);"      DMA CONTROLER BY THYREX/NLC/ESC (TRACKER REPLAY FROM AUDIO SCULPTURE)"
      PRINT AT(1,2);"      ¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹¹"
      PRINT AT(1,3);""
      PRINT AT(1,4);"  CONTROL :                 F1 - F2 = MAIN VOLUME"
      PRINT AT(1,6);"                            F3 - F4 = TREBLE"
      PRINT AT(1,8);"                            F5 - F6 = BASS"
      PRINT AT(1,10);"                            F7 - F8 = LEFT VOLUME"
      PRINT AT(1,12);"                            F9 - F10= RIGHT VOLUME"
      PRINT AT(1,16);" Coucou : ADRENALINE - EUPHORIA (PC) - WIL - EKO - HMD - ZX - ACCS - BOA"
      PRINT AT(1,17);"          AMNESIC CACTUS - ETERNITY - TKU - THE CONCEPTORS - M CODER"
      PRINT AT(1,18);"          DUNE - SECTOR ONE - AND YOU !!!"
      PRINT AT(1,20);"                     SEE YOU AT THE MEGAFUN  PART 5"
      PRINT AT(1,24);"                                 SPACE TO QUIT"
      '
      ' Find The Number of samples used and request additional memory needed...
      '
      VOID C:prg_base%()      ! Relocate Code and find amount of memory needed
      topmem%={prg_base%+28}  ! Pointer to end of bss of the replay routine...
      c%={prg_base%+32}       ! Number of bytes needed just after the module...
      c%=MALLOC(c%)           ! Request Memory
      IF c%>0
        '
        ' ****** Start singing! ******
        '
        ON BREAK GOSUB exit
        ON ERROR GOSUB exit
        '
        OUT 4,18               ! Turn off mouse to stop interrupt interference
        '
        z%=prg_base%+12
        zend%=prg_base%+16
        '
        VOID C:z%()
        '
        super%=GEMDOS(32,L:0)  ! superviseur
        '
        GOSUB up_vol           ! POUR INSTALLER LES VALEUR DE DEPART
        GOSUB up_treble
        GOSUB up_bass
        GOSUB up_left
        GOSUB up_right
        '
        DO
          VSYNC
          key%=PEEK(&HFFFC02)
          '
          SELECT key%
            '
          CASE &H3B           !F1 ?
            '
            GOSUB down_vol
            '
          CASE &H3C           !F2 ?
            '
            GOSUB up_vol
            '
          CASE &H3D           !F3 ?
            '
            GOSUB down_treble
            '
          CASE &H3E           !F4 ?
            '
            GOSUB up_treble
            '
          CASE &H3F           !F5 ?
            '
            GOSUB down_bass
            '
          CASE &H40           !F6 ?
            '
            GOSUB up_bass
            '
          CASE &H41           !F7 ?
            '
            GOSUB down_left
            '
          CASE &H42           !F8 ?
            '
            GOSUB up_left
            '
          CASE &H43           !F9 ?
            '
            GOSUB down_right
            '
          CASE &H44           !F10 ?
            '
            GOSUB up_right
            '
          ENDSELECT
          '
        LOOP UNTIL PEEK(&HFFFC02)=57
        '
        ~GEMDOS(32,L:super%)
        '
        ' ****** The end of it all! ******
        '
        VOID C:zend%()
        '
        ~MFREE(c%)                        ! Release After Module Memory
        '
      ENDIF
      ~MFREE(b%)                          ! Release Module Memory
    ENDIF
    ~MFREE(a%)                            ! Release Replay Code Memory
  ENDIF
  OUT 4,8                                 ! Turn On Mouse
  ~XBIOS(5,L:-1,L:-1,r%)
  SETCOLOR 0,7,7,7
  SETCOLOR 4,0
  '
  EDIT
  '
RETURN
> PROCEDURE exit
  ~GEMDOS(32,L:super%)
  z%=prg_base%+16
  CALL z%
  ~MFREE(c%)
  ~MFREE(b%)
  ~MFREE(a%)
  OUT 4,8
  ~XBIOS(5,L:-1,L:-1,r%)
RETURN
'
> PROCEDURE down_treble
  CARD{&HFFFF8924}=&H7FF
  d0&=treble&
  IF d0&<=0
    d0&=0
    GOTO fin_down_treble
  ENDIF
  SUB d0&,1
  treble&=d0&
  d0&=d0&+&H480
  CARD{&HFFFF8922}=d0&
fin_down_treble:
RETURN
> PROCEDURE up_treble
  CARD{&HFFFF8924}=&H7FF
  d0&=treble&
  IF d0&>=12
    d0&=12
    GOTO fin_up_treble
  ENDIF
  ADD d0&,1
  treble&=d0&
  d0&=d0&+&H480
  CARD{&HFFFF8922}=d0&
fin_up_treble:
RETURN
'
> PROCEDURE down_bass
  CARD{&HFFFF8924}=&H7FF
  d0&=bass_s&
  IF d0&<=0
    d0&=0
    GOTO fin_down_bass
  ENDIF
  SUB d0&,1
  bass_s&=d0&
  d0&=d0&+&H440
  CARD{&HFFFF8922}=d0&
fin_down_bass:
RETURN
> PROCEDURE up_bass
  CARD{&HFFFF8924}=&H7FF
  d0&=bass_s&
  IF d0&>=12
    d0&=12
    GOTO fin_up_bass
  ENDIF
  ADD d0&,1
  bass_s&=d0&
  d0&=d0&+&H440
  CARD{&HFFFF8922}=d0&
fin_up_bass:
RETURN
'
> PROCEDURE down_left
  CARD{&HFFFF8924}=&H7FF
  d0&=vol_left&
  IF d0&<=0
    d0&=0
    GOTO fin_down_left
  ENDIF
  SUB d0&,1
  vol_left&=d0&
  ADD d0&,&H540
  CARD{&HFFFF8922}=d0&
fin_down_left:
RETURN
> PROCEDURE up_left
  CARD{&HFFFF8924}=&H7FF
  d0&=vol_left&
  IF d0&>=20
    d0&=20
    GOTO fin_up_left
  ENDIF
  ADD d0&,1
  vol_left&=d0&
  ADD d0&,&H540
  CARD{&HFFFF8922}=d0&
fin_up_left:
RETURN
'
> PROCEDURE down_right
  CARD{&HFFFF8924}=&H7FF
  d0&=vol_right&
  IF d0&<=0
    d0&=0
    GOTO fin_down_right
  ENDIF
  SUB d0&,1
  vol_right&=d0&
  ADD d0&,&H500
  CARD{&HFFFF8922}=d0&
fin_down_right:
RETURN
> PROCEDURE up_right
  CARD{&HFFFF8924}=&H7FF
  d0&=vol_right&
  IF d0&>=20
    d0&=20
    GOTO fin_up_right
  ENDIF
  ADD d0&,1
  vol_right&=d0&
  ADD d0&,&H500
  CARD{&HFFFF8922}=d0&
fin_up_right:
RETURN
'
> PROCEDURE down_vol
  CARD{&HFFFF8924}=&H7FF
  d0&=main_vol&
  IF d0&<=0
    d0&=0
    GOTO fin_down_vol
  ENDIF
  SUB d0&,1
  main_vol&=d0&
  ADD d0&,&H4C0
  CARD{&HFFFF8922}=d0&
fin_down_vol:
RETURN
> PROCEDURE up_vol
  CARD{&HFFFF8924}=&H7FF
  d0&=main_vol&
  IF d0&>=40
    d0&=40
    GOTO fin_up_vol
  ENDIF
  ADD d0&,1
  main_vol&=d0&
  ADD d0&,&H4C0
  CARD{&HFFFF8922}=d0&
fin_up_vol:
RETURN
'
> PROCEDURE test_ste
  a|=PEEK(&HFF820D)
  SPOKE &HFF820D,15
  b|=PEEK(&HFF820D)
  SPOKE &HFF820D,a|
  IF a|<>b|
    output%=8
  ELSE
    ALERT 4," |STE ONLY !!!!! | sorry !!!! | ",1," Beuhh!! ",choix%
    EDIT
  ENDIF
RETURN
