' Bei Fehler und Break Farben normalisieren
ON ERROR GOSUB erfarb
ON BREAK GOSUB brfarb
'
' Unter welcher Auflîsung laufen wir?
SELECT XBIOS(4)
CASE 0
  maxfarb%=15
  maxx%=320
  maxy%=200
  charh%=8
  charw%=8
  VSETCOLOR 0,0,0,0
  VSETCOLOR 1,7,7,7
CASE 1
  maxfarb%=3
  maxx%=640
  maxy%=200
  charh%=8
  charw%=8
CASE 2
  maxfarb%=1
  maxx%=640
  maxy%=400
  charh%=16
  charw%=8
ENDSELECT
'
maxtrans%=20           ! Maximal 20 Transformationen
DIM a(maxtrans%),b(maxtrans%),c(maxtrans%),d(maxtrans%),e(maxtrans%),f(maxtrans%),p(maxtrans%)
DIM phi(maxtrans%),s(maxtrans%),t(maxtrans%)
DIM wahr(100)          ! Array zur indirekten Adressierung der Transformationen
'
path$=CHR$(GEMDOS(25)+65)+":\"
'
CLS
ALERT 1,"IFS Generator| |  Ω 1988 mhmb|Michael Harwerth",1,"Aha.",dummy%
ALERT 1,"Literaturhinweis:|Peitgen, Heinz-Otto|The Science of Fractal Images|Springer Verlag",1,"Ach so.",dummy%
ALERT 1,"Letzter Tip:| |Mausklick hilft immer!",1,"Is klar.",dummy%
DO
  abort!=FALSE
  ' *************************************************************************
  t%=2+RANDOM(2)       ! 2 bis 4 affine Abbildungen                       ***
  ' ***  t% erhîhen bringt kompliziertere Bilder hervor.                  ***
  ' *************************************************************************
  iter=100000          ! 100000 Iterationen (Nur fÅr altes SAVE nîtig)
  '
  p1=0
  FOR i%=1 TO t%       ! generiere Koeffizienten
    ' ***********************************************************************
    phi(i%)=180-RANDOM(8)*45  ! Drehwinkel; hier Vielfache von 45 Grad    ***
    ' ***  je zufÑlliger phi, desto unregelmÑûiger die Bilder             ***
    ' ***********************************************************************
    ' ***********************************************************************
    s(i%)=@fu(1)       ! Verkleinerung der x-Koordinate, 0<=s<=1          ***
    t(i%)=s(i%)        ! Verkleinerung der y-Koordinate, 0<=t<=1          ***
    ' ***  hier t=s, aber andere Werte fÅr t sind mîglich                 ***
    ' ***********************************************************************
    ' ***********************************************************************
    e(i%)=@fu(0)       ! Verschiebung des Bildes in x-Richtung            ***
    f(i%)=@fu(0)       ! Verschiebung des Bildes in y-Richtung            ***
    ' ***********************************************************************
    @hin               ! Umrechnen in "klassische" Form a,b,c,d,e,f
  NEXT i%
  '
  @init                ! Maûstab berechnen usw.
  '
  ' Zeichenschleife
  '
  i%=0
  REPEAT
    p=wahr(RND*100)
    nx=a(p)*x+b(p)*y+e(p)
    ny=c(p)*x+d(p)*y+f(p)
    x=nx
    y=ny
    IF i%>30
      x0%=(x-xmi)*xs
      y0%=maxy%-(y-ymi)*ys
      ' Punkt setzen mit einer Farbe hîher als die alte Farbe des Punktes
      PSET x0%,y0%,MIN(SUCC(PTST(x0%,y0%)),maxfarb%)
    ENDIF
    ' Taste prÅfen fÅr eventuellen Farbwechsel
    a%=INSTR("M ",UPPER$(INKEY$))-1
    IF a%>=0
      @farbe(a%)
    ENDIF
    IF MOUSEK=2
      @manip        ! Popup anzeigen
    ENDIF
    INC i%
  UNTIL abort!
LOOP
'
' Normalisiere Farben
PROCEDURE brfarb               ! BREAK
  VSETCOLOR 0,7,7,7
  VSETCOLOR 1,0,0,0
  EDIT
RETURN
PROCEDURE erfarb               ! ERROR
  IF ERR<3 AND ERR>0
    RUN
  ELSE
    VSETCOLOR 0,7,7,7
    VSETCOLOR 1,0,0,0
    ERROR ERR
  ENDIF
RETURN
'
FUNCTION fu(art%)
  SELECT art%
  CASE 0
    RETURN ROUND(3*RND,2)        ! 0.00 bis 3.00
  CASE 1
    RETURN ROUND(1-2*RND,2)      ! -0.99 bis 0.99
  ENDSELECT
ENDFUNC
'
PROCEDURE manip
  ' Fensterkoordinaten ermitteln
  xl=MIN(MAX(10,MOUSEX-100),maxx%-25*charw%)
  xr=xl+24*charw%
  yo=MIN(MAX(10,MOUSEY-70),maxy%-10*charh%)
  yu=yo+9*charh%
  '
  DEFMOUSE 3       ! zeigende Hand
  SHOWM
  '
  ' Fenster zeichnen
  GET xl,yo,xr,yu,b$
  DEFFILL 0,1,0
  BOUNDARY 1
  PBOX xl,yo,xr,yu
  BOX xl,yo,xr,yu
  TEXT xl+5,yo+1*charh%,"* Programm beenden"
  TEXT xl+5,yo+2*charh%,"* Als IFS speichern"
  TEXT xl+5,yo+3*charh%,"* Als PIC speichern"
  TEXT xl+5,yo+4*charh%,"* Neu beginnen"
  TEXT xl+5,yo+5*charh%,"* IFS laden"
  TEXT xl+5,yo+6*charh%,"* IFS eingeben"
  TEXT xl+5,yo+7*charh%,"* Parameter anzeigen"
  TEXT xl+5,yo+8*charh%,"{SPACE,M : Farbwechsel}"
  '
  REPEAT
    MOUSE xm,ym,km
  UNTIL km<>0 AND (xm>xl AND xm<xr) AND (ym>yo AND ym<yu)
  PUT xl,yo,b$
  IF km<>2
    dummy=1+INT((ym-yo-charh%/2)/charh%)   ! Angeklickte Zeile
    SELECT dummy
    CASE 1
      EDIT
    CASE 2
      FILESELECT path$+"*.IFS","",file$
      OPEN "O",#1,file$
      PRINT #1,t%;",";iter
      FOR j%=1 TO t%
        PRINT #1,a(j%);",";b(j%);",";c(j%);",";d(j%);",";e(j%);",";f(j%);",";p(j%)
      NEXT j%
      PRINT #1,@strip$(file$)
      CLOSE #1
    CASE 3
      FILESELECT "\*.PIC","",file$
      IF file$<>""
        BSAVE file$,XBIOS(2),32000
      ENDIF
    CASE 4
      abort!=TRUE
    CASE 5
      FILESELECT path$+"*.IFS","",file$
      IF file$<>""
        OPEN "I",#1,file$
        INPUT #1,t%,iter
        FOR i%=1 TO t%
          INPUT #1,a(i%),b(i%),c(i%),d(i%),e(i%),f(i%),p(i%)
        NEXT i%
        CLOSE #1
        file$=@strip$(file$)
        CLS
        @init
      ENDIF
    CASE 6
      CLS
      REPEAT
        PRINT AT(1,1);"Anzahl Funktionen :";
        FORM INPUT 2,a$
        t%=VAL(a$)
      UNTIL t%>0 AND t%<=maxtrans%
      FOR i%=1 TO t%
        PRINT AT(1,2);"Drehwinkel(";i%;") :";
        INPUT phi(i%)
        PRINT AT(1,3);"Faktor X(";i%;")   :";
        INPUT s(i%)
        PRINT AT(1,4);"Faktor Y(";i%;")   :";
        INPUT t(i%)
        PRINT AT(1,5);"dx(";i%;")         :";
        INPUT e(i%)
        PRINT AT(1,6);"dy(";i%;")         :";
        INPUT f(i%)
        @hin
      NEXT i%
      CLS
      @init
    CASE 7
      SGET s$
      change!=FALSE
      REPEAT
        CLS
        PRINT AT(1,1);"pF Ì      X*    Y*    Îx    Îy    p   q"
        FOR i%=1 TO t%
          @rueck
          PRINT AT(1,1+i%);"p";STR$(i%,1);"q";STR$(phi(i%),6,2);STR$(s(i%),6,2);STR$(t(i%),6,2);
          PRINT STR$(e(i%),6,2);STR$(f(i%),6,2);STR$(p(i%),6,2)
        NEXT i%
        REPEAT
          MOUSE mx,my,mk
        UNTIL MOUSEK
        IF mk=1
          i%=MIN(MAX(1,my/charh%),t%)
          j%=MIN(1+(mx/charw%-2)/6,5)
          PRINT AT(2+(j%-1)*6,1+i%);"      ";
          PRINT AT(2+(j%-1)*6,1+i%);
          SELECT j%
          CASE 1
            phi(i%)=@in(phi(i%))
          CASE 2
            s(i%)=@in(s(i%))
          CASE 3
            t(i%)=@in(t(i%))
          CASE 4
            e(i%)=@in(e(i%))
          CASE 5
            f(i%)=@in(f(i%))
          ENDSELECT
          @hin
          change!=TRUE
        ENDIF
      UNTIL mk=2
      IF change!
        CLS
        @init
      ELSE
        SPUT s$
      ENDIF
      DELAY 1
    ENDSELECT
  ELSE
    DELAY 1
  ENDIF
  DEFMOUSE 0
RETURN
'
' Eingabefunktion (simpel, sorry!)
FUNCTION in(a)
  LOCAL a$
  a$=STR$(a,6,2)
  FORM INPUT 6 AS a$
  RETURN VAL(a$)
ENDFUNC
'
PROCEDURE hin
  a(i%)=s(i%)*COSQ(phi(i%))
  b(i%)=-s(i%)*SINQ(phi(i%))
  c(i%)=t(i%)*SINQ(phi(i%))
  d(i%)=t(i%)*COSQ(phi(i%))
RETURN
'
PROCEDURE rueck
  phi(i%)=ATN(-b(i%)/(a(i%)+1.0E-98))*180/PI
  a=a(i%)/(COSQ(phi(i%))+1.0E-98)
  b=-b(i%)/(SINQ(phi(i%))+1.0E-98)
  IF ABS(a)>ABS(b)
    s(i%)=a
  ELSE
    s(i%)=b
  ENDIF
  a=d(i%)/(COSQ(phi(i%))+1.0E-98)
  b=c(i%)/(SINQ(phi(i%))+1.0E-98)
  IF ABS(a)>ABS(b)
    t(i%)=a
  ELSE
    t(i%)=b
  ENDIF
RETURN
'
FUNCTION strip$(in$)
  LOCAL i%
  i%=RINSTR(in$,"\")
  path$=LEFT$(in$,i%)
  in$=MID$(in$,i%+1)
  RETURN in$
ENDFUNC
'
PROCEDURE init
  PRINT AT(1,1);"Moment..."
  ARRAYFILL wahr(),1       ! default p is 1
  p1=0
  FOR i%=1 TO t%
    p(i%)=0.01+ABS(a(i%)*d(i%)-b(i%)*c(i%))    ! =det(i%)
    p1=p1+p(i%)
  NEXT i%
  p=0
  FOR i%=1 TO t%
    p(i%)=p(i%)/p1
    FOR j%=p*100 TO (p+p(i%))*100
      wahr(j%)=i%
    NEXT j%
    p=p+p(i%)
  NEXT i%
  '
  ' 1500mal rechnen um die Grenzen zu ermitteln
  x=0
  y=0
  xmi=100000000
  xma=-100000000
  ymi=xmi
  yma=xma
  FOR i%=1 TO 1500
    p=wahr(RND*100)
    nx=a(p)*x+b(p)*y+e(p)
    ny=c(p)*x+d(p)*y+f(p)
    x=nx
    y=ny
    IF i%>30
      xmi=MIN(xmi,x)
      xma=MAX(xma,x)
      ymi=MIN(ymi,y)
      yma=MAX(yma,y)
    ENDIF
  NEXT i%
  '
  ' xs,ys sind Skalenfaktoren
  xs=0.95*maxx%/(xma-xmi+1.0E-98)
  ys=0.95*maxy%/(yma-ymi+1.0E-98)
  '
  IF (xma-xmi)>100000
    abort!=TRUE
  ENDIF
  '
  x=0
  y=0
  '
  @farbe(0)
  CLS
RETURN
'
'
PROCEDURE farbe(art%)
  IF maxfarb%>2
    red%=MAX(1,RANDOM(7))
    green%=RANDOM(7)
    blue%=RANDOM(7)
    VSETCOLOR 1,red%,green%,blue%
    FOR i%=2 TO maxfarb%
      IF art%<>0
        r%=i%
        VSETCOLOR i%,r%,r%/red%*green%,r%/red%*blue%
      ELSE
        VSETCOLOR i%,red%,green%,blue%
      ENDIF
    NEXT i%
  ENDIF
RETURN
