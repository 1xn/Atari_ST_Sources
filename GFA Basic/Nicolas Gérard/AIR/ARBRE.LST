mise.en.route
> PROCEDURE mise.en.route
  VOID XBIOS(5,L:-1,L:-1,0)
  SETCOLOR 0,4,5,6
  SETCOLOR 15,3,2,1
  SETMOUSE 160,190
  arbre
  REPEAT
    MOUSE nx(0),ny(0),k
    equilibre
    trace
  UNTIL MOUSEK
  EDIT
RETURN
> PROCEDURE arbre
  m=15                   ! nombre de fragments
  DIM ax(m),ay(m),nx(m),ny(m)
  DIM angle(m),taille(m),rigidite(m),cohesion(m),direction(m),mouvement(m)
  LET direction.vent=180
  force.vent=0.008
  LET direction.gravite=270
  force.gravite=0.002
  force.souris=0.2
  usure=0.92
  taux=10               !pourcentage d'irr‚gularit‚
  angle.arbre=24
  taille=200/SQR(m)
  cohesion=0.8
  rigidite=0.008
  LET direction(0)=90-angle.arbre
  signe=1
  nn=1
  FOR n=1 TO m
    IF nn=n
      MUL nn,2
      MUL taille,0.9
      MUL cohesion,0.25
      MUL rigidite,4
    ENDIF
    MUL signe,-1
    alea=RANDOM(angle.arbre/100*taux*2)-angle.arbre/100*taux
    angle(n)=angle.arbre*signe+alea
    alea=RANDOM(taille/100*taux*2)-taille/100*taux
    taille(n)=taille+alea
    alea=RANDOM(rigidite/100*taux*12)-rigidite/100*taux
    rigidite(n)=rigidite+alea
    alea=RANDOM(cohesion/100*taux*12)-cohesion/100*taux
    cohesion(n)=cohesion+alea
    LET direction(n)=90
    mouvement(n)=0
  NEXT n
RETURN
> PROCEDURE trace
  FOR n1=1 TO m
    n0=FIX(n1/2)
    COLOR 0
    LINE ax(n0),ay(n0),ax(n1),ay(n1)
    COLOR 1
    LINE nx(n0),ny(n0),nx(n1),ny(n1)
  NEXT n1
  SWAP ax(),nx()
  SWAP ay(),ny()
RETURN
> PROCEDURE equilibre
  rayon=SQR((ax(1)-nx(0))*(ax(1)-nx(0))+(ay(1)-ny(0))*(ay(1)-ny(0)))
  IF SGN(ay(1)-ny(0))<0
    LET direction.souris=DEG(ACOS((ax(1)-nx(0))/rayon))
  ELSE
    LET direction.souris=360-DEG(ACOS((ax(1)-nx(0))/rayon))
  ENDIF
  angle.souris=direction.souris-direction(1)
  n2=2
  FOR n1=1 TO m
    n0=FIX(n1/2)
    angle=direction(n0)-direction(n1)
    modulo
    impulsion=-(angle(n1)-angle)*cohesion(n1)
    FOR n2=n2 TO n2+1
      IF n2<=m
        angle=direction(n1)-direction(n2)
        modulo
        ADD impulsion,(angle(n2)-angle)*cohesion(n2)
      ENDIF
    NEXT n2
    angle=direction.vent-direction(n1)
    modulo
    ADD impulsion,angle*force.vent*rigidite(n1)
    angle=direction.gravite-direction(n1)
    modulo
    ADD impulsion,angle*force.gravite*rigidite(n1)
    ADD impulsion,angle.souris*force.souris*rigidite(n1)
    mouvement(n1)=mouvement(n1)*usure+impulsion
    LET direction(n1)=(direction(n1)+360+mouvement(n1)) MOD 360
    nx(n1)=nx(n0)+taille(n1)*COSQ(direction(n1))
    ny(n1)=ny(n0)-taille(n1)*SINQ(direction(n1))
  NEXT n1
RETURN
> PROCEDURE modulo
  IF ABS(angle)>180
    angle=angle+360*SGN(angle)
  ENDIF
RETURN
