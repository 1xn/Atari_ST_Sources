' ***************************************************************************
' As an addition to the PROTOCOL routines on Ictari disk #39
' here routines to handle BubbleGEM (a small system enhancement
' to display (help) textballoons by Thomas Much).
' BubbleGEM can be found on Atari Computing Readers Disk #5
' If you think BubbleGEM offers a nice feature, but don't want
' your program to be dependent on it's presence, please have a
' look at the BALLOON.LST listing.
'
' Theo Ros  11/06/1997
' ***************************************************************************
'
OPTION BASE 0
DEFWRD "a-z"
DEFLIST 4
'
DIM msg(7)              ! standard AES messagebuffer
ap_id=APPL_INIT()       ! get application ID (handle) for this program
IF @bubble_find
  ~@bubble_show(MOUSEX,MOUSEY,"This is a|BubbleGEM|textballoon")
ELSE
  ALERT 1,"Sorry,|BubbleGEM not installed.. ",1," Ok ",a
  ' use your own helptext routine like procedure balloon
ENDIF
EDIT
'
' ***************************************************************************
' BubbleGEM routines
' ***************************************************************************
'
> FUNCTION bubble_find
' function to see if BubbleGEM is present
'
bubble_id=APPL_FIND("BUBBLE  ")
IF bubble_id=>0
  bubblebuf%=MALLOC(256)
  IF bubblebuf%>0
    RETURN TRUE
  ENDIF
ENDIF
RETURN FALSE
ENDFUNC
> FUNCTION bubble_show(bx,by,bubbletext$)
' this function lets BubbleGEM display your message
IF bubble_id=>0
IF bubblebuf%>0
  CHAR{bubblebuf%}=LEFT$(bubbletext$,255)
  msg(0)=&HBABB                 ! BUBBLEGEM_SHOW
  msg(1)=ap_id                  ! appl_id of your program
  msg(2)=0
  msg(3)=bx                     ! (mouse) x
  msg(4)=by                     ! (mouse) y
  LONG{V:msg(5)}=bubblebuf%     ! text in msg(5) and (6)
  msg(7)=0
  ~APPL_WRITE(bubble_id,16,V:msg(0))
  ' BubbleGEM returns a message BUBBLEGEM_ACK (&HBABC)
  ' if text is displayed. The caller can safely delete
  ' the textbuffer after this
  RETURN TRUE
ENDIF
ENDIF
RETURN FALSE
ENDFUNC
> FUNCTION bubble_ack
' after text is displayed with @bubble_show()
' BubbleGEM returns a message &HBABC in msg(0)
' If you like, you can now delete or update the
' text in the bubblebuf% buffer
'
IF msg(0)=&HBABC        ! BUBBLEGEM_ACK
' bufferaddress bubblebuff% in msg(5) and msg(6)
' ~MFREE(LONG{V:msg(5)})
ENDIF
ENDFUNC
> FUNCTION bubble_get_time
' returns the minimum displaytime
' for BUBBLEGEM in milliseconds
$F%
LOCAL bub%
bub%=@cookie_find("BHLP")
IF bub%>0
RETURN CARD(SWAP(bub%))
ENDIF
RETURN FALSE
ENDFUNC
> FUNCTION bubble_set_time(milsecs%)
' sets the minimum displaytime for BubbleGEM
' in milliseconds. Returns the PREVIOUS setting.
$F%
LOCAL bub%
bub%=@cookie_update("BHLP",SWAP(milsecs%))
IF bub%
RETURN CARD(SWAP(bub%))
ENDIF
RETURN FALSE
ENDFUNC
'
' ***************************************************************************
' Cookie functions from the COOKIE.LST listing
' ***************************************************************************
'
> FUNCTION cookie_find(id$)
' this function you should already know. It looks for a certain
' cookie held in id$.
' --> id$ :  4 byte cookie (like 'NVDI')
' <--     :  0 : cookiejar not present in this system
'           -1 : cookiejar exists, cookie id$ not found
'           >0 : cookie id$ 's value
'
' examples:
' ret%=@cookie_find("_MCH")          ! &H10010 -> STe
' ret%=AND(@cookie_find("_SND"),10)  ! DMA-sound possible ?
' ret%=@cookie_find("_FLK")          ! GEMDOS function 92 flock() present
' ret%=@cookie_find("_NET")          ! network installed ?
' ret%=@cookie_find("_CPU")+68000    ! 68xxx processor
' ret%=@cookie_find("_FSM")          ! FSM-Gdos
' ret%=@cookie_find("_FNT")          ! FSM-Gdos-fonts
' ret%=@cookie_find("NVDI")          ! NVDI installed
' ret%=@cookie_find("EdDI")          ! VDI-Enhancer installed
' ret%=AND(SHR(@cookie_find("_FDC"),24),256) ! 0-> no HD-disks
'                                    !         1-> HighDensity  1.44 Mb
'                                    !         2-> ExtraDensity 2.88 Mb
' ret%=SHR(@cookie_find("_FPU"),16)  ! 0-> no coprocessor
'     1-> Atari FPU     2-> LineF FPU     3-> Atari+LineF FPU
'     4-> 68881         5-> Atari+68881   6-> 68882
'     7-> Atari+68882   8-> 68040         9-> Atari+68040
'
$F%
LOCAL c_ptr%,cname%,c_val%
c_ptr%=LPEEK(&H5A0)            ! get address of cookie jar
IF AND(c_ptr%>0,EVEN(c_ptr%))
REPEAT
cname%=LPEEK(c_ptr%)
c_val%=LPEEK(c_ptr%+4)
EXIT IF cname%=0           ! end of cookie list
ADD c_ptr%,8
UNTIL MKL$(cname%)=id$       ! cookie found?
IF cname%
RETURN c_val%              ! return its value
ENDIF
RETURN -1                    ! jar exists, cookie not found
ENDIF
RETURN 0                       ! error: cookiejar does not exist
ENDFUNC
> FUNCTION cookie_update(id$,newval%)
' function changes the VALUE of a cookie
$F%
LOCAL c_ptr%,cname%,c_val%
c_ptr%=LPEEK(&H5A0)            ! get address of cookie jar
IF AND(c_ptr%>0,EVEN(c_ptr%))
REPEAT
cname%=LPEEK(c_ptr%)
EXIT IF cname%=0           ! end of cookie list
ADD c_ptr%,8
UNTIL MKL$(cname%)=id$       ! cookie found?
IF cname%
c_val%=LPEEK(c_ptr%-4)
LPOKE c_ptr%-4,newval%
RETURN c_val%              ! return PREVIOUS value
ENDIF
ENDIF
RETURN FALSE                   ! jar exists, cookie not found
ENDFUNC
