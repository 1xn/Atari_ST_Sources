' Functions below make sure GFA's commands SCRP_READ and
' SCRP_WRITE work correctly, so you can make use of the
' GEM-clipboard.
'
' Theo Ros, august 1996
'
> FUNCTION clipbrd_setup$
LOCAL cb$,e%                ! combined function. clipbrd_getpath() and
CLR cb$                     ! clipbrd_setpath() can also be used separately
IF @clipbrd_getpath(cb$)    ! GEM-clipboard already exists?
  IF FSFIRST(cb$+"*.*",63)  ! -34=path not found, -36 access denied
    CLR cb$
  ENDIF
ENDIF
IF cb$=""                   ! no clipboard, or error to path, so:
  ~@clipbrd_setpath(cb$)    ! create a clipboard. (cb="" --> default)
  e%=FSFIRST(cb$+"*.*",63)
  IF e%=-34                 ! path not found
    cb$=LEFT$(cb$,LEN(cb$)-1) ! remove last backslash for MKDIR
    MKDIR cb$               ! create path
    cb$=cb$+"\"             ! add backslash again..
    ' alternatively, you could use:
    ' cb$=cb$+CHR$(0)           ! add nullbyte (backslash can stay)
    ' ~GEMDOS(&H39,L:(V:cb$))   ! Dcreate()
    ' cb$=LEFT$(cb$,LEN(cb$)-1) ! remove nullbyte
  ENDIF
ENDIF
RETURN cb$
ENDFUNC
'
> FUNCTION clipbrd_getpath(VAR cpath$)
LOCAL count
cpath$=SPACE$(160)
~SCRP_READ(cpath$)
'  or use alternative:
'  GCONTRL(1)=0
'  GCONTRL(3)=1
'  ADDRIN(0)=V:cpath$
'  GEMSYS 80
'
count=INSTR(cpath$,CHR$(0))
IF count
cpath$=LEFT$(cpath$,count-1)
ENDIF
IF cpath$>""
cpath$=@clipbrd_correct$(cpath$)    ! make sure it is allright
RETURN TRUE
ENDIF
RETURN FALSE
ENDFUNC
'
> FUNCTION clipbrd_setpath(VAR cpath$)
IF cpath$=""                ! use default? (bootdrive+"\:CLIPBRD\")
cpath$="CLIPBRD"
ENDIF
cpath$=@clipbrd_correct$(cpath$)
~SCRP_WRITE(cpath$)
'  alternatively you could use:
'  cpath$=cpath$+CHR$(0)   ! C-string, so add nullbyte
'  GCONTRL(1)=0
'  GCONTRL(3)=1
'  ADDRIN(0)=V:cpath$
'  GEMSYS 81
'  cpath$=LEFT$(cpath$,LEN(cpath$)-1) ! remove nullbyte
'
RETURN (GINTOUT(0)<>0)      ! TRUE=ok, FALSE=error
ENDFUNC
'
> FUNCTION clipbrd_correct$(cb$)
WHILE LEFT$(cb$)="\"        ! remove leading backslash(es)
cb$=RIGHT$(cb$,LEN(cb$)-1)
WEND
IF MID$(cb$,2,1)<>":"       ! no drive?
cb$=CHR$(DPEEK(&H446)+65)+":\"+cb$    ! pick bootdrive
ENDIF
IF RIGHT$(cb$)<>"\"         ! last character should be a backslash
cb$=cb$+"\"
ENDIF
RETURN UPPER$(cb$)
ENDFUNC
'
> FUNCTION clipbrd_clear
LOCAL cb$
IF @clipbrd_getpath(cb$)    ! GEM-clipboard exists?
' if MagiC version 2.0 or better is loaded, you could use:
' GEMSYS 82    scrp_clear()
'
WHILE EXIST(cb$+"SCRAP.*")
KILL cb$+"SCRAP.*"      ! delete all 'SCRAP'-files
WEND
RETURN TRUE
ENDIF
RETURN FALSE
ENDFUNC
'
> FUNCTION clipbrd_remove
LOCAL cb$
IF @clipbrd_getpath(cb$)    ! GEM-clipboard exists?
WHILE EXIST(cb$+"*.*")    ! delete EVERY file
KILL cb$+"*.*"
WEND
cb$=LEFT$(cb$,LEN(cb$)-1) ! remove backslash
RMDIR cb$                 ! remove directory
' alternatively, you could use:
' cb$=cb$+CHR$(0)         ! add nullbyte (backslash can stay)
' ~GEMDOS(&H3A,L:(V:cb$)) ! Ddelete()
'
~SCRP_WRITE(CHR$(0))      ! clear clipboard_pathname
RETURN TRUE
ENDIF
RETURN FALSE
ENDFUNC
