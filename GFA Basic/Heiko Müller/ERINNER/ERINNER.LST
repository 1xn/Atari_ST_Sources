'
'            START.PRG   +   ERINNER.PRG   +   ERINNER.DAT
'
' Programm, das beim Computerstart automatisch wichtige Daten in Erinnerung
' rufen soll. Mit diesem Programm werden die dazugehîrigen Daten editiert.
' Insgesamt sind 300 Daten vorgesehen.
'
'
' programmiert von Heiko MÅller, Mozartstraûe 17, 2905 Edewecht
'
version$="10.11.1989" ! Datum der letzten Bearbeitung
'
CLS
inv_ein$=CHR$(27)+"p"   ! Definition der Kommandos zum Invertieren der Texte
inv_aus$=CHR$(27)+"q"
'
schluss%=300
DIM erinner$(schluss%)
aktuell%=1                            ! aktuelle Stringnummer (invertiert)
geaendert!=FALSE                      ! Flag zum Anzeigen von énderungen
'
PRINT inv_ein$;
PRINT "                 Programm zum Editieren der Erinnerungsdaten"+SPACE$(100)
PRINT inv_aus$
PRINT " ein Public-Domain-Programm aus Edewecht  -  Version vom ";version$
PRINT
PRINT
PRINT " Mit diesem Programm lassen sich die Daten der Datei ERINNER.DAT editieren."
PRINT
PRINT " Die folgenden drei Programme gehîren zusammen:"
PRINT
PRINT "    ERINNER.DAT       Daten, an die erinnert werden soll (bis zu 300 Daten)"
PRINT "    ERINNER.PRG       dieses Programm zum Editieren der Daten"
PRINT "    START.PRG         Zeitstell- und Termin-Erinnerungsprogramm fÅr"
PRINT "                      den AUTO-Ordner"
PRINT
PRINT
PRINT
PRINT " programmiert in GFA-BASIC von Heiko MÅller, Mozartstraûe 17, 2905 Edewecht"
PRINT AT(2,24);"Daten werden geladen"
'
GOSUB liste_von_disk
'
PRINT AT(2,24);SPACE$(65)+"Taste"
'
REPEAT                                ! Warteschleife, falls jemand den
  EXIT IF MOUSEK                      ! Titel lesen mîchte...
UNTIL INKEY$<>""
'
GOSUB liste_editieren                 ! Das ist das Hauptprogramm
'
PROCEDURE quicksort(str.arr%,l%,r%)
  LOCAL x$
  IF l%>0 AND r%>0
    SWAP *str.arr%,erinner$()
    @quick(l%,r%)
    SWAP *str.arr%,erinner$()
  ENDIF
RETURN
'
PROCEDURE quick(l%,r%)
  LOCAL ll%,rr%
  ll%=l%
  rr%=r%
  x$=erinner$((l%+r%)/2)
  REPEAT
    WHILE erinner$(l%)<x$
      INC l%
    WEND
    WHILE erinner$(r%)>x$
      DEC r%
    WEND
    IF l%<=r%
      SWAP erinner$(l%),erinner$(r%)
      INC l%
      DEC r%
    ENDIF
  UNTIL l%>r%
  IF ll%<r%
    @quick(ll%,r%)
  ENDIF
  IF l%<rr%
    @quick(l%,rr%)
  ENDIF
RETURN
'
'
PROCEDURE liste_von_disk
  IF EXIST("erinner.dat")
    OPEN "I",#1,"erinner.dat"
    FOR i%=0 TO schluss%
      erinner$(i%)=INPUT$(CVI(INPUT$(2,#1)),#1)
    NEXT i%
    CLOSE #1
    n%=VAL(erinner$(0))  ! Anzahl der Daten
  ENDIF
RETURN
'
' *****************************************************************************
'
PROCEDURE speichern                        ! Liste speichern
  ALERT 2,"Daten speichern?",1," ja |nein",antw%
  IF antw%=1
    erinner$(0)=STR$(n%)
    OPEN "O",#1,"erinner.dat"
    FOR i%=0 TO schluss%
      PRINT #1,MKI$(LEN(erinner$(i%)));erinner$(i%);
    NEXT i%
    CLOSE #1
  ENDIF
  geaendert!=FALSE
RETURN
'
'
PROCEDURE liste_zeigen(s%)
  CLS
  FOR i%=0 TO 19
    IF (i%+s%<=n%) AND n%>0
      PRINT AT(5,i%+2);RIGHT$(erinner$(i%+s%),LEN(erinner$(i%+s%))-2);
    ENDIF
  NEXT i%
  DEFLINE 1,1,0,0
  TEXT 10,375,"lîschen     einfÅgen     Ende      verÑndern  speichern                 "
  TEXT 10,390," [Del]       [Ins]       [Esc]      [Help]     [Undo]"
  LINE 0,360,639,360
  abstand%=640/7
  FOR i%=abstand%+3 TO 640 STEP abstand%
    LINE i%,360,i%,399
  NEXT i%
RETURN
'
PROCEDURE liste_editieren
  GOSUB liste_zeigen(aktuell%)
  position%=2                       ! y-Position des invertierten Strings
  IF LEN(erinner$(aktuell%))
    PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
  ENDIF
  '
  DO
    i$=INKEY$
    a$=RIGHT$(i$,1)
    IF INSTR("HPRba0G7"+CHR$(27),a$)
      taste%=INSTR("HPRbaG7"+CHR$(27),a$)
      '      PRINT AT(30,22);"                       "
      ON taste% GOSUB hoch,runter,del,ins,help,speichern,clr,sh.clr,esc
      '
      '        dies sind die Bezeichnungen der getippten Tasten
      '
    ENDIF
    MOUSE x%,y%,k%
    IF k% AND y%>360
      mauswahl%=INT(x%/abstand%)+1
      IF mauswahl%<4
        REPEAT
        UNTIL MOUSEK=0
      ELSE
        PAUSE 2
      ENDIF
      ON mauswahl% GOSUB del,ins,esc,help,speichern,runter,hoch
    ENDIF
  LOOP
  '
RETURN
'
PROCEDURE daten_rein
  CLS
  PRINT AT(2,2);inv_ein$;"Eingabe von Merkdaten:";inv_aus$
  datum$=""
  PRINT AT(2,5);"Bitte Datum eingeben:"
  REPEAT
    PRINT AT(2,7);"Tag  : ";
    FORM INPUT 2,d1$
  UNTIL VAL(d1$)>0 AND VAL(d1$)<32
  IF LEN(d1$)=1
    d1$="0"+d1$
  ENDIF
  PRINT AT(2,7);"Tag  : ";d1$
  REPEAT
    PRINT AT(2,8);"Monat: ";
    FORM INPUT 2,d2$
  UNTIL VAL(d2$)>0 AND VAL(d2$)<13
  IF LEN(d2$)=1
    d2$="0"+d2$
  ENDIF
  PRINT AT(2,8);"Monat: ";d2$
  datum$=d1$+"."+d2$+"."
  PRINT AT(2,11);"erinnern an..."
  PRINT AT(2,13);datum$;": ";
  FORM INPUT 65,merk$
  '
  erinner$=datum$+"  "+merk$
  erinner$=d2$+erinner$           ! Monat vorne zum richtigen Sortieren
  geaendert!=TRUE
RETURN
'
PROCEDURE hoch
  IF n%>0
    IF k%>1
      GOSUB clr
    ELSE
      PRINT AT(5,position%);RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);
      IF aktuell%>1
        DEC aktuell%
        DEC position%
        IF position%<2 AND aktuell%>18
          position%=21
          GOSUB liste_zeigen(aktuell%-19)
        ENDIF
      ENDIF
      PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
      '
      ' ###############################
      ' PRINT AT(30,22);"a=";aktuell%''"p=";position%'"n%=";n%'''
      ' ###############################
      '
    ENDIF
  ENDIF
RETURN
'
PROCEDURE runter
  IF n%>0
    IF k%>1
      GOSUB sh.clr
    ELSE
      PRINT AT(5,position%);RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);
      IF aktuell%<n%
        INC aktuell%
        INC position%
        IF position%>21
          position%=2
          GOSUB liste_zeigen(aktuell%)
        ENDIF
      ENDIF
      PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
      '
      ' ###############################
      '    PRINT AT(30,22);"a=";aktuell%''"p=";position%'"n%=";n%'''
      ' ###############################
      '
    ENDIF
  ENDIF
RETURN
'
PROCEDURE del        ! Lîschen von Daten
  IF n%>0
    al$=MID$(erinner$(aktuell%),3,30)+"| |Eintrag lîschen?"
    ALERT 0,al$,1," ja |nein",antw%
    IF antw%=1
      erinner$(aktuell%)=erinner$(n%)
      erinner$(n%)=""
      DEC n%
      IF aktuell%>=n%
        DEC aktuell%
      ENDIF
      '
      geaendert!=TRUE
      @quicksort(*erinner$(),1,n%)
      '
      GOSUB liste_zeigen(INT(aktuell%/20)*20+1)
      position%=aktuell%+1
      WHILE position%>21
        SUB position%,20
      WEND
      IF LEN(erinner$(aktuell%))
        PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
      ENDIF
      '
    ENDIF
  ENDIF
RETURN
'
PROCEDURE ins        ! HinzufÅgen neuer Daten
  IF n%<schluss%
    INC n%
    GOSUB daten_rein
    erinner$(n%)=erinner$
    @quicksort(*erinner$(),1,n%)
    aktuell%=0
    WHILE datum$<>MID$(erinner$(aktuell%),3,6)
      INC aktuell%
    WEND
    GOSUB liste_zeigen(INT(aktuell%/20)*20+1)       ! Marke1
    position%=aktuell%+1
    WHILE position%>21
      SUB position%,20
    WEND
    PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
    '
  ELSE
    ALERT 0,"Speicher voll !",1,"naja",antw%
  ENDIF
RETURN
'
PROCEDURE help                  ! Daten verÑndern
  IF n%>0
    CLS
    PRINT AT(2,5);RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2)
    PRINT
    PRINT " Bitte geÑnderten Text eingeben (Datum lÑût sich nicht Ñndern):"
    PRINT AT(10,9);
    aender$=MID$(erinner$(aktuell%),11,60)
    FORM INPUT 60 AS aender$
    erinner$(aktuell%)=LEFT$(erinner$(aktuell%),10)+aender$
    GOSUB liste_zeigen(INT(aktuell%/20)*20+1)
    position%=aktuell%+1
    WHILE position%>21
      SUB position%,20
    WEND
    PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
    '
    ' ###############################
    '  PRINT AT(30,22);"a=";aktuell%''"p=";position%'"n%=";n%'''
    ' ###############################
    '
  ENDIF
RETURN
'
PROCEDURE clr       ! an den Anfang
  IF n%>0
    PRINT AT(5,position%);RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);
    aktuell%=1
    position%=2
    GOSUB liste_zeigen(aktuell%)
    PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
    '  PRINT AT(30,22);"a=";Aktuell%''"p=";Position%'"n%=";n%'''
  ENDIF
RETURN
'
PROCEDURE sh.clr    ! ans Ende
  IF n%>0
    PRINT AT(5,position%);RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);
    aktuell%=INT(n%/20)*20+1
    position%=2
    GOSUB liste_zeigen(aktuell%)
    PRINT AT(5,position%);inv_ein$;RIGHT$(erinner$(aktuell%),LEN(erinner$(aktuell%))-2);inv_aus$;
    '  PRINT AT(30,22);"a=";Aktuell%''"p=";Position%'"n%=";n%'''
  ENDIF
RETURN
'
PROCEDURE esc
  ALERT 2,"Programm wirklich beenden?",1," ja |nein",antw%
  PAUSE 20
  IF antw%=1
    IF geaendert!
      GOSUB speichern
    ENDIF
    EDIT
  ENDIF
RETURN
