'
'         CIRC&SPH.BCC\SPH_CODE\A-SPH1X.LST  (Draw sphere about X axis)
'
' +----------------------------------------------------------------------------+
' |         This routine was written by Professor of VIRTUAL INFINITY,         |
' |      and is part of the "Programmer`s Circle & Sphere Routine Library"     |
' |                                                                            |
' |      The routine has been implemented in GFA 3.5e & ST low resolution,     |
' |  and may be re-implemented in other languages & resolutions **providing**  |
' | you have read & agree with the conditions listed in CIRC&SPH.BCC\INTRO.TXT |
' +----------------------------------------------------------------------------+
'
' A sphere can be thought of as a number of 'rings', all on parallel YZ planes
' about the X axis.  This routine uses the "angle method" to loop the angle
' (theta) through 2*PI, plotting a point on each 'ring' at each increment of
' theta.  The back half of the sphere is drawn first, followed by the front half
' on top, as this is considered to render(draw) the clearest image.
'
' At each 'ring', at each theta, the respective Y and Z radiuses are calculated
' from the ring`s respective X position using the "axis method".  From these
' radiuses the Y and Z components can be calculated using the "angle method".
'
' This routine`s calculation is **entirely** realtime.
'
CLS
set_palette
'
x_abs&=160                    ! Absolute horizontal origin
y_abs&=100                    ! Absolute vertical origin
z_maxrad&=20                  ! Z radius at "absolute ring"
y_maxrad&=60                  ! Y radius at "absolute ring"
x_half&=6                     ! Number of rings left|right absolute }   x_
x_dist&=10                    ! X distance between rings            } maxrad&
yz_step=0.03                  ! Theta increment step
'
x_total&=x_half&*2+1          ! [Total number of rings]
x_maxrad&=x_half&*x_dist&     ! [X radius]
'
FOR yz_theta=-3*PI/2 TO PI/2 STEP yz_step
  x_count&=-x_half&
  WHILE x_count&<=+x_half&
    x_or&=x_abs&+x_count&*x_dist&
    '
    x_sintheta=SIN(ACOS(x_count&/x_half&))
    z_rad&=x_sintheta*z_maxrad&
    y_rad&=x_sintheta*y_maxrad&
    '
    z&=COS(yz_theta)*z_rad&
    y&=SIN(yz_theta)*y_rad&
    col&=COS(yz_theta)*4
    clip(x_or&+z&,y_abs&+y&,4+col&)
    '
    INC x_count&
  WEND
NEXT yz_theta
'
PRINT CHR$(7);
~INP(2)
EDIT
'
'
'
PROCEDURE clip(x&,y&,col&)
  IF x&>=0 AND x&<320 AND y&>=0 AND y&<200
    PSET x&,y&,col&
  ENDIF
RETURN
'
'
'
PROCEDURE set_palette
  LOCAL log&,phy&
  SETCOLOR 0,&H0
  SETCOLOR 15,&H333
  RESTORE color_data
  FOR log&=1 TO 7
    READ phy&
    SETCOLOR log&,phy&
  NEXT log&
RETURN
'
color_data:
DATA &111,&222,&333,&444,&555,&666,&777
