'
'           CIRC&SPH.BCC\CIRCLES\C-CIRC2.LST  (Draw circle by Y axis)
'
' +----------------------------------------------------------------------------+
' |         This routine was written by Professor of VIRTUAL INFINITY,         |
' |      and is part of the "Programmer`s Circle & Sphere Routine Library"     |
' |                                                                            |
' |      The routine has been implemented in GFA 3.5e & ST low resolution,     |
' |  and may be re-implemented in other languages & resolutions **providing**  |
' | you have read & agree with the conditions listed in CIRC&SPH.BCC\INTRO.TXT |
' +----------------------------------------------------------------------------+
'
' This uses the "axis method" to draw a circle or ellipse at the specified
' origin with specified radiuses.  Each horizontal line is dealt with at a time,
' starting at the top of the circle (-ve Y radius) and moving down to the bottom
' (+ve Y radius).  At each horizontal line the angle is determined using inverse
' sine, followed by the X component--which is assumed to be the same in both -ve
' & +ve directions.
'
' A disadvantage of this method over the "angle method" (A-CIRC1.LST) is it`s
' screen resolution dependant, i.e. the holes it leaves!  However an advantage
' of this method ("axis method") is filled circles can easily and speedily be
' drawn (D-FILL.LST).
'
' This routine`s calculation is **entirely** realtime.
'
CLS
'
x_abs&=160                    ! Absolute horizontal origin
y_abs&=100                    ! Absolute vertical origin
x_rad&=100                    ! X radius
y_rad&=50                     ! Y radius
'
y&=-y_rad&
WHILE y&<=+y_rad&
  theta=ASIN(y&/y_rad&)
  x&=COS(theta)*x_rad&
  '
  clip(x_abs&-x&,y_abs&+y&,15)
  clip(x_abs&+x&,y_abs&+y&,15)
  '
  INC y&
WEND
'
PRINT CHR$(7);
~INP(2)
EDIT
'
'
'
PROCEDURE clip(x&,y&,col&)
  IF x&>=0 AND x&<320 AND y&>=0 AND y&<200
    PSET x&,y&,col&
  ENDIF
RETURN
