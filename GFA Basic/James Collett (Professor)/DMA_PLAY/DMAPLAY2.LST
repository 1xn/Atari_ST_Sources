' ***                             ***
' ***    LOAD AND PLAY SAMPLE     ***
' ***  PLUS 'MICROWIRE ADJUSTER'  ***
' ***      (Hit ESC To Quit)      ***
' ***  Coded By Professor In GFA  ***
' ***                             ***
'
store%=50*1024
DIM samp|(store%-1)
IF NOT @dma.found
  PRINT " THIS PROGRAM REQUIRES A DMA CHIP!!"
  ~INP(2)
ELSE
  fload$="signed_sample"             !** Sample To Load **
  dma%=&HFF8901
  OPEN "I",#1,fload$
  leng%=LOF(#1)
  CLOSE #1
  IF leng%<=store%
    PRINT " LOADING ..."
    addr%=V:samp|(0)
    BLOAD fload$,addr%
    dma.set(addr%,addr%+leng%,&H81)
    PRINT " PLAYING ..."
    SPOKE dma%,3
    microwire
    SPOKE dma%,0
  ELSE
    PRINT "ERROR: INSUFFICIENT STORAGE!!"
    ~INP(2)
  ENDIF
ENDIF
EDIT
'
'
PROCEDURE microwire
  CLS
  mast%=40
  right%=20
  left%=20
  treb%=12
  bass%=12
  dma.ctrl(mast%,left%,right%,treb%,bass%,0)
  PRINT AT(1,1);"Volume: ";mast%;" /40  HIT A FUNCTION KEY"
  PRINT AT(1,2);"Treble: ";treb%;" /12     ( pF1q - pF10q )";AT(2,3);"Bass : ";bass%;" /12"
  PRINT AT(3,4);"Left: ";left%;" /20";AT(18,4);"( pESCq to quit )";AT(2,5);"Right: ";right%;" /20"
  '
  REPEAT
    k$=INKEY$
    IF LEN(k$)=2
      opt|=ASC(RIGHT$(k$,1))
      IF opt|=59 AND mast%>0               !** dec. master **
        DEC mast%
        PRINT AT(9,1);mast%;" "
        MW_OUT &H7FF,&H4C0+mast%
      ELSE IF opt|=60 AND mast%<40         !** inc. master **
        INC mast%
        PRINT AT(9,1);mast%;" "
        MW_OUT &H7FF,&H4C0+mast%
      ELSE IF opt|=61 AND treb%>0          !** dec. treble **
        DEC treb%
        PRINT AT(9,2);treb%;" "
        MW_OUT &H7FF,&H480+treb%
      ELSE IF opt|=62 AND treb%<12         !** inc. treble **
        INC treb%
        PRINT AT(9,2);treb%;" "
        MW_OUT &H7FF,&H480+treb%
      ELSE IF opt|=63 AND bass%>0          !** dec. bass **
        DEC bass%
        PRINT AT(9,3);bass%;" "
        MW_OUT &H7FF,&H440+bass%
      ELSE IF opt|=64 AND bass%<12         !** inc. bass **
        INC bass%
        PRINT AT(9,3);bass%;" "
        MW_OUT &H7FF,&H440+bass%
      ELSE IF opt|=65 AND left%>0          !** dec. left balance **
        DEC left%
        PRINT AT(9,4);left%;" "
        MW_OUT &H7FF,&H540+left%
      ELSE IF opt|=66 AND left%<20         !** inc. left **
        INC left%
        PRINT AT(9,4);left%;" "
        MW_OUT &H7FF,&H540+left%
      ELSE IF opt|=67 AND right%>0         !** dec. right **
        DEC right%
        PRINT AT(9,5);right%;" "
        MW_OUT &H7FF,&H500+right%
      ELSE IF opt|=68 AND right%<20        !** inc. right **
        INC right%
        PRINT AT(9,5);right%;" "
        MW_OUT &H7FF,&H500+right%
      ENDIF
    ENDIF
  UNTIL k$=CHR$(27)
RETURN
'
'
'
'
FUNCTION dma.found          !~~Please refer to DMA_PLAY.TXT for a description~~
  LOCAL cookie%,dma!,label%,value%
  cookie%=LPEEK(&H5A0)
  dma!=FALSE
  IF cookie%<>0
    REPEAT
      label%=LPEEK(cookie%)
      value%=LPEEK(cookie%+&H4)
      ADD cookie%,&H8
    UNTIL label%=&H0 OR label%=&H5F534E44
    IF label%<>&H0 AND value% AND 2
      dma!=TRUE
    ENDIF
  ENDIF
  RETURN dma!
ENDFUNC
'
'
'
'
PROCEDURE dma.set(start%,stop%,rate|)
  SPOKE &HFF8901,0          !~~Please refer to DMA_PLAY.TXT for a description~~
  SPOKE &HFF8903,start% DIV &H10000
  SPOKE &HFF8905,start% DIV &H100
  SPOKE &HFF8907,start% AND &HFF
  SPOKE &HFF8908,start% DIV &H10000
  SPOKE &HFF890B,start% DIV &H100
  SPOKE &HFF890D,start% AND &HFF
  SPOKE &HFF890F,stop% DIV &H10000
  SPOKE &HFF8911,stop% DIV &H100
  SPOKE &HFF8913,stop% AND &HFF
  SPOKE &HFF8921,rate|
RETURN
'
'
'
'
PROCEDURE dma.ctrl(mast|,left|,right|,treb|,bass|,mix|)
  MW_OUT &H7FF,&H400+mix|   !~~Please refer to DMA_PLAY.TXT for a description~~
  MW_OUT &H7FF,&H440+bass|
  MW_OUT &H7FF,&H480+treb|
  MW_OUT &H7FF,&H4C0+mast|
  MW_OUT &H7FF,&H500+left|
  MW_OUT &H7FF,&H540+right|
RETURN
