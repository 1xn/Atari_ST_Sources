'
'       Exemple de STARFIELD
'       By Evil Metal of DUNE
'
'
CLEAR
CLS
'
'
@init
'
~XBIOS(5,L:-1,L:-1,0)
'
HIDEM
'
SETCOLOR 0,&H0
SETCOLOR 1,&H777
SETCOLOR 2,&H555
SETCOLOR 3,&H777
SETCOLOR 15,&H777
'
' Ne pas oublier de charger les INLINE :
'
INLINE deca%,640
INLINE v%,640
'
ndp&=80                 ! Nombre d'‚toiles.
speed%=2                ! Vitesse, pas
'
' Tableau pour les points 3d
' Ici il y a 1 optimisation : Enlever les tableaux et remplacer par des
' buffer
'
DIM x3d%(ndp&),y3d%(ndp&),z3d%(ndp&)
'
cx%=160                 ! Centre X
cy%=100                 ! Centre Y
'
' cr‚ation des coordonn‚es 3d :
'
FOR i&=1 TO ndp&
  x3d%(i&)=MUL(RAND(320)-cx%,80)
  y3d%(i&)=MUL(RAND(200)-cy%,80)
  z3d%(i&)=RANDOM(256)
NEXT i&
'
' Cr‚ation de table pour l'‚ffacement
'
table$=SPACE$(ndp&*2)
table%=V:table$
'
table2$=SPACE$(ndp&*2)
table2%=V:table2$
'
'
REPEAT
  '
  CLR i&
  CLR pos%
  '
  REPEAT
    INC i&
    '
    z3d%(i&)=SUB(z3d%(i&),speed%)               ! plus pret de nous en z
    IF z3d%(i&)<2
      z3d%(i&)=256
    ENDIF
    '
    x2d&=ADD(cx%,DIV(x3d%(i&),z3d%(i&)))        ! X/Z
    y2d&=ADD(cy%,DIV(y3d%(i&),z3d%(i&)))        ! Y/Z
    '
    IF x2d&>-1 AND x2d&<320 AND y2d&>-1 AND y2d&<200    ! Clip le point
      addecran%=ADD(CARD{ADD(deca%,ADD(x2d&,x2d&))},MUL(y2d&,160))
      addecran2%=ADD(e2%,addecran%)
      CARD{addecran2%}=CARD{ADD(v%,ADD(x2d&,x2d&))} OR CARD{addecran2%}
      CARD{table%+pos%}=addecran%
    ELSE
      CARD{table%+pos%}=0
    ENDIF
    '
    ADD pos%,2
    '
  UNTIL i&=ndp&                                 ! Fin de la boucle
  '
  SWAP e1%,e2%
  SWAP table%,table2%
  ~XBIOS(5,L:e1%,L:e1%,-1)
  '
  '
  '  CARD{&HFFFF8240}=&H777                     ! Vbl free
  VSYNC
  CARD{&HFFFF8240}=0
  '
  '
  CLR pos%
  CLR i&
  '
  REPEAT                                        ! Efface les points
    INC i&
    CARD{ADD(e2%,CARD{ADD(table%,pos%)})}=0
    ADD pos%,2
    '
  UNTIL i&=ndp&
  '
  '
UNTIL INKEY$=" "
'
@fin
'
PROCEDURE init
  '
  s%=GEMDOS(32,L:0)                     ! On passe en mode superviseur
  '
  xb%=XBIOS(2)                          ! On sauve l'adresse de l'‚cran
  rez%=XBIOS(4)                         ! On sauve la resolution
  ~XBIOS(5,L:-1,L:-1,0)                 ! On passe en basse r‚solution
  '                                     ! Buffer pour la palette
  INLINE pal%,32
  '                                     ! Il faut mieux sauvegarder ca aussi !
  INLINE sauv%,4
  LONG{sauv%}=LONG{&H484}
  '
  BMOVE &HFFFF8240,pal%,32              ! On copie la palette dans notre buffer
  '
  DIM s%(32255/4)                       ! On reserve les ecrans dans des
  DIM s1%(32255/4)                      !
  e1%=(VARPTR(s%(0))+255) AND &HFFFF00  ! On d‚finit les ‚crans … des
  e2%=(VARPTR(s1%(0))+255) AND &HFFFF00 ! variables
  '
  VSYNC                                 ! Attente de Vbl
  '
RETURN
'
PROCEDURE fin
  VSYNC                                         ! Attente de Vbl
  LONG{&H484}=LONG{sauv%}                       ! On restore les donn‚es
  ~XBIOS(5,L:xb%,L:xb%,-1)                      ! de bases
  ~XBIOS(5,L:-1,L:-1,rez%)
  BMOVE pal%,&HFFFF8240,32
  '
  VOID GEMDOS(32,L:s%)                          ! Passe en mode User
  '
  EDIT                                          ! On revient sous l'‚diteur
RETURN
'
