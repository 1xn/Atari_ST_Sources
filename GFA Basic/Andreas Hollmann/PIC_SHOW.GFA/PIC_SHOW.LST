' -----------------------------------------------------------------------------
' Program: fading of monochrome screen graphics
' Language:  GFA-Basic + Assembler
' Author:    Andreas Hollmann
' (c) MAXON Computer GmbH
' -----------------------------------------------------------------------------
RESERVE 2^16
DIM text$(100)                        ! Field for File 'PIC_SHOW.INF'
path$=FN get_path$                    ! Determine GEMDOS-Path  (Compilation!!!)
path$="a:\"                           ! absolute Path (Interpreter!!!)
get_inlines                           ! Fetch addresses of the INLINE-Blocks
IF MALLOC(-1)>32000 THEN              ! Enough memory for buffer?
  p_buffer%=MALLOC(32000)             ! then put it here
  inf_load                            ! Load 'PIC_SHOW.INF' file 
  ~MFREE(p_buffer%)                   ! Buffer-memory released again
ELSE
  PRINT AT(1,1),"Not enough main memory free !"
  ~INP(2)
ENDIF
ERASE text$()
RESERVE
END
' =============================================================================
PROCEDURE get_inlines
  INLINE p_add1fade_inl%,76
  INLINE p_add8fade_inl%,62
  INLINE p_rnd1fade_inl%,96
  INLINE p_rnd8fade_inl%,80
RETURN
PROCEDURE inf_load
  IF EXIST(path$+"pic_show.inf")      ! 'PIC_SHOW.INF' if it exists
    OPEN "i",#1,path$+"pic_show.inf"
    RECALL #1,text$(),-1,lines%       ! load in String field 
    CLOSE #1
    HIDEM
    start_show                        ! let's go
    SHOWM
  ELSE
    PRINT AT(1,1);"File 'PIC_SHOW.INF' does not exist!"
    ~INP(2)
  ENDIF
RETURN
PROCEDURE start_show
  LOCAL show_time%,offset&,repeats%
  show_time%=VAL(text$(0))              ! Time per screen
  FOR repeats%=0 TO VAL(text$(1))       ! Number of repetitions
    offset&=2
    DO
      IF EXIST(text$(offset&))          ! only when screen exists
        BLOAD text$(offset&),p_buffer%  ! load new screen
        INC offset&
        IF text$(offset&)="effect 1"    ! read fade effect 
          ~C:p_rnd8fade_inl%(L:p_buffer%,L:XBIOS(2))
        ELSE IF text$(offset&)="effect 2"
          ~C:p_rnd1fade_inl%(L:p_buffer%,L:XBIOS(2))
        ELSE IF text$(offset&)="effect 3"
          ~C:p_add8fade_inl%(L:p_buffer%,L:XBIOS(2),W:117)
        ELSE IF text$(offset&)="effect 4"
          ~C:p_add8fade_inl%(L:p_buffer%,L:XBIOS(2),W:177)
        ELSE IF text$(offset&)="effect 5"
          ~C:p_add8fade_inl%(L:p_buffer%,L:XBIOS(2),W:19)
        ELSE IF text$(offset&)="effect 6"
          ~C:p_add8fade_inl%(L:p_buffer%,L:XBIOS(2),W:15999)
        ELSE IF text$(offset&)="effect 7"
          ~C:p_add1fade_inl%(L:p_buffer%,L:XBIOS(2),L:801)
        ELSE IF text$(offset&)="effect 8"
          ~C:p_add1fade_inl%(L:p_buffer%,L:XBIOS(2),L:123457)
        ELSE IF text$(offset&)="effect 9"
          ~C:p_add1fade_inl%(L:p_buffer%,L:XBIOS(2),L:127999)
        ELSE IF text$(offset&)="effect 10"
          ~C:p_add1fade_inl%(L:p_buffer%,L:XBIOS(2),L:3789)
        ELSE                                ! unknown Effect name
          BMOVE p_buffer%,XBIOS(2),32000    ! copy single screen
        ENDIF
        INC offset&
        ~EVNT_TIMER(show_time%*1000)        ! wait a little while yet....
      ELSE
        ADD offset&,2                       ! next screen
      ENDIF
    LOOP UNTIL text$(offset&)="end"
  NEXT repeats%                             ! Repeat screen sequence
RETURN
FUNCTION get_path$                          ! establish actual GEMDOS-Path
  LOCAL drive&,p_path%
  drive&=GEMDOS(25)
  path$=SPACE$(128)
  p_path%=LONG{ARRPTR(path$)}
  ~GEMDOS(71,L:p_path%,0)                    ! 0=Driveno=actual Drive
  path$=CHR$(65+drive&)+":"+CHAR{p_path%}+"\"
  RETURN path$
ENDFUNC
