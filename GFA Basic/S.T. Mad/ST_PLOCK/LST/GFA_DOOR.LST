'
'  Rutiner f|r In/Ut hantering till RS-232 porten
'  Om man g|r egna ex. Door filer...
'
'
'  Om du f}r n}got problem s} h|r av dig till
'  SysOp p}:
'  KAOS BBS 026-653454  24h
'  eller
'  Netmail:  Danne Larsson  Nod. 2:205/218
'
' F|r att |ppna en PROCEDURE st{ll dig p} densamma och tryck HELP
'
' Lycka till........
'
GOSUB init
GOSUB program
END
> PROCEDURE program                    ! Demo p} vad man kan g|ra
  REM ** Ett litet Demo om hur man kan g|ra..
  REM
  GOSUB zend(clr$+"Vill du forts}tta"+cr$)  ! Skriv text till Konsoll/RS-232
  GOSUB zend("Y/N ?")
  REPEAT
    GOSUB getchar                           ! H{mta ett tecken fr}n Kons./RS-232
  UNTIL UPPER$(rec$)="Y" OR UPPER$(rec$)="N"
  IF UPPER$(rec$)="N" THEN
    GOSUB zend(cr$+cr$+"Slut 1")
    END
  ENDIF
  GOSUB zend(clr$+"Skriv ditt "+inv_on$+"namn"+inv_off$+" (Max 15 Tecken) :")
  GOSUB getstring(15)                       ! H{mta Max 15-Tecken i str{ngen
  namn$=rec$
  GOSUB zend(cr$+"Skriv ditt password :")
  echo=TRUE                                 ! S{tter p} * n{r n}gon utifr}n skrivar
  GOSUB getstring(10)
  passw$=rec$
  echo=FALSE
  '
  lengd$=STR$(LEN(namn$))
  GOSUB zend(cr$+cr$+cr$+"Du heter :"+namn$+"     "+lengd$)
  GOSUB zend(cr$+"Password :"+passw$)
  END
  '
RETURN
'
> PROCEDURE zend(zend$)                ! S{nd tecken till Konsoll/RS-232
  IF user!=TRUE THEN
    VOID GEMDOS(&H40,W:2,L:LEN(zend$),L:VARPTR(zend$))
  ENDIF
  PRINT zend$;
RETURN
'
> PROCEDURE getstring(length)          ! H{mtar en hel str{ng
  LOCAL ptr,duck
  ERASE rec$()
  DIM rec$(length+1)
  CLR rec$
  CLR ptr
  duck=TRUE
  IF user!=FALSE THEN
    FORM INPUT length,rec$
    GOTO labelexit
  ENDIF
  WHILE duck=TRUE
    imer=TIMER
    REPEAT
      REM H{r b|r du {ven l{gga in en funktion som k{nner av
      REM om tiden tar slut..
      '
      '  IF (PEEK(&HFFFA01) AND 2)=2                   ! Kolla om anv{ndaren har
      '    END                                         ! Lagt p} luren och i
      '  ENDIF                                         ! S} fall avsluta programmet
    UNTIL GEMDOS(18)<>FALSE OR GEMDOS(&HB)<>FALSE
    IF GEMDOS(18)<>FALSE THEN
      char=GEMDOS(3)
    ELSE
      char=INP(2)
    ENDIF
    IF char=8 THEN
      IF ptr>0 THEN
        VOID GEMDOS(4,8)
        VOID GEMDOS(4,32)
        VOID GEMDOS(4,8)
        VOID GEMDOS(2,8)
        VOID GEMDOS(2,32)
        VOID GEMDOS(2,8)
        SUB ptr,1
        rec$(ptr)=""
      ENDIF
    ENDIF
    IF char=13 THEN
      duck=FALSE
      GOSUB zend(cr$)
    ENDIF
    IF char=43 THEN
      char=32
    ENDIF
    IF char>31 AND char<128 AND ptr<=length THEN
      PRINT CHR$(char);
      IF echo=TRUE THEN
        VOID GEMDOS(4,ASC("*"))
      ELSE
        VOID GEMDOS(4,char)
      ENDIF
      rec$(ptr)=CHR$(char)
      INC ptr
    ENDIF
  WEND
  IF ptr>0 THEN
    IF ptr-1<=length
      FOR cer=0 TO ptr-1
        rec$=rec$+rec$(cer)
      NEXT cer
    ELSE
      FOR cer=0 TO length
        rec$=rec$+rec$(cer)
      NEXT cer
    ENDIF
  ENDIF
labelexit:
RETURN
'
> PROCEDURE getchar                    ! H{mtar ett tecken
  IF user!=FALSE THEN
    rec$=CHR$(GEMDOS(7))
  ELSE
    REPEAT
      '  IF (PEEK(&HFFFA01) AND 2)=2    ! Kollar om Carierdetect
      '    END                          ! F|rsvinner
      '  ENDIF
    UNTIL GEMDOS(18)<>FALSE OR GEMDOS(&HB)<>FALSE
    IF GEMDOS(&H12)=TRUE THEN
      char=GEMDOS(3)
    ELSE
      char=INP(2)
    ENDIF
    IF char=43 THEN
      char=32
    ENDIF
    rec$=CHR$(char)
  ENDIF
labelx:
RETURN
'
> PROCEDURE init                       ! Initsierar
  path$=CHR$(GEMDOS(25)+65)+":"+DIR$(GEMDOS(25)+1)+"\" ! Aktuell Path
  REM
  REM                  * L{s in DORINFO.DEF och s{tt variabler
  REM
  OPEN "I",#1,path$+"DORINFO1.DEF"
  INPUT #1,sysf$,sysl$,baud,usef$,usel$,ort$,gmod,scrl,sec,minl,reco
  CLOSE #1
  REM                  * Omvandla till Str{ngar *
  baud$=STR$(baud)
  gmod$=STR$(gmod)
  scrl$=STR$(scrl)
  sec$=STR$(sec)
  minl$=STR$(minl)
  reco$=STR$(reco)
  REM                  * S{tt grafik *
  REM
  cr$=CHR$(13)+CHR$(10)         ! =Return
  clr$=CHR$(27)+"E"             ! =Rensask{rmen
  inv_on$=CHR$(27)+"p"          ! =Inverse on
  inv_off$=CHR$(27)+"q"         ! =Invers off
  REM * L{s av om utskrift endast skall vara till Consoll *
  REM
  IF baud<>0 THEN               ! Om baud=0 s} {r det Konsoll
    user!=TRUE                  ! s{tter USER! till True om det inte {r Konsoll
  ELSE
    user!=FALSE                 ! s{tter USER! till False om det bara {r Konsoll
  ENDIF
RETURN
