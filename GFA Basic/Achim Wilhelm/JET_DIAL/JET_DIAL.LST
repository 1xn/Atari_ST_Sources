'
' File:         JETDIAL        Ver. 1.0
'
' Autor:        Achim Wilhelm
'               Carl-Orff-Bogen 7
'               8000 MÅnchen 45
'
' Letzte énderung am 13.12.90
'
' ----------------------------------------------------------------------------
'
handle&=APPL_INIT() ! Programm bei GEM anmelden
graf_handle&=GRAF_HANDLE(char_w&,char_h&,box_w&,box_h&)
' Kennung der VDI-Workstation und die Ausdehnung eines Zeichens ermitteln
screen_handle&=V_OPNVWK(graf_handle&,1,1,1,1,1,1,1,1,1,2) ! Virt. B.sch. ôffnen
V~H=screen_handle& ! GFA-Basic-internes Handle setzen
RESERVE FRE(0)-10000 ! Speicher abzÅglich RSC-File reservieren
'
DEFMOUSE 2 ! Biene
'
IF RSRC_LOAD("xyz.rsc")=0 ! RSC-File laden, falls Fehler,
  DEFMOUSE 0 ! Pfeil
  ALERT 1," Fehler beim Laden | der RSC-Datei ! |",1,"Shit",dummy| ! hinweisen und
  END ! Programm abbrechen
ENDIF
'
DEFMOUSE 0 ! Pfeil
'
~RSRC_GADDR(0,box&,box%) ! Adresse der Box ermitteln
'
adresse_ja_button%=OB_SPEC(box%,ja&) ! Adressen von
CHAR{adresse_ja_button%}="JA" ! JA- und NEIN-Feldtasten
adresse_nein_box%=OB_SPEC(box%,nein&) ! ermitteln, merken und mit
CHAR{adresse_nein_box%}="NEIN" ! Default-Texten vorbelegen
'
@quit ! normaler Prozeduraufruf
'
'
'
'
PROCEDURE quit ! Beispielaufruf
  box_ausfuellen(box%," ","Wollen Sie das Programm","wirklich beenden ?"," ")
  ' Die Box mit den gewÅnschten Texten belegen (evtl. Buttontexte Ñndern !)
  antwort&=FN box_darstellen(box%,nein&) ! Box abarbeiten
  IF antwort&=ja& ! Falls Programm nicht mehr erwÅnscht
    aktion ! entsprechende Aktionen ausfÅhren
  ENDIF
RETURN
'
PROCEDURE box_an_maus_haengen(box_adresse%,button_nummer&) ! Box an Maus zentr.
  LOCAL x_pos_button&,y_pos_button&,breite_button&,hoehe_button&
  LOCAL maus_x&,maus_y&,maus_k&
  CLR x_pos_button&,y_pos_button&,breite_button&,hoehe_button&
  CLR maus_x&,maus_y&,maus_k&
  ' lokale Variablen definieren und lîschen
  MOUSE maus_x&,maus_y&,maus_k& ! Mausposition merken
  x_pos_button&=OB_X(box_adresse%,button_nummer&)
  y_pos_button&=OB_Y(box_adresse%,button_nummer&)
  ' Relative x- und y-Koordinaten des gewÅnschten Buttons zur Box ermitteln
  breite_button&=OB_W(box_adresse%,button_nummer&) ! Buttonbreite und
  hoehe_button&=OB_H(box_adresse%,button_nummer&) ! -hîhe ermitteln
  DIV breite_button&,2 ! und wegen Zentrierung des Mauszeigers im Button
  DIV hoehe_button&,2 ! mit halben Werten rechnen
  SUB maus_x&,breite_button& ! und von den
  SUB maus_y&,hoehe_button& ! Mauskoordinaten abziehen
  SUB maus_x&,x_pos_button& ! Ebenso die relative Position
  SUB maus_y&,y_pos_button& ! des Buttons in der Box verrechnen
  IF maus_x&<8 ! Falls die errechneten Koordinaten
    maus_x&=8 ! kleiner als die linke und obere Bildschirmgrenze
  ENDIF
  IF maus_y&<34 ! + Rand fÅr Boxattribute (SHADOWED, OUTLINED) sind,
    maus_y&=34 ! Werte manuell setzen
  ENDIF
  ADD maus_x&,OB_W(box_adresse%,0) ! Breite und
  ADD maus_y&,OB_H(box_adresse%,0) ! Hîhe der Box zu den Koordinaten addieren
  IF maus_x&>max_bildschirm_breite& ! Falls errechnete
    maus_x&=max_bildschirm_breite&-8 ! Werte grîûer sind
  ENDIF
  IF maus_y&>max_bildschirm_hoehe& ! als die maximalen Koordinaten
    maus_y&=max_bildschirm_hoehe&-8 ! des Bildschirms - Rand (s.o.), diese
  ENDIF ! als neue,entgÅltige Koordinaten setzen
  SUB maus_x&,OB_W(box_adresse%,0) ! Dimensionen der Box
  SUB maus_y&,OB_H(box_adresse%,0) ! wieder abziehen
  OB_X(box_adresse%,0)=maus_x& ! Errechnete Koordinaten
  OB_Y(box_adresse%,0)=maus_y& ! setzen (statt FORM_CENTER())
RETURN
'
PROCEDURE box_ausfuellen(b_adr%,t1$,t2$,t3$,t4$) ! Fragebox mit Texten fÅllen
  CHAR{{OB_SPEC(b_adr%,text1&)}}=t1$ ! Text 1 schreiben
  CHAR{{OB_SPEC(b_adr%,text2&)}}=t2$ ! Text 2 schreiben
  CHAR{{OB_SPEC(b_adr%,text3&)}}=t3$ ! Text 3 schreiben
  CHAR{{OB_SPEC(b_adr%,text4&)}}=t4$ ! Text 4 schreiben
RETURN
'
FUNCTION box_darstellen(boxnummer%,feldtastennummer&) ! Dialogbox darstellen
  LOCAL x1&,y1&,b1&,h1& ! Lokale Variablen
  box_an_maus_haengen(boxnummer%,feldtastennummer&) ! Box an Maus zentrieren
  x1&=OB_X(boxnummer%,0) ! x- und y-Koordinaten
  y1&=OB_Y(boxnummer%,0) ! sowie Breite
  b1&=OB_W(boxnummer%,0) ! und Hîhe der Box
  h1&=OB_H(boxnummer%,0) ! ermitteln
  ~WIND_UPDATE(1) ! AES-Bildschirmaktionen verbieten
  ~FORM_DIAL(0,0,0,0,0,x1&,y1&,b1&,h1&) ! Bildschirmteil unter der Box sichern
  ~FORM_DIAL(1,0,0,0,0,x1&,y1&,b1&,h1&) ! vergrîûerndes Rechteck zeichnen
  ~OBJC_DRAW(boxnummer%,0,1,0,0,0,0) ! Box darstellen
  antwort&=FORM_DO(boxnummer%,0) ! Box abarbeiten
  OB_STATE(boxnummer%,antwort&)=0 ! Exit-Feld deselektieren
  ~FORM_DIAL(2,0,0,0,0,x1&,y1&,b1&,h1&) ! verkleinerndes Rechteck zeichnen
  ~FORM_DIAL(3,0,0,0,0,x1&,y1&,b1&,h1&) ! Bildschirm restaurieren
  ~WIND_UPDATE(0) ! AES-Operationen erlauben
  RETURN antwort&
ENDFUNC
