
    SUITE DU CHAPITRE SUR LES INSTRUCTIONS du fichier INSTRUC2.DOC
    ππππππππππππππππππππππππππππππππππππππππππππππππππππππππππππππ


   LINK      an,#BBB
   πππππππππππππππππ

   L'opÇrande source de Link est un registre d'adresse an, l'opÇrande
   destination est du type 'immÇdiat' et est un MOT signÇ.

   LINK  .EMPILE le contenu de an (l-m) dans la pile systäme. 
          (SP est donc dÇcrÇmentÇ de 4 unitÇs)

         .La valeur de SP (qui pointe donc le l-m=Ö an) est ensuite
          placÇe dans an.

         .Le dÇplacement signÇ est ajoutÇ Ö SP:
          Ceci a pour effet d'incrÇmenter (#BBB>0) ou de dÇcrÇmenter SP
          (#BBB<0).

   Link permet donc de rÇserver une certaine place dans la pile systäme.
   (Pour y placer des donnÇes qui ne doivent pas àtre effacÇes par exp)

   Le CCR n'est pas affectÇ.
      πππ
   
   Exemple d'utilisation:
   ππππππππππππππππππππππ
     LINK    a0,#12

     La pile systäme resemblera Ö cela:

               |--------|--------|
               |--------|--------|
               |--------|--------|
Apräs -(SP),a0>|XXXXXXXX|XXXXXXXX|<-- on a posÇ (-(SP) ) le L-M de a0
               |XXXXXXXX|XXXXXXXX|    et on a mis la valeur de cet SP
SP au dÇbut -->|--------|--------|    dans a0
               |--------|--------|
               |--------|--------|
               |--------|--------|
SP apräs avoir>|--------|--------|
incrÇmentÇ (SP)|--------|--------|




   UNLK           an
   πππππππππππππππππ

   L'opÇrande source de Link est un registre d'adresse an.

   UNLK  .Charge la valeur de an dans SP:
          (SP est donc dÇcrÇmentÇ ou incrÇmentÇ)

         .Le L-M pointÇ par cet SP est ensuite chargÇ dans an.
          (SP est donc incrÇmentÇ de 4 unitÇs)
 
 
   Unlk permet donc de redonner la valeur initiale Ö SP et au registre
   d'adresse 'an' d'avant Link.
   

   Exemple d'utilisation:
   ππππππππππππππππππππππ  
     UNLK    a0

     La pile systäme resemblera Ö cela si on reprend l'exemple
     d'utilisation de LINK prÇcÇdent:

               |--------|--------|
               |--------|--------|
               |--------|--------|
Apräs a0,(SP) >|XXXXXXXX|XXXXXXXX|<-- on a chargÇ SP avec an et on a posÇ
               |XXXXXXXX|XXXXXXXX|    le L-M pointÇ par cet SP dans a0
SP Öpräs UNLK->|--------|--------|    ( (SP)+,a0)
               |--------|--------|
               |--------|--------|
               |--------|--------|
SP apräs LINK->|--------|--------|
               |--------|--------|


    
   MOVE   USP,an
   πππππππππππππ  
   ou

   MOVE   an,USP
   πππππππππππππ

   Permet de sauvegarder le pointeur de pile systäme utilisateur ( User
   Stack Pointer ) dans un registre d'adresse 'an' pour la 1¯ forme.

   ou

   Permet de charger un registre d'adresse 'an' dans le pointeur de pile
   systäme pour la 2¯ forme.
 
   
   Le CCR n'est pas influencÇ.
      πππ
   
   Exemple d'utilisation:
   ππππππππππππππππππππππ  
   MOVE  USP,a0
  
   a0 contiendra la valeur de USP.


   NB: Cette instruction est une instruction PRIVILêGIêE:
   πππ Elle n'est donc que utilisable en mode SUPERVISEUR.



   RESET
   πππππ
   Provoque la mise Ö zÇro des circuits externes du microprocesseur en
   envoyant un signal Ö la broche RESET du 68000.
   
   C'est une instruction privilÇgiÇe elle aussi, Il faudra donc veiller
   Ö ce qu'on soit en mode SUPERVISEUR pour s'en servir...

   Le CCR n'est pas modifiÇ par RESET.
      πππ

   STOP     #BBB
   πππππππππππππ
   L'opÇrande #BBB est Çtendue sur un mot et chargÇe dans le SR.

   Le PC pointe sur l'instruction suivante, mais le processeur 
   cesse toute activitÇ.

   L'activitÇ peut cependant reprendre quand un RESET externe ou une
   exception TRACE (Mise Ö 1 du bit T du CCR) se produit.
   
   C'est une instruction privilÇgiÇe elle aussi, Il faudra donc veiller
   Ö ce qu'on soit en mode SUPERVISEUR pour s'en servir...
 

   RTE    (ReTurn from Exeption)
   πππ   

   RTE indique la fin de l'execution d'un programme d'interruption,
   elle dÇpile de la pile sytäme un MOT qu'elle place dans SR et
   un L-M qu'elle place dans le PC.

   RTE sera dÇtaillÇe dans le chapitre conscrenant les programmes 
   sous interruption.



   TRAP   #BBB
   πππππππππππ

   L'opÇrande source est du type 'immÇdiat' (0<= #BBB <=15).

   TRAP entraine l'execution d'une exception Ö partir d'instructions
   situÇes dans une zone privilÇgiÇe de la mÇmoire.

   En pratique, TRAP permet d'appeler les fonctions du BIOS,XBIOS et du
   GEMDOS.

   Nous verons comment dans le chapitre qui dÇcrit ces fonctions träs
   utiles...    
  


   TRAPV
   πππππ
   Si le bit V du CCR est Ö 1 (dÇbordement), TRAPV provoque l'Çxecution
   d'une procÇdure d'exception

   (Voir la table des vecteurs d'exception plus loin...)


   CHK    source,dn
   ππππππππππππππππ

   CHK regarde si le nombre contenu dans dn appartient Ö l'intervalle
   fermÇ: [0,source]

   Si celui-ci n'appartient pas Ö cet intervalle, il y a execution d'une
   procÇdure d'exception, sinon le programme continue normalement.

   Les modes d'adressage autorisÇs pour l'opÇrande source sont:
                                                   ππππππ
     dn
     BBBB
     BB
     #BBB
     (an)
     -(an)
     (an)+
     d(an)
     d(an,rn)
     d(pc)
     d(pc,rn)

   Seul le bit N du CCR est modifiÇ par CHK (suivant le signe de dn)
                    πππ


   TAS    destination
   ππππππππππππππππππ
  
   L'opÇrande destination est une adresse qui pointe sur un OCTET.

   TAS teste cet OCTET, les bits N et Z du CCR sont positionnÇs en
   consÇquence,puis le MSB de l'octet est mis Ö 1.

   Les modes d'adressage admis par l'opÇrande destination sont:
                                              πππππππππππ    
     dn
     BBBB
     BB
     (an)
     -(an)
     (an)+
     d(an)
     d(an,rn)


   Cette mÇthode de Test particuliäre est utilisÇe par un processeur qui
   veut accäder Ö une ressource ( imprimante par exp ) et qui vÇrifie si
   celle-ci est disponible:
   On dÇsigne l'Çtat de la ressource par UN SêMAPHORE, si il est Ö 0, la
   ressource est disponible, si il est nÇgatif (MSB=1),la ressource est
   occupÇe.
   Le processeur fait donc un TAS au sÇmaphore qui convient avant 
   d'accäder Ö une ressource.


   
   NOP              (NO oPeration)
   πππ
   Comme son nom l'indique, NOP n'a pas d'action particuliäre.

   NOP a par contre une taille d'1 MOT en mÇmoire et dure 4 pÇriodes
   d'horloge externe.

   Elle sera par exemple utilisÇe pour ajuster le temps d'Çxecution
   de certaines boucles dans des programmes sous interruption...




                         ππππππππππππππππππππππ
  
  VoilÖ pour les instructions du 68000!

  Relisez ce chapitre en entier chaque fois avant de vous coucher 
  pendant une semaine et tout áa finira bien par rentrer dans votre 
  tàte...   
 
  Il vous sera inutile d'apprendre tout áa par coeur, faites vous une
  petite fiche rÇcapitulative par exemple, inutile de vous dire que
  c'est Ö ce chapitre que vous ferez le plus souvent appel quand votre
  mÇmoire fera dÇfaut, mais c'est bien normal, le contraire serait 
  Çtonnant !

  Le chapitre suivant sera consacrÇ aux fonctions du GEMDOS,BIOS et 
  XBIOS.

  Les exemples qui vont illustrer ces fonctions reprendront certaines
  de ces instructions, alors pas de panique.

  Si la tàte vous tourne Çteignez votre ST et allez vous coucher ,avez
  vous dejÖ oubliÇ mon conseil ?

  LA QUALITê VAUT MIEUX QUE LA QUANTITê !!! et toc !
  πππππππππππππππππππππππππππππππππππππ


  PIECHOCKI Laurent
  8,impasse Bellevue               suite dans le fichier: GEMDOS.DOC
  57980 TENTELING                                         ππππππππππ  
  


 
  
