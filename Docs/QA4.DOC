
         -----------------------------------------------------------------
         |                                                               |
         |   AAA  TTTTT  AAA  RRRR   III        ****         SSS  TTTTT  |
         |  A   A   T   A   A R   R   I         ****        S   S   T    |
         |  A   A   T   A   A R   R   I         ****        S       T    |
         |  AAAAA   T   AAAAA RRRR    I        ******        SSS    T    |
         |  A   A   T   A   A R   R   I       ** ** **          S   T    |
         |  A   A   T   A   A R   R   I      **  **  **     S   S   T    |
         |  A   A   T   A   A R   R  III   **    **    **    SSS    T    |
         |                                                               |
         |  DDDD  EEEEE V   V EEEEE L      OOO  PPPP  EEEEE RRRR   SSS   |
         |  D   D E     V   V E     L     O   O P   P E     R   R S   S  |
         |  D   D E     V   V E     L     O   O P   P E     R   R S      |
         |  D   D EEEE  V   V EEEE  L     O   O PPPP  EEEE  RRRR   SSS   |
         |  D   D E     V   V E     L     O   O P     E     R   R     S  |
         |  D   D E      V V  E     L     O   O P     E     R   R S   S  |
         |  DDDD  EEEEE   V   EEEEE LLLLL  OOO  P     EEEEE R   R  SSS   |
         |                                                               |
         -----------------------------------------------------------------
         Question and Answer Bulletin                            May  1986
         Copyright (C) 1986 by Atari Corp.           "all rights reserved"
         1196 Borregas Ave.,          Sunnyvale, Ca.                 94086
         -----------------------------------------------------------------

         Here  are  the latest questions from the Atari developers mailbag
         as  answered  by  John Feagans, Director of Software Technology.
         Leave  questions on Compuserve for PIN 70007,1072 or GO PCS57 for
         Atari developer SIG information.

         -----------------------------------------------------------------
                               This months contents

         1  Corrections
         2  BIOS
         3  DOS
         4  VDI
         5  AES
         6  LOGO
         7  Development tools
         8  New On Compuserve
         -----------------------------------------------------------------

         1.  Corrections.   None.

         2.  BIOS
                                         
         Q:   Are  nulls deleted by TOS when communicating over the RS-232
         port?

         A:   When  you  write a communications package it is important to
         use  the  raw-unprocessed  BIOS  conin  instead of a higher level
         which  may  intercept  control  characters  including control-C.
         There is no reason for nulls to be deleted.

         Q:   How  do Europeans access the special characters in the Atari
         character set?

         A:   The  Atari character set is standard in all models of the ST
         around  the  world.   There  are special versions of TOS for each
         country  which contain resources translated to the local language
         and  keyboard  translation  tables which decode the scan codes to
         the  character codes.  The scan codes are always the same for the
         same key positions because the IKBD controller is the same in all
         models.   The  legends on the keys in those positions may vary by
         country.  Some countries have a dead-key function driver which is
         in the auto folder at boot time.  This driver installs in Trap 13
         and monitors Bconin for the pressing of an accent mark.  When the
         next  vowel  is  pressed, the correct character code is generated
         for the application software.
         -----------------------------------------------------------------

         3.  DOS

         Q:  How  can I prevent alert boxes from printing when I get a DOS
         error?

         A:  See  the  BIOS  function  setexc(vecnum,vec).   Vecnum is the
         number  of the vector to get or set.  Vec is the address to setup
         in  the  vector slot else a get is performed if the value is -1L.
         Vecnum  $101  is  the  critical  error  handler.  Insert your own
         routine  there  and the alert boxes will cease printing.  Be sure
         to restore the old vector when you are finished.
         -----------------------------------------------------------------

         4.  VDI

         Q:  What is the 6 x 6 font used for?

         A:   The  smallest  font is used for labeling icons in medium and
         high resolution.

         5.  AES

         Q:  How can I access the menu from a desk accessory?

         A:   There  is  no  way that this can be done.  Menu messages are
         given  to  the  desktop program (or currently running application
         that generated the menu.  You could generate your own pseudo menu
         in your window but you would have to do everything yourself.

         Q:   Do  you  need more than one resource file in your program so
         that multiple resolutions are handled correctly?

         A:   It is only necessary to design one resource.  The RCS stores
         all  the  object  positions and width and height in terms of byte
         aligned  character  coordinates.  When  the file is loaded by the
         rsrc_load  function, the x and width parameters are multiplied by
         the current global character  width and the y and  height  by the
         current  global  character  height.   Thus  all  the  numbers are
         adjusted to the current resolution you are working in.
         -----------------------------------------------------------------

         6.  LOGO

         Q:  Are SETWRITE and SETREAD working?

         A:  These functions are currently un-implemented in ST Logo.

         Q:  How can a user define his own fill pattern?

         A:   The  example in the Logo manual has a typo.  You must define
         16 and not 15 values as shown to make the fill pattern work.  The
         last value reads "1280" and should be "128 0".

         -----------------------------------------------------------------

         7. Development Tools

         Q:  How do I increase the stack size in gemstart?

         A:   In  the  file  gemstart.s  you  will  find  a  comment about
         allocating 1k  of  stack space next to an add.l #500,d0.  $100 is
         allocated for  the base page and $400 (1k bytes) is allocated for
         the  stack.   To increase the stack to 2k, make the number $900.
         Assemble  this module and link the resulting object.  There is an
         interesting  point  to  be  made  about  the  C  run time library
         function  malloc here.  malloc allocates space off this stack.  A
         new  and improved gemstart will be available soon to allow you to
         malloc more than 1k. Keep in mind that this malloc is not Malloc,
         the  DOS  function.   The  latter  Malloc  works fine if you have
         previously  done  an  Mshrink  to  return  unused  memory  to the
         operating system.

         Q:   My  program  to  spawn processes get the message "Not enough
         free store."  What is happening?

         A:   Sounds like you did not do an Mshrink to give memory back to
         the  DOS  when  your  first  program  started running.  (This was
         verified later in the thread.)

         Q:  How do you get wild cards to work in Kermit?

         A:  You must enclose the file name in quotes.

         Q:   How  do  you  make  the  menu box below the title in the RCS
         larger?

         A:   Point  the mouse at the lower right hand corner and drag the
         box to the desired size.

         -----------------------------------------------------------------

         8. New On Compuserve

         In  data  library 7 (for registered Atari Developers only) in the
         Atari  Developers  SIG on Compuserve, the following files are new
         this month:

         lo68.prg                the other linker program
         ahdi.prg                rev 5 hard disk driver.
         hdx.prg                 hard disk partitioner.
         hdx.rsc
         wincap
         ship.prg                hard disk head parking.
         invite.let              UK show announcement.
         newfrm.doc              form_button documentation.
         ctype.o                 character typing module.
         f2s.doc                 ROM making software.
         f2s.prg
         glue.doc
         glue.prg
         send.prg
         end
         math.h                  C header file support
         string.h
         qa3.doc                 previous Q/A bulletin.
