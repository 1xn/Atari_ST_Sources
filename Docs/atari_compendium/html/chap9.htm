 <HTML>

<HEAD>

<TITLE>The Atari Compendium - Desktop</TITLE>


</HEAD>

<BODY BACKGROUND BGCOLOR=#FFFFFF>

<P>
<a name=chap9><B><FONT SIZE=2>- CHAPTER 9 -</FONT></B>
<a name=desktop><H1>DESKTOP</H1>

<HR>

<a name=overview><H4><FONT SIZE=4 >Overview</FONT></H4>

<HR>

<P>
The 'Desktop' is a <B>GEM</B> application that is started after
the operating system is initialized and all '\AUTO' folder programs
and desk accessories are loaded. The desktop is responsible for
providing basic file management and program launching abilities
to the user.
<P>
Normally, the desktop is contained in ROM, however under <B>MultiTOS</B>,
the desktop may be soft-loaded by placing the following command
line inside the 'GEM.CNF' file:
<PRE>

<CENTER>
shell [new shell filename]

</CENTER>

</PRE>

<P>
If the 'shell' command fails, the normal desktop is started.
<P>
If an installed shell program exits under <B>MultiTOS</B>, the
OS will display a single menu from which programs may be launched.
<HR>

<a name=multitos><H4><FONT SIZE=4 >MultiTOS Considerations</FONT>
</H4>

<HR>

<a name=messages><H5>Messages</H5>

<P>
The desktop may be sent messages using the <B>AES</B>'s <B>shel_write()</B>
command. The desktop currently recognizes two special messages
as follows:
<TABLE BORDER=1>

<TR><TH><B><FONT SIZE=1 >Message</FONT></B></TH>
<TH>
<CENTER>
<B><FONT SIZE=2 >Number</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Meaning</FONT></B></TH>
</TR>

<TR><TH><B>SH_WDRAW</B></TH><TD>
<CENTER>
<FONT SIZE=2>72</FONT>
</CENTER>

</TD><TD><FONT SIZE=2>This message tells the desktop that files on a particular drive have been modified so it can update the information in any open windows.</FONT><I>msg[3] </I>should contain the drive number ( 0 = A:, 1 = B:, etc.). A value of -1 will force the desktop to update all of its open windows. 
</TD></TR>

<TR><TH><B>AP_DRAGDROP</B></TH><TD>
<CENTER>
<FONT SIZE=2>63</FONT>
</CENTER>

</TD><TD><FONT SIZE=2>The desktop included with <B>AES</B> 4.1 now accepts all <a name=d&d>drag & drop messages and places the dropped object on the desktop.</FONT>
</TD></TR>

</TABLE>

<P>

<a name=extend><H5>Extendibility</H5>

<P>
The<B> MultiTOS</B> desktop allows the replacement of file copy,
rename, and delete, and disk copy and format commands. To replace
the file commands, place the filename of an application designed
to replace them in the environment variable DESKCOPY. Likewise,
a disk command replacement application can be placed in the environment
variable DESKFMT.
<P>
The file command replacement will be called with one of three
command line formats as follows:
<P>
1. Copy a file(s): <TT><FONT SIZE=1 FACE="Courier New">-c [-options...]
[filename(s)] [destination path]</FONT></TT>
<P>
2. Delete a file(s): <TT><FONT SIZE=1 FACE="Courier New">-d [-options...]
[filename(s)]</FONT></TT>
<P>
3. Move a file(s): <TT><FONT SIZE=1 FACE="Courier New">-m [-options...]
[filename(s)] [destination path]</FONT></TT>
<P>
The following are valid options to appear on the command line:
<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Option</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Meaning</FONT></B></TH>
</TR>

<TR><TD>
<CENTER>
-A
</CENTER>
</TD><TD><FONT SIZE=2>Confirm file copies.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-B
</CENTER>
</TD><TD><FONT SIZE=2>Do not confirm file copies.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-C
</CENTER>
</TD><TD><FONT SIZE=2>Confirm file deletes.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-D
</CENTER>
</TD><TD><FONT SIZE=2>Do not confirm file deletes.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-E
</CENTER>
</TD><TD><FONT SIZE=2>Confirm file overwrites.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-F
</CENTER>
</TD><TD><FONT SIZE=2>Do not confirm file overwrites.</FONT>
</TD></TR>

<TR><TD>
<CENTER>
-R
</CENTER>
</TD><TD><FONT SIZE=2>Prompt to rename destination file(s).</FONT>
</TD></TR>

</TABLE>

<P>

<P>
An application which is installed to replace disk operations will
receive one of two command lines as follows:
<P>
1. Format a drive (ex: A:): <TT><FONT SIZE=1 FACE="Courier New">-f
A:</FONT></TT>
<P>
2. Copy a disk (ex: A: to B:): <TT><FONT SIZE=1 FACE="Courier New">-c
A: B:</FONT></TT>
<a name=launch><H5>TOS Application Launching</H5>

<P>
When the user uses the desktop to launch a .TOS or .TTP application
under <B>MultiTOS</B>, the desktop looks for an environment variable
called TOSRUN. If it finds one, it attempts to launch whatever
application is specified in that variable with the TOS filename
as its parameters.
<P>
<a name=tosrunpipe>If the environment variable does not exist, it opens a pipe called
'U:\PIPE\TOSRUN' and writes to it the filename and any parameters
separated by spaces terminated by a <B>NULL</B> byte.
<HR>

<a name=desktop><H4><FONT SIZE=4 >Desktop Files</FONT></H4>

<HR>

<a name=inf><H5>DESKTOP.INF</H5>

<P>
The desktop in <B>TOS</B> versions less than 2.00 place configuration
defaults such as window size and position, drive icons, etc. in
the DESKTOP.INF file. In addition, some control panel settings
(from CONTROL.ACC, not XCONTROL.ACC) are stored in the file as
well.
<P>
The DESKTOP.INF file is in standard ASCII text format. This file
was not designed to be edited by the user or programmer, but,
rather from the desktop itself and will not be discussed in detail.
<a name=newdeskinffile><H5>NEWDESK.INF</H5>

<P>
As of <B>TOS</B> 2.00, the desktop now looks for a file called
NEWDESK.INF rather than DESKTOP.INF. This file contains the same
information as its predecessor with some additions. Icons which
appear on the desktop or in windows may now be linked to icons
in the DESKICON.RSC file (as described below). Other entries are
still reserved and should be left unmodified.
<P>
A creative install program wishing to install custom icons may
do so by adding the icons to the DESKICON.RSC file and adding
information to NEWDESK.INF which points to the new icons. The
install application must be careful to avoid disturbing the original
information and icons and must not reorder the icons in the DESKICON.RSC
file. The following two lines show example entries in NEWDESK.INF
that identify an icon for a file and folder respectively.
<PRE>
<FONT SIZE=2>#I 2C 2C 000 @ *.TXT@ @
</FONT><FONT SIZE=2 FACE="Courier New">#D 1A 1A 000 @ FOLDER@ @
</FONT>
</PRE>

<P>
The '#I' identifies a file icon and the '#D' identifies a folder
icon. The next two numbers should be identical hexadecimal indexes
to the icon in the DESKICON.RSC file. The entry '000' is unused
and should be included only as a placeholder.
<P>
The filename specified on the line can contain wildcard characters
and identify the file or folder name(s) which are to be linked.
All spaces and '@' characters must appear exactly as above or
the system may behave strangely. 
<a name=deskicon><H5>DESKICON.RSC</H5>

<P>
The DESKICON.RSC file is a standard <B>GEM</B> resource file (see
<I>Appendix C: <B>Native File Formats</B></I>) with one object
tree containing a <B>BOX</B> object at the <B>ROOT</B> (object
#0) with the icons as children. The position of the icons in the
object tree determine their index as referenced by the NEWDESK.INF
file.
<a name=deskcicn><H5>DESKCICN.RSC</H5>

<P>
This file is supported as of <B>TOS</B> 4.0 and is looked for
before DESKICON.RSC. It has an identical format except that it
supports the new resource file format and contains color icons
rather than monochrome ones.
<p>
<hr><center><a href="toc.htm"> Table of Contents | </a><a href="index.htm"> Index </a></center>
</BODY>

</HTML>
