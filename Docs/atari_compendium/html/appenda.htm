<HTML>

<HEAD>

<TITLE>The Atari Compendium - Appendix A</TITLE>


</HEAD>

<BODY BACKGFROUND BGCOLOR=#FFFFFF>

<P>
<a name=appenda><B><FONT SIZE=2>- APPENDIX A -</FONT></B>
<H1>FUNCTIONS BY OPCODE</H1>

<HR>

<a name=gemdos><H4><FONT SIZE=4 >GEMDOS Functions by Opcode</FONT>
</H4>

<HR>

<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Dec</FONT></B>
</CENTER>

</TH><TH>
<CENTER>
<B><FONT SIZE=2 >Hex</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Function</FONT></B></TH>
<TH><B><FONT SIZE=2 >Summary</FONT></B></TH><TH>
<CENTER>
<B><FONT SIZE=2 >Page</FONT></B>
</CENTER>

</TH></TR>

</TABLE>

<P>

<TABLE BORDER=1>

<TR><TD>
<CENTER>
0
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x00</FONT>
</CENTER>

</TD><TH><B><FONT SIZE=2>Pterm&Oslash;()</FONT></B></TH><TD><FONT SIZE=2>Exit process with a return code of 0.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.122</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
1
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x01</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconin()</FONT></B></TD><TD><FONT SIZE=2>Fetch a character from the console device and echo it.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.41</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
2
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x02</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconout()</FONT></B></TD><TD><FONT SIZE=2>Output a character to the console device processing any special keys.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.43</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
3
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x03</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cauxin()</FONT></B></TD><TD><FONT SIZE=2>Fetch character from the auxiliary device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.39</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
4
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x04</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cauxout()</FONT></B></TD><TD><FONT SIZE=2>Output a character to the auxiliary device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.41</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x05</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cprnout()</FONT></B></TD><TD><FONT SIZE=2>Output a character to the printer device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.47</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
6
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x06</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Crawio()</FONT></B></TD><TD><FONT SIZE=2>Perform input and output on the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.49</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
7
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x07</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Crawcin()</FONT></B></TD><TD><FONT SIZE=2>Output a character to the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.48</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
8
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x08</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cnecin()</FONT></B></TD><TD><FONT SIZE=2>Fetch a character from the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.46</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
9
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x09</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconws()</FONT></B></TD><TD><FONT SIZE=2>Write a string to the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.45</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
10
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconrs()</FONT></B></TD><TD><FONT SIZE=2>Read a string from the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.44</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconis()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character is waiting to be received from the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.42</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
14
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsetdrv()</FONT></B></TD><TD><FONT SIZE=2>Set the default drive.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.62</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
16
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x10</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cconos()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character may be sent to the console device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.43</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
17
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x11</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cprnos()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character may be sent to the printer device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.46</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
18
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x12</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cauxis()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character is waiting to be received from the auxiliary device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.39</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
19
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x13</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cauxos()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character may be sent to the auxiliary device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.40</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
20
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x14</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Maddalt()</FONT></B></TD><TD><FONT SIZE=2>Notify <B>GEMDOS</B> of additional memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.97</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
25
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x19</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Dgetdrv()</FONT></B></TD><TD><FONT SIZE=2>Return the default drive.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.56</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
26
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Fsetdta()</FONT></B></TD><TD><FONT SIZE=2>Set the address of the <B>DTA</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.91</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
32
</CENTER>
</TD><TD>
<CENTER>
0x20
</CENTER>

</TD><TD><B><FONT SIZE=2>Super()</FONT></B></TD><TD><FONT SIZE=2>Modify user/supervisor status.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.128</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
42
</CENTER>
</TD><TD>
<CENTER>
0x2A
</CENTER>

</TD><TD><B><FONT SIZE=2>Tgetdate()</FONT></B></TD><TD><FONT SIZE=2>Get the current date.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.132</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
43
</CENTER>
</TD><TD>
<CENTER>
0x2B
</CENTER>

</TD><TD><B><FONT SIZE=2>Tsetdate()</FONT></B></TD><TD><FONT SIZE=2>Set the current date.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.133</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
44
</CENTER>
</TD><TD>
<CENTER>
0x2C
</CENTER>

</TD><TD><B><FONT SIZE=2>Tgettime()</FONT></B></TD><TD><FONT SIZE=2>Get the current time.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.132</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
45
</CENTER>
</TD><TD>
<CENTER>
0x2D
</CENTER>

</TD><TD><B><FONT SIZE=2>Tsettime()</FONT></B></TD><TD><FONT SIZE=2>Set the current time.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.133</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
47
</CENTER>
</TD><TD>
<CENTER>
0x2F
</CENTER>

</TD><TD><B><FONT SIZE=2>Fgetdta()</FONT></B></TD><TD><FONT SIZE=2>Return a pointer to the <B>DTA</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.79</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
48
</CENTER>
</TD><TD>
<CENTER>
0x30
</CENTER>

</TD><TD><B><FONT SIZE=2>Sversion()</FONT></B></TD><TD><FONT SIZE=2>Obtain the current <B>GEMDOS</B> version.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.129</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
49
</CENTER>
</TD><TD>
<CENTER>
0x31
</CENTER>

</TD><TD><B><FONT SIZE=2>Ptermres()</FONT></B></TD><TD><FONT SIZE=2>Exit process leaving some data intact.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.123</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
54
</CENTER>
</TD><TD>
<CENTER>
0x36
</CENTER>

</TD><TD><B><FONT SIZE=2>Dfree()</FONT></B></TD><TD><FONT SIZE=2>Determine the free space on a drive.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.54</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
57
</CENTER>
</TD><TD>
<CENTER>
0x39
</CENTER>

</TD><TD><B><FONT SIZE=2>Dcreate()</FONT></B></TD><TD><FONT SIZE=2>Create a directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.53</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
58
</CENTER>
</TD><TD>
<CENTER>
0x3A
</CENTER>

</TD><TD><B><FONT SIZE=2>Ddelete()</FONT></B></TD><TD><FONT SIZE=2>Delete a directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.54</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
59
</CENTER>
</TD><TD>
<CENTER>
0x3B
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsetpath()</FONT></B></TD><TD><FONT SIZE=2>Set the default path.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.63</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
60
</CENTER>
</TD><TD>
<CENTER>
0x3C
</CENTER>

</TD><TD><B><FONT SIZE=2>Fcreate()</FONT></B></TD><TD><FONT SIZE=2>Create a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.74</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
61
</CENTER>
</TD><TD>
<CENTER>
0x3D
</CENTER>

</TD><TD><B><FONT SIZE=2>Fopen()</FONT></B></TD><TD><FONT SIZE=2>Open a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.84</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
62
</CENTER>
</TD><TD>
<CENTER>
0x3E
</CENTER>

</TD><TD><B><FONT SIZE=2>Fclose()</FONT></B></TD><TD><FONT SIZE=2>Close a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.66</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
63
</CENTER>
</TD><TD>
<CENTER>
0x3F
</CENTER>

</TD><TD><B><FONT SIZE=2>Fread()</FONT></B></TD><TD><FONT SIZE=2>Read binary data from a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.87</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
64
</CENTER>
</TD><TD>
<CENTER>
0x40
</CENTER>

</TD><TD><B><FONT SIZE=2>Fwrite()</FONT></B></TD><TD><FONT SIZE=2>Write binary data to a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.95</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
65
</CENTER>
</TD><TD>
<CENTER>
0x41
</CENTER>

</TD><TD><B><FONT SIZE=2>Fdelete()</FONT></B></TD><TD><FONT SIZE=2>Delete a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.76</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
66
</CENTER>
</TD><TD>
<CENTER>
0x42
</CENTER>

</TD><TD><B><FONT SIZE=2>Fseek()</FONT></B></TD><TD><FONT SIZE=2>Move a file pointer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.89</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
67
</CENTER>
</TD><TD>
<CENTER>
0x43
</CENTER>

</TD><TD><B><FONT SIZE=2>Fattrib()</FONT></B></TD><TD><FONT SIZE=2>Get or set the attributes of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.64</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
68
</CENTER>
</TD><TD>
<CENTER>
0x44
</CENTER>

</TD><TD><B><FONT SIZE=2>Mxalloc()</FONT></B></TD><TD><FONT SIZE=2>Allocate memory with preference.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.100</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
69
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x45</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Fdup()</FONT></B></TD><TD><FONT SIZE=2>Duplicate a file handle.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.76</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
70
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x46</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Fforce()</FONT></B></TD><TD><FONT SIZE=2>Redirect one handle to another.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.77</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
71
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x47</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Dgetpath()</FONT></B></TD><TD><FONT SIZE=2>Return the default path.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.57</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
72
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x48</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Malloc()</FONT></B></TD><TD><FONT SIZE=2>Allocate memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.98</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
73
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x49</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Mfree()</FONT></B></TD><TD><FONT SIZE=2>Free allocated memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.99</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
74
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x4A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Mshrink()</FONT></B></TD><TD><FONT SIZE=2>Shrink or expand a block of memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.99</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
75
</CENTER>
</TD><TD>
<CENTER>
0x4B
</CENTER>

</TD><TD><B><FONT SIZE=2>Pexec()</FONT></B></TD><TD><FONT SIZE=2>Execute another process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.103</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
76
</CENTER>
</TD><TD>
<CENTER>
0x4C
</CENTER>

</TD><TD><B><FONT SIZE=2>Pterm()</FONT></B></TD><TD><FONT SIZE=2>Exit process with the specified return code.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
78
</CENTER>
</TD><TD>
<CENTER>
0x4E
</CENTER>

</TD><TD><B><FONT SIZE=2>Fsfirst()</FONT></B></TD><TD><FONT SIZE=2>Find a file with the specified mask.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.92</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
79
</CENTER>
</TD><TD>
<CENTER>
0x4F
</CENTER>

</TD><TD><B><FONT SIZE=2>Fsnext()</FONT></B></TD><TD><FONT SIZE=2>Find subsequent files with the specified mask.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.93</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
86
</CENTER>
</TD><TD>
<CENTER>
0x56
</CENTER>

</TD><TD><B><FONT SIZE=2>Frename()</FONT></B></TD><TD><FONT SIZE=2>Rename a file or directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.89</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
87
</CENTER>
</TD><TD>
<CENTER>
0x57
</CENTER>

</TD><TD><B><FONT SIZE=2>Fdatime()</FONT></B></TD><TD><FONT SIZE=2>Get or set the time/date flags of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.75</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
92
</CENTER>
</TD><TD>
<CENTER>
0x5C
</CENTER>

</TD><TD><B><FONT SIZE=2>Flock()</FONT></B></TD><TD><FONT SIZE=2>Set or remove a file lock.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.82</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
255
</CENTER>
</TD><TD>
<CENTER>
0xFF
</CENTER>

</TD><TD><B><FONT SIZE=2>Syield()</FONT></B></TD><TD><FONT SIZE=2>Surrender the remaining portion of the processes timeslice.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.130</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
256
</CENTER>
</TD><TD>
<CENTER>
0x100
</CENTER>

</TD><TD><B><FONT SIZE=2>Fpipe()</FONT></B></TD><TD><FONT SIZE=2>Establish a communication pipeline between processes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.86</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
260
</CENTER>
</TD><TD>
<CENTER>
0x104
</CENTER>

</TD><TD><B><FONT SIZE=2>Fcntl()</FONT></B></TD><TD><FONT SIZE=2>Perform a file-system specific file operation. </FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.67</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
261
</CENTER>
</TD><TD>
<CENTER>
0x105
</CENTER>

</TD><TD><B><FONT SIZE=2>Finstat()</FONT></B></TD><TD><FONT SIZE=2>Determine the input status of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.80</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
262
</CENTER>
</TD><TD>
<CENTER>
0x106
</CENTER>

</TD><TD><B><FONT SIZE=2>Foutstat()</FONT></B></TD><TD><FONT SIZE=2>Determine the output status of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.85</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
263
</CENTER>
</TD><TD>
<CENTER>
0x107
</CENTER>

</TD><TD><B><FONT SIZE=2>Fgetchar()</FONT></B></TD><TD><FONT SIZE=2>Get a character from a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.79</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
264
</CENTER>
</TD><TD>
<CENTER>
0x108
</CENTER>

</TD><TD><B><FONT SIZE=2>Fputchar()</FONT></B></TD><TD><FONT SIZE=2>Output a character to a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.86</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
265
</CENTER>
</TD><TD>
<CENTER>
0x109
</CENTER>

</TD><TD><B><FONT SIZE=2>Pwait()</FONT></B></TD><TD><FONT SIZE=2>Determine the exit code of a stopped or terminated child process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.125</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
266
</CENTER>
</TD><TD>
<CENTER>
0x10A
</CENTER>

</TD><TD><B><FONT SIZE=2>Pnice()</FONT></B></TD><TD><FONT SIZE=2>Alter the process priority of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.111</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
267
</CENTER>
</TD><TD>
<CENTER>
0x10B
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetpid()</FONT></B></TD><TD><FONT SIZE=2>Obtain the process ID of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.107</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
268
</CENTER>
</TD><TD>
<CENTER>
0x10C
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetppid()</FONT></B></TD><TD><FONT SIZE=2>Obtain the process ID of the processes' parent.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.108</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
269
</CENTER>
</TD><TD>
<CENTER>
0x10D
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetpgrp()</FONT></B></TD><TD><FONT SIZE=2>Obtain the process group ID of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.107</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
270
</CENTER>
</TD><TD>
<CENTER>
0x10E
</CENTER>

</TD><TD><B><FONT SIZE=2>Psetpgrp()</FONT></B></TD><TD><FONT SIZE=2>Set the process group ID for the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.115</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
271
</CENTER>
</TD><TD>
<CENTER>
0x10F
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetuid()</FONT></B></TD><TD><FONT SIZE=2>Obtain the user ID of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.108</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
272
</CENTER>
</TD><TD>
<CENTER>
0x110
</CENTER>

</TD><TD><B><FONT SIZE=2>Psetuid()</FONT></B></TD><TD><FONT SIZE=2>Set the user ID for the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.116</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
273
</CENTER>
</TD><TD>
<CENTER>
0x111
</CENTER>

</TD><TD><B><FONT SIZE=2>Pkill()</FONT></B></TD><TD><FONT SIZE=2>Send a signal to one or more processes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.109</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
274
</CENTER>
</TD><TD>
<CENTER>
0x112
</CENTER>

</TD><TD><B><FONT SIZE=2>Psignal()</FONT></B></TD><TD><FONT SIZE=2>Determine the action to take when a signal is received.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.118</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
275
</CENTER>
</TD><TD>
<CENTER>
0x113
</CENTER>

</TD><TD><B><FONT SIZE=2>Pvfork()</FONT></B></TD><TD><FONT SIZE=2>Create a duplicate of the current process which shares address and data space with its parent.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.124</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
276
</CENTER>
</TD><TD>
<CENTER>
0x114
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetgid()</FONT></B></TD><TD><FONT SIZE=2>Obtain the group ID of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.107</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
277
</CENTER>
</TD><TD>
<CENTER>
0x115
</CENTER>

</TD><TD><B><FONT SIZE=2>Psetgid()</FONT></B></TD><TD><FONT SIZE=2>Set the group ID of the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.114</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
278
</CENTER>
</TD><TD>
<CENTER>
0x116
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigblock()</FONT></B></TD><TD><FONT SIZE=2>Block selected signals from delivery.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.118</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
279
</CENTER>
</TD><TD>
<CENTER>
0x117
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigsetmask()</FONT></B></TD><TD><FONT SIZE=2>Specifies which signals should be blocked and which should be received.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
280
</CENTER>
</TD><TD>
<CENTER>
0x118
</CENTER>

</TD><TD><B><FONT SIZE=2>Pusrval()</FONT></B></TD><TD><FONT SIZE=2>Get or set the user-defined value associated with a process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.124</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
281
</CENTER>
</TD><TD>
<CENTER>
0x119
</CENTER>

</TD><TD><B><FONT SIZE=2>Pdomain()</FONT></B></TD><TD><FONT SIZE=2>Get or set the processes execution domain.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.102</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
282
</CENTER>
</TD><TD>
<CENTER>
0x11A
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigreturn()</FONT></B></TD><TD><FONT SIZE=2>Clean up from a signal handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.120</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
283
</CENTER>
</TD><TD>
<CENTER>
0x11B
</CENTER>

</TD><TD><B><FONT SIZE=2>Pfork()</FONT></B></TD><TD><FONT SIZE=2>Create a copy of the current process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.105</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
284
</CENTER>
</TD><TD>
<CENTER>
0x11C
</CENTER>

</TD><TD><B><FONT SIZE=2>Pwait3()</FONT></B></TD><TD><FONT SIZE=2>Determine the exit code of stopped or terminated child processes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.126</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
285
</CENTER>
</TD><TD>
<CENTER>
0x11D
</CENTER>

</TD><TD><B><FONT SIZE=2>Fselect()</FONT></B></TD><TD><FONT SIZE=2>Enumerate file descriptors which are ready for reading/writing.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.90</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
286
</CENTER>
</TD><TD>
<CENTER>
0x11E
</CENTER>

</TD><TD><B><FONT SIZE=2>Prusage()</FONT></B></TD><TD><FONT SIZE=2>Return resource usage information on the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.112</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
287
</CENTER>
</TD><TD>
<CENTER>
0x11F
</CENTER>

</TD><TD><B><FONT SIZE=2>Psetlimit()</FONT></B></TD><TD><FONT SIZE=2>Read or modify resource usage limits for a process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.114</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
288
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x120</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Talarm()</FONT></B></TD><TD><FONT SIZE=2>Read or set an alarm for the current process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.131</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
289
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x121</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Pause()</FONT></B></TD><TD><FONT SIZE=2>Suspend the process until a signal is received.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.101</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
290
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x122</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Sysconf()</FONT></B></TD><TD><FONT SIZE=2>Return information regarding current capabilities and limitations of processes running under <B>MiNT</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.130</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
291
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x123</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigpending()</FONT></B></TD><TD><FONT SIZE=2>Determines which signals have been sent but not yet received to the calling process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.120</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
292
</CENTER>
</TD><TD>
<CENTER>
0x124
</CENTER>

</TD><TD><B><FONT SIZE=2>Dpathconf()</FONT></B></TD><TD><FONT SIZE=2>Return information regarding limitations and capabilities of a file system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.59</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
293
</CENTER>
</TD><TD>
<CENTER>
0x125
</CENTER>

</TD><TD><B><FONT SIZE=2>Pmsg()</FONT></B></TD><TD><FONT SIZE=2>Send or receive a message.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.109</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
294
</CENTER>
</TD><TD>
<CENTER>
0x126
</CENTER>

</TD><TD><B><FONT SIZE=2>Fmidipipe()</FONT></B></TD><TD><FONT SIZE=2>Change the file handles which refer to MIDI input and output.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.83</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
295
</CENTER>
</TD><TD>
<CENTER>
0x127
</CENTER>

</TD><TD><B><FONT SIZE=2>Prenice()</FONT></B></TD><TD><FONT SIZE=2>Alter the process priority of the specified process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.111</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
296
</CENTER>
</TD><TD>
<CENTER>
0x128
</CENTER>

</TD><TD><B><FONT SIZE=2>Dopendir()</FONT></B></TD><TD><FONT SIZE=2>Open a directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.58</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
297
</CENTER>
</TD><TD>
<CENTER>
0x129
</CENTER>

</TD><TD><B><FONT SIZE=2>Dreaddir()</FONT></B></TD><TD><FONT SIZE=2>Read a directory entry.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.61</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
298
</CENTER>
</TD><TD>
<CENTER>
0x12A
</CENTER>

</TD><TD><B><FONT SIZE=2>Drewinddir()</FONT></B></TD><TD><FONT SIZE=2>Reset the directory pointer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.62</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
299
</CENTER>
</TD><TD>
<CENTER>
0x12B
</CENTER>

</TD><TD><B><FONT SIZE=2>Dclosedir()</FONT></B></TD><TD><FONT SIZE=2>Close a directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.50</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
300
</CENTER>
</TD><TD>
<CENTER>
0x12C
</CENTER>

</TD><TD><B><FONT SIZE=2>Fxattr()</FONT></B></TD><TD><FONT SIZE=2>Return extended attribute information for a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.95</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
301
</CENTER>
</TD><TD>
<CENTER>
0x12D
</CENTER>

</TD><TD><B><FONT SIZE=2>Flink()</FONT></B></TD><TD><FONT SIZE=2>Create a file link.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.81</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
302
</CENTER>
</TD><TD>
<CENTER>
0x12E
</CENTER>

</TD><TD><B><FONT SIZE=2>Fsymlink()</FONT></B></TD><TD><FONT SIZE=2>Establish a symbolic link to a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.94</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
303
</CENTER>
</TD><TD>
<CENTER>
0x12F
</CENTER>

</TD><TD><B><FONT SIZE=2>Freadlink()</FONT></B></TD><TD><FONT SIZE=2>Determine the actual file to which a link refers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.88</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
304
</CENTER>
</TD><TD>
<CENTER>
0x130
</CENTER>

</TD><TD><B><FONT SIZE=2>Dcntl()</FONT></B></TD><TD><FONT SIZE=2>Perform a file-system specific device operation.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.50</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
305
</CENTER>
</TD><TD>
<CENTER>
0x131
</CENTER>

</TD><TD><B><FONT SIZE=2>Fchown()</FONT></B></TD><TD><FONT SIZE=2>Modify the ownership of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.66</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
306
</CENTER>
</TD><TD>
<CENTER>
0x132
</CENTER>

</TD><TD><B><FONT SIZE=2>Fchmod()</FONT></B></TD><TD><FONT SIZE=2>Modify the access permission flags of a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.65</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
307
</CENTER>
</TD><TD>
<CENTER>
0x133
</CENTER>

</TD><TD><B><FONT SIZE=2>Pumask()</FONT></B></TD><TD><FONT SIZE=2>Determines the minimum file and/or directory creation access permission masks.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.123</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
308
</CENTER>
</TD><TD>
<CENTER>
0x134
</CENTER>

</TD><TD><B><FONT SIZE=2>Psemaphore()</FONT></B></TD><TD><FONT SIZE=2>Create a semaphore.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.113</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
309
</CENTER>
</TD><TD>
<CENTER>
0x135
</CENTER>

</TD><TD><B><FONT SIZE=2>Dlock()</FONT></B></TD><TD><FONT SIZE=2>Lock or unlock a <B>BIOS</B> disk device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.57</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
310
</CENTER>
</TD><TD>
<CENTER>
0x136
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigpause()</FONT></B></TD><TD><FONT SIZE=2>Suspends the process until a specified signal (or signals) is received.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.119</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
311
</CENTER>
</TD><TD>
<CENTER>
0x137
</CENTER>

</TD><TD><B><FONT SIZE=2>Psigaction()</FONT></B></TD><TD><FONT SIZE=2>Changes the way a signal is handled.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.116</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
312
</CENTER>
</TD><TD>
<CENTER>
0x138
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgeteuid()</FONT></B></TD><TD><FONT SIZE=2>Returns the effective user ID of the caller.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.106</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
313
</CENTER>
</TD><TD>
<CENTER>
0x139
</CENTER>

</TD><TD><B><FONT SIZE=2>Pgetegid()</FONT></B></TD><TD><FONT SIZE=2>Returns the effective group ID of the caller.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.106</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
314
</CENTER>
</TD><TD>
<CENTER>
0x13A
</CENTER>

</TD><TD><B><FONT SIZE=2>Pwaitpid()</FONT></B></TD><TD><FONT SIZE=2>Attempts to determine the exit code of a particular process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.127</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
315
</CENTER>
</TD><TD>
<CENTER>
0x13B
</CENTER>

</TD><TD><B><FONT SIZE=2>Dgetcwd()</FONT></B></TD><TD><FONT SIZE=2>Returns the current <B>GEMDOS</B> working directory for the process on the specified drive.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.56</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
316
</CENTER>
</TD><TD>
<CENTER>
0x13C
</CENTER>

</TD><TD><B><FONT SIZE=2>Salert()</FONT></B></TD><TD><FONT SIZE=2>Sends an alert to the alert pipe 'U:\PIPE\ALERT'.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>2.128</FONT>
</CENTER>
</TD>
</TR>

</TABLE>

<P>

<HR>

<a name=bios><H4><FONT SIZE=4 >BIOS Functions by Opcode</FONT>
</H4>

<HR>

<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Dec</FONT></B>
</CENTER>

</TH><TH>
<CENTER>
<B><FONT SIZE=1 >Hex</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Function</FONT></B></TH>
<TH><B><FONT SIZE=2 >Summary</FONT></B></TH><TH>
<CENTER>
<B><FONT SIZE=2 >Page</FONT></B>
</CENTER>

</TH></TR>

</TABLE>

<P>

<TABLE BORDER=1>

<TR><TD>
<CENTER>
0
</CENTER>
</TD><TD>
<CENTER>
0x00
</CENTER>

</TD><TH><B><FONT SIZE=2>Getmpb()</FONT></B></TH><TD><FONT SIZE=2>Return the address of the <B>MPB</B> (Memory Parameter Block) structure.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.31</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
1
</CENTER>
</TD><TD>
<CENTER>
0x01
</CENTER>

</TD><TD><B><FONT SIZE=2>Bconstat()</FONT></B></TD><TD><FONT SIZE=2>Determine if a character is waiting from a device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.28</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
2
</CENTER>
</TD><TD>
<CENTER>
0x02
</CENTER>

</TD><TD><B><FONT SIZE=2>Bconin()</FONT></B></TD><TD><FONT SIZE=2>Input a character from a device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.27</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
3
</CENTER>
</TD><TD>
<CENTER>
0x03
</CENTER>

</TD><TD><B><FONT SIZE=2>Bconout()</FONT></B></TD><TD><FONT SIZE=2>Output a character from a device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.28</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
4
</CENTER>
</TD><TD>
<CENTER>
0x04
</CENTER>

</TD><TD><B><FONT SIZE=2>Rwabs()</FONT></B></TD><TD><FONT SIZE=2>Read/write sectors to a device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.34</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5
</CENTER>
</TD><TD>
<CENTER>
0x05
</CENTER>

</TD><TD><B><FONT SIZE=2>Setexc()</FONT></B></TD><TD><FONT SIZE=2>Set or read a system exception vector.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.35</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
6
</CENTER>
</TD><TD>
<CENTER>
0x06
</CENTER>

</TD><TD><B><FONT SIZE=2>Tickcal()</FONT></B></TD><TD><FONT SIZE=2>Return the current system timer calibration.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.36</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
7
</CENTER>
</TD><TD>
<CENTER>
0x07
</CENTER>

</TD><TD><B><FONT SIZE=2>Getbpb()</FONT></B></TD><TD><FONT SIZE=2>Return the address of the <B>BPB</B> (<B>BIOS</B> Parameter Block).</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.30</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
8
</CENTER>
</TD><TD>
<CENTER>
0x08
</CENTER>

</TD><TD><B><FONT SIZE=2>Bcostat()</FONT></B></TD><TD><FONT SIZE=2>Determine if a device is ready to receive a character.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.29</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
9
</CENTER>
</TD><TD>
<CENTER>
0x09
</CENTER>

</TD><TD><B><FONT SIZE=2>Mediach()</FONT></B></TD><TD><FONT SIZE=2>Determine if a drive's media has been changed.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.33</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
10
</CENTER>
</TD><TD>
<CENTER>
0x0A
</CENTER>

</TD><TD><B><FONT SIZE=2>Drvmap()</FONT></B></TD><TD><FONT SIZE=2>Return a bitmap of mounted drives.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.30</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11
</CENTER>
</TD><TD>
<CENTER>
0x0B
</CENTER>

</TD><TD><B><FONT SIZE=2>Kbshift()</FONT></B></TD><TD><FONT SIZE=2>Return the state of the keyboard shift keys.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>3.32</FONT>
</CENTER>
</TD>
</TR>

</TABLE>

<P>

<HR>

<a name=xbios><H4><FONT SIZE=4 >XBIOS Functions by Opcode</FONT>
</H4>

<HR>

<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Dec</FONT></B>
</CENTER>

</TH><TH>
<CENTER>
<B><FONT SIZE=1 >Hex</FONT></B>
</CENTER>

</TH><TH>
<CENTER>
<B><FONT SIZE=1 >Waketime</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Function</FONT></B></TH>
<TH><B><FONT SIZE=2 >Summary</FONT></B></TH><TH>
<CENTER>
<B><FONT SIZE=2 >Page</FONT></B>
</CENTER>

</TH></TR>

</TABLE>

<P>

<TABLE BORDER=1>

<TR><TD>
<CENTER>
0
</CENTER>
</TD><TD>
<CENTER>
0x00
</CENTER>

</TD><TH><B><FONT SIZE=2>Initmous()</FONT></B></TH><TD><FONT SIZE=2>Initialize the mouse handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.73</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
1
</CENTER>
</TD><TD>
<CENTER>
0x01
</CENTER>

</TD><TD><B><FONT SIZE=2>Ssbrk()</FONT></B></TD><TD><FONT SIZE=2>Reserve memory at the top of RAM.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.102</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
2
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x02</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Physbase()</FONT></B></TD><TD><FONT SIZE=2>Return the address of the physical screen.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.85</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
3
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x03</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Logbase()</FONT></B></TD><TD><FONT SIZE=2>Return the address of the logical screen.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.80</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
4
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x04</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Getrez()</FONT></B></TD><TD><FONT SIZE=2>Return the current screen resolution code.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.68</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x05</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Setscreen() </FONT></B>and<B><FONT SIZE=2>VsetScreen()</FONT></B>
</TD><TD><FONT SIZE=2>Set the current screen address and mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.97</FONT>4.108
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
6
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x06</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Setpalette()</FONT></B></TD><TD><FONT SIZE=2>Set entries in the ST compatible palette.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.95</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
7
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x07</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Setcolor()</FONT></B></TD><TD><FONT SIZE=2>Set an entry in the ST compatible palette.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.93</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
8
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x08</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Floprd()</FONT></B></TD><TD><FONT SIZE=2>Read a sector from a floppy disk.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.66</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
9
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x09</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Flopwr()</FONT></B></TD><TD><FONT SIZE=2>Write a sector to a floppy disk.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.67</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
10
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Flopfmt()</FONT></B></TD><TD><FONT SIZE=2>Format a sector on a floppy disk.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.63</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Dbmsg()</FONT></B></TD><TD><FONT SIZE=2>Send a debugging message to the resident debugger.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.28</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
12
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Midiws()</FONT></B></TD><TD><FONT SIZE=2>Write a string to the MIDI port.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.82</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
13
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Mfpint()</FONT></B></TD><TD><FONT SIZE=2>Define an MFP interrupt.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.81</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
14
</CENTER>
</TD><TD>
<CENTER>
0x0E
</CENTER>

</TD><TD><B><FONT SIZE=2>Iorec()</FONT></B></TD><TD><FONT SIZE=2>Return the address of the system <B>IOREC</B> structure.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.75</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
15
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Rsconf()</FONT></B></TD><TD><FONT SIZE=2>Configure the currently mapped RS232 port.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.89</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
16
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x10</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Keytbl()</FONT></B></TD><TD><FONT SIZE=2>Return the addresses of the current key mapping tables.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.78</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
17
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x11</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Random()</FONT></B></TD><TD><FONT SIZE=2>Return a random number.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.89</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
18
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x12</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Protobt()</FONT></B></TD><TD><FONT SIZE=2>Prototype a floppy boot sector.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.86</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
19
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x13</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Flopver()</FONT></B></TD><TD><FONT SIZE=2>Verify a sector on a floppy disk.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.66</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
20
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x14</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Scrdump()</FONT></B></TD><TD><FONT SIZE=2>Execute the built-in screen dump code.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.91</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
21
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x15</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Cursconf()</FONT></B></TD><TD><FONT SIZE=2>Configure the <B>TOS</B> cursor.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.27</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
22
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x16</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Settime()</FONT></B></TD><TD><FONT SIZE=2>Set the time of day and current date.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.98</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
23
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x17</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Gettime()</FONT></B></TD><TD><FONT SIZE=2>Get the time of day and current date.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.69</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
24
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x18</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Bioskeys()</FONT></B></TD><TD><FONT SIZE=2>Reset the keyboard mapping tables to default.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.24</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
25
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x19</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Ikbdws()</FONT></B></TD><TD><FONT SIZE=2>Write a string to the intelligent keyboard controller.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.72</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
26
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Jdisint()</FONT></B></TD><TD><FONT SIZE=2>Disable an MFP interrupt.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.76</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
27
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Jenabint()</FONT></B></TD><TD><FONT SIZE=2>Enable an MFP interrupt.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.76</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
28
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Giaccess()</FONT></B></TD><TD><FONT SIZE=2>Modify or set a register on the PSG.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.70</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
29
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Offgibit()</FONT></B></TD><TD><FONT SIZE=2>Toggle bits of the PSG Port A off.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.84</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
30
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Ongibit()</FONT></B></TD><TD><FONT SIZE=2>Toggle bits of the PSG Port A on.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.84</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
31
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Xbtimer()</FONT></B></TD><TD><FONT SIZE=2>Set an interrupt on the 68901.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.113</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
32
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x20</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Dosound()</FONT></B></TD><TD><FONT SIZE=2>Start an interrupt driven sound routine.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.33</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
33
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x21</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Setprt()</FONT></B></TD><TD><FONT SIZE=2>Set or read the printer configuration bits.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.96</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
34
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x22</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Kbdvbase()</FONT></B></TD><TD><FONT SIZE=2>Return the address of the current IKBD interrupt table.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.77</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
35
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x23</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Kbrate()</FONT></B></TD><TD><FONT SIZE=2>Set or read the keyboard repeat rate.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.78</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
36
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x24</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Prtblk()</FONT></B></TD><TD><FONT SIZE=2>Print a block of memory using the built-in screen dump routines.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.87</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
37
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x25</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Vsync()</FONT></B></TD><TD><FONT SIZE=2>Hold the process until the next vertical blank.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.110</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
38
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x26</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>Supexec()</FONT></B></TD><TD><FONT SIZE=2>Execute a routine in supervisor mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.103</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
39
</CENTER>
</TD><TD>
<CENTER>
0x27
</CENTER>

</TD><TD><B><FONT SIZE=2>Puntaes()</FONT></B></TD><TD><FONT SIZE=2>Discard the <B>AES</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.88</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
41
</CENTER>
</TD><TD>
<CENTER>
0x29
</CENTER>

</TD><TD><B><FONT SIZE=2>Floprate()</FONT></B></TD><TD><FONT SIZE=2>Set the floppy drive seek rates.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.65</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
42
</CENTER>
</TD><TD>
<CENTER>
0x2A
</CENTER>

</TD><TD><B><FONT SIZE=2>DMAread()</FONT></B></TD><TD><FONT SIZE=2>Read sectors from a DMA/SCSI device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.31</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
43
</CENTER>
</TD><TD>
<CENTER>
0x2B
</CENTER>

</TD><TD><B><FONT SIZE=2>DMAwrite()</FONT></B></TD><TD><FONT SIZE=2>Write sectors to a DMA/SCSI device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.32</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
44
</CENTER>
</TD><TD>
<CENTER>
0x2C
</CENTER>

</TD><TD><B><FONT SIZE=2>Bconmap()</FONT></B></TD><TD><FONT SIZE=2>Modify the <B>BIOS</B> device mapping table.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.23</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
46
</CENTER>
</TD><TD>
<CENTER>
0x2E
</CENTER>

</TD><TD><B><FONT SIZE=2>NVMaccess()</FONT></B></TD><TD><FONT SIZE=2>Access non-volatile RAM.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.83</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
48
</CENTER>
</TD><TD>
<CENTER>
0x30
</CENTER>

</TD><TD><B><FONT SIZE=2>Metainit()</FONT></B></TD><TD><FONT SIZE=2>Initialize <B>MetaDOS</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.80</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
64
</CENTER>
</TD><TD>
<CENTER>
0x40
</CENTER>

</TD><TD><B><FONT SIZE=2>Blitmode()</FONT></B></TD><TD><FONT SIZE=2>Get or set the state of the BLiTTER chip.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.25</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
80
</CENTER>
</TD><TD>
<CENTER>
0x50
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetShift()</FONT></B></TD><TD><FONT SIZE=2>Set the TT030 shift mode registers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.61</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
81
</CENTER>
</TD><TD>
<CENTER>
0x51
</CENTER>

</TD><TD><B><FONT SIZE=2>EgetShift()</FONT></B></TD><TD><FONT SIZE=2>Get the TT030 shift mode registers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.57</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
82
</CENTER>
</TD><TD>
<CENTER>
0x52
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetBank()</FONT></B></TD><TD><FONT SIZE=2>Set the current TT030 color bank.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.58</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
83
</CENTER>
</TD><TD>
<CENTER>
0x53
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetColor()</FONT></B></TD><TD><FONT SIZE=2>Get or set a color in the TT030 palette.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.59</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
84
</CENTER>
</TD><TD>
<CENTER>
0x54
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetPalette()</FONT></B></TD><TD><FONT SIZE=2>Set the TT030 palette.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.60</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
85
</CENTER>
</TD><TD>
<CENTER>
0x55
</CENTER>

</TD><TD><B><FONT SIZE=2>EgetPalette()</FONT></B></TD><TD><FONT SIZE=2>Get the TT030 palette.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.56</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
86
</CENTER>
</TD><TD>
<CENTER>
0x56
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetGray()</FONT></B></TD><TD><FONT SIZE=2>Set the TT030 gray mode register.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.60</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
87
</CENTER>
</TD><TD>
<CENTER>
0x57
</CENTER>

</TD><TD><B><FONT SIZE=2>EsetSmear()</FONT></B></TD><TD><FONT SIZE=2>Set the TT030 smear mode register.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.62</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
88
</CENTER>
</TD><TD>
<CENTER>
0x58
</CENTER>

</TD><TD><B><FONT SIZE=2>VsetMode()</FONT></B></TD><TD><FONT SIZE=2>Set the Falcon030 video mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.107</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
89
</CENTER>
</TD><TD>
<CENTER>
0x59
</CENTER>

</TD><TD><B><FONT SIZE=2>VgetMonitor()</FONT></B></TD><TD><FONT SIZE=2>Identify the kind of monitor attached to the Falcon030.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.104</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
90
</CENTER>
</TD><TD>
<CENTER>
0x5A
</CENTER>

</TD><TD><B><FONT SIZE=2>VsetSync()</FONT></B></TD><TD><FONT SIZE=2>Set the Falcon030 sync mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.109</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
91
</CENTER>
</TD><TD>
<CENTER>
0x5B
</CENTER>

</TD><TD><B><FONT SIZE=2>VgetSize()</FONT></B></TD><TD><FONT SIZE=2>Get the size of screen memory in bytes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.105</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
92
</CENTER>
</TD><TD>
<CENTER>
0x5C
</CENTER>

</TD><TD><B><FONT SIZE=2>VsetMask()</FONT></B></TD><TD><FONT SIZE=2>Set the mask assigned to each true color plotted.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.106</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
93
</CENTER>
</TD><TD>
<CENTER>
0x5D
</CENTER>

</TD><TD><B><FONT SIZE=2>VsetRGB()</FONT></B></TD><TD><FONT SIZE=2>Set the Falcon030 palette using RGB data.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.108</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
94
</CENTER>
</TD><TD>
<CENTER>
0x5E
</CENTER>

</TD><TD><B><FONT SIZE=2>VgetRGB()</FONT></B></TD><TD><FONT SIZE=2>Get the Falcon030 palette using RGB data.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.104</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
96
</CENTER>
</TD><TD>
<CENTER>
0x60
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_DoBlock()</FONT></B></TD><TD><FONT SIZE=2>Transfer bytewise packed data to/from the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.38</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
97
</CENTER>
</TD><TD>
<CENTER>
0x61
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_BlkHandshake()</FONT></B></TD><TD><FONT SIZE=2>Handshakes bytewise packed data to/from the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.35</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
98
</CENTER>
</TD><TD>
<CENTER>
0x62
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_BlkUnpacked()</FONT></B></TD><TD><FONT SIZE=2>Transfers data stored in a longword array to/from the DSP. </FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.36</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
99
</CENTER>
</TD><TD>
<CENTER>
0x63
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_InStream()</FONT></B></TD><TD><FONT SIZE=2>Transfers data to the DSP via an interrupt handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.45</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
100
</CENTER>
</TD><TD>
<CENTER>
0x64
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_OutStream()</FONT></B></TD><TD><FONT SIZE=2>Transfers data from the DSP via an interrupt handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.51</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
101
</CENTER>
</TD><TD>
<CENTER>
0x65
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_IOStream()</FONT></B></TD><TD><FONT SIZE=2>Transfers data to/from the DSP via concurrent interrupt handlers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.46</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
102
</CENTER>
</TD><TD>
<CENTER>
0x66
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_RemoveInterrupts()</FONT></B></TD>
<TD><FONT SIZE=2>Disable the generation of DSP interrupts.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.51</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
103
</CENTER>
</TD><TD>
<CENTER>
0x67
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_GetWordSize()</FONT></B></TD><TD><FONT SIZE=2>Get the current size of a DSP word.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.41</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
104
</CENTER>
</TD><TD>
<CENTER>
0x68
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Lock()</FONT></B></TD><TD><FONT SIZE=2>Lock the DSP system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.48</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
105
</CENTER>
</TD><TD>
<CENTER>
0x69
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Unlock()</FONT></B></TD><TD><FONT SIZE=2>Unlock the DSP system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.55</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
106
</CENTER>
</TD><TD>
<CENTER>
0x6A
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Available()</FONT></B></TD><TD><FONT SIZE=2>Determines the amount of free X and Y memory available in the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.34</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
107
</CENTER>
</TD><TD>
<CENTER>
0x6B
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Reserve()</FONT></B></TD><TD><FONT SIZE=2>Reserves a portion of DSP memory for a user program</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.53</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
108
</CENTER>
</TD><TD>
<CENTER>
0x6C
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_LoadProg()</FONT></B></TD><TD><FONT SIZE=2>Loads a '.LOD' file from disk, transmits it to the DSP, and executes it.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.47</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
109
</CENTER>
</TD><TD>
<CENTER>
0x6D
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_ExecProg()</FONT></B></TD><TD><FONT SIZE=2>Transfers a DSP program in memory to the DSP and executes it.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.39</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
110
</CENTER>
</TD><TD>
<CENTER>
0x6E
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_ExecBoot()</FONT></B></TD><TD><FONT SIZE=2>Resets the DSP and loads a new bootstrap program into the first 512 words of DSP memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.39</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
111
</CENTER>
</TD><TD>
<CENTER>
0x6F
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_LodToBinary()</FONT></B></TD><TD><FONT SIZE=2>Converts a '.LOD' file to binary format.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.49</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
112
</CENTER>
</TD><TD>
<CENTER>
0x70
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_TriggerHC()</FONT></B></TD><TD><FONT SIZE=2>Causes a host command set aside for DSP programs to execute.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.55</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
113
</CENTER>
</TD><TD>
<CENTER>
0x71
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_RequestUniqueAbility()</FONT></B>
</TD><TD><FONT SIZE=2>Requests a unique DSP ability identifier.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.52</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
114
</CENTER>
</TD><TD>
<CENTER>
0x72
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_GetProgAbility()</FONT></B></TD>
<TD><FONT SIZE=2>Returns the ability code for the program residing in DSP memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.40</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
115
</CENTER>
</TD><TD>
<CENTER>
0x73
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_FlushSubroutines()</FONT></B></TD>
<TD><FONT SIZE=2>Removes all DSP subroutines from memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.40</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
116
</CENTER>
</TD><TD>
<CENTER>
0x74
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_LoadSubroutine()</FONT></B></TD>
<TD><FONT SIZE=2>Loads a DSP subroutine into memory.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>4.48</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
117
</CENTER>
</TD><TD>
<CENTER>
0x75
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_InqSubrAbility()</FONT></B></TD>
<TD><FONT SIZE=2>Determines if a subroutine with the specified ability code is currently loaded into the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.44</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
118
</CENTER>
</TD><TD>
<CENTER>
0x76
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_RunSubroutine()</FONT></B></TD><TD><FONT SIZE=2>Begins execution of the specified subroutine.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.53</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
119
</CENTER>
</TD><TD>
<CENTER>
0x77
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Hf0()</FONT></B></TD><TD><FONT SIZE=2>Reads/writes bit #3 of the HSR.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.41</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
120
</CENTER>
</TD><TD>
<CENTER>
0x78
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Hf1()</FONT></B></TD><TD><FONT SIZE=2>Reads/writes bit #4 of the HSR.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.42</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
121
</CENTER>
</TD><TD>
<CENTER>
0x79
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Hf2()</FONT></B></TD><TD><FONT SIZE=2>Reads bit #5 of the HSR.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.43</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
122
</CENTER>
</TD><TD>
<CENTER>
0x7A
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Hf3()</FONT></B></TD><TD><FONT SIZE=2>Reads bit #6 of the HSR.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.43</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
123
</CENTER>
</TD><TD>
<CENTER>
0x7B
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_BlkWords()</FONT></B></TD><TD><FONT SIZE=2>Transfers an array of <B>WORD</B>s to/from the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.37</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
124
</CENTER>
</TD><TD>
<CENTER>
0x7C
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_BlkBytes()</FONT></B></TD><TD><FONT SIZE=2>Transfers an array of bytes to/from the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.34</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
125
</CENTER>
</TD><TD>
<CENTER>
0x7D
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_Hstat()</FONT></B></TD><TD><FONT SIZE=2>Returns the value of the DSP's ICR register.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.44</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
126
</CENTER>
</TD><TD>
<CENTER>
0x7E
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_SetVectors()</FONT></B></TD><TD><FONT SIZE=2>Defines interrupt handlers to be called when DSP data is ready to be sent or received.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.54</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
127
</CENTER>
</TD><TD>
<CENTER>
0x7F
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsp_MultBlocks()</FONT></B></TD><TD><FONT SIZE=2>Transmits multiple blocks to/from the DSP.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.50</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
128
</CENTER>
</TD><TD>
<CENTER>
0x80
</CENTER>

</TD><TD><B><FONT SIZE=2>Locksnd()</FONT></B></TD><TD><FONT SIZE=2>Lock the sound system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.79</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
129
</CENTER>
</TD><TD>
<CENTER>
0x81
</CENTER>

</TD><TD><B><FONT SIZE=2>Unlocksnd()</FONT></B></TD><TD><FONT SIZE=2>Unlock the sound system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.103</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
130
</CENTER>
</TD><TD>
<CENTER>
0x82
</CENTER>

</TD><TD><B><FONT SIZE=2>Soundcmd()</FONT></B></TD><TD><FONT SIZE=2>Execute a sound system specific function.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.100</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
131
</CENTER>
</TD><TD>
<CENTER>
0x83
</CENTER>

</TD><TD><B><FONT SIZE=2>Setbuffer()</FONT></B></TD><TD><FONT SIZE=2>Set the record and playback buffers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.92</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
132
</CENTER>
</TD><TD>
<CENTER>
0x84
</CENTER>

</TD><TD><B><FONT SIZE=2>Setmode()</FONT></B></TD><TD><FONT SIZE=2>Set the playback/record mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.94</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
133
</CENTER>
</TD><TD>
<CENTER>
0x85
</CENTER>

</TD><TD><B><FONT SIZE=2>Settracks()</FONT></B></TD><TD><FONT SIZE=2>Set the playback/record tracks.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.99</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
134
</CENTER>
</TD><TD>
<CENTER>
0x86
</CENTER>

</TD><TD><B><FONT SIZE=2>Setmontracks()</FONT></B></TD><TD><FONT SIZE=2>Set the track to be output over the speaker/headphone.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.95</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
135
</CENTER>
</TD><TD>
<CENTER>
0x87
</CENTER>

</TD><TD><B><FONT SIZE=2>Setinterrupt()</FONT></B></TD><TD><FONT SIZE=2>Set the sound system interrupts.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.93</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
136
</CENTER>
</TD><TD>
<CENTER>
0x88
</CENTER>

</TD><TD><B><FONT SIZE=2>Buffoper()</FONT></B></TD><TD><FONT SIZE=2>Enable or disable playback/recording.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.25</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
137
</CENTER>
</TD><TD>
<CENTER>
0x89
</CENTER>

</TD><TD><B><FONT SIZE=2>Dsptristate()</FONT></B></TD><TD><FONT SIZE=2>Connect or disconnect the DSP from the connection matrix.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.56</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
138
</CENTER>
</TD><TD>
<CENTER>
0x8A
</CENTER>

</TD><TD><B><FONT SIZE=2>Gpio()</FONT></B></TD><TD><FONT SIZE=2>Read or write data over the general purpose pins on the DSP port.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.72</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
139
</CENTER>
</TD><TD>
<CENTER>
0x8B
</CENTER>

</TD><TD><B><FONT SIZE=2>Devconnect()</FONT></B></TD><TD><FONT SIZE=2>Connect devices in the connection matrix.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.29</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
140
</CENTER>
</TD><TD>
<CENTER>
0x8C
</CENTER>

</TD><TD><B><FONT SIZE=2>Sndstatus()</FONT></B></TD><TD><FONT SIZE=2>Obtain the status of the sound system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.99</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
141
</CENTER>
</TD><TD>
<CENTER>
0x8D
</CENTER>

</TD><TD><B><FONT SIZE=2>Buffptr()</FONT></B></TD><TD><FONT SIZE=2>Return the current position of the record or playback buffer pointers.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.26</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
165
</CENTER>
</TD><TD>
<CENTER>
0xA5
</CENTER>

</TD><TD><B><FONT SIZE=2>WavePlay()</FONT></B></TD><TD><FONT SIZE=2>Playback a DMA sample.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>4.110</FONT>
</CENTER>
</TD>
</TR>

</TABLE>

<P>

<HR>

<a name=opcode><H4><FONT SIZE=4 >AES Functions by Opcode</FONT>
</H4>

<HR>

<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Dec</FONT></B>
</CENTER>

</TH><TH>
<CENTER>
<B><FONT SIZE=2 >Hex</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Function</FONT></B></TH>
<TH><B><FONT SIZE=2 >Summary</FONT></B></TH><TH>
<CENTER>
<B><FONT SIZE=2 >Page</FONT></B>
</CENTER>

</TH></TR>

</TABLE>

<P>

<TABLE BORDER=1>

<TR><TD>
<CENTER>
10
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0A</FONT>
</CENTER>

</TD><TH><B><FONT SIZE=2>appl_init()</FONT></B></TH><TD><FONT SIZE=2>Initializes a <B>GEM</B> application.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.53</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_read()</FONT></B></TD><TD><FONT SIZE=2>Reads data from the message pipe.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.54</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
12
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_write()</FONT></B></TD><TD><FONT SIZE=2>Writes data to the message pipe.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.58</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
13
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_find()</FONT></B></TD><TD><FONT SIZE=2>Locates a system process.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.47</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
14
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_tplay()</FONT></B></TD><TD><FONT SIZE=2>Plays back recorded events.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.56</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
15
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x0F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_trecord()</FONT></B></TD><TD><FONT SIZE=2>Records keyboard and mouse events.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.57</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
18
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x12</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_search()</FONT></B></TD><TD><FONT SIZE=2>Enumerates system processes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.55</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
19
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x13</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_exit()</FONT></B></TD><TD><FONT SIZE=2>Prepares a <B>GEM</B> application for termination.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.47</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
20
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x14</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_keybd()</FONT></B></TD><TD><FONT SIZE=2>Waits for a keyboard event.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.63</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
21
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x15</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_button()</FONT></B></TD><TD><FONT SIZE=2>Waits for a mouse button event.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.61</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
22
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x16</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_mouse()</FONT></B></TD><TD><FONT SIZE=2>Waits for a mouse rectangle event.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.70</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
23
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x17</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_mesag()</FONT></B></TD><TD><FONT SIZE=2>Waits for an application message.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.64</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
24
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x18</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_timer()</FONT></B></TD><TD><FONT SIZE=2>Waits for a timer event.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.73</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
25
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x19</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_multi()</FONT></B></TD><TD><FONT SIZE=2>Waits for multiple events.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.71</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
26
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>evnt_dclick()</FONT></B></TD><TD><FONT SIZE=2>Sets the mouse double-click rate.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.62</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
30
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_bar()</FONT></B></TD><TD><FONT SIZE=2>Displays/removes a menu bar.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.105</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
31
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x1F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_icheck()</FONT></B></TD><TD><FONT SIZE=2>Places a checkmark beside a menu item.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.106</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
32
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x20</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_ienable()</FONT></B></TD><TD><FONT SIZE=2>Enables/disables a menu item.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.106</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
33
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x21</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_tnormal()</FONT></B></TD><TD><FONT SIZE=2>Selects/deselects a menu item or title.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.111</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
34
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x22</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_text()</FONT></B></TD><TD><FONT SIZE=2>Changes menu item/title text.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.111</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
35
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x23</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_register()</FONT></B></TD><TD><FONT SIZE=2>Registers applications in the menu bar.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.109</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
36
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x24</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_popup()</FONT></B></TD><TD><FONT SIZE=2>Manages a floating popup menu.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.108</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
37
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x25</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_attach()</FONT></B></TD><TD><FONT SIZE=2>Attaches a sub-menu to a menu item.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.103</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
38
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x26</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_istart()</FONT></B></TD><TD><FONT SIZE=2>Defines the initial selection of a sub-menu.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.107</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
39
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x27</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>menu_settings()</FONT></B></TD><TD><FONT SIZE=2>Modifies popup menu settings.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.110</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
40
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x28</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_add()</FONT></B></TD><TD><FONT SIZE=2>Adds an object to an object tree.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.115</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
41
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x29</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_delete()</FONT></B></TD><TD><FONT SIZE=2>Deletes an object from an object tree.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.116</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
42
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_draw()</FONT></B></TD><TD><FONT SIZE=2>Draws an object tree.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.117</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
43
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_find()</FONT></B></TD><TD><FONT SIZE=2>Locates an object based on screen coordinates.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.119</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
44
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_offset()</FONT></B></TD><TD><FONT SIZE=2>Determines the offset of child objects in an object tree.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.120</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
45
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_order()</FONT></B></TD><TD><FONT SIZE=2>Reorders objects within an object tree.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
46
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_edit()</FONT></B></TD><TD><FONT SIZE=2>Manipulates an editable object.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.118</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
47
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x2F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_change()</FONT></B></TD><TD><FONT SIZE=2>Changes the state of an object.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.115</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
48
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x30</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>objc_sysvar()</FONT></B></TD><TD><FONT SIZE=2>Reads/modifies the system defaults for 3D effects.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
50
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x32</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_do()</FONT></B></TD><TD><FONT SIZE=2>Manages a user-defined form.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.81</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
51
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x33</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_dial()</FONT></B></TD><TD><FONT SIZE=2>Reserves/releases screen space for forms.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.80</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
52
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x34</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_alert()</FONT></B></TD><TD><FONT SIZE=2>Manages a generic alert.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.77</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
53
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x35</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_error()</FONT></B></TD><TD><FONT SIZE=2>Manages a generic error alert.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.82</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
54
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x36</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_center()</FONT></B></TD><TD><FONT SIZE=2>Centers an object tree on screen.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.79</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
55
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x37</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>form_keybd()</FONT></B></TD><TD><FONT SIZE=2>Provides a system-level editable field handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.83</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
56
</CENTER>
</TD><TD>
<CENTER>
0x38
</CENTER>

</TD><TD><B><FONT SIZE=2>form_button()</FONT></B></TD><TD><FONT SIZE=2>Provides a system-level button handler.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.78</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
70
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x46</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_rubberbox()</FONT></B></TD><TD><FONT SIZE=2>Controls the shrinking/enlarging of a box outline.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.97</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
71
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x47</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_dragbox()</FONT></B></TD><TD><FONT SIZE=2>Controls the moving of a box outline.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.91</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
72
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x48</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_movebox()</FONT></B></TD><TD><FONT SIZE=2>Draws a moving box.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.96</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
73
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x49</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_growbox()</FONT></B></TD><TD><FONT SIZE=2>Draws an expanding box.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.92</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
74
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x50</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_shrinkbox()</FONT></B></TD><TD><FONT SIZE=2>Draws a shrinking box.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.98</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
75
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x51</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_watchbox()</FONT></B></TD><TD><FONT SIZE=2>Selects/draws an object depending on the position of the mouse.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.100</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
76
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x52</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_slidebox()</FONT></B></TD><TD><FONT SIZE=2>Controls a slider outline.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.99</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
77
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x53</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_handle()</FONT></B></TD><TD><FONT SIZE=2>Obtains <B>AES</B> workstation attributes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.92</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
78
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x54</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_mouse()</FONT></B></TD><TD><FONT SIZE=2>Defines the mouse form.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.94</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
79
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x55</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>graf_mkstate()</FONT></B></TD><TD><FONT SIZE=2>Provides information about the mouse state.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.93</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
80
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x56</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>scrp_read()</FONT></B></TD><TD><FONT SIZE=2>Determines the system scrap directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.135</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
81
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x57</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>scrp_write()</FONT></B></TD><TD><FONT SIZE=2>Sets the system scrap directory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.136</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
90
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x58</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>fsel_input()</FONT></B></TD><TD><FONT SIZE=2>Manages the file selector.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.88</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
91
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x59</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>fsel_exinput()</FONT></B></TD><TD><FONT SIZE=2>Manages the extended file selector.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.87</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
100
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x64</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_create()</FONT></B></TD><TD><FONT SIZE=2>Creates a window.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.150</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
101
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x65</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_open()</FONT></B></TD><TD><FONT SIZE=2>Opens a window.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.158</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
102
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x66</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_close()</FONT></B></TD><TD><FONT SIZE=2>Closes a window.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.150</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
103
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x67</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_delete()</FONT></B></TD><TD><FONT SIZE=2>Deletes a window.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.152</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
104
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x68</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_get()</FONT></B></TD><TD><FONT SIZE=2>Returns window attributes.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.153</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
105
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x69</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_set()</FONT></B></TD><TD><FONT SIZE=2>Sets a window attribute.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.158</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
106
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_find()</FONT></B></TD><TD><FONT SIZE=2>Determines the window at given pixel coordinates.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.152</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
107
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_update()</FONT></B></TD><TD><FONT SIZE=2>Manages the window update semaphore.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.161</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
108
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_calc()</FONT></B></TD><TD><FONT SIZE=2>Calculates window extents.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.149</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
109
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>wind_new()</FONT></B></TD><TD><FONT SIZE=2>Removes all windows.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.157</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
110
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6E</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_load()</FONT></B></TD><TD><FONT SIZE=2>Loads a disk-based resource file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.128</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
111
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x6F</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_free()</FONT></B></TD><TD><FONT SIZE=2>Releases a resource file from memory.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.127</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
112
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x70</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_gaddr()</FONT></B></TD><TD><FONT SIZE=2>Calculates the address of a resource element.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.127</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
113
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x71</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_saddr()</FONT></B></TD><TD><FONT SIZE=2>Sets the address of a resource element.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.130</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
114
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x72</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_obfix()</FONT></B></TD><TD><FONT SIZE=2>Changes the coordinates of an object from character-based to pixel-based.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.129</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
115
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x73</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>rsrc_rcfix()</FONT></B></TD><TD><FONT SIZE=2>Changes the coordinates of a resource file from character-based to pixel-based.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.130</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
120
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x78</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_read()</FONT></B></TD><TD><FONT SIZE=2>Determine's the processes parent and command tail.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.141</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
121
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x79</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_write()</FONT></B></TD><TD><FONT SIZE=2>Manages process loading and control.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.142</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
122
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x7A</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_get()</FONT></B></TD><TD><FONT SIZE=2>Copies data from the system's shell buffer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.140</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
123
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x7B</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_put()</FONT></B></TD><TD><FONT SIZE=2>Stores data in the system's shell buffer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.141</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
124
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x7C</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_find()</FONT></B></TD><TD><FONT SIZE=2>Searches the <B>AES</B>'s path for a file.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.139</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
125
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x7D</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>shel_envrn()</FONT></B></TD><TD><FONT SIZE=2>Searches the system environment string.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.139</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
130
</CENTER>
</TD><TD>
<CENTER>
<FONT SIZE=2>0x82</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>appl_getinfo()</FONT></B></TD><TD><FONT SIZE=2>Returns information about the <B>AES</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>6.48</FONT>
</CENTER>
</TD>
</TR>

</TABLE>

<P>

<HR>

<a name=vdi><H4><FONT SIZE=4 >VDI Functions by Opcode</FONT>
</H4>

<HR>

<TABLE BORDER=1>

<TR><TH>
<CENTER>
<B><FONT SIZE=1 >Opcode, Subopcode(s)  (if required)</FONT></B>
</CENTER>

</TH><TH><B><FONT SIZE=2 >Function</FONT></B></TH>
<TH><B><FONT SIZE=2 >Summary</FONT></B></TH><TH>
<CENTER>
<B><FONT SIZE=2 >Page</FONT></B>
</CENTER>

</TH></TR>

</TABLE>

<P>

<TABLE BORDER=1>

<TR><TD>
<CENTER>
N/A
</CENTER>
</TD><TH><B><FONT SIZE=2>vq_gdos()</FONT></B>
</TH><TD><FONT SIZE=2>Test for presence of <B>GDOS</B>.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.92</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
-1, 6
</CENTER>
</TD><TD><B><FONT SIZE=2>v_set_app_buff()</FONT></B>
</TD><TD><FONT SIZE=2>Reserve bezier workspace.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.77</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
1
</CENTER>
</TD><TD><B><FONT SIZE=2>v_opnwk()</FONT></B>
</TD><TD><FONT SIZE=2>Open physical workstation.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.66</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
2
</CENTER>
</TD><TD><B><FONT SIZE=2>v_clswk()</FONT></B>
</TD><TD><FONT SIZE=2>Close a physical workstation.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.35</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
3
</CENTER>
</TD><TD><B><FONT SIZE=2>v_clrwk()</FONT></B>
</TD><TD><FONT SIZE=2>Clears a specified physical workstation.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.34</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
4
</CENTER>
</TD><TD><B><FONT SIZE=2>v_updwk()</FONT></B>
</TD><TD><FONT SIZE=2>Update workstation.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.78</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 1
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_chcells()</FONT></B>
</TD><TD><FONT SIZE=2>Return alpha screen size.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.87</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 2
</CENTER>
</TD><TD><B><FONT SIZE=2>v_exit_cur()</FONT></B>
</TD><TD><FONT SIZE=2>Exit text mode.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.46</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 3
</CENTER>
</TD><TD><B><FONT SIZE=2>v_enter_cur()</FONT></B>
</TD><TD><FONT SIZE=2>Enter text mode.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.45</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 4
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curup()</FONT></B>
</TD><TD><FONT SIZE=2>Move text cursor up one row.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.40</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 5
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curdown()</FONT></B>
</TD><TD><FONT SIZE=2>Move text cursor down one row.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.37</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 6
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curright()</FONT></B>
</TD><TD><FONT SIZE=2>Move text cursor right one row.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.38</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 7
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curleft()</FONT></B>
</TD><TD><FONT SIZE=2>Move text cursor up one row.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.38</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 8
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curhome()</FONT></B>
</TD><TD><FONT SIZE=2>Home text cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.37</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 9
</CENTER>
</TD><TD><B><FONT SIZE=2>v_eeos()</FONT></B>
</TD><TD><FONT SIZE=2>Erase to end of screen.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.42</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 10
</CENTER>
</TD><TD><B><FONT SIZE=2>v_eeol()</FONT></B>
</TD><TD><FONT SIZE=2>Erase to end of line.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.41</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 11
</CENTER>
</TD><TD><B><FONT SIZE=2>vs_curaddress()</FONT></B>
</TD><TD><FONT SIZE=2>Position text cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.126</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 12
</CENTER>
</TD><TD><B><FONT SIZE=2>v_curtext()</FONT></B>
</TD><TD><FONT SIZE=2>Output text (alpha mode).</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.39</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 13
</CENTER>
</TD><TD><B><FONT SIZE=2>v_rvon()</FONT></B>
</TD><TD><FONT SIZE=2>Reverse text on (alpha mode).</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.75</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 14
</CENTER>
</TD><TD><B><FONT SIZE=2>v_rvoff()</FONT></B>
</TD><TD><FONT SIZE=2>Reverse text off (alpha mode).</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.75</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 15
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_curaddress()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire text cursor location.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.89</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 16
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_tabstatus()</FONT></B>
</TD><TD><FONT SIZE=2>Get availability of tablet.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.95</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 17
</CENTER>
</TD><TD><B><FONT SIZE=2>v_hardcopy()</FONT></B>
</TD><TD><FONT SIZE=2>Output screen to printer.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.57</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 18
</CENTER>
</TD><TD><B><FONT SIZE=2>v_dspcur()</FONT></B>
</TD><TD><FONT SIZE=2>Display text cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.40</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 19
</CENTER>
</TD><TD><B><FONT SIZE=2>v_rmcur()</FONT></B>
</TD><TD><FONT SIZE=2>Remove text cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.74</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 20
</CENTER>
</TD><TD><B><FONT SIZE=2>v_form_adv()</FONT></B>
</TD><TD><FONT SIZE=2>Advance printer page.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.48</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 21
</CENTER>
</TD><TD><B><FONT SIZE=2>v_output_window()</FONT></B>
</TD><TD><FONT SIZE=2>Output window of page to printer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.68</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 22
</CENTER>
</TD><TD><B><FONT SIZE=2>v_clear_disp_list()</FONT></B>
</TD><TD><FONT SIZE=2>Clear display list.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.34</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 23
</CENTER>
</TD><TD><B><FONT SIZE=2>v_bit_image()</FONT></B>
</TD><TD><FONT SIZE=2>Render bit-image file.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.31</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 24
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_scan()</FONT></B>
</TD><TD><FONT SIZE=2>Return printer scan heights.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.94</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 25
</CENTER>
</TD><TD><B><FONT SIZE=2>v_alpha_text()</FONT></B>
</TD><TD><FONT SIZE=2>Output printer text (alpha mode).</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.23</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 60
</CENTER>
</TD><TD><B><FONT SIZE=2>vs_palette()</FONT></B>
</TD><TD><FONT SIZE=2>Set color palette.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.127</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 81
</CENTER>
</TD><TD><B><FONT SIZE=2>vt_resolution()</FONT></B>
</TD><TD><FONT SIZE=2>Set tablet resolution.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.165</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 82
</CENTER>
</TD><TD><B><FONT SIZE=2>vt_axis()</FONT></B>
</TD><TD><FONT SIZE=2>Set tablet axis resolution.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.164</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 83
</CENTER>
</TD><TD><B><FONT SIZE=2>vt_origin()</FONT></B>
</TD><TD><FONT SIZE=2>Set tablet origin.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.164</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 84
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_tdimensions()</FONT></B>
</TD><TD><FONT SIZE=2>Return tablet X and Y dimensions.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.96</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 85
</CENTER>
</TD><TD><B><FONT SIZE=2>vt_alignment()</FONT></B>
</TD><TD><FONT SIZE=2>Set tablet alignment.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.163</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 91
</CENTER>
</TD><TD><B><FONT SIZE=2>vqp_films()</FONT></B>
</TD><TD><FONT SIZE=2>Return camera film types.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.101</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 92
</CENTER>
</TD><TD><B><FONT SIZE=2>vqp_state()</FONT></B>
</TD><TD><FONT SIZE=2>Return camera driver state.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.101</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 93
</CENTER>
</TD><TD><B><FONT SIZE=2>vsp_state()</FONT></B>
</TD><TD><FONT SIZE=2>Set camera driver state.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.145</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 94
</CENTER>
</TD><TD><B><FONT SIZE=2>vsp_save()</FONT></B>
</TD><TD><FONT SIZE=2>Save camera driver state.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.145</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 95
</CENTER>
</TD><TD><B><FONT SIZE=2>vsp_message()</FONT></B>
</TD><TD><FONT SIZE=2>Supress camera screen messages.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.144</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 96
</CENTER>
</TD><TD><B><FONT SIZE=2>vqp_error()</FONT></B>
</TD><TD><FONT SIZE=2>Return camera error status.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.100</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 98
</CENTER>
</TD><TD><B><FONT SIZE=2>v_meta_extents()</FONT></B>
</TD><TD><FONT SIZE=2>Specify metafile bounding box.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.60</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
5, 99<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_write_meta()</FONT></B></TD><TD><FONT SIZE=2>Write metafile item.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.79</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 99, 0<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vm_pagesize()</FONT></B></TD><TD><FONT SIZE=2>Set metafile page size.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.85</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 99, 1<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vm_coords()</FONT></B></TD><TD><FONT SIZE=2>Set metafile coordinate system.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.83</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 99, 32, 1<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_bez_qual()</FONT></B></TD><TD><FONT SIZE=2>Set bezier quality.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.30</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
5, 100
</CENTER>
</TD><TD><B><FONT SIZE=2>vm_filename()</FONT></B>
</TD><TD><FONT SIZE=2>Set metafile filename.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.84</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 102
</CENTER>
</TD><TD><B><FONT SIZE=2>v_fontinit()</FONT></B>
</TD><TD><FONT SIZE=2>Select a new system font.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.48</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
5, 2000
</CENTER>
</TD><TD><B><FONT SIZE=2>v_pgcount()</FONT></B>
</TD><TD><FONT SIZE=2>Specify laser printer copies.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.69</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
6
</CENTER>
</TD><TD><B><FONT SIZE=2>v_pline()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a polyline.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.71</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
6, 13
</CENTER>
</TD><TD><B><FONT SIZE=2>v_bez()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a bezier curve.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.26</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
7
</CENTER>
</TD><TD><B><FONT SIZE=2>v_pmarker()</FONT></B>
</TD><TD><FONT SIZE=2>Draw polymarkers.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.72</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
8
</CENTER>
</TD><TD><B><FONT SIZE=2>v_gtext()</FONT></B>
</TD><TD><FONT SIZE=2>Output graphic text.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.56</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
9
</CENTER>
</TD><TD><B><FONT SIZE=2>v_fillarea()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a filled polygon.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.46</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
9, 13
</CENTER>
</TD><TD><B><FONT SIZE=2>v_bez_fill()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a filled bezier curve.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.27</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
10
</CENTER>
</TD><TD><B><FONT SIZE=2>v_cellarray()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a cell array.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.32</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 1
</CENTER>
</TD><TD><B><FONT SIZE=2>v_bar()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a rectangle.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.25</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 2
</CENTER>
</TD><TD><B><FONT SIZE=2>v_arc()</FONT></B>
</TD><TD><FONT SIZE=2>Draw an arc.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.24</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 3
</CENTER>
</TD><TD><B><FONT SIZE=2>v_pieslice()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a pieslice.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.70</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 4
</CENTER>
</TD><TD><B><FONT SIZE=2>v_circle()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a circle.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.33</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 5
</CENTER>
</TD><TD><B><FONT SIZE=2>v_ellipse()</FONT></B>
</TD><TD><FONT SIZE=2>Draw an ellipse</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.43</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 6
</CENTER>
</TD><TD><B><FONT SIZE=2>v_ellarc()</FONT></B>
</TD><TD><FONT SIZE=2>Draw an elliptical arc.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.42</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 7
</CENTER>
</TD><TD><B><FONT SIZE=2>v_ellpie()</FONT></B>
</TD><TD><FONT SIZE=2>Draw an elliptical pie segment.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.44</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
11, 8
</CENTER>
</TD><TD><B><FONT SIZE=2>v_rbox()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a rounded-rectangle.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.72</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 9
</CENTER>
</TD><TD><B><FONT SIZE=2>v_rfbox()</FONT></B>
</TD><TD><FONT SIZE=2>Draw a filled rounded-rectangle.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.73</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11, 10
</CENTER>
</TD><TD><B><FONT SIZE=2>v_justified()</FONT></B>
</TD><TD><FONT SIZE=2>Output justified text.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.58</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
11, 13<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_bez_off()</FONT></B></TD><TD><FONT SIZE=2>Disable bezier drawing.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.28</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
11, 13<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_bez_on()</FONT></B></TD><TD><FONT SIZE=2>Enable bezier drawing.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.29</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
12
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_height()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text height (in pixels).</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.153</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
13
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_rotation()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text rotation.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.156</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
14
</CENTER>
</TD><TD><B><FONT SIZE=2>vs_color()</FONT></B>
</TD><TD><FONT SIZE=2>Set color palette index.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.126</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
15
</CENTER>
</TD><TD><B><FONT SIZE=2>vsl_type()</FONT></B>
</TD><TD><FONT SIZE=2>Set line type.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.135</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
16
</CENTER>
</TD><TD><B><FONT SIZE=2>vsl_width()</FONT></B>
</TD><TD><FONT SIZE=2>Set line width.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.137</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
17
</CENTER>
</TD><TD><B><FONT SIZE=2>vsl_color()</FONT></B>
</TD><TD><FONT SIZE=2>Set line color.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.134</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
18
</CENTER>
</TD><TD><B><FONT SIZE=2>vsm_type()</FONT></B>
</TD><TD><FONT SIZE=2>Set marker type.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.142</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
19
</CENTER>
</TD><TD><B><FONT SIZE=2>vsm_height()</FONT></B>
</TD><TD><FONT SIZE=2>Set marker height.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.139</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
20
</CENTER>
</TD><TD><B><FONT SIZE=2>vsm_color()</FONT></B>
</TD><TD><FONT SIZE=2>Set marker color.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.138</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
21
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_font()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text font.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.152</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
22
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_color()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text color.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.150</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
23
</CENTER>
</TD><TD><B><FONT SIZE=2>vsf_interior()</FONT></B>
</TD><TD><FONT SIZE=2>Set fill interior type.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.129</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
24
</CENTER>
</TD><TD><B><FONT SIZE=2>vsf_style()</FONT></B>
</TD><TD><FONT SIZE=2>Set fill style type.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.131</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
25
</CENTER>
</TD><TD><B><FONT SIZE=2>vsf_color()</FONT></B>
</TD><TD><FONT SIZE=2>Set fill color.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.129</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
26
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_color()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire palette index.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.88</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
27
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_cellarray()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire cell array.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.86</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
28<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vrq_locator()</FONT></B></TD><TD><FONT SIZE=2>Poll for mouse/keyboard input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
28<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vsm_locator()</FONT></B></TD><TD><FONT SIZE=2>Sample mouse/keyboard input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.140</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
29<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vrq_valuator()</FONT></B></TD><TD><FONT SIZE=2>Poll for 'valuator' input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.123</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
29<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vsm_valuator()</FONT></B></TD><TD><FONT SIZE=2>Sample 'valuator' input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.143</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
30<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vrq_choice()</FONT></B></TD><TD><FONT SIZE=2>Poll for 'choice' input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.121</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
30<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vsm_choice()</FONT></B></TD><TD><FONT SIZE=2>Sample input from 'choice' device.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.138</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
31<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vrq_string()</FONT></B></TD><TD><FONT SIZE=2>Poll for keyboard string input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.122</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
31<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vsm_string()</FONT></B></TD><TD><FONT SIZE=2>Sample keyboard string input.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.141</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
32
</CENTER>
</TD><TD><B><FONT SIZE=2>vswr_mode()</FONT></B>
</TD><TD><FONT SIZE=2>Set writing mode.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.162</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
33
</CENTER>
</TD><TD><B><FONT SIZE=2>vsin_mode()</FONT></B>
</TD><TD><FONT SIZE=2>Set input mode.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.133</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
35
</CENTER>
</TD><TD><B><FONT SIZE=2>vql_attributes()</FONT></B>
</TD><TD><FONT SIZE=2>Return line attributes.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.98</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
36
</CENTER>
</TD><TD><B><FONT SIZE=2>vqm_attributes()</FONT></B>
</TD><TD><FONT SIZE=2>Return marker attributes.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.99</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
37
</CENTER>
</TD><TD><B><FONT SIZE=2>vqf_attributes()</FONT></B>
</TD><TD><FONT SIZE=2>Return fill area attributes.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.96</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
38
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_attributes()</FONT></B>
</TD><TD><FONT SIZE=2>Return text attributes.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.104</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
39
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_alignment()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text alignment. </FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.146</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
100
</CENTER>
</TD><TD><B><FONT SIZE=2>v_opnvwk()</FONT></B>
</TD><TD><FONT SIZE=2>Open virtual workstation.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.61</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
101
</CENTER>
</TD><TD><B><FONT SIZE=2>v_clsvwk()</FONT></B>
</TD><TD><FONT SIZE=2>Close a virtual workstation.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.35</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
102
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_extnd()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire workstation attributes.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.89</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
103
</CENTER>
</TD><TD><B><FONT SIZE=2>v_contourfill()</FONT></B>
</TD><TD><FONT SIZE=2>Fill an irregularly shaped region.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.36</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
104
</CENTER>
</TD><TD><B><FONT SIZE=2>vsf_perimeter()</FONT></B>
</TD><TD><FONT SIZE=2>Set fill perimeter visibility.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.130</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
105
</CENTER>
</TD><TD><B><FONT SIZE=2>v_get_pixel()</FONT></B>
</TD><TD><FONT SIZE=2>Read screen pixel value.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.55</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
106
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_effects()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text effects.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.150</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
107
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_point()</FONT></B>
</TD><TD><FONT SIZE=2>Set graphic text height (by point).</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.155</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
108
</CENTER>
</TD><TD><B><FONT SIZE=2>vsl_ends()</FONT></B>
</TD><TD><FONT SIZE=2>Set line end style.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.134</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
109
</CENTER>
</TD><TD><B><FONT SIZE=2>vro_cpyfm()</FONT></B>
</TD><TD><FONT SIZE=2>Copy raster (opaque mode).</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.119</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
110
</CENTER>
</TD><TD><B><FONT SIZE=2>vr_trnfm()</FONT></B>
</TD><TD><FONT SIZE=2>Transform raster form.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.117</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
111
</CENTER>
</TD><TD><B><FONT SIZE=2>vsc_form()</FONT></B>
</TD><TD><FONT SIZE=2>Set mouse form.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.128</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
112
</CENTER>
</TD><TD><B><FONT SIZE=2>vsf_udpat()</FONT></B>
</TD><TD><FONT SIZE=2>Set user defined fill pattern</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.132</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
113
</CENTER>
</TD><TD><B><FONT SIZE=2>vsl_udsty()</FONT></B>
</TD><TD><FONT SIZE=2>Set user-defined line style.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.136</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
114
</CENTER>
</TD><TD><B><FONT SIZE=2>vr_recfl()</FONT></B>
</TD><TD><FONT SIZE=2>Output filled rectangle.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.117</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
115
</CENTER>
</TD><TD><B><FONT SIZE=2>vqin_mode()</FONT></B>
</TD><TD><FONT SIZE=2>Return input mode for device.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.97</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
116
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_extent()</FONT></B>
</TD><TD><FONT SIZE=2>Return graphic text extent.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.107</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
117
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_width()</FONT></B>
</TD><TD><FONT SIZE=2>Return graphic character width.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.115</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
118
</CENTER>
</TD><TD><B><FONT SIZE=2>vex_timv()</FONT></B>
</TD><TD><FONT SIZE=2>Install timer tick routine.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.83</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
119
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_load_fonts()</FONT></B>
</TD><TD><FONT SIZE=2>Load fonts from disk.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.154</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
120
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_unload_fonts()</FONT></B>
</TD><TD><FONT SIZE=2>Unload fonts.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.160</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
121
</CENTER>
</TD><TD><B><FONT SIZE=2>vrt_cpyfm()</FONT></B>
</TD><TD><FONT SIZE=2>Copy raster (transparent mode).</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.124</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
122
</CENTER>
</TD><TD><B><FONT SIZE=2>v_show_c()</FONT></B>
</TD><TD><FONT SIZE=2>Show mouse cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.77</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
123
</CENTER>
</TD><TD><B><FONT SIZE=2>v_hide_c()</FONT></B>
</TD><TD><FONT SIZE=2>Hide mouse cursor.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.57</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
124
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_mouse()</FONT></B>
</TD><TD><FONT SIZE=2>Get mouse position and state.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.93</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
125
</CENTER>
</TD><TD><B><FONT SIZE=2>vex_butv()</FONT></B>
</TD><TD><FONT SIZE=2>Install mouse button routine.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.80</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
126
</CENTER>
</TD><TD><B><FONT SIZE=2>vex_motv()</FONT></B>
</TD><TD><FONT SIZE=2>Install mouse movement routine.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.82</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
127
</CENTER>
</TD><TD><B><FONT SIZE=2>vex_curv()</FONT></B>
</TD><TD><FONT SIZE=2>Install mouse rendering routine.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.81</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
128
</CENTER>
</TD><TD><B><FONT SIZE=2>vq_key_s()</FONT></B>
</TD><TD><FONT SIZE=2>Get shift key status.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.93</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
129
</CENTER>
</TD><TD><B><FONT SIZE=2>vs_clip()</FONT></B>
</TD><TD><FONT SIZE=2>Set clipping rectangle.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.125</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
130
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_name()</FONT></B>
</TD><TD><FONT SIZE=2>Return font name and index.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.113</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
131
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_fontinfo()</FONT></B>
</TD><TD><FONT SIZE=2>Return font size information.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.111</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
232
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_fontheader()</FONT></B>
</TD><TD><FONT SIZE=2>Copy the Speedo font header into a user defined buffer.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.110</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
234
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_trackkern()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire about current track kerning.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.114</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
235
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_pairkern()</FONT></B>
</TD><TD><FONT SIZE=2>Inquire about current pair kerning.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.115</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
236
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_charmap()</FONT></B>
</TD><TD><FONT SIZE=2>Set ASCII/Speedo index interpretation mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.149</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
237
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_kern()</FONT></B>
</TD><TD><FONT SIZE=2>Set kerning modes.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.154</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
239
</CENTER>
</TD><TD><B><FONT SIZE=2>v_getbitmap_info()</FONT></B>
</TD><TD><FONT SIZE=2>Return Speedo font bitmap extents.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.53</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
240<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vqt_f_extent()</FONT></B></TD><TD><FONT SIZE=2>Return outline text extent.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.108</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
240<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vqt_f_extent16()</FONT></B></TD><TD><FONT SIZE=2>Return 16-bit outline text extent.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.109</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
241<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_ftext()</FONT></B></TD><TD><FONT SIZE=2>Output outlined text.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.49</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
241<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_ftext16()</FONT></B></TD><TD><FONT SIZE=2>Output 16-bit outlined text.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.50</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
241<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_ftext_offset()</FONT></B></TD><TD><FONT SIZE=2>Output outlined text with individual character offsets.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.51</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
241<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>v_ftext_offset16()</FONT></B></TD><TD><FONT SIZE=2>Output 16-bit outlined text with individual character offsets.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.52</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
242
</CENTER>
</TD><TD><B><FONT SIZE=2>v_killoutline()</FONT></B>
</TD><TD><FONT SIZE=2>Free character outline (no longer used with <B>SpeedoGDOS</B>).</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.59</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
243
</CENTER>
</TD><TD><B><FONT SIZE=2>v_getoutline()</FONT></B>
</TD><TD><FONT SIZE=2>Return character outline.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.54</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
244
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_scratch()</FONT></B>
</TD><TD><FONT SIZE=2>Set outline scratch buffer.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.157</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
245
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_error()</FONT></B>
</TD><TD><FONT SIZE=2>Set <B>GDOS</B> error reporting mode.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.151</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
246<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vst_arbpt()</FONT></B></TD><TD><FONT SIZE=2>Set outline text point size.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.147</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
246<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vst_arbpt32()</FONT></B></TD><TD><FONT SIZE=2>Set outline text point size to a fix31 value.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.148</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
247
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_advance()</FONT></B>
</TD><TD><FONT SIZE=2>Return character advance vector.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.102</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
247
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_advance32()</FONT></B>
</TD><TD><FONT SIZE=2>Return character advance vector as a fix31 value.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.103</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
248
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_devinfo()</FONT></B>
</TD><TD><FONT SIZE=2>Return device information.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.106</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
249
</CENTER>
</TD><TD><B><FONT SIZE=2>v_savecache()</FONT></B>
</TD><TD><FONT SIZE=2>Save bitmap cache to disk.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.76</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
250
</CENTER>
</TD><TD><B><FONT SIZE=2>v_loadcache()</FONT></B>
</TD><TD><FONT SIZE=2>Load bitmap cache from disk.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.59</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
251
</CENTER>
</TD><TD><B><FONT SIZE=2>v_flushcache()</FONT></B>
</TD><TD><FONT SIZE=2>Flush outline font cache.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.47</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
252<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vst_setsize()</FONT></B></TD><TD><FONT SIZE=2>Set outline text proportion.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.158</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
252<FONT SIZE=1>&#134;</FONT>
</CENTER>

</TD><TD><B><FONT SIZE=2>vst_setsize32()</FONT></B></TD><TD><FONT SIZE=2>Set outline text proportion to a fix31 value.</FONT>
</TD><TD>
<CENTER>
<FONT SIZE=2>7.159</FONT>
</CENTER>
</TD>
</TR>

<TR><TD>
<CENTER>
253
</CENTER>
</TD><TD><B><FONT SIZE=2>vst_skew()</FONT></B>
</TD><TD><FONT SIZE=2>Set outline text skew factor.</FONT></TD>
<TD>
<CENTER>
<FONT SIZE=2>7.160</FONT>
</CENTER>
</TD></TR>

<TR><TD>
<CENTER>
254
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_get_table()</FONT></B>
</TD><TD><FONT SIZE=2>Return character mappings.</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.112</FONT>
</CENTER>

</TD></TR>

<TR><TD>
<CENTER>
255
</CENTER>
</TD><TD><B><FONT SIZE=2>vqt_cachesize()</FONT></B>
</TD><TD><FONT SIZE=2>Return bitmap cache size</FONT></TD><TD>
<CENTER>
<FONT SIZE=2>7.105</FONT>
</CENTER>

</TD></TR>

</TABLE>

<P>
<B></B>
<P>
<FONT SIZE=1>&#134;</FONT><FONT SIZE=1> These functions share
an opcode and sub-opcode.</FONT>
<p>
<hr><center><a href="toc.htm"> Table of Contents | </a><a href="index.htm"> Index </a></center>
</BODY>

</HTML>
