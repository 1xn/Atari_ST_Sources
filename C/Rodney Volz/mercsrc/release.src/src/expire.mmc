/* 
 *   Copyright (c) 1990 Rodney Volz
 *   ALL RIGHTS RESERVED 
 * 
 *   THIS SOFTWARE PRODUCT CONTAINS THE
 *   UNPUBLISHED SOURCE CODE OF RODNEY VOLZ
 *
 *   The copyright notices above do not evidence
 *   intended publication of such source code.
 *
 */

/*
 * MERCURY UUCP SOURCECODE [expire.c]
 */


#define _EXPIRE

#ifndef MWC
#include "uulib.c"
overlay "main"
#else
#include "define.h"
#endif

main(argc,argv)
int argc;
char *argv[];
{
	unsigned int ng[NEWSANZ];
	int inh,outh,i,n,rcc,ngc,pointer;
	int cnt,excnt,junked,anz;
	unsigned int i2;
	char c,newgrp,eo;
	long a,b;
	static char s[LLEN],s2[LLEN],s3[LLEN],s4[LLEN];
	static char go[LLEN];
	char logit[LLEN * 2];
	int keep;
	char newsdir[LLEN];
	static char *ngn[NEWSANZ];
	
	/*
	i = 0;
	while (i < NEWSANZ)
	{
		ngn[i++] = (char *)malloc((long)LLEN);
	}
	*/
	
	setquiet();
		
	send("Expire - ");
	send(VERSION);
	cr(1);
	
	strcpy(argv[argc - 1],s);
	keep = val(s);
	
	if (argc == 1)
		keep = 0;
		
	if (keep == 0)
	{
		cr(1);
		send("Kills old articles.");
		cr(1);
		send("Usage: Expire <keep last n days>");
		cr(2);
		send("e. g.: \"Expire 3\" kills all articles except");
		cr(1);
		send("       the articles of last three days.");
		cr(1);
		return(0);
	}	

	getconf(18,newsdir);	/* News-Spooldir */
	sys_impdirn(newsdir);

	strcpy(newsdir,s);
	stradd("news.def",s);

	strcpy("Expire running - ",logit);
	stradd(VERSION,logit);
	log(logit,"expire");

	inh = open(s,2);
	if (inh <= 0)
	{
		send("No news received yet.");
		cr(1);
		return(0);
	}
	
	ngc = 0;
	while (getline(inh,s) != -1)
	{
		strcpys(s,s2,0,linstr(s,'|') - 1);
		ngn[ngc] = (char *)malloc((long)LLEN);
	
		strcpy(s2,(char *)ngn[ngc]);
		
		strcpys(s,s2,rinstr(s,'|') + 1,strlen(s));
		ng[ngc] = val(s2);
		++ngc;
	}
	close(inh);
	anz = ngc;

	pointer = 0;
	while (pointer < anz)
	{
#if OLDFS
		strcpy(newsdir,s);
		stradd("ng",s);
		str(pointer + 1,s2);
		stradd(s2,s);
		stradd("\\",s);
#else
		munge(newsdir,ngn[pointer],s);
#endif
		
		/* s == 'C:\usr\spool\news\NGx\' */
		
		send("In work: ");
		send(ngn[pointer]);
		send("...");
		cr(1);

		sprintf(go,"%s*.",s);
		i = sfirst(go);
		
		while (i >= 0)
		{
			n = getage();

			dtaxtr(s2,&a,&c);

			/* AWFULL! -Rodney */
			if ((c != 16) && (n > keep) && isdigit(*s2))
			{
				sprintf(s4,"%s%s",s,s2);
				printf("%s ",s4);
				if (sys_remove(s4) != 0)
					printf("- cannot remove\n");
				else
					printf("\n");
		
			
				++junked;
			}

			i = snext();
		}

		if (junked > 0)
		{
			sendd(junked);
			send(". Articles expired.");
			sprintf(logit,"%s: %d. articles",ngn[pointer],junked);
			log(logit,"expire"); 
			cr(2);
		}
		
		junked = 0;
		++pointer;
	}
	send("Expire done.");
	cr(1);
}
