@database "Fiffi Documentation"
@author "Gerhard Stoll/JÅrgen Koneczny"
@subject "Internet"
@$VER: Fiffi.hyp (@:"__DATE__")
@default "Title Page"
@toc "Table of Contents"
@help "Help Page"
@width 70
@options "+zz -j30"


@node "Title Page"
@{0U}Title Page                                                       Fiffi@{0}


                          The Hypertext for

@limage "Fiffi.img" 0

                        Fiffi - an FTP Client
                             Version 1.5

                                  by

                            Gerhard Stoll
                         gerhard_stoll@gmx.de
                                Ω 2007

                           JÅrgen Koneczny
             Ω 1997 - 2000 Application Systems Heidelberg

@limage "ASH.img" 0


                  English translation by Sascha Uhlig


                           Table of Contents

@endnode


@node "Table of Contents"
@alias "table of contents"
@{0U}Table of Contents                                                Fiffi@{0}

 1  Introduction

 2  Installation
    2.1  System Requirements
    2.2  Limitations

 3  Using Fiffi
    3.1  FTP Window
         3.1.1  Drag&Drop
         3.1.2  Keyboard Control
    3.2  Existing Files
    3.3  Fiffi and CAB

 4  Fiffi's Menus
    4.1  The 'Fiffi' Menu
    4.2  The 'Session' Menu
         4.2.1  Session/New
         4.2.2  Session/Open
         4.2.3  Session/Close
         4.2.4  Session/Quit
    4.3  The 'Edit' Menu
         4.3.1  Edit/Hotlist
         4.3.1  Edit/File Types
    4.4  The 'Window' Menu
         4.4.1  Window/Close
         4.4.2  Window/Close All
         4.4.3  Window/Cycle
    4.5  The 'Options' Menu
         4.5.1  Options/General
         4.5.2  Options/Internet
         4.5.3  Options/Save

Appendix
 
 A  GEMScript Commands
 B  History

@endnode


@node "Introduction"
@{0U}1  Introduction                                                  Fiffi@{0}

With Fiffi you own a program, which makes it possible, to access an 
FTP server. FTP stands for file transfer protocol and makes the 
transmission of files between computers of all kinds of operating 
systems and system architectures possible. On FTP servers are often 
the interesting software archives on the Internet.

Furthermore, it is possible to upload files on your website.

@endnode


@node "Installation"
@{0U}2  Installation                                                  Fiffi@{0}

 2.1  System Requirements
 2.2  Limitations

@endnode


@node "System Requirements" "Installation"
@toc "Installation"
@{0U}2.1  System Requirements                                         Fiffi@{0}

You need the following programs for using Fiffi:

  ˘ @{"MagiC" link "MagiC5.hyp"} (Atari, Mac, PC) v4.5 or better and
  
  ˘ IConnect v1.0 or better.


Useful for Fiffi:

  ˘ @{"ST-Guide" link "ST-Guide.hyp"} by Holger Weets, HypView by Philipp DonzÇ and Gerhard   
    Stoll or another ST-Guide-compatible online help for this 
    documentation, and
  
  ˘ @{"Start Me Up!" link "Start.hyp"} by Thomas Much or another DHST server for using the
    document history protocol.

@endnode


@node "Limitations"
@toc "Installation"
@{0U}2.2  Limitations                                                 Fiffi@{0}

  ˘ Proportional system fonts

    When using proportional system fonts, there is a redraw problem 
    while scrolling in the directory window. It is caused by the 
    WDialog functions (system library used by Fiffi) that do not cope 
    with proportional system fonts. 

  ˘ IConnect up to v1.7

    IConnect up to v1.7 has a programming error that causes Fiffi, 
    after receiving a file which is saved on drive F:, to close the 
    Internet connection.

    Remedy: Do not use drive F: as download directory in @{"Options/" link "Options/General"}
    @{"General" link "Options/General"}.

@endnode


@node "Using Fiffi"
@{0U}3  Using Fiffi                                                   Fiffi@{0}

 3.1  FTP Window
      3.1.1  Drag&Drop
      3.1.2  Keyboard Control
 3.2  Existing Files
 3.3  Fiffi and CAB

@endnode


@node "FTP Window" "Using Fiffi"
@alias "FTP window"
@toc "Using Fiffi"
@{0U}3.1  FTP Window                                                  Fiffi@{0}

The main operating element is the FTP window. It is similarly 
structured like the MagiC file selector.


@limage "FTP.img" 0


The entries of the selected directory are displayed on the left side:

  ˘ A file

@limage "File.img" 5
    When you double click on this entry, Fiffi will transmit a file 
    to your computer.

  ˘ A directory

@limage "Folder.img" 5
    A double-click on this entry causes Fiffi to change to this 
    directory.

  ˘ A link to a file or directory

@limage "Link.img" 5
    With a double-click Fiffi analyses the link. If the link refers 
    to a file, Fiffi will load it. And if the link refers to a 
    directory, Fiffi will change to it.


You find the following elements above the directory entries:

  ˘ Back button

@limage "Back.img" 5
    With one click on this button you switch to the directory above 
    the present one. Double-clicking changes to the root directory.

  ˘ Path display button (here: button with a slash)

    With a click on the path display you can switch to a specific 
    parent directory.

  ˘ Select button

@limage "Select.img" 5
    Selects all entries.

  ˘ Deselect button

@limage "Deselect.img" 5
    Deselects all entries.


he following buttons are on the right side:

  ˘ @{0B}get@{0}

    Starts the download of the (selected) files. You can choose 
    another download directory with the file file selector while 
    holding down <Shift>.

  ˘ @{0B}put@{0}

    A file selector appears, and you can select files which will be 
    transmitted to the current directory of the FTP server.

  ˘ @{0B}mv@{0}

    Renames a (selected) file.

  ˘ @{0B}rm@{0}

    Deletes a (selected) file.

  ˘ @{0B}mkdir@{0}

    Creates a new directory.

  ˘ @{0B}rmdir@{0}

    Deletes a (selected) directory.

  ˘ @{0B}cd@{0}

    Changes to a (selected) directory.

  ˘ @{0B}ch@{0}

    Changes the access rights of (selected) files. On Unix servers 
    this button behaves like the command 'chmod'.

  ˘ @{0B}Auto@{0}, @{0B}ASCII@{0} and @{0B}Binary@{0}

    Defines the transmission mode for the file tranfer.

  ˘ @{0B}URL@{0}

    An FTP URL [1], which describes the access to the server, is 
    hidden behind this button. You can hand this URL over via 
    Drag&Drop, for example, to @{"CAB's" link "CAB.hyp"} or @{"Fiffi's hotlist" link "Edit/Hotlist"}. With the 
    desktop @{"jinnee" link "jinnee.hyp"} you can file a URL away as a desktop note.

@endnode


@node "Drag&Drop" "Using Fiffi"
@alias "Dragging&Dropping"
@toc "FTP Window"
@{0U}3.1.1  Drag&Drop                                                 Fiffi@{0}

From the FTP window you can drag entries to a directory on the 
desktop.

You can delete entries by dragging them to the wastebin of the 
desktop.

When dragging files or folders from the desktop to the FTP window, 
these will be saved on the FTP server. When using a folder, the whole 
structure with subdirectories is transmitted. With this functionality 
you can transmit the locally revised files of your website to the WWW 
server very easily.

@endnode


@node "Keyboard Control" "Using Fiffi"
@alias "keyboard control"
@alias "Keyboard control"
@toc "FTP Window"
@{0U}3.1.2  Keyboard Control                                          Fiffi@{0}

The following keys can be applied to the FTP window:

  ˘ Left/Right

    The directory contents can be scrolled horizontally by one letter 
    (with <Shift> pagewise scrolling).

  ˘ Up/Down

    Moving the selection bar. With <Control> you can scroll without 
    altering the selection. And with <Shift> you can pagewisely 
    select or scroll.

  ˘ <ClrHome>

    Selecting the first or last (with <Shift>) entry. With <Control> 
    you can again only scroll.

  ˘ <Return>/<Enter>

    Selected file/directory will be loaded/opened.

  ˘ <Insert>

    Files of the FTP session will be entered in the hotlist.

  ˘ <Control>+<A>

    Selects all files/folders.

  ˘ <Control>+<C>

    Without selected entries the current directory list will be saved 
    to the clipboard or else the access path of the selected entries 
    will be stored.

  ˘ <Control>+<D>

    Undoes a selection.

  ˘ <Control>+<Delete>

    Deletes selected files, and only these!

  ˘ <Control>+<H>/<Control>+<Backspace>

    One directory level upwards.

@endnode


@node "Existing Files" "Using Fiffi"
@alias "The File Already Exists"
@toc "Using Fiffi"
@{0U}3.2  Existing Files                                              Fiffi@{0}

If files you want to transmit from an FTP server in the download 
directory already exists, then the following dialog will appear:


@limage "Exist.img" 0


In the frame @{0B}Existing File@{0} the file name is displayed.

In the frame @{0B}New File@{0b} there is the possibility of changing the name 
of the file you will transmit. When having altered the file name, you 
can start the transmission with the button @{0B}Rename@{0}.

If a former transmission has not been finished, with the button 
@{0B}Resume@{0} Fiffi will only transmit the remainder of the file. Though you 
have to pay attention yourself that the data of the already existing 
file comes from the file you want to transmit.

With @{0B}Replace@{0} Fiffi will replace the existing file by the one you want 
to receive.

Eventually, @{0B}Skip@{0} will not transmit the file. The local file remains 
untouched.

While the left buttons only refer to the current file, the right ones 
(@{0B}Resume all@{0}, @{0B}Replace all@{0} and @{0B}Skip all@{0}) apply to all for the 
transmission selected files.

@endnode


@node "Fiffi and CAB" "Using Fiffi
@toc "Using Fiffi"
@{0U}3.3  Fiffi and CAB                                               Fiffi@{0}

You can install Fiffi as an FTP server in @{"CAB" link "CAB.hyp"}. To do that, you set 
@autorefoff
the edit field 'FTP' under 'Options/Internet applications' to Fiffi.
@autorefon

When you now click on an FTP URL [1] in CAB, CAB will load Fiffi and 
resolve the link.

@endnode


@node "Fiffi's Menus"
@{0U}4  Fiffi's Menus                                                 Fiffi@{0}

 4.1  The 'Fiffi' Menu
 4.2  The 'Session' Menu
      4.2.1  Session/New
      4.2.2  Session/Open
      4.2.3  Session/Close
      4.2.4  Session/Quit
 4.3  The 'Edit' Menu
      4.3.1  Edit/Hotlist
      4.3.2  Edit/File Types
 4.4  The 'Window' Menu
      4.4.1  Window/Close
      4.4.2  Window/Close All
      4.4.3  Window/Cycle
 4.5  The 'Options' Menu
      4.5.1  Options/General
      4.5.2  Options/Internet
      4.5.3  Options/Save

@endnode


@node "The 'Fiffi' Menu" "Fiffi's Menus"
@toc "Fiffi's Menus"
@{0U}4.1  The 'Fiffi' Menu                                            Fiffi@{0}

This menu entry brings up a dialog that provides general information 
about the program. You will find there the version number, the 
copyright, the program's authors and the registration details.

@endnode


@node "The 'Session' Menu" "Fiffi's Menus"
@alias "FTP session"
@alias "FTP sessions"
@index "FTP Session"
@toc "Fiffi's Menus"
@{0U}4.2  The 'Session' Menu                                          Fiffi@{0}

 4.2.1  Session/New
 4.2.2  Session/Open
 4.2.3  Session/Close
 4.2.4  Session/Quit

@endnode


@node "Session/New" "Fiffi's Menus"
@alias "Open New Session"
@toc "The 'Session' Menu"
@{0U}4.2.1  Session/New                                               Fiffi@{0}

Fiffi opens a dialog you can set up a new FTP session with.


@limage "New.img" 0


@{0B}Host@{0} gives the name of the computer an FTP session should be 
established to.

@{0B}Port@{0} defines number of the port for the FTP session. The standard 
value is 21.

With @{0B}Name@{0} and @{0B}Password@{0} you define the name and password you log in to 
the FTP server. If you do not declare anything, Fiffi tries to log in 
you as a guest (anonymous). Most servers ask then for your email 
address as a password. Therefore you have to make sure that this one 
is defined in IConf under 'Services'.

After a successful login, Fiffi changes to the in @{0B}Directory@{0} specified 
directory, e.g. "/pub/atari". Here you can also define the path to a 
file. Then Fiffi will close the FTP window and load the file 
immediately.

@autorefoff
When you click on the button @{0B}Hotlist@{0}, you can copy an entry from the 
@autorefon
hotlist to the dialog via a popup.

@endnode


@node "Session/Open" " "Fiffi's Menus"
@toc "The 'Session' Menu"
@{0U}4.2.2  Session/Open                                              Fiffi@{0}

Fiffi offers the entries of the hotlist in a popup.

@endnode


@node "Session/Close" "Fiffi's Menus"
@toc "The 'Session' Menu"
@{0U}4.2.3  Session/Close                                             Fiffi@{0}

Fiffi closes the connection to the FTP server that is assigned to the 
top window.

@endnode


@node "Session/Quit" "Fiffi's Menus"
@toc "The 'Session' Menu"
@{0U}4.2.4  Session/Quit                                              Fiffi@{0}

Serves to quitting Fiffi. If there are still connections to FTP 
servers, Fiffi will ask wether the connections should be closed.

@endnode


@node "The 'Edit' Menu" "Fiffi's Menus"
@toc "Fiffi's Menus"
@{0U}4.3  The 'Edit' Menu                                             Fiffi@{0}

 4.3.1  Edit/Hotlist
 4.3.2  Edit/File Types

@endnode


@node "Edit/Hotlist" "Fiffi's Menus"
@alias "hotlist"
@alias "Hotlist"
@index "Hotlist"
@toc "The 'Edit' Menu"
@{0U}4.3.1  Edit/Hotlist                                              Fiffi@{0}

In the hotlist you can save the parameters of various FTP sessions 
for a faster access.


@limage "Hotlist.img" 0


Under @{0B}Title@{0} you give the hotlist entry a name that appears in the 
hotlist popups (see Session/New and Session/Open).

@{0B}Host@{0} gives the name of the computer an FTP session should be 
established to.

@{0B}Port@{0} defines number of the port for the FTP session. The standard 
value is 21.

With @{0B}Name@{0} and @{0B}Password@{0} you define the name and password you log in to 
the FTP server. If you do not declare anything, Fiffi tries to log in 
you as a guest (anonymous). Most servers ask then for your email 
address as a password. Therefore you have to make sure that this one 
is defined in IConf under 'Services'.

After a successful login, Fiffi changes to the in @{0B}Directory@{0} specified 
directory, e.g. "/pub/atari".

Under @{0B}Comments@{0} you can add a text to the hotlist entry, for example, 
which data are particularly interesting on the server.

A click on @{0B}Add@{0} inserts an FTP session.

You can change an existing FTP session by selecting it, making the 
desired alterations and then clicking on the button @{0B}Alter@{0}.

An FTP session is deleted by selecting it and then clicking on the 
button @{0B}Delete@{0}.

With a double-click on an entry the session will be opened.

@endnode


@node "Edit/File Types" "Fiffi's Menus"
@alias "file types"
@alias "File types"
@index "File Types"
@alias "file extension"
@alias "file extensions"
@alias "File extensions"
@alias "File Extensions"
@index "File Extensions"
@alias "transmission mode"
@alias "Transmission mode"
@index "Transmission Mode"
@toc "The 'Edit' Menu"
@{0U}4.3.2  Edit/File Types                                           Fiffi@{0}

The FTP protocol intends two transmission modes: @{0B}ASCII@{0} and @{0B}Binary@{0}. In 
the ASCII mode, CR or LF are always expanded to CRLF during the file 
transfer. Whereas the binary mode does not change the files. 
Therefore programs and archives have to be transmitted in the 
binary mode.

Under @{0B}File Extension@{0} you can determine the mask for the transmission 
mode of the files. When the transmission mode 'Auto' in the @{"FTP" link "FTP Window"} 
@{"window" link "FTP Window"} is active (see Options/Internet), Fiffi uses depending on the 
file extension the transmission mode specified here.


@limage "Suffix.img" 0


A click on @{0B}Add@{0} inserts a new file extension.

You can change an existing file extension by selecting it, making the 
desired alterations and then clicking on the button @{0B}Alter@{0}.

A file extension is deleted by selecting it and clicking on the 
button @{0B}Delete@{0}.

@endnode


@node "The 'Window' Menu" "Fiffi's Menus"
@toc "Fiffi's Menus"
@{0U}4.4  The 'Window' Menu                                           Fiffi@{0}

 4.4.1  Window/Close
 4.4.2  Window/Close All
 4.4.3  Window/Cycle

@endnode


@node "Window/Close" "Fiffi's Menus"
@toc "The 'Window' Menu"
@{0U}4.4.1  Window/Close                                              Fiffi@{0}

Closes the top window.

@endnode


@node "Window/Close All" "Fiffi's Menus"
@toc "The 'Window' Menu"
@{0U}4.4.2  Window/Close All                                          Fiffi@{0}

Closes all windows.

@endnode


@node "Window/Cycle" "Fiffi's Menus"
@toc "The 'Window' Menu"
@{0U}4.4.3  Window/Cycle                                              Fiffi@{0}

Switches to the next window.

@endnode


@node "The 'Options' Menu" "Fiffi's Menus"
@toc "Fiffi's Menus"
@{0U}4.5  The 'Options' Menu                                          Fiffi@{0}

 4.5.1  Options/General
 4.5.2  Options/Internet
 4.5.3  Options/Save

@endnode


@node "Options/General" "Fiffi's Menus"
@toc "The 'Options' Menu"
@{0U}4.5.1  Options/General                                           Fiffi@{0}

In this dialog you can make various general settings for Fiffi.


@limage "General.img" 0


Under @{0B}Directories@{0} you set the directories from which files should be 
sent or received and where the log files are written to.

With @{0B}KB block for the data transfer@{0} you set the puffer length for the 
data transfer. The bigger the value, the more files are transmitted 
by Fiffi in one go.

@{0B}Beep at the end of a file transfer@{0} causes Fiffi to make a sound if 
the file transfer is finished.

When @{0B}Sort by name@{0} is active, Fiffi sorts the received directory 
entries in alphabetical order. In addition, @{0B}Directories before files@{0} 
displays the directory entries at the beginning.

File names of FAT partitions (these names can only be 8 plus 3 
characters long) are always in capitals. @{0B}Convert file names from 
FAT partitions to lower case for the FTP server @{0} saves files in lower 
case on the server.

@autorefoff
When @{0B}Log FTP sessions@{0} is active, Fiffi logs all commands it sends or 
@autorefon
receives and the directory contents to an ASCII file that gets the 
name of the FTP server. It is worth having a closer look at this file 
after a FTP session. Then you will also find here the welcome text 
and error messages from the server. When @{0B}append to exsisting log file@{0} 
is active, an existing log file will not be overwritten but the new 
log will be appended. In the log file Fiffi makes a note of the date 
and time of the connection.

If you use an alternative file selector instead of the MagiC file 
selector, you can activate @{0B}Do not use MagiC file selector@{0}.

When @{0B}Save options on program end@{0} is active, Fiffi automatically saves 
all the settings, the hotlist and the file extensions on program end.

@endnode


@node "Options/Internet" "Fiffi's Menus"
@toc "The 'Options' Menu"
@{0U}4.5.2  Options/Internet                                          Fiffi@{0}

In this dialog you can make settings for FTP and Internet.


@limage "Internet.img" 0


Under @{0B}IConnect@{0} you determine how Fiffi and IConnect interplay:

When the option @{0B}If connection necessary, start IConnect@{0} is selected, 
Fiffi will automatically start IConnect if you set up a FTP session 
to an FTP server. To do this, IConnect have to be installed as an 
application for the file IConfSet.cfg.

When the option @{0B}... and establish connection@{0} is active, IConnect will 
immediately establish a connection to your Internet provider.

When the option @{0B}... and close with@{0} is enabled, Fiffi will close the 
connection either on the @{0B}program end@{0} or after the @{0B}final session@{0}.


In the frame @{0B}FTP@{0} you determine FTP specific parameters:

With @{0B}Command Port@{0} you determine the port for the command channel 
(standard value is 21). The value given here is also used as default 
for the dialogs Open New Session and Hotlist. @{0B}Data Port@{0} determines 
the range for the data port (standard range: from 2048 to 2148).

With @{0B}Transmission Mode@{0} you determine the presetting for the @{"FTP" link "FTP Window"} 
@autorefoff
@{"window" link "FTP Window"}. @{0B}For Unknown File Extensions@{0} you set which @{"transmission mode" link "Edit/File Types"} 
@autorefon
Fiffi will use, if a file with an unknown file extension is 
transmitted.

@{0B}Set FTP server to passive state@{0} causes Fiffi to establish data 
connections. If the installation of FTP sessions does not work for 
you, activate this setting.

A lot of FTP servers will close themself a running connection if an 
FTP client has not sent commands to the server for some time, for 
example, because you are looking in a longer directory list. With 
@{0B}'Knock up' FTP server every x minutes @{0} you determine after how many 
minutes Fiffi will report to the FTP server to avoid closing the 
connection. A value of '0' means that Fiffi refrains from reporting 
to the server on its own.

@endnode


@node "Options/Save" "Fiffi's Menus"
@toc "The 'Options' Menu"
@{0U}4.5.3  Options/Save                                              Fiffi@{0}

Fiffi saves the current configuration and the hotlist.

@endnode


@node "Appendix"
@{0U}Appendix                                                         Fiffi@{0}

 A  GEMScript Commands
 B  History

@endnode


@node "GEMScript Commands" "Appendix"
@toc "Appendix"
@{0U}A  GEMScript Commands                                            Fiffi@{0}

Fiffi speaks GEMScript v1.0 and therefore can be remote-controlled by 
other applications. Since @{"Scripter" link "Scripter.hyp"} is usally used for it, this 
description follows Scripter's command syntax.

@line 1 70 0 0 7

ret = cd( session, dir );

Changes to the directory <dir> on the server with the handle 
<session>.

    ret =  0:     Change of the directory done
    ret != 0:     Error
    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server

@line 1 70 0 0 7

ret = chmod( mode, item );

Sets for the entry <item> the access rights to <mode>.

    ret =  0:     Access rights set
    ret != 0:     Error
    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server

@line 1 70 0 0 7

ret = close( [session] );

Closes the FTP session <session> or, if <session> is not specified, 
the session whose window is topped.

    ret =  0:     FTP session closed
    ret != 0:     Error
    ret = -1:     Handle <session> not valid
    ret = -1:     Session <session> not existing, or no session 
                  window is topped

@line 1 70 0 0 7

ret = get( session, src [, dst] );

Loads file <src> from the server with the handle <session> on the 
local computer. If <dst> is specified, the file <src> will be saved 
with this access path.

    ret =  0:     File operation without error
    ret != 0:     Error
    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

ret = lcd( dir );

Sets the directory <dir> where files are saved in.

    ret =  0:     Change of the directory done
    ret != 0:     Error
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

ret = ls( session [, dir ])

Returns the contents of the current directory, or of the directory 
<dir>, of the FTP server with the handle <session>.

    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server

@line 1 70 0 0 7

ret = mkdir( session, dir );

Creates the directory <dir> on the FTP server with the handle 
<session>.

    ret =  0:     Server directory created
    ret != 0:     Error
    ret >  0:     Answer from the FTP server
    ret = -1:     Handle <session> not valid
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

session = open( host [,name [,password [,port]]] );

Opens a FTP session with the FTP server <host>.

    session >  0: FTP session could be set up = handle for further 
                  commands
    session <  0: FTP session could not be set up
    session = -1: Thread could not be started
    session = -2: Sockets not present
    session = -3: No connection to the Internet
    session = -4: Resolving of the host name failed
    session = -5: TCP connection failed
    session = -6: Login failed

@line 1 70 0 0 7

ret = put( session, src [, dst] )

Saves the file <src> on the FTP server with the handle <session> 
(optional with the path <dst>).

    ret =  0:     File operation done without errors
    ret != 0:     Error
    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

ret = pwd( session );

Returns the current directory of the FTP server with the handle 
<session>.

    ret = -1:     Handle <session> not valid
    ret >  0:     Answer from the FTP server

@line 1 70 0 0 7

ret = rm( session, file );

Deletes the file <file> on the FTP server with the handle <session>.

    ret =  0:     Server file deleted
    ret != 0:     Error
    ret >  0:     Answer from the FTP server
    ret = -1:     Handle <session> not valid
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

ret = rmdir( session, dir );

Deletes the directory <dir> on the FTP server with the handle 
<session>.

    ret =  0:     Server directory deleted
    ret != 0:     Error
    ret >  0:     Answer from the FTP server
    ret = -1:     Handle <session> not valid
    ret <  0:     GEMDOS Error

@line 1 70 0 0 7

type( session, auto|ASCII|binary );

Sets the transmission mode for the FTP session with the handle 
<session>.

    ret =  0:     Transmission mode set
    ret != 0:     Error
    ret = -1:     Handle <session> not valid

@line 1 70 0 0 7


For completeness, Fiffi knows the following standard GS commands:

@line 1 70 0 0 7

host = getfront();

Returns the host of the FTP session of the top window.

    host = 0:     No window opened or top window belongs to no session

@line 1 70 0 0 7

quit( [options] );

Closes Fiffi.

  "-q", "-quiet": Closes Fiffi without demand even if an FTP session 
                  is opened.

@line 1 70 0 0 7

ret = tofront( host|URL|session );

Tops the directory window that belongs to the FTP session 
<host|URL|session>.

    ret =  0:     Window could not be topped
    ret = -1:     FTP session <host|URL|session> not existing

@line 1 70 0 0 7

AppGetLongName(), GetAllCommands(), CheckCommand() see @{"GEMScript" link "GScript.hyp"}
@{"documentation" link "GScript.hyp"}.

@endnode


@node "History" "Appendix"
@toc "Appendix"
@{0U}B  History                                                       Fiffi@{0}

@{0B}V1.5b (30 June 2007)@{0}

- NEW: When clicking on the path display, the popup is now aligned to 
       the mouse cursor position.
- NEW: Keyboard control of the FTP window completed:
       <Return>:           Selected file/directory will be loaded/
                           opened.
       <Control>+<A>:      Selects all files/directories.
       <Control>+<Delete>: Deletes the selected file, and only these! 
- FIX: While Dragging&Dropping of directories to the FTP window, 
       there is no more halt of the system.


@{0B}V1.3 (19th August 2000)@{0}

- NEW: chmod implemented.
- NEW: The FTP window can now be controlled completely by @{"keyboard" link "Keyboard Control"}.
- NEW: DHST implemented. Every FTP session will be installed in the 
       DHST server, e.g. SMU.
- FIX: Error on strdup() (thread fitted memory management).
- FIX: Handling of the shift key now works as well while cooperating 
       with CAB.
- FIX: When, after calling by CAB, the dialog The File Already Exists 
       appeared, the connection was not closed, if the file had not 
       been transmitted.


@{0B}V1.2 (15th September 1999)@{0}

- NEW: Fiffi knows 'resume', i.e. stopped file transfers are resumed 
       and only the remainder of the file is transmitted from the    
       server.
- NEW: Fiffi knows recursive uploads, i.e. when dragging a directory 
       in the directory window (or selecting with the file selector), 
       Fiffi creates on the FTP server all the included 
       subdirectories and puts then the files in them -> ideal for 
       copying complete directory trees (e.g. a website) on a server.
- NEW: When using 'get' with the shift key (with button or double-
       click), you can set the download path via file selector even 
       though it is determined in Options/General.
- NEW: Now each entry has as well a title in the hotlist -> you can 
       now insert a host several times in the hotlist.
- NEW: When under Options/Internet 'Establish connection' is 
       inactive, Fiffi notices on its own when a connection to the 
       Internet has been established manually.
- NEW: Options/General: 'Beep at the end of a file transfer'
- NEW: Log files can now be overwritten from session to session or 
       appended to already existing ones (Options/General: 'append to 
       existing log file').
- NEW: At the beginning of a FTP session date and time is noted in 
       the log file.
- NEW: The file Fiffi.inf is now saved in or loaded from $HOME/
       defaults, $HOME and the current directory (in this order).
- NEW: Access to NT servers that do not run in Unix mode.
- NEW: Standard GS commands CheckCommand and GetAllCommands.
- NEW: Upload function optimized.
- NEW: Fiffi copes with space characters in file names.


@{0B}V1.11 (5th August 1998)@{0}

- NEW: Linked with MT_AES from 27th February 1998.
- NEW: Linked with SockLib from Sockets v1.5.
- FIX: Dialog 'GEMScript' adapted to proportional system fonts.
- FIX: Fiffi closes an Internet connection only then, when it has 
       been installed by Fiffi.
- FIX: Dialog Options/Internet fits again in ST high.
- FIX: Too shirt in the hotlist ironed out.
- FIX: ASH's URL changed in the info dialog.
- FIX: Adaptions for using proportional system fonts:
       ˙ General justification to left margin (dialog @{"Open New" link "Session/New"}
         @{"Session" link "Session/New"}, Hotlist).
       ˙ Unfortunately, no more asterisks in the password fields.
       ˙ URL button and sizer of the FTP window.


@{0B}V1.1 (7th May 1998)@{0}

- NEW: GEMScript implemented.
- NEW: AppGetLongName() implemented -> the threads will no longer be 
       displayed by Multistrip.
- NEW: Fiffi starts now, if necessary or wished, IConnect and 
       establishes the connection to the Internet. The connection 
       will be closed after terminating the last FTP session, after 
       quitting Fiffi or not at all (Options/Internet).
- NEW: A connection to an FTP server can now be kept up 
       'artificially' (Options/Internet).
- NEW: The file names of the log files will now be shortened to the 
       length that is given by the file system.
- NEW: Dialog Hotlist and File types:
       ˙ Autolocator
       ˙ Handling of the list boxes redesigned.
- NEW: Dialog Hotlist:
       ˙ A host can only be inserted once.
       ˙ Changes become immediately valid, i.e. the window has not to 
         be closed before.
       ˙ Drag&Drop from other applications to Fiffi included (e.g. 
@autorefoff
         CAB's hotlist, text from CAT).
@autorefon
       ˙ Drag&Drop from Fiffi to other applications (e.g. 
@autorefoff
         CAB's Hotlist, qed's editor window, jinnee).
@autorefon
       ˙ Double-click on an entry still opens a FTP session but the 
         hotlist is no longer closed.
- NEW: Dialog File types:
       ˙ A file extension can only be inserted once.
       ˙ A file extension can have any length.
       ˙ Vertical slider.
       ˙ Changes become immediately valid, i.e. the window has not to 
         be closed before.
- NEW: Dialog Open New Session
       ˙ Drag&Drop from other applications to Fiffi included (e.g. 
@autorefoff
         CAB's hotlist, text from CAT).
@autorefon
- NEW: FTP window
       ˙ With the button URL you can insert a current URL to other 
@autorefoff
         applications via Drag&Drop (e.g. CAB's Hotlist, qed's editor 
@autorefon
         window, jinnee).
- NEW: Reading of directories considerably speeded up.
- NEW: The directory window is resizeable in a better way.

@endnode


@node "Help Page"
@{0U}Help Page                                                        Fiffi@{0}

This hypertext represents the documentation for the FTP client Fiffi 
and describes the function and use of it. It was written by Gerhard 
Stoll and JÅrgen Koneczny and translated and redesigned by Sascha 
Uhlig.

The table of contents will help guide you around all available 
functions. The trick is knowing which chapter to select and then 
which subchapter.

Please note the following information:

  ˘ You can read the document from front to back like a book. If you 
    use the previous page button and the next page button, you will 
    be able to read all the pages without the danger of missing any. 
    The pages will be displayed in sequence so it is possible to 
    start at any chapter.

  ˘ When the index button is selected, your guide will display a page 
    that contains catchwords for all important references of the 
    hypertext.

  ˘ References with a number enclosed in square brackets are links 
    to a pop-up-node. Those pop-ups are intended for short 
    explanations without having to open a new page for this. These 
    are the only 'pages' that cannot be viewed with the the previous 
    page button and the next page button. If you want to read all of 
    them, use the index.

@endnode


@pnode "FTP URL [1]"
An FTP URL has the following format:

   ftp://[name[:password]@]host[:port][/path]

    Name: User name
Password: Password for the admission
    Host: Name of the FTP server
    Port: Port on which a service is provided; if
          the port parameter is missing, Fiffi
          will use the command port value from
          the dialog 'Internet Options'
    Path: Path to a directory or a file
@endnode