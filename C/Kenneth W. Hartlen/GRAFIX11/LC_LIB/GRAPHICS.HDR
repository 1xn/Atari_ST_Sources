Äà__GRAPHX_DEF_Ä__GRAPHX_DEF_å<vdi.h>å<aes.h>
Å
ücontrl[],
intin[],
ptsin[],
intout[],
ptsout[];
Å
ühandle;
Å
üwork_in[],
work_out[];
enum graphics_errors{
grOk=0,
grNoInitGraph=-1,
grNotDetected=-2,
grFileNotFound=-3,
grInvalidDriver=-4,
grNoLoadMem=-5,
grNoScanMem=-6,
grNoFloodMem=-7,
grFontNotFound=-8,
grNoFontMem=-9,
grInvalidMode=-10,
grError=-11,
grIOerror=-12,
grInvalidFont=-13,
grInvalidFontNum=-14,
grInvalidDeviceNum=-15,
grInvalidFontSize=-16,
grNotImplemented=-17,
grInvalidVersion=-18
};
enum graphics_drivers{
CURRENT_DRIVER=-1,
DETECT=0,
CGA,MCGA,EGA,EGA64,EGAMONO,IBM8514,
HERCMONO,ATT400,VGA,PC3270,
SC1224,SM124,
TTC1434,TTM194,
UNKNOWN_DRIVER
};
enum graphics_modes{
CGAC0=0,CGAC1,CGAC2,CGAC3,CGAHI,
MCGAC0=0,MCGAC1,MCGAC2,MCGAC3,MCGAMED,MCGAHI,
EGALO=0,EGAHI,
EGA64LO=0,EGA64HI,
EGAMONOHI=0,
IBM8514LO=0,IBM8514HI,
HERCMONOHI=0,
ATT400C0=0,ATT400C1,ATT400C2,ATT400C3,ATT400MED,ATT400HI,
VGALO=0,VGAMED,VGAHI,
PC3270HI=0,
SC1224LO=0,SC1224MED,
SM124HI=0,
TTC1434STLO=0,TTC1434STMED,TTC1434STHI,TTC1434LO,TTC1434MED,
TTM194HI=0,
UNKNOWN_MODE=0
};
#undef BLACK
#undef BLUE
#undef GREEN
#undef CYAN
#undef RED
#undef MAGENTA
#undef YELLOW
#undef WHITEà__COLORSÄ__COLORS
enum COLORS{
BLACK,
BLUE,
GREEN,
CYAN,
RED,
MAGENTA,
BROWN,
LIGHTGRAY,
DARKGRAY,
LIGHTBLUE,
LIGHTGREEN,
LIGHTCYAN,
LIGHTRED,
LIGHTMAGENTA,
YELLOW,
WHITE
};á
enum CGA_COLORS{
CGA_LIGHTGREEN=1,
CGA_LIGHTRED=2,
CGA_YELLOW=3,
CGA_LIGHTCYAN=1,
CGA_LIGHTMAGENTA=2,
CGA_WHITE=3,
CGA_GREEN=1,
CGA_RED=2,
CGA_BROWN=3,
CGA_CYAN=1,
CGA_MAGENTA=2,
CGA_LIGHTGRAY=3
};
enum EGA_COLORS{
EGA_BLACK=0,
EGA_BLUE=1,
EGA_GREEN=2,
EGA_CYAN=3,
EGA_RED=4,
EGA_MAGENTA=5,
EGA_BROWN=BROWN,
EGA_LIGHTGRAY=7,
EGA_DARKGRAY=DARKGRAY,
EGA_LIGHTBLUE=LIGHTBLUE,
EGA_LIGHTGREEN=LIGHTGREEN,
EGA_LIGHTCYAN=LIGHTCYAN,
EGA_LIGHTRED=LIGHTRED,
EGA_LIGHTMAGENTA=LIGHTMAGENTA,
EGA_YELLOW=YELLOW,
EGA_WHITE=WHITE
};
enum line_styles{
SOLID_LINE=0,
DOTTED_LINE=1,
CENTER_LINE=2,
DASHED_LINE=3,
USERBIT_LINE=4
};
enum line_widths{
NORM_WIDTH=1,
THICK_WIDTH=3
};
enum font_names{
DEFAULT_FONT=0,
TRIPLEX_FONT=1,
SMALL_FONT=2,
SANS_SERIF_FONT=3,
GOTHIC_FONT=4
};ÄHORIZ_DIR 0ÄVERT_DIR 1ÄUSER_CHAR_SIZE 0
enum fill_patterns{
EMPTY_FILL,
SOLID_FILL,
LINE_FILL,
LTSLASH_FILL,
SLASH_FILL,
BKSLASH_FILL,
LTBKSLASH_FILL,
HATCH_FILL,
XHATCH_FILL,
INTERLEAVE_FILL,
WIDE_DOT_FILL,
CLOSE_DOT_FILL,
USER_FILL
};
enum putimage_ops{
COPY_PUT,
XOR_PUT,
OR_PUT,
AND_PUT,
NOT_PUT
};
enum text_just{
LEFT_TEXT=0,
CENTER_TEXT=1,
RIGHT_TEXT=2,
BOTTOM_TEXT=0,
TOP_TEXT=2
};ÄMAXCOLORS 15
Épalettetype{
éÑsize;
signedÑcolors[MAXCOLORS+1];
};
Élinesettingstype{
Çlinestyle;
éupattern;
Çthickness;
};
Étextsettingstype{
Çfont;
Çdirection;
Çcharsize;
Çhoriz;
Çvert;
};
Éfillsettingstype{
Çpattern;
Çcolor;
};
Épointtype{
Çx,y;
};
Éviewporttype{
Çleft,top,right,bottom;
Çclip;
};
Éarccoordstype{
Çx,y;
Çxstart,ystart,xend,yend;
};
ãfar arc(Çx,Çy,Çstangle,Çendangle,
Çradius);
ãfar bar(Çleft,Çtop,Çright,Çbottom);
ãfar bar3d(Çleft,Çtop,Çright,Çbottom,
Çdepth,Çtopflag);
ãfar circle(Çx,Çy,Çradius);
ãfar cleardevice(ã);
ãfar clearviewport(ã);
ãfar closegraph(ã);
ãfar detectgraph(Çfar*graphdriver,Çfar*graphmode);
ãfar drawpoly(Çnumpoints,Çfar*polypoints);
ãfar ellipse(Çx,Çy,Çstangle,Çendangle,
Çxradius,Çyradius);
ãfar fillellipse(Çx,Çy,Çxradius,Çyradius);
ãfar fillpoly(Çnumpoints,Çfar*polypoints);
ãfar floodfill(Çx,Çy,Çborder);
ãfar getarccoords(Éarccoordstype far*arccoords);
ãfar getaspectratio(Çfar*xasp,Çfar*yasp);
Çfar getbkcolor(ã);
Çfar getcolor(ã);
Épalettetype*far getdefaultpalette(ã);
Ñ*far getdrivername(ã);
ãfar getfillpattern(Ñfar*pattern);
ãfar getfillsettings(Éfillsettingstype far*fillinfo);
Çfar getgraphmode(ã);
ãfar getimage(Çleft,Çtop,Çright,Çbottom,
ãfar*bitmap);
ãfar getlinesettings(Élinesettingstype far*lineinfo);
Çfar getmaxcolor(ã);
Çfar getmaxmode(ã);
Çfar getmaxx(ã);
Çfar getmaxy(ã);
Ñ*far getmodename(Çmode_number);
ãfar getmoderange(Çgraphdriver,Çfar*lomode,
Çfar*himode);
ãfar getpalette(Épalettetype far*palette);
Çfar getpalettesize(ã);
éfar getpixel(Çx,Çy);
ãfar gettextsettings(Étextsettingstype far*texttypeinfo);
ãfar getviewsettings(Éviewporttype far*viewport);
Çfar getx(ã);
Çfar gety(ã);
ãfar graphdefaults(ã);
Ñ*far grapherrormsg(Çerrorcode);
Çfar graphresult(ã);
éfar imagesize(Çleft,Çtop,Çright,Çbottom);
ãfar initgraph(Çfar*graphdriver,Çfar*graphmode,
Ñfar*pathtodriver);
ãfar line(Çx1,Çy1,Çx2,Çy2);
ãfar linerel(Çdx,Çdy);
ãfar lineto(Çx,Çy);
ãfar moverel(Çdx,Çdy);
ãfar moveto(Çx,Çy);
ãfar outtext(Ñfar*textstring);
ãfar outtextxy(Çx,Çy,Ñfar*textstring);
ãfar pieslice(Çx,Çy,Çstangle,Çendangle,
Çradius);
ãfar putimage(Çleft,Çtop,ãfar*bitmap,Çop);
ãfar putpixel(Çx,Çy,Çcolor);
ãfar rectangle(Çleft,Çtop,Çright,Çbottom);
ãfar restorecrtmode(ã);
ãfar sector(Çx,Çy,Çstangle,Çendangle,
Çxradius,Çyradius);
ãfar setactivepage(Çpage);
ãfar setallpalette(Épalettetype far*palette);
ãfar setbkcolor(Çcolor);
ãfar setcolor(Çcolor);
ãfar setfillpattern(Ñfar*upattern,Çcolor);
ãfar setfillstyle(Çpattern,Çcolor);
ãfar setgraphmode(Çmode);
ãfar setlinestyle(Çlinestyle,éupattern,
Çthickness);
ãfar setpalette(Çcolornum,Çcolor);
ãfar setrgbpalette(Çcolornum,
Çred,Çgreen,Çblue);
ãfar settextjustify(Çhoriz,Çvert);
ãfar settextstyle(Çfont,Çdirection,Çcharsize);
ãfar setviewport(Çleft,Çtop,Çright,Çbottom,
Çclip);
ãfar setvisualpage(Çpage);
ãfar setwritemode(Çmode);
Çfar textheight(Ñfar*textstring);
Çfar textwidth(Ñfar*textstring);
ãfar _graphfreemem(ãfar*ptr,ésize);
ãfar*far _graphgetmem(ésize);
Çfar installuserdriver(Ñfar*name,Çhuge(*detect)(ã));
Çfar installuserfont(Ñfar*name);
Çregisterbgidriver(ã(*driver)(ã));
Çfar registerfarbgidriver(ãfar*driver);
Çregisterbgifont(ã(*font)(ã));
Çfar registerfarbgifont(ãfar*font);
ãfar setaspectratio(Çxasp,Çyasp);
éfar setgraphbufsize(ébufsize);
ãfar setusercharsize(Çmultx,Çdivx,Çmulty,Çdivy);á