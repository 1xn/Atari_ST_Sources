Documentation de la librairie WinEdit
(c) 2000 D.B‚r‚ziat. Tous droits r‚serv‚s.
--

WinEdit permet l'affichage et l'‚dition de textes ASCII
dans une fenˆtre GEM. WinEdit utilise la librairie LibTedit
pour g‚rer le texte en m‚moire ainsi que la librarie GEM WinDom
pour la gestion des fenˆtres et ‚v‚nements.
WinEdit vous permet de cr‚er trŠs facilement un texte et cela
de fa‡on puissante et ‚volutive. Les fontes proportionnelles
sont g‚r‚es ainsi que les aspects visuelles comme la couleur et
la fonte.

ATTENTION : La librarie est encore incomplŠte, il reste encore
            quelques fonctions d'affichage a implementer (par
			exemple, suppression devant une tabulation, des choses
			comme ca). La gestion des blocs n'est pas termin‚...

	0) Description du package
	a) Cr‚ation d'une fenˆtre texte.
	b) R‚glage de la fenˆtre texte.
	c) Fonctions d'‚v‚nements.
	d) Fonctions haut-niveau de gestion du texte.

0) Description du package

	* LIBTEDIT		routines d'‚dition de texte en m‚moire 
	* WINEDIT		interfacage de LIBTEDIT avec WinDom
		\lib\		Libraires Pure C
		\src\		Sources des lbrairies
		\include\	Fichiers en tˆte
 	* EXAMPLE		Un example d'utilisation


a) Cr‚ation d'une fenˆtre texte.

#include <windom.h>
#include <winedit.h>

WINDOW *WeditCreate( int attrib, EDIT *edit);

Cette fonction cr‚‚ une fenˆtre WinDom. Le paramŠtre edit est
le texte … mettre en fenˆtre (voir LIBTEDIT:edit_new() et
LIBTEDIT:edit_laod()).

Le paramŠtre flags est un masque de bits sur les valeurs
suivantes:
   SHOWTAB  : les tabulations sont affich‚s en dur
   READONLY : le texte est prot‚g‚ en ‚criture   
   NOFLASH  : curseur non clignotant

Le paramŠtre attrib d‚finit les attributs GEM de la fenˆtre.
La fonction n'ouvre pas la fenˆtre … l'‚cran. On utilisera
WindOpen() pour cela.
Remarque technique : les donn‚es texte concernant la fenˆtre 
sont stock‚s dans le champs data du descripteur de fenˆtre.

b) R‚glage de la fenˆtre Texte.

void WeditSet( WINDOW *win, int mode, ...)
------------------------------------------

Cette fonction fixe les attributs textes d'une fenˆtre. Le
paramŠtre mode peut valoir :

* WES_FLAGS : fixe les ‚tats de la fenˆtre texte. L'appel est :
	
				int flag, switch;

				WeditSet( win, mode, flag, switch);

	<<flag>> peut ˆtre :
		- SHOWTAB 		les tabulations sont affich‚s en dur
		- READONLY		le texte est prot‚g‚ de l'‚criture
		- NOFLASH		le curseur ne clignote pas

	<<switch>> peut ˆtre :
		- FLG_ON		met le bit … 1
		- FLG_OFF		met le bet … O
		- FLG_INV		inverse la valeur du bit

* WES_EDIT : fixe une nouvelle structure EDIT. A ne pas utiliser
			 pour le momment.
			
* WES_TXTATTR : fixe les attributs du texte. L'appel est :

			int color, size, fontid;

			WeditSet( win, WES_TXTATTR, color, size, fontid);

	<<color>> est la couleur du texte,
	<<size>> est la taille du texte,
	<<fontid>> est la fonte (utilisez les fonctions WinDom pour les
				conversion id de fonte <=> nom de fonte).

* WES_CURATTR : fixe les attributs li‚s au curseur. L'appel est :

			int bgcolor, txtcolor;

			WeditSet( win, WES_CURATTR, bgcolor, txtcolor);

	<<bgcolor>> est la couleur du curseur,
	<<txtcolor>> est la couleur du texte sous le curseur.

Nota : 	Une valeur -1 ne change pas la valeur.
	    (ex : WeditSet( win, WES_CURATTR, -1, CYAN); )

* WES_BLCATTR : fixe les attributs li‚s au bloc. L'appel est :

			int bgcolor, txtcolor;

			WeditSet( win, WES_BLCATTR, bgcolor, txtcolor);

	comme pour le curseur mais concerne les blocs.

* WES_EDITKEY : fixe la table des caractŠres valide. C'est une
			  chaine de caractŠres contenant les caractŠres
			  autoris‚s.

			static char capitals[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ "

			WeditSet( win, WES_KEYEDIT, capitals);

* WES_TABSIZE : fixe la taille des tabulations.

			int tabsize;

			WeditSet( win, WES_TABSIZE, tabsize);

* WES_CURDRAW : fixe la routine de dessin du curseur.

			void (*curs_draw)( WINDOW *win, int x, int y, 
											int w, int h, int light);
			
			WeditSet( win, WES_CURDRAW, curs_draw);

Nota : une valeur NULL permet de choisir le curseur par d‚faut.

* WES_BLCMARK : d‚fini un bloc. Ne pas utiliser pour le momment.
			
			CURSOR debut, fin;  /* Deux valeurs admissibles */

			WeditSet( win, WED_BLCMARK, &debut, &fin);


void WeditGet( WINDOW *win, int mode, ...);
-------------------------------------------

Fonction inverse de WeditSet().

c) Fonctions d'‚v‚nements

Lorsque vous cr‚ez une fenˆtre texte, WeditCreate() attribut des
routines par d‚faut pour la gestion du clavier et de la souris.
Ces routines sont simples et sans doute il faudra les changer pour
les adapter … vos sp‚cificit‚s.

	... description des deux fonctions ...

Pour changer ces fonctions, inspirez-vous de leur code (voir le 
fichier WSTD.C), puis un simple appel … la fonction WinDom 
EvntAttach().
Ces fonctions utiliseront les fonctions haut-niveau de gestion du
texte (voir section suivante).

d) Fonctions haut-niveau de gestion du texte

Ces fonctions peuvent ˆtre utilis‚ directement : elle agisse sur
le texte et sur leur apparence dans la fenˆtre.

--
Dominique B‚r‚ziat (c) 2000
