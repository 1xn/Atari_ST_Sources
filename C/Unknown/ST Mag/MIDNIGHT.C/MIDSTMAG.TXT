  Quelques  explications  …  propos du  module  MIDNIGHT  sp‚cial 
ST Magazine nomm‚ "MIDSTMAG.MID".
  Ce  module fonctionne sur tous les modŠles de la gamme et  dans 
toutes les r‚solutions.  Il affiche … des position al‚atoires les 
logos d'Application Systems,  d'ST Magazine, de Midnight lui-mˆme 
et d'Atari.
  Les paramŠtres du module sont les suivants :
  * Effacer  l'‚cran.  Si ce bouton est s‚lectionn‚,  l'image  de 
l'‚cran glisse vers le bas pour laisser la place … un ‚cran noir, 
sur lequel sont affich‚s les logos.  Sinon, ils sont affich‚s sur 
l'image pr‚sente.
  * Vitesse. Un d‚lai d'attente est respect‚ avant l'affichage du 
logo. En vitesse "d‚coiffante", pas de d‚lai.
  * Mode.  C'est le mode d'affichage des logo.  "Opaque" remplace 
le fond par le logo ; "Invers‚" m‚lange les deux : noir sur blanc 
et  blanc sur noir.  En mono,  ‡a devient vite fouilli,  mais  en 
couleur, c'est … voir !

  La programmation du module :
  Nous  avons  voulu  en faire un  exemple  didactique  plus  que 
quelque  chose  de parfait.  Le source MIDSTMAG.C  est  largement 
comment‚, mais voici quelques d‚tails.
  L'effacement de l'‚cran … lieu dans la partie M_SWITCH. L'‚cran 
est d‚cal‚ vers le bas de 10 pixels.  Les 10 pixels du haut  sont 
alors "noircis".  Puis une boucle d‚cale l'ensemble de 10  pixels 
vers  le bas jusqu'… sortir de l'‚cran.  On a ainsi  l'impression 
que l'image glisse vers le bas de l'‚cran.
  Les  images  des  quatre logos sont  pr‚sentes  sous  forme  de 
descriptions  bitmaps  monochromes dans des  tableaux  d'int.  En 
mono,  elles  sont  utilis‚es  directement par  la  fonction  VDI 
vro_cpyfm().  En couleur, nous devons "reconstituer" les plans de 
couleurs.  Pour  cela,  nous r‚servons dans la partie  M_INIT  un 
buffer  de taille suffisante pour l'op‚ration.  Cette taille  est 
calcul‚e en fonction des dimensions du logo Application  Systems, 
le plus gros, multipli‚es par le nombre de plans.
  La  fonction put_logo() se charge alors de copier mot  par  mot 
les  donn‚es  bitmap  dans ce buffer  en  intercalant  le  nombre 
n‚cessaire  de  mot  pour  respecter  les  plans.  Il  y  a  donc 
'nbre_de_plans - 1' mots intercal‚s. Nous en profitons pour faire 
varier les couleurs en tirant une valeur al‚atoire 'm'  (masque). 
Selon cette valeur,  les mots intercal‚s seront '0', '0xFFFF', le 
mˆme motif,  ou le compl‚ment … 1 de ce motif (les bits … 1  sont 
mis … 0 et inversement). Ainsi, les couleurs r‚sultantes pour les 
points  "noirs" et les points "blancs" du logo varient  …  chaque 
fois.
  La  partie  M_DO_IT est constitu‚e d'une boucle qui  attend  la 
sortie  du module.  En attendant cet ev‚nement,  elle appelle  la 
fonction  put_logo()  en lui tranmettant le mode  de  combinaison 
image-source / image-cible choisi dans les paramŠtres.
  N'oublions  surtout pas de lib‚rer le buffer r‚serv‚  avant  de 
quitter le module, dans M_EXIT.

  Des questions ? 3615 STMAG, Bal FLECHE.

