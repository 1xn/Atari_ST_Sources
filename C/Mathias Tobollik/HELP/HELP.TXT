
\c----------------------------------------------------------------------
\c           Info:   Hilfetext-Source fÅr "Help!"-Funktionen
\c----------------------------------------------------------------------
\c           Autor:  (C) 1990 Mathias Tobollik
\c           Stand:  02.12.1990
\c----------------------------------------------------------------------
\c         !  Wenn irgend jemand énderungen an dieser Datei  !
\c         !  vornimmt, dann sollte er diese auf jeden Fall  !
\c         !  dokumentieren und kommentieren.                !
\c----------------------------------------------------------------------
\c
\c
\c
\>öbersicht\:

Hier eine öbersicht Åber die in HELP.C verfÅgbaren Funktionen.
Eine alphabetische Aufstellung aller Stichworte finden Sie im 
\<Index\.

Hauptfunktion:   \<help()\          Hilfe abrufen

Unterfunktionen: \<Compilerfunktionen\
                 \<Dateifunktionen\
                 \<Fensterfunktionen\
                 \<Grafikfunktionen\
                 \<Speicherverwaltung\
                 \<Stringfunktionen\
 
                 \<Sonstige\

ACHTUNG: Alle diese Funktionen greifen auf \<globale Variable\ 
         zu, deren Werte nicht willkÅrlich verÑndert werden
         sollten !
\.
\c
\c
\c
\>Compilerfunktionen\:

  \<check_help()\    Fehlerhafte \<Verweis\e suchen
  \<make_contents()\ Alphabetisches Stichwortverzeichnis 
                  erstellen
  \<make_help()\     \<Hilfetextdatei\ und \<Indexdatei\ 
                  erstellen
\.
\c
\c
\c
\>Grafikfunktionen\:

  \<cls_wind()\      Fenster-Arbeitsbereich lîschen
  \<display_help()\  \<Hilfetext\ im Fenster darstellen
  \<display_line()\  Ausgabe einer einzelnen Textzeile
  \<mark_ref()\      \<Verweis\ grafisch hervorheben
  \<set_clip()\      \<Clipping-Rechteck\ setzen
  \<wind_vmove()\    Fenster-Arbeitsbereich vertikal 
                  verschieben
\.
\c
\c
\c
\>Dateifunktionen\:

  \<get_help()\      \<Hilfetext\ aus \<Hilfetextdatei\ 
                  einlesen
  \<get_index()\     Indexdaten aus \<Indexdatei\ holen
\.
\c
\c
\c
\>Fensterfunktionen\:

  \<close_helpw()\   \<Hilfefenster\ abmelden/schlieûen
  \<h_fullwind()\    Hilfefenster auf volle grîûe bringen
                  oder wieder verkleinern
  \<h_newdim()\      Hilfefenster auf neue Grîûe/Po-
                  sition setzen
  \<h_vscr_line()\   Hilfefenster zeilenweise scrollen
  \<h_vscr_page()\   Hilfefenster seitenweise scrollen
  \<open_helpw()\    Hilfefenster anmelden/îffnen
  \<send_redraw()\   REDRAW-Message fÅr Fenster senden
  \<set_vslider()\   Vertikalen Schieber setzen
  \<vslider()\       Aus neuer Schieberposition die neue
                  Anfangszeile berechnen

\.
\c
\c
\c
\>Stringfunktionen\:

  \<change_ext()\    Einem Dateinamen-String eine neue 
                  Extension geben
  \<keycpy()\        \<SchlÅssel\ kopieren
  \<keylen()\        LÑnge eines \<SchlÅssel\s bestimmen
  \<keyw()\          Aus einem \<SchlÅssel\ das 
                  \<SchlÅsselwort\ herauskopieren
  \<offset()\        Daten einer \<Indexzeile\ lesen
\.
\c
\c
\c
\>Speicherverwaltung\:

  \<fre_mem()\       Speicherbereich freigeben
  \<get_mem()\       Speicherbereich anfordern
\.
\c
\c
\c
\>Sonstige\:

  \<close_vwork()\   VDI-Workstation schlieûen
  \<count_lin()\     Zeilen im Textpuffer zÑhlen
  \<find_ref()\      AngewÑhlten \<Verweis\ bestimmen
  \<go_line()\       Anfang einer Zeile suchen
  \<is_inside()\     Feststellen, ob die Åbergebenen
                  Koordinaten innerhalb des angegebenen 
                  Rechtecks liegen
  \<locate_ref()\    \<Verweis\e in Liste eintragen
  \<open_vwork()\    VDI-Workstation îffnen
\.
\c
\c
\c
\c So, jetzt kommen wir zu den Funktionen selbst:__________________________
\c
\>make_help()\:   \<Hilfetextdatei\ und \<Indexdatei\ erstellen

Definition:

  int make_help( char *filename )

Parameter:
    
  Name der ASCII-Quelldatei ( ohne Extension )

Wirkung:

  Die Funktion erstellt aus dem Text der ASCII-Quell-
  textdatei <FILENAME> die \<Indexdatei\ und die 
  \<Hilfetextdatei\ (die Extensionen werden 
  entsprechend geÑndert ).
  Fehler werden auf dem Bildschirm angezeigt und 
  mÅssen mit Tastendruck quittiert werden.

Ergebnis:

    Bei Fehler -1, sonst 0.

Ruft folgende "Help!"-Funktionen auf:

    \<change_ext()\     \<keylen()\

Gruppe: \<Compilerfunktionen\
\.
\c
\c
\c
\>check_help()\   Fehlerhafte \<Verweis\e suchen

Definition:
  
  int check_help( char *datei);

Parameter:

  datei  Name der ASCII-Quelldatei ( ohne Extension )
  
Wirkung:

  Die angegebene Datei wird nach \<Verweis\en durch-
  sucht, zu denen keine entsprechende ErklÑrung existiert.
  Dies wird angenommen, wenn zu dem \<Verweis\ kein gleich-
  lautender Eintrag in der \<Indexdatei\ existiert.
  Die fehlerhaften Verweise werden mit den entsprechen-
  den Zeilennummern in einer \<Fehlerdatei\ mit dem Namen 
  <datei>\<HERR\ notiert.

Ergebnis:
  
  Wenn eine der Dateien nicht angelegt/geîffnet 
  werden konnte eine negative Zahl, sonst 0.

Ruft folgende "Help!"-Funktionen auf:

  \<change_ext()\   \<keycpy()\

Gruppe: \<Compilerfunktionen\
\.
\c
\c
\c
\>make_contents()\  Alphabetisches Stichwortverzeichnis
                 erstellen

Definition:

  int make_contents( char *datei, char **feld, char *mem )

Parameter:

  datei  Name der \<Indexdatei\( ohne Extension )
  mem    Zeiger auf den Anfang eines Speicherblockes,
         in dem die zu sortierenden Stichworte als 
         Strings zwischengespeichert werden. Muû von 
         der aufrufenden Funktion angelegt werden.
         Die benîtigte Grîûe des Blocks errechnet sich 
         wie folgt:
         \<MAX_SRT\ * ( \<REF_LEN\+4 )
  feld   Zeiger auf ein Array von Stringpointern, das 
         ebenfalls die aufrufende Funktion anlegen muû. 
         Das Array muû die Dimension \<MAX_SRT\ haben.

Wirkung:

  Aus der angegebenen \<Indexdatei\ werden alle 
  \<SchlÅsselwort\e ausgelesen und in den Speicherblock 
  geschrieben. Daraus wird eine ASCII-Textdatei erstellt, 
  die aus einer alphabetisch sortiertierten Liste von 
  \<Verweis\en auf alle existierenden ErklÑrungen besteht.

  Diese Datei kann dann spÑter in den ursprÅnglichen Quelltext 
  eingefÅgt werden, nachdem sie evtl. noch bearbeitet wurde.

Ergebnis:
  
  Im Fehlerfall ein negativer Wert, sonst 0. Nach der
  AusfÅhrung der Funktion zeigen die Elemente von <feld[]>
  auf die einzelnen \<SchlÅsselwort\e (alphabetisch sortiert).

Ruft folgende "Help!"-Funktionen auf:

  \<change_ext()\  \<keycpy()\ 

Gruppe: \<Compilerfunktionen\
\.
\c
\c
\c
\>help()\         Hilfe abrufen

Definition:

  int help( char *what , char *datei, int mode )
  
Parameter:

  what   \<SchlÅsselwort\, zu dem Hilfe gegeben werden 
         soll
  datei  Name der Hilsdatei ( ohne Extension )
  mode   EXTERN: Die Funktion wurde von auûerhalb auf- 
         gerufen. In diesem Fall wird zuerst das Hilfe-
         fenster aufgebaut und bei Funktionsende wieder
         geschlossen.
         INTERN: Die Funktion hat sich selber aufgeru-
         fen. Ausgaben erfolgen daher auf dem bereits
         geîffneten \<Hilfefenster\.
                
Wirkung:
  
  Falls zu dem Åbergebenen \<SchlÅsselwort\ ein \<Hilfetext\
  existiert, wird er angezeigt. Ansonsten erfolgt eine
  Fehlermeldung mit einer Alertbox.
  Im Fenster hervorgehobene Verweise kînnen mit der
  Maus angeklickt werden, woraufhin die entsprechenden
  \<Hilfetext\e ausgegeben werden. Durch Klicken auf das
  Fenster-Schlieûsymbol gelangt man zum jeweils vorher
  angezeigten Hilfetext zurÅck oder schlieût das \<Hilfefenster\,
  wenn sich help() im EXTERN-Modus befindet.
  Die Hilfefunktion kann auch verlassen werden, indem man
  die ESCape-Taste benutzt, die die Hilfe sofort abbricht.

Ergebnis:

  Wenn die Hilfe Åber die Fenster-Schlieûfunktion verlassen 
  wurde \<FALSE\, beim Abbruch mit der ESCape-Taste \<TRUE\.
  Bei Fehlern wird eine negative Zahl zurÅckgeliefert.

Ruft folgende "Help!"-Funktionen auf:

  \<close_helpw()\   \<count_lin()\     \<display_help()\
  \<find_ref()\      \<fre_mem()\       \<get_help()\  
  \<get_index()\     \<get_mem()\       \<h_fullwind()\
  \<h_newdim()\      \<h_vscr_line()\   \<h_vscr_page()\   
  \<open_helpw()\    \<send_redraw()\   \<set_vslider()\   
  \<vslider()\

  ...und sich selbst !
\.
\c
\c
\c
\>display_help()\ Hilfetext im Fenster darstellen

Definition:

  void display_help( char *buf, long buflen,
                     int begline, lines )
Parameter:

  buf      Puffer, in dem der Hilfetext gespeichert ist
  buflen   LÑnge des Puffers in Bytes.
  begline  Zeile, ab der der Text angezeigt werden soll
  lines    Anzahl der Zeilen im gesamten Text
           
Wirkung:

  Der Text wird auf dem Hilfsfenster ausgegeben. Dabei
  werden die \<SchlÅsselwort\er hervorgehoben und alle ge-
  fundenen \<Verweis\e in das globale Feld \<ref\[] einge-
  tragen und in der globalen Variablen \<refno\ mitgezÑhlt
  ( => \<locate_ref()\ ).
  Die Funktion beschrÑnkt ihre Ausgaben auf die Bildschirm-
  bereiche, die vom AES in der REDRAW-Rechteckliste Åbergeben
  werden. FÅr jedes dieser Rechtecke wird dabei intern das 
  \<Clipping-Rechteck\ gesetzt und die einzelnen Textzeilen 
  mit \<display_line()\ ausgegeben.

Ruft folgende "Help!"-Funktionen auf:

  \<cls_wind()\  \<display_line()\  \<locate_ref()\    
  \<set_clip()\

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>h_vscr_page()\  Text im \<Hilfefenster\ vor- oder 
               zurÅckblÑttern

Definition:

   void h_vsrc_page( int up_down, 
                     char *buf, long buflen,
                     int *line, int lines )

Parameter:

  up_down  up_down > 0 = vorblÑttern
           up_down < 0 = zurÅckblÑttern
  buf      Zeiger auf Textpuffer
  buflen   LÑnge des Textpuffers (Bytes)
  line     Oberste Zeile im \<Hilfefenster\
  lines    Anzahl aller Zeilen in der
           ErklÑrung

Wirkung:

  Der \<Hilfetext\ wird um eine Seite (oder so 
  weit, wie es noch geht) vor- oder zurÅckge-
  blÑttert.

Ergebnis:

  <line> erhÑlt die neue Anfangszeile.

Ruft folgende "Help!"-Funktionen auf:

  \<display_line()\   \<locate_ref()\   \<set_clip()\ 
  \<set_vslider()\

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>h_vscr_line()\  \<Hilfetext\ Zeilenweise scrollen

Definition:

   void h_vsrc_line( int up_down, 
                     char *buf, long buflen,
                     int *line, int lines )
Parameter:

  up_down  up_down > 0 = nach oben scrollen
           up_down < 0 = nach unten scrollen
  buf      Zeiger auf Textpuffer
  buflen   LÑnge des Textpuffers (Bytes)
  line     Oberste Zeile im \<Hilfefenster\
  lines    Anzahl aller Zeilen in der
           ErklÑrung

Wirkung:

  Der \<Hilfetext\ wird vertikal um eine Zeile 
  gescrollt, sofern das noch mîglich ist.

Ergebnis:

Ruft folgende "Help!"-Funktionen auf:

  \<display_line()\   \<locate_ref()\   \<set_clip()\ 
  \<set_vslider()\

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>h_newdim()\  \<Hilfefenster\ auf neue Position 
            / Grîûe setzen

Definition:

Parameter:

Wirkung:

Ergebnis:

Ruft folgende "Help!"-Funktionen auf:

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>h_fullwind()\  \<Hilfefenster\ auf volle Grîûe
              bringen oder wieder verkleinern
Definition:

Parameter:

Wirkung:

Ergebnis:

Ruft folgende "Help!"-Funktionen auf:

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>display_line()\    Ausgabe einer Textzeile

Definition:

  void display_line( char *buf, long buflen, 
                     int begline, int line, int lines )

Parameter:
  
  buf      Anfang des Textpuffers
  buflen   LÑnge des Textpuffers in Bytes
  begline  Nummer der obersten Zeile im \<Hilfefenster\
  line     Nummer der Zeile, die ausgegeben werden soll
  lines    Anzahl der Zeilen im gesamten \<Hilfetext\

Wirkung:

  Innerhalb des definierten \<Clipping-Rechteck\s
  wird die angegebene Zeile des \<Hilfetext\es auf
  dem Bildschirm ausgegeben.

Ruft folgende "Help!"-Funktionen auf:

  \<go_line()\    

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>Clipping-Rechteck\  auf diesen Bereich werden alle
                      VDI-Grafikausgaben beschrÑnkt.
Die Koordinaten des Clipping-Rechtecks werden in
\<clip[]\ abgelegt (\<globale Variable\). 

Siehe auch: \<set_clip()\

\.
\c
\c
\c
\>set_clip()\    \<Clipping-Rechteck\ setzen/aktivieren

Definition:

  int set_clip( int w_handle, 
                int x, int y, int w, int h )

Parameter:

  w_handle  Window-Handle
  x,y       linke obere Ecke des Rechteckes
  w,h       Breite/Hîhe des Rechteckes

Wirkung:
  PrÅft, ob das angegebene Rechteck sich mit dem
  Arbeitsbereich des Fenstes mit dem Handle 
  <w_Handle> Åberschneidet. 
  Setzt in diesem Fall das \<Clipping-Rechteck\ 
  auf die SchnittflÑche und aktiviert das Clipping.

Ergebnis:

  Wenn eine SchnittflÑche existiert \<TRUE\. öber-
  schneiden sich die beiden Bereiche nicht, wird
  \<FALSE\ zurÅckgegeben. Bei \<FALSE\ wird das
  aktuelle Clipping nicht verÑndert.

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>cls_wind()\    Fenster-Arbeitsbereich lîschen

Definition:
  
  void cls_wind( int w_handle )
  
Parameter:

  w_handle   Window-Handle des Fensters

Wirkung:

  Lîscht den Arbeitsbereich des Fensters. Wirkt bei 
  aktivem Clipping nur innerhalb des 
  \<Clipping-Rechteck\s). VerÑndert das Clipping 
  nicht.

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>get_index()\    Indexdaten aus \<Indexdatei\ holen

Definition:

  int get_index( char *file, char *key, 
                 long *start, long *length )
                                        
Parameter:

  file    Dateiname ( Extension wird intern geÑndert )
  key     gesuchtes \<SchlÅsselwort\
  start   in diese Variable wird der Dateioffset des
          zum \<SchlÅsselwort\ gehîrenden \<Hilfetext\es
          eingetragen
  length  hier trÑgt die Funktion die LÑnge des Hilfe-
          textes ein

Wirkung:

  Die Indexdatei wird nach dem \<SchlÅsselwort\ <key>
  durchsucht.
  Wird es gefunden, werden in <start> und <length> die 
  Werte aus der \<Indexdatei\ eingetragen.

Ergebnis:
 
  Im Fehlerfall negativ, sonst 0.

Ruft folgende "Help!"-Funktionen auf:

  \<change_ext()\    \<keyw()\    \<offset()\

Gruppe: \<Dateifunktionen\
\.
\c
\c
\c
\>get_help()\     \<Hilfetext\ aus \<Hilfetextdatei\ 
               einlesen

Definition:

  int get_help( char *file, char *buf, 
                long start, long length )
                                       
Parameter:

  file    Dateiname der \<Hilfetextdatei\, aus der 
          gelesen wird (Extension wird intern gesetzt)
  buf     Puffer, in den der \<Hilfetext\ geschrieben 
          wird
  start   Offset, ab dem gelesen wird
  length  Anzahl zu lesender Zeichen
  
Wirkung:
  
  Aus der Datei <FILE> werden ab <start> <length> 
  Zeichen in den Puffer <buf> gelesen.
  Im Fehlerfall erfolgt Meldung Åber eine Alertbox.
  
Ergebnis:

  Bei Fehler negativ, sonst 0.

Ruft folgende "Help!"-Funktionen auf:

  \<change_ext()

Gruppe: \<Dateifunktionen\
\.
\c
\c
\c
\>offset()\       Daten einer \<Indexzeile\ lesen
Definition:

  void offset( char *zeile, long *index, 
               long *length )
  
Parameter:
  
  zeile   Zeile aus einer \<Indexdatei\
  index   hier wird der ermittelte Offset 
          eingetragen
  length  hier wird die ermittelte LÑnge
          eingetragen
  
Wirkung:

  Die Indexdaten, die in dem String <zeile> im 
  Format einer \<Indexzeile\ stehen, werden 
  ermittelt und in <index> und <length> eingetra-
  gen.

Gruppe: \<Stringfunktionen\
\.
\c
\c
\c
\>go_line()\      Anfang einer Zeile suchen

Definition:

  char *go_line( int n, char *p )

Parameter:

  n   Nummer der Zeile ( 0...x ), deren Anfang 
      gesucht werden soll
  p   Zeiger auf den Anfang des Textpuffers, in
      dem gesucht werden soll

Wirkung:

  Es wird die Speicherstelle gefunden, bei der die 
  <n>-te Zeile beginnt. Die Suche wird bei <p> 
  begonnen. Ist n=0 so wird <p> als Ergebnis 
  zurÅckgeliefert.
  
Ergebnis:
  
  Zeiger auf den Anfang der Zeile <n>.

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>count_lin()\    Zeilen im Textpuffer zÑhlen

Definition:

  int count_lin( char *puf, long puf_len )
  
Parameter:

  puf      Anfang des Textpuffers
  puf_len  LÑnge des Textpuffers in Byte
  
Wirkung:

  Es wird gezÑhlt, wieviele Zeilen sich im Textpuffer
  ab <puf> mit der LÑnge <puf_len> befinden.
  
Ergebnis:

  Anzahl der Zeilen im angegebenen Speicherbereich.

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>locate_ref()\   \<Verweis\e in Liste eintragen

Definition:

  void locate_ref( char *buf, long buflen,
                   int begline )
Parameter:

  buf      Anfang Textpuffer
  buflen   LÑnge des Textpuffers in Bytes
  begline  oberste Zeile im \<Hilfefenster\

Wirkung:

  \<Verweis\e, die sich innerhalb des im \<Hilfefenster\ 
  darzustellenden Textbereiches befinden, werden in die 
  globale Verweisliste \<ref\[] eingetragen, wobei ihre 
  Anzahl in \<refno\ festgehalten wird
  (--> \<globale Variable\ ).

Ruft folgende "Help!"-Funktionen auf:

  \<go_line()\    \<keyw()\

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>find_ref()\     AngewÑhlten \<Verweis\ bestimmen

Definition:
 
  char *find_ref( int x, int y )
  
Parameter:

  x    Mausposition in x-Richtung
  y    Mausposition in y-Richtung

Wirkung:

  Es wird ein Zeiger auf das \<SchlÅsselwort\ des 
  \<Verweis\es geliefert, auf dem sich der Mauszeiger
  gerade befindet.
  Falls dort kein Verweis ist, wird ein Nullpointer
  zurÅckgeliefert.

Ergebnis:

  Im Fehlerfall NULL, sonst ein Zeiger auf das SchlÅssel-
  wort des gefundenen \<Verweis\es.

Ruft folgende "Help!"-Funktionen auf:

  \<is_inside()\    \<mark_ref()\

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>mark_ref()\     \<Verweis\ grafisch hervorheben

Defintion:

  void mark_ref( refer *ref )

Parameter:

  ref  zu markierender \<Verweis\

Wirkung:

  Das \<SchlÅsselwort\ des angebenen \<Verweis\es
  wird invertiert. 

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>open_helpw()\   \<Hilfefenster\ anmelden/îffnen

Definition:

  int open_helpw( void )
  
Wirkung:

  Das \<Hilfefenster\ wird angemeldet und gîffnet. Zum
  \<Hilfefenster\ gehîrende \<globale Variable\ werden
  auf die erhaltenen Werte gesetzt, und das 
  \<Clipping-Rechteck\ wird auf den Arbeitsbereich
  beschrÑnkt.

Ergebnis:

  Bei Fehler negativ, sonst Handle des \<Hilfefenster\s.

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>close_helpw()\  \<Hilfefenster\ abmelden/schlieûen

Definition:

  void close_helpw( void )

Wirkung:

  Das \<Hilfefenster\ wird abgemeldet und geschlossen.

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>send_redraw()\  REDRAW-Message fÅr Fenster senden

Definition:

  void send_redraw( int w_handle )
  
Parameter:

  w_handle   Window-Handle des Fensters, dessen Arbeits-
             bereich neu gezeichnet werden soll

Wirkung:
  
  Die Applikation sendet an sich selbst eine REDRAW-Message
  fÅr den Arbeitsbereich des angegebenen Fensters. Dadurch 
  wird ein Neuzeichnen des betreffenden Fensters ausgelîst.

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>set_vslider()\  Vertikalen Schieber setzen

Definition:

  void set_vslider( int b_lin, int to_lin )

Parameter:

  b_lin   Zeile, ab der der Text im Hilfsfenster
          erscheint
  to_lin  Gesamtzahl aller Zeilen im Textpuffer
  
Wirkung:

  Aus der Anfangszeile und der Gesamt-Zeilenzahl wird
  die neue Grîûe und Position des Vertikalschiebers
  errechnet. Anschlieûend wird der Schieber des 
  \<Hilfefenster\s entsprechend verÑndert.

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>vslider()\      Aus neuer Schieberposition die neue
               Anfangszeile berechnen

Definition:

  int vslider( int slidepos, int to_lin )
  
Parameter:

  slidepos  die normierte Position des Schiebers
  to_lin    die Gesamtzahl der im Textpuffer ent-
            haltenen Zeilen

Wirkung:

  Aus der Schieberposition <slidepos> und der 
  Gesamt-Zeilenzahl <to_lin> wird die neue Anfangs-
  zeile fÅr den im Hilfsfenster darzustellenden
  Textbereich ermittelt.
  
Ergebnis:

  Neue Anfangszeile.

Gruppe: \<Fensterfunktionen\
\.
\c
\c
\c
\>is_inside()\    Feststellen, ob die Åbergebenen Koordi-
               naten innerhalb des angegebenen Rechtecks
               liegen

Definition:

  int is_inside( int a, int b, 
                 int x, int y, int w, int h )

Parameter:

  a, b      zu testende Koordinaten (x/y)
  x, y      linke obere Ecke des Testrechtecks
  w, h      Breite / Hîhe des Testrechtecks
  
Wirkung:

  Falls der Punkt a,b innerhalb des angegebenen Recht-
  ecks liegt, wird \<TRUE\ zurÅckgeliefert, ansonsten
  \<FALSE\.

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>change_ext()\   Einem Dateinamen-String eine neue 
               Extension geben

Definition:

  char *change_ext( char *name, const char *ext )
  
Parameter:

  name   String mit dem Pfad-/Dateinamen 
         ( mit oder ohne Extension, das ist egal! )
  ext    String mit der neuen Extension, z. B.
         ".EXT"
         
Wirkung:

  Falls <name> schon eine Extension besitzt, wird 
  diese durch <ext> ersetzt. Andernfalls wird <ext> an 
  <name> angehÑngt. Der Trennungspunkt muû unbedingt 
  in <ext> enthalten sein !
  
Ergebnis:

  Es wird ein Zeiger auf den Anfang von <name> zurÅck-
  geliefert.

Gruppe: \<Stringfunktionen\
\.
\c
\c
\c
\>keycpy()\      \<SchlÅssel\ kopieren

Definition:

  char *keycpy( char *to, char *from )

Parameter:

  to    Zielstring
  from  Quellstring
  
Wirkung:

  Der String <from> wird nach einem \<SchlÅssel\ 
  durchsucht.
  Falls einer gefunden wird, wird er komplett (also
  mit den Markierungen) nach <to> kopiert.
  Die Kopie wird mit einem Nullbyte abgeschlossen.
  
Ergebnis:

  Wenn kein \<SchlÅssel\ gefunden wurde, wird ein 
  Nullpointer zurÅckgeliefert, andernfalls ein Zeiger 
  auf das Ende (!) des \<SchlÅssel\s in <from>.

Gruppe: \<Stringfunktionen\
\.
\c
\c
\c
\>keyw()\         Aus einem \<SchlÅssel\ das 
               \<SchlÅsselwort\ herauskopieren
               
Definition:

  char *keyw( char *to, char *from )

Parameter:

  to    Zielstring
  from  \<SchlÅssel\ / Quellstring
  
Wirkung:

  Das \<SchlÅsselwort\, da in dem \<SchlÅssel\ ab 
  <from>  enthalten ist, wird nach <to> kopiert 
  und mit einem Nullbyte abgeschlossen.
  
Ergebnis:

  Es wird ein Zeiger auf den Anfang von <to> zurÅck-
  geliefert.

Gruppe: \<Stringfunktionen\
\.
\c
\c
\c
\>keylen()\    LÑnge eines \<SchlÅssel\s bestimmen

Definition:

  size_t keylen( char *keywd )
  
Parameter:

  keywd  \<SchlÅssel\, dessen LÑnge bestimmt werden 
         soll
  
Wirkung:

  Es wird die LÑnge des \<SchlÅssel\s ( einschlieûlich 
  Markierungen ) ermittelt.
  
Ergebnis:

  LÑnge in Bytes.

Gruppe: \<Stringfunktionen\
\.
\c
\c
\c
\>get_mem()\       Speicherbereich anfordern

Definition:

  char *get_mem( long amount )

Parameter:

  amount  Anzahl zu reservierender Bytes

Wirkung:

  Wenn mîglich, wird der geforderte Speicher
  reserviert.
  Diese Funktion lÑût sich beim ersten Aufruf einen 
  Speicherblock vom Betriebssystem reservieren,
  und verwaltet diesen dann zusammen mit \<fre_mem()\ 
  intern, bis der gesamte angeforderte Speicher mit 
  fre_mem() wieder freigegeben wird. 
  Dann wird der Block dem Betriebssystem zurÅckgegeben.
  Die Grîûe des verwalteten Speichers wird in \<HELP.H\ 
  durch die Konstante \<MBKSIZE\ eingestellt.

Ergebnis:

  Wenn der Speicher erfolgreich alloziert werden 
  konnte ein Zeiger auf den Anfang des Speicherbereichs. 
  Im Fehlerfalle wird ein Nullpointer zurÅckgeliefert.

Siehe auch \<globale Variable\, insbesondere \<Mem_AreA\
\<Mem_NexT\ und \<LefT\ !

Gruppe: \<Speicherverwaltung\
\.
\c
\c
\c
\>fre_mem()\       Speicherbereich freigeben

Definition:

  void fre_mem( char *where )

Parameter:

  where  Zeiger auf den Speicherblock, der
         freigegeben werden soll

Wirkung:

  Der vorher mit \<get_mem()\ allozierte 
  Speicherblock wird wieder freigegeben.

Siehe auch \<globale Variable\, insbesondere 
\<Mem_AreA\, \<Mem_NexT\ und \<LefT\ !

Gruppe: \<Speicherverwaltung\
\.
\c
\c
\c
\>open_vwork()\  VDI-Workstation îffnen

Definition:
  
  int open_vwork( void )

Wirkung:

  Meldet die Anwendung beim AES an und îffnet eine 
  VDI-Workstation.
  Es werden die folgenden globalen Variablen gesetzt:
  
  \<phys_handle\   \<handle\   
  \<x_res\         \<y_res\  
  \<char_w\        \<char_h\    \<cell_w\    \<cell_h\

  ( siehe auch: \<globale Variable\ )

Ergebnis:

  \<TRUE\, wenn die Funktion fehlerfrei ausgefÅhrt 
  werden konnte, sonst \<FALSE\.

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>close_vwork()\  VDI-Workstation schlieûen

Definition:
  
  void close_vwork( void )

Wirkung:
 
  Die VDI-Workstation wird geschlossen und 
  appl_exit() ausgefÅhrt.

Gruppe: \<Sonstige\
\.
\c
\c
\c
\>wind_vmove()\  Fenster-Arbeitsbereich vertikal 
              verschieben

Definition:

  wind_vmove( int w_handle, int delta_y )
  
Parameter:

  w_handle   Window-Handle des Fensters
  delta_y    Distanz (in Pixeln), um die verschoben 
             werden soll.
             Das Vorzeichen gibt die Richtung an:
             
             delta_y < 0   -->  verschiebt nach oben
             delta_y > 0   -->  verschiebt nach unten
  
Wirkung:

  Der Inhalt des Arbeitsbereiches wird um <delta_y> 
  Pixel nach oben oder unten verschoben ( z.B. fÅr 
  vertikales Scrolling ).

Gruppe: \<Grafikfunktionen\
\.
\c
\c
\c
\>globale Variable\, die von den "Help!"-Funktionen 
benutzt werden, sind in \<GEM_INIT.H\ und \<HELP.H\ 
definiert. 
\.
\c
\c
\c
\>HELP.H\ liefert die Prototypen fÅr die 
       "Help!"-Funktionen und definiert die 
       folgenden Konstanten / Variablen:


Konstanten: _______________________________________________

\<FALSE\   0
\<TRUE\    1

\<EXTERN\  1    Modi fÅr Hilfefunktion 
\<INTERN\  0  

\<MBKSIZE\ 15   grîûe des mit \<get_mem()\ und 
             \<fre_mem()\ verwalteten Speichers
\<MAX_REF\ 80   maximale Anzahl von \<Verweis\en 
             im \<Hilfefenster\
\<REF_LEN\ 31   maximale LÑnge des \<SchlÅsselwort\es
             eines \<Verweis\es
\<LINE_LEN\ 81  maximale LÑnge einer Textzeile
\<H_DEPTH\ 30   maximale Verschachtelungstiefe fÅr
             die Funktion \<help()\ ( Rekursion )
\<MAX_SRT\ 300  maximale Anzahl EintrÑge fÅr die
             Funktion \<make_contents()\
\<HW_ATTRIB\ 511 Fensterattribute des \<Hilfefenster\s
              Voreinstellung: NAME+CLOSE+FULL+MOVE+INFO
                             +SIZE+UPARROW+DNARROW+VSLIDE
Endungen fÅr Dateinamen:

\<HSRC\ ".TXT"    \<Hilfetext\-Quelldatei
\<HHLP\ ".AID"    \<Hilfetextdatei\       
\<HNDX\ ".AIX"    \<Indexdatei\           
\<HCNT\ ".CNT"    Inhaltsverzeichnis   
\<HERR\ ".ERR"    \<Fehlerdatei\

Globale Variable:_______________________________

\<Hilfefenster\:
\<hlp_win\      Handle
\<hww_x\ \<hww_y\  aktiver Bereich
\<hww_w\ \<hww_h\
\<hwo_x\ \<hwo_y\  Auûenmaûe
\<hwo_w\ \<hwo_h\
    
                     
\<m_x\ \<m_y\      Mauskoordinaten
\<m_but\        Maustasten
\<clicks\       Anzahl Mausklicks
\<key\          Sondertasten
\<taste\        Tastencode

\<h_depth\      aktuelle Verschachtelungstiefe 
             von \<help()\

\<clip[]\       \<Clipping-Rechteck\ fÅr 
             VDI-Grafikfunktionen


FÅr \<get_mem()\ und \<fre_mem()\ reserviert (dÅrfen 
durch andere Funktionen NICHT verÑndert werden! ):

\<Mem_AreA\       Groûer, reservierter Speicherblock
\<Mem_NexT\       Anfang des nÑchsten Teilblocks  
\<LefT\           restlicher freier Speicher


\<refer\ \<ref\[\<MAX_REF\]     Liste von \<Verweis\en
\<refno\              gÅltige Verweise   
\.
\c
\c
\c
\>Verweis\: Eine Struktur vom Typ \<refer\, die die 
          Daten eines Verweises auf einen weiteren 
          \<Hilfetext\ enthÑlt. 
In der Textdarstellung im \<Hilfefenster\ sind
Verweise durch unterstrichene Fettschrift gekenn-
zeichnet.
             
Siehe auch: \<globale Variable\ !
          
\.
\c
\c
\c
\>GEM_INIT.H\ liefert die Funktionen fÅr das An- 
           und Abmelden beim VDI / AES. 

Folgende Variable werden definiert und bei Aufruf 
von \<open_vwork()\ auch initialisiert:

\<work_in[]\      Parameter-öbergabefelder
\<work_out[]\ 
\<handle\         VDI-Handle
\<phys_handle\
\<char_w\ \<char_h\  Zeichenbreite / -hîhe 
\<cell_w\ \<cell_h\
\<ap_id\          AES-Applikationsnummer
\<x_res\ \<y_res\    Bildschirmauflîsung

Siehe auch:  \<open_vwork()\
             \<close_vwork()\
\.
\c
\c
\c
\>refer\: Die Struktur refer ist in \<HELP.H\ 
       folgendermaûen definiert:
           
  typedef struct     /* \<Verweis\: */
  {
      char s[REF_LEN];  /* \<SchlÅsselwort\ */
      int  x,y,w,h;     /* Maûe des umgebenden */
  }refer;               /* Rechtecks           */

Beim Anzeigen des \<Hilfetext\es im \<Hilfefenster\ 
wird jeder \<Verweis\ in eine globale Liste 
(=> \<globale Variable\, \<ref\[], \<refno\) 
eingetragen, die aus solchen Strukturen besteht. 

So kann nach einem Mausklick auf die ArbeitsflÑche 
schnell festgestellt werden, welcher \<Verweis\ 
angewÑhlt wurde.
\.
\c
\c
\c
\>Hilfetextdatei\    Die Datei, in der die \<Hilfetext\e
                  stehen. Ihre Extension wird in \<HELP.H\ 
                  durch die Konstante \<HHLP\ festgelegt.
\.
\c
\c
\c
\>Hilfetext\  Der Text, der als ErklÑrung zu einem
           \<SchlÅsselwort\ bzw. einem \<Verweis\ im
           \<Hilfefenster\ erscheinen soll.

\.
\c
\c
\c
\>SchlÅsselwort\   hier ist z.B. "SchlÅsselwort" das
                SchlÅsselwort, zu dem diese ErklÑrung
                gehîrt (ist das jetzt eine rekursive
                ErklÑrung ?).
                
Ein SchlÅsselwort bildet den Kern eines \<SchlÅssel\s.

Beispiel: "SchlÅssel" ist das 
          SchlÅsselwort von "\\>SchlÅssel\"
          
Die maximal zulÑssige LÑnge eines SchlÅsselwortes wird
in \<HELP.H\ durch die Konstante \<REF_LEN\ festgelegt.
\.
\c
\c
\c
\>Indexzeile\  Zeile einer \<Indexdatei\. In ihr steht der 
            \<SchlÅssel\ mit dem \<SchlÅsselwort\ sowie 
            Position und LÑnge des dazu gehîrenden 
            \<Hilfetext\es in der \<Hilfetextdatei\.

Beispiel fÅr eine Indexzeile:

            \\>Hilfe\\1023,234

...heiût: Es gibt in der Hilfetextdatei eine ErklÑrung
          zum \<SchlÅsselwort\ "Hilfe". Sie beginnt
          beim 1023-ten Zeichen der \<Hilfetextdatei\,
          (wobei das erste Zeichen das 0-te Zeichen
          wÑre), und ist 234 Zeichen lang.
\.
\c
\c
\c
\>Indexdatei\  Sammlung von \<Indexzeile\n fÅr alle in der
            \<Hilfetextdatei\ vorkommenden \<SchlÅsselwort\e.
            Sie besteht aus einzelnen \<Indexzeile\n.
Indexdateien werden mit der Extension versehen, die in \<HELP.H\
durch die Konstante \<HNDX\ definiert wird.
\.
\c
\c
\c
\>Fehlerdatei\  Hier trÑgt \<check_help()\ \<Verweis\e ein,
             zu denen in der \<Indexdatei\ kein passender
             Eintrag existiert. Die Fehlerdatei hat die
             Extension, die mit \<HERR\ in \<HELP.H\ fest-
             gelegt ist.
\.
\c
\c
\c
\>SchlÅssel\  Ein mit Markierungen versehenes \<SchlÅsselwort\.
           SchlÅssel kommen sowohl in der \<Indexdatei\ als 
           auch in der \<Hilfetextdatei\ vor. 
SchlÅssel weisen im \<Hilfetext\ auf weitere ErklÑrungen hin 
(\<Verweis\e) oder markieren den Anfang einer ErklÑrung. Ein 
SchlÅssel beginnt immer mit dem Zeichen "\\" und endet auch 
damit. Bei \<Verweis\en ist das zweite Zeichen ein "<", bei 
ErklÑrungen ein ">".

Beispiel:       "\\<Verweis\\"
                "\\>ErklÑrung\\"
\.
\c
\c
\c
\>Hilfefenster\   Das Fenster, auf dem die Ausgabe der
               \<Hilfetext\e erfolgt.
               öber \<globale Variable\n kann man seine
               Ausmaûe ermitteln bzw. festlegen:
               
\<hww_x\, \<hww_y\, \<hww_w\, \<hww_h\ beschreiben den Arbeitsbereich,

\<hwo_x\, \<hwo_y\, \<hwo_w\, \<hwo_h\ beschreiben die Auûenmaûe und
                           mÅssen vor dem ersten ôffnen des
                           Hilfefensters initialisiert werden.

Die Konstante \<HW_ATTRIB\ setzt die Attribute des Hilfefensters
fest (\<HELP.H\).
\.
\c
\c
\c
\>HW_ATTRIB\ Konstant aus \<HELP.H\. Definiert
          die Attribute des \<Hilfefenster\s.

Voreingestellt ist der Wert 511 fÅr:

     - Titelbalken, 
     - Infozeile
     - Schlieûbox
     - Fullbox
     - Bewegungsbox
     - Grîûen-Verstellung
     - Pfeil nach oben
     - Pfeil nach unten
     - vertikaler Schieber

Soll der Anwender Grîûe und Position des
\<Hilfefenster\s NICHT Ñndern kînnen, muû
HW_ATTRIB auf den Wert 467 eingestellt 
werden. Dann bleiben nur:

     - Titelbalken
     - Infozeile
     - Schlieûbox
     - Pfeil nach unten
     - Pfeil nach oben
     - vertikaler Schieber
\.
\c
\c
\c
\>FALSE\   ist in \<GEM_INIT.H\ und \<HELP.H\ definiert als:

  #define FALSE    0
  
\.
\c
\c
\c
\>TRUE\    ist in \<GEM_INIT.H\ und \<HELP.H\ definiert als:

  #define TRUE     1
\.
\c
\c
\c
\>MAX_SRT\  Konstante aus \<HELP.H\. Gibt die maximale 
         Anzahl von Stichworten an, die man mit 
         \<make_contents()\ erfassen und sortieren kann.
\.
\c
\c
\c
\>LINE_LEN\  Konstante aus \<HELP.H\. Gibt die maximale LÑnge
          einer Textzeile an. Wird in allen Funktionen verwendet,
          die intern Zeilen aus oder fÅr Ein- oder Ausgabedateien
          zwischenspeichern.
\.
\c
\c
\c
\>MBKSIZE\  ( memory blocksize ). Konstante aus \<HELP.H\.
         Definiert die Grîûe des Specherblockes, den die
         Funktionen \<get_mem()\ und \<fre_mem()\ verwalten.
         Die Konstante ist vom Typ long integer und gibt die
         Grîûe des Blockes in Kilobyte an.
\.
\c
\c
\c
\>REF_LEN\  Konstante aus \<HELP.H\. Gibt die maximale 
         LÑnge eines \<SchlÅssel\s an (inkl. Nullbyte ! ).
\.
\c
\c
\c
\>EXTERN\  Konstante aus \<HELP.H\. Wird der Funktion 
        \<help()\ der Modus EXTERN Åbergeben, dann meldet 
        help() das \<Hilfefenster\ an und îffnet es.
        Im Modus \<INTERN\ wird dagegen angenommen, daû 
        das Hilfefenster bereits existiert.
\.
\c
\c
\c
\>INTERN\  Konstante aus \<HELP.H\. Wird der Funktion 
        \<help()\ der Modus INTERN Åbergeben, dann geht 
        help() von einem bereits geîffneten \<Hilfefenster\ 
        aus.
        Im Modus \<EXTERN\ wird dagegen zuerst das \<Hilfefenster\
        angemeldet und geîffnet.
\.
\c
\c
\c
\>H_DEPTH\ Konstante aus \<HELP.H\. Gibt an, wie oft sich die
        Funktion \<help()\ selbst aufrufen darf.
        Siehe auch \<h_depth\.
        BeschrÑnkt man die Anzahl der Rekursionen nicht, so 
        besteht die Gefahr eines Stack-öberlaufs !
\.
\c
\c
\c
\>h_depth\  \<globale Variable\ aus \<HELP.H\. Gibt an, 
         wie oft sich die Funktion \<help()\ bereits 
         selbst aufgerufen hat. Siehe auch \<H_DEPTH\.
\.
\c
\c
\c
\>MAX_REF\  Konstante aus \<HELP.H\. Gibt an, wieviel 
         \<Verweis\e maximal gleichzeitig im \<Hilfefenster\ 
         dargestellt werden kînnen. 
         Siehe auch \<refno\ und \<ref\[] !
\.
\c
\c
\c
\>refno\  \<globale Variable\ aus \<HELP.H\. Gibt an, 
       wieviele EintrÑge in \<ref\[] zur Zeit gÅltig sind. 
       Siehe auch \<MAX_REF\.
\.
\c
\c
\c
\>phys_handle\  Globale Integervariable, definiert int 
             \<GEM_INIT.H\.
             Physikalisches Handle der aktuell geîffneten 
             VDI-Workstation. Erst nach erfolgreichem Aufruf 
             von \<open_vwork()\ gÅltig!
\.
\c
\c
\c
\>handle\ Globale Integervariable, definiert in \<GEM_INIT.H\.
       EnthÑlt das aktuelle VDI-Handle. Erst nach erfolgreichem 
       Aufruf von \<open_vwork()\ gÅltig!
\.
\c
\c
\c
\>x_res\  Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Bildschirmauflîsung in x-Richtung an.
       Erst nach erfolgreichem Aufruf von \<open_vwork()\ 
       gÅltig!
\.
\c
\c
\c
\>y_res\  Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Bildschirmauflîsung in x-Richtung an.
       Erst nach erfolgreichem Aufruf von \<open_vwork()\ 
       gÅltig!
\.
\c
\c
\c
\>char_w\ Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Breite eines Zeichens des aktuellen Zeichen-
       satzes an. Erst nach erfolgreichem Aufruf von 
       \<open_vwork()\ gÅltig!
\.
\c
\c
\c
\>char_h\ Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Hîhe eines Zeichens des aktuellen Zeichensatzes
       an. Die "Help!"-Funktionen setzen den Zeilenabstand
       bei Textausgaben im \<Hilfefenster\ auf diesen Wert.
       Erst nach erfolgreichem Aufruf von \<open_vwork()\ 
       gÅltig!
\.
\c
\c
\c
\>cell_w\ Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Breite einer Box an, die ein Zeichen des aktuellen
       Zeichensatzes ganz umschlieût.
       Erst nach erfolgreichem Aufruf von \<open_vwork()\ gÅltig!
\.
\c
\c
\c
\>cell_h\ Globale Integervariable, definiert in \<GEM_INIT.H\.
       Gibt die Hîhe einer Box an, die ein Zeichen des 
       aktuellen Zeichensatzes ganz umschlieût. Wird von
       den "Help!"-Funktionen als Maû fÅr die Hîhe der MenÅ-
       leiste benutzt.
       Der Inhalt von cell_h ist erst nach erfolgreichem Aufruf 
       von \<open_vwork()\ gÅltig!
\.
\c
\c
\c
\>hlp_win\ Globale Integervariable, definiert in \<HELP.H\.
        Gibt das Window-Handle des \<Hilfefenster\s an.
        Ist erst gÅltig, wenn das Fenster mit \<open_helpw()\
        geîffnet wurde.
\.
\c
\c
\c
\>hwo_x\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die X-Koordinate des \<Hilfefenster\s an ( Auûen-
       maû! ). Muû vor dem ersten ôffnen des Hilfefensters
       mit \<open_helpw()\ initialisiert werden!
\.
\c
\c
\c
\>hwo_y\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Y-Koordinate des \<Hilfefenster\s an ( Auûen-
       maû! ).  Muû vor dem ersten ôffnen des Hilfefensters
       mit \<open_helpw()\ initialisiert werden!
\.
\c
\c
\c
\>hwo_w\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Breite des \<Hilfefenster\s an ( Auûenmaû! ).
       Muû vor dem ersten ôffnen des \<Hilfefenster\s mit
       \<open_helpw()\ initialisiert werden!
\.
\c
\c
\c
\>hwo_h\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Hîhe des \<Hilfefenster\s an ( Auûenmaû! ).
       Muû vor dem ersten ôffnen des \<Hilfefenster\s mit
       \<open_helpw()\ initialisiert werden!
\.
\c
\c
\c
\>hww_x\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die X-Koordinate des Arbeitsbereiches des 
       \<Hilfefenster\s an. Ist erst gÅltig, wenn das 
       Fenster mit \<open_helpw()\ geîffnet wurde.
\.
\c
\c
\c
\>hww_y\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Y-Koordinate des Arbeitsbereiches des 
       \<Hilfefenster\s an. Ist erst gÅltig, wenn das 
       Fenster mit \<open_helpw()\ geîffnet wurde.
\.
\c
\c
\c
\>hww_w\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Breite des Arbeitsbereiches des \<Hilfefenster\s 
       an. Ist erst gÅltig, wenn das Fenster mit \<open_helpw()\ 
       geîffnet wurde.
\.
\c
\c
\c
\>hww_h\  Globale Integervariable, definiert in \<HELP.H\.
       Gibt die Hîhe des Arbeitsbereiches des \<Hilfefenster\s 
       an. Ist erst gÅltig, wenn das Fenster mit \<open_helpw()\ 
       geîffnet wurde.
\.
\c
\c
\c
\>HSRC\  Definiert in \<HELP.H\. Gibt die Standard-Extension 
      fÅr Quelldateien von \<Hilfetext\en an.
\.
\c
\c
\c
\>HHLP\  Definiert in \<HELP.H\. Gibt die Standard-Extension
      fÅr \<Hilfetextdatei\en an.
\.
\c
\c
\c
\>HNDX\  Definiert in \<HELP.H\. Gibt die Standard-Extension 
      fÅr \<Indexdatei\en an.
\.
\c
\c
\c
\>HCNT\  Definiert in \<HELP.H\. Gibt die Standard-Extension 
      fÅr Dateien an, in denen die Funktion \<make_contents()\ 
      ein alphabetisch sortiertes Stichwortverzeichnis anlegt.
\.
\c
\c
\c
\>HERR\  Definiert in \<HELP.H\. Gibt die Standard-Extension
      fÅr die Datei an, in der die Funktion \<check_help()\ 
      die fehlerhaften \<Verweis\e eintrÑgt. 
\.
\c
\c
\c
\>m_x\  Globale Integervariable, definiert in \<HELP.H\.
     Die "Help!"-Funktionen legen hier bei Event-Auf-
     rufen die X-Koordinate der Maus ab.
\.
\c
\c
\c
\>m_y\  Globale Integervariable, definiert in \<HELP.H\.
     Die "Help!"-Funktionen legen hier bei Event-Auf-
     rufen die Y-Koordinate der Maus ab.
\.
\c
\c
\c
\>m_but\  Globale Integervariable, definiert in \<HELP.H\.
     Die "Help!"-Funktionen legen hier bei Event-Auf-
     rufen den Status der Maustasten ab.
\.
\c
\c
\c
\>clicks\ Globale Integervariable, definiert in \<HELP.H\.
       Die "Help!"-Funktionen legen hier bei Event-Auf-
       rufen die Anzahl der Mausklicks ab, die zu dem 
       Ereignis gefÅhrt haben.
\.
\c
\c
\c
\>key\  Globale Integervariable, definiert in \<HELP.H\.
     Die "Help!"-Funktionen legen hier bei Event-Aufrufen 
     den Status der Sondertasten ab.
\.
\c
\c
\c
\>taste\  Globale Integervariable, definiert in \<HELP.H\.
     Die "Help!"-Funktionen legen hier bei Event-Aufrufen 
     den Tastatur-Scancode ab.
\.
\c
\c
\c
\>clip[]\  Globales Integerarray, definiert in \<HELP.H\.
        Die "Help!"-Funktionen benutzen dieses Array zum
        setzen des \<Clipping-Rechteck\s fÅr die VDI-Grafik-
        funktionen.
\.
\c
\c
\c
\>Mem_AreA\  Globaler Zeiger (char *), definiert in \<HELP.H\.
          Wird von den Funktionen zur \<Speicherverwaltung\
          benutzt.
          Zeigt auf den Anfang des Speicherbereiches, den die
          Funktionen \<get_mem()\ und \<fre_mem()\ verwalten.
          Sollte von anderen Funktionen NICHT verÑndert werden!
\.
\c
\c
\c
\>Mem_NexT\  Globaler Zeiger (char *), definiert in \<HELP.H\.
          Wird von den Funktionen zur \<Speicherverwaltung\
          benutzt.
          Zeigt auf den Anfang des nÑchsten freien Speicher-
          blocks, den man mit \<get_mem()\ anfordern kann.
          Sollte von anderen Funktionen NICHT verÑndert
          werden!

\.
\c
\c
\c
\>LefT\  Globale Long-Variable, definiert in \<HELP.H\.
      Wird von den Funktionen zur \<Speicherverwaltung\
      benutzt.
      Gibt an, wieviel freier Speicher noch fÅr \<get_mem()\ 
      zur VerfÅgung steht. Sollte von anderen Funktionen 
      NICHT verÑndert werden!
\.
\c
\c
\c
\>ref\[]      Globales Array von Strukturen des Typs \<refer\,
           definiert in \<HELP.H\. Nimmt die Daten der jeweils
           gÅltigen \<Verweis\e auf ( ein Verweis ist "gÅltig",
wenn er im \<Hilfefenster\ sichtbar ist und angewÑhlt werden
kann). Siehe auch \<refno\ und \<MAX_REF\.
\.
\c
\c
\c
\>work_in[]\  Globales Integerfeld, definiert in \<GEM_INIT.H\.
           Wird von \<open_vwork()\ benutzt.
\.
\c
\c
\c
\>work_out[]\ Globales Integerfeld, definiert in \<GEM_INIT.H\.
           Wird von \<open_vwork()\ benutzt.
\.
\c
\c
\c
\>ap_id\     Integervariable, definiert in \<GEM_INIT.H\.
          Gibt die Applikationsnummer der laufenden Anwendung
          an. Der Wert ist erst nach erfolgreichem Aufruf von
          \<open_vwork()\ gÅltig.
\.
\c
\c
\c
\c----------Das Stichwortverzeichnis:------------------------
\c
\>Index\:

  \<A...\       \<H...\       \<O...\       \<V...\

  \<B...\       \<I...\       \<P...\       \<W...\

  \<C...\       \<J...\       \<Q...\       \<X...\

  \<D...\       \<K...\       \<R...\       \<Y...\

  \<E...\       \<L...\       \<S...\       \<Z...\

  \<F...\       \<M...\       \<T...\

  \<G...\       \<N...\       \<U...\
  
  
  \<öbersicht\ 
\.
\c
\c
\c
\>A...\

  \<ap_id\
\.
\c
\c
\c
\>B...\

\.
\c
\c
\c
\>C...\

  \<cell_h\           \<Clipping-Rechteck\
  \<cell_w\           \<clip[]\
  \<change_ext()\     \<close_helpw()\
  \<char_h\           \<close_vwork()\
  \<char_w\           \<cls_wind()\
  \<check_help()\     \<Compilerfunktionen\
  \<clicks\           \<count_lin()\
\.
\c
\c
\c
\>D...\

  \<Dateifunktionen\
  \<display_line()\
  \<display_help()\
\.
\c
\c
\c
\>E...\

  \<EXTERN\
\.
\c
\c
\c
\>F...\

  \<FALSE\
  \<Fehlerdatei\
  \<Fensterfunktionen\
  \<find_ref()\
  \<fre_mem()\
\.
\c
\c
\c
\>G...\

  \<GEM_INIT.H\
  \<get_help()\
  \<get_index()\
  \<get_mem()\
  \<globale Variable\
  \<go_line()\
  \<Grafikfunktionen\
\.
\c
\c
\c
\>H...\
  
  \<handle\              \<hlp_win\      \<hww_x\                      
  \<HCNT\                \<HNDX\         \<hww_y\  
  \<help()\              \<HSRC\         \<HW_ATTRIB\
  \<HELP.H\              \<hwo_h\        \<H_DEPTH\ 
  \<HERR\                \<hwo_w\        \<h_depth\
  \<HHLP\                \<hwo_x\        \<h_newdim()\   
  \<Hilfefenster\        \<hwo_y\        \<h_vscr_line()\ 
  \<Hilfetextdatei\      \<hww_h\        \<h_vscr_page()\          
  \<Hilfetext\           \<hww_w\               
\.
\c
\c
\c
\>I...\

  \<Indexdatei\
  \<Indexzeile\
  \<Index\
  \<INTERN\
  \<is_inside()\
\.
\c
\c
\c
\>J...\

\.
\c
\c
\c
\>K...\

  \<keyw()\
  \<keycpy()\
  \<keylen()\
  \<key\
\.
\c
\c
\c
\>L...\

  \<LefT\
  \<LINE_LEN\
  \<locate_ref()\
\.
\c
\c
\c
\>M...\

  \<make_contents()\  \<Mem_AreA\
  \<make_help()\      \<Mem_NexT\
  \<mark_ref()\       \<m_but\
  \<MAX_REF\          \<m_x\
  \<MAX_SRT\          \<m_y\
\.
\c
\c
\c
\>N...\

\.
\c
\c
\c
\>O...\

  \<offset()\
  \<open_helpw()\
  \<open_vwork()\
\.
\c
\c
\c
\>P...\

  \<phys_handle\
\.
\c
\c
\c
\>Q...\

\.
\c
\c
\c
\>R...\

  \<refer\
  \<refno\
  \<ref\
  \<REF_LEN\
\.
\c
\c
\c
\>S...\

  \<SchlÅsselwort\
  \<SchlÅssel\
  \<send_redraw()\
  \<set_clip()\
  \<set_vslider()\
  \<Sonstige\
  \<Speicherverwaltung\
  \<Stringfunktionen\
\.
\c
\c
\c
\>T...\

  \<taste\
  \<TRUE\
\.
\c
\c
\c
\>U...\

  \<öbersicht\
\.
\c
\c
\c
\>V...\

  Variable, globale \<globale Variable\
  \<Verweis\
  \<vslider()\
\.
\c
\c
\c
\>W...\

  \<wind_vmove()\
  \<work_in[]\
  \<work_out[]\
\.
\c
\c
\c
\>X...\

  \<x_res\
\.
\c
\c
\c
\>Y...\

  \<y_res\
\.
\c
\c
\c
\>Z...\

\@


Hier ein "Formular", in das Beschreibungen von Funktionen
eingesetzt werden kînnen:
---------------------------------------------------------
\>\

Definition:

Parameter:

Wirkung:

Ergebnis:

Ruft folgende "Help!"-Funktionen auf:

Gruppe: \<\
\.
---------------------------------------------------------
