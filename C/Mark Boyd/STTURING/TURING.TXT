This 'turing' program was written by Steven T. McClure at the University of
New Hampshire, 1989.  It represents a two-dimensional turing machine which
uses the screen as the 'tape' for the program.  Right now, the program uses
a pixel resolution of 320X200 with 4 colors.  More are possible, but this was
the best choice for the development system.

{ ST version 16 colors 320X200 low res, 4 colors 640X200 med res, 2 colors
640X400 high res. The program automatically determins the current resolution }

To use 'turing', you type in:

	C> turing [ filename ]

The filename is the name of a file that contains a list of 5-tuples, following
the following rules:

Line 1: This line contains the initial conditions in the following format:
	STATE LINE COLUMN DIRECTION COLOR
where:
	STATE -- Starting state
	 LINE -- Starting line
       COLUMN -- Starting column
    DIRECTION -- Starting direction
	COLOR -- Start position is this color

All other lines in the file are state instructions.  They look like this:
	STATE COLOR PAINT DIRECTION GOTO
where:
	STATE -- What state these instructions go in
	COLOR -- What color we are looking for to do this
	PAINT -- What color do we want to paint
    DIRECTION -- What direction do we go
	 GOTO -- What is the next state we go to

Initial directions are:
	0 means we begin going to the top of the screen, or UP
	2 means we begin going to the right of the screen, or RGT
	4 means we begin going to the bottom of the screen, or DOWN
	6 means we begin going to the left of the screen, or LFT

DIRECTIONS to move:
	10 means turn LEFT and move one space forward
	20 means turn RIGHT and move one space forward
	30 means move one space FORWARD
	40 means STAY where we are
	50 means BACKUP one space

COLORS:
	0 means BLACK		(These might not be the actual colors
	1 means GREEN		 displayed.  I didn't have a color monitor
	2 means BLUE		 or a reference manual, so I didn't know
	3 means RED		 the actual colors of the values.)

STATES:  You define these.  However many different numbers you have in the
	 first column of numbers is the different number of states you have.
	 For ease of reading, you might wish to group state instructions
	 together, but they do not have to be grouped this way.

{ ST version - mono requires more states for interesting machines! see ST
examples }

An example of an input file is as follows:

0 100 160 0 0
0 0 1 10 0
0 1 0 20 0

This file says we start at state 0, line 100, column 160, initial direction
is UP, and initial color is BLACK.  The second line sets an instruction for
state 0, which says:  If we see BLACK, we paint GREEN, go LEFT and return to
state 0.  The third line sets another instruction for state 0, which says:
If we see GREEN, we paint BLACK, go RIGHT and return to state 0.

After entering the program, the turing machine will start drawing away,
until it is in a state and cannot do anything.  It will then stop, and wait
for you to hit any key twice, and will then return you to DOS.

If you wish to stop drawing in the middle of a run, just hit any character.
This will pause the drawing.  To continue, hit the 'r' key, or to exit, hit
any other key. { on the ST version hit 'q' to quit, any other key to resume }.

In this directory, there should be three other files, EXAMPLE1, EXAMPLE2
and TERMITE.  They are sample files that can be run with 'turing' to produce
some pretty neat graphics displays.  TERMITE, given a long enough time
to run, produces the best output of the three, as is noticable from the
beginning of the run. { ops, I lost TERMITE, but try neato2! }

Have Fun!!! { I certainly did! }
