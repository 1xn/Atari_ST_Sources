
    öbersetzung der Library mit Pure C, GNU-C und Lattice C
    -------------------------------------------------------

    WICHTIG:
    Bei der öbersetzung der Library darf keine Stack-öberprÅfung aktiviert
    sein, da einige Library-Funktionen (z.B. benutzerdefinierte Objekte) vom
    AES aufgerufen werden und somit den AES-Stack verwenden.

    a. Pure C

    EnhancedGEM lÑût sich sowohl mit den Pure-C-Libraries als auch mit den
    MiNT-Libraries ab Patchlevel 30 compilieren.
    Hierzu muû jedoch mindestens Pure C V1.1 vorhanden sein und im
    Header-File AESBIND.H der MiNT-Libraries muû die Zeile

    __EXTERN int    evnt_timer __PROTO((unsigned long Interval));

    in

    __EXTERN int    evnt_timer __PROTO((int Int_locount,int Int_hicount));

    abgeÑndert werden.
    Weiterhin muû das Makro __MINT_LIB__ bei Benutzung der MiNT-Library
    definiert werden.

    b. GNU-C/Lattice C

    Ebenfalls lÑût sich EnhancedGEM mit GNU-C und Lattice C Åbersetzen,
    wobei allerdings die MiNT-Library sowie die entsprechenden Makefiles
    (Makefile.GCC bzw. Makefile.LCC) benutzt werden mÅssen. Eventuell auf-
    tretende Warnungen bei der öbersetzung sind (hoffentlich) bedeutungslos.

    Light-Version:
    --------------
    Durch Definition diverser Konstanten-Makros kînnen evtl. nicht be-
    nîtigte Teile der Library bei der öbersetzung deaktiviert werden, so
    daû die resultierenden Programme teilweise deutlich kÅrzer werden
    (bis zu 40 KByte). Weitere Details s. Anleitung.

    ACHTUNG:
    Wird ein Programm mit einer Library gelinkt, welche mit anderen
    Optimierungen Åbersetzt wurde, so kann es zu AbstÅrzen oder Fehl-
    funktionen kommen, da die Strukturen der Library ebenfalls optimiert
    werden!


    Nutzung der Library mit Pure C, GNU-C und Lattice C
    -------------------------------------------------------

    a. Wurde EnhancedGEM mit Hilfe der MiNT-Libraries Åbersetzt, so MöSSEN
    die MiNT-Libraries und die dazugehîrigen Header-Dateien auch benutzt
    werden. Ansonsten sind die Reaktionen nicht vorhersehbar, aber hîchst-
    wahrscheinlich resultieren daraus Fehlfunktionen (auûer evtl. bei
    GNU-C).

    b. Alle (AES-) Funktionen, die bzw. deren FunktionalitÑt in Ñhnlicher
    Form von der Library angeboten werden, sollten idR nicht mehr benutzt
    werden (z.B. Ereignisfunktionen evnt_..., Fenster-Funktionen wind_...,
    énderung des Mauszeigers per graf_mouse usw.). Die AES-Fensterfunk-
    tionen dÅrfen NUR fÅr Fenster, die nicht von der Library verwaltet wer-
    den (z.B. Desktop oder Fenster anderer Anwendungen), oder wenn eine
    Funktion nicht von der Library angeboten wird aufgerufen werden.
    I.A. sind auch die angebotenen Routinen der Library schneller (teil-
    weise deutlich schneller)

    Wird die interne VDI-Workstation der Library benutzt, so muû sicherge-
    stellt sein, daû entweder Library-Funktionen benutzt oder die Attribute
    in ihren ursprÅnglichen Zustand zurÅckgesetzt werden.
    Ist dies nicht der Fall, muû sofort nach VerÑnderung der Attribute
    die Funktion vs_attr() aufgerufen werden. Allerdings darf auf keinen
    Fall der Clipping-Bereich verÑndert werden, d.h. er ist mit den Funk-
    tionen save_clipping()/restore_clipping wiederherzustellen.

    c. Alle internen, modulÅbergreifenden globalen Variablen und Funktionen
    der Library beginnen mit einem Unterstrich '_', so daû es zu keinen
    öberschneidungen kommen sollte.

    d. Die Grîûe des Stacks sollte mindestens 4, bei grîûeren Programmen
    mindestens 8 KByte betragen.

    e. EGEM-Programme laufen unter MultiTasking automatisch in der MiNT-
    Domain (sofern vorhanden), wÑhrend unter SingleTasking (TOS) die
    normale TOS-Domain voreingestellt ist.

    Beispiel- und Utility-Programme:
    -----------------------------------

    Alle Beispiele und Utilities lassen sich problemlos mit Pure C und den
    Pure-Libraries Åbersetzen. Nur bei den Beispielen 'DialDemo' und
    'MiniDemo' ist garantiert, daû sie sich auch mit den MiNT-Libraries
    oder GNU/Lattice-C Åbersetzen lassen. Bei allen anderen Programmen
    sollten jedoch evtl. nur geringe Anpassungen nîtig sein.
