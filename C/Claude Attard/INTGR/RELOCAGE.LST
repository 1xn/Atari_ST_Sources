> PROCEDURE rsrc_intgr(rsrc_addr%)
' D‚claration d'un fichier RSC en INLINE
' rsrc_load(adresse o— le RSC a ‚t‚ charg‚ en INLINE)
LOCAL rsrc_pter%,rsrc_delta%,rsrc_count&,rsrc_type&
rsrc_delta%=rsrc_addr%                ! Adresse du RSC
IF BTST(INT{rsrc_addr%+34},15)        ! Si RSC deja relog‚,
  SUB rsrc_delta%,{rsrc_addr%+12}     ! diff‚rence entre ancienne
ENDIF                                 ! et nouvelle adresse.
'
IF rsrc_delta%<>0                     ! Si RSC … reloger,
  ' On reloge tous les pointeurs des structures du RSC
  @rsrc_raddr(INT{rsrc_addr%+18},INT{rsrc_addr%+22},4)        ! Arbres
  @rsrc_raddr(INT{rsrc_addr%+4},INT{rsrc_addr%+24},28)        ! te_ptext
  @rsrc_raddr(INT{rsrc_addr%+4}+4,INT{rsrc_addr%+24},28)      ! te_ptmplt
  @rsrc_raddr(INT{rsrc_addr%+4}+8,INT{rsrc_addr%+24},28)      ! te_pvalid
  @rsrc_raddr(INT{rsrc_addr%+6},INT{rsrc_addr%+26},34)        ! ib_pmask
  @rsrc_raddr(INT{rsrc_addr%+6}+4,INT{rsrc_addr%+26},34)      ! ib_pdata
  @rsrc_raddr(INT{rsrc_addr%+6}+8,INT{rsrc_addr%+26},34)      ! ib_ptext
  @rsrc_raddr(INT{rsrc_addr%+8},INT{rsrc_addr%+28},14)        ! bi_pdata
  @rsrc_raddr(INT{rsrc_addr%+10},INT{rsrc_addr%+30},4)        ! ChaŒnes libres
  @rsrc_raddr(INT{rsrc_addr%+16},INT{rsrc_addr%+32},4)        ! Images libres
  ' On reloge les "ob_spec" des objets, et on converti les coordonn‚es
  rsrc_pter%=rsrc_addr%+INT{rsrc_addr%+2}                     ! Objets
  rsrc_count&=INT{rsrc_addr%+20}                              ! Nbre d'objets
  WHILE rsrc_count&>0
    rsrc_type&=INT{rsrc_pter%+6}      ! Pour les objets dont l'ob_spec n'est pas un pointeur
    IF rsrc_type&<>20 AND rsrc_type&<>25 AND rsrc_type&<>27
      {rsrc_pter%+12}={rsrc_pter%+12}+rsrc_delta%     ! Relocation de l'ob_spec
    ENDIF
    IF NOT BTST(INT{rsrc_addr%+34},15)        ! Si premier relogeage,
      ~RSRC_OBFIX(rsrc_pter%,0)               ! conversion coordonn‚es
    ENDIF
    ADD rsrc_pter%,24                         ! Adresse objet suivant
    DEC rsrc_count&
  WEND
ENDIF
' Initialisation du tableau GLOBAL poue l'AES
rsrc_pter%={GB+4}
' GLOBAL[5/6]=Adresse de la liste des pointeurs des arbres
{rsrc_pter%+10}=rsrc_addr%+INT{rsrc_addr%+18}
' GLOBAL[7/8]=Adresse du RSC
{rsrc_pter%+14}=rsrc_addr%
' GLOBAL[9]=Taille du RSC
INT{rsrc_pter%+18}=BCLR(INT{rsrc_addr%+34},15)
INT{rsrc_pter%+34}=BCLR(INT{rsrc_addr%+34},15)        ! Le RSC est relog‚
{rsrc_addr%+12}=rsrc_addr%                            ! Adresse du RSC
RETURN
> PROCEDURE rsrc_raddr(rsrc_pter%,rsrc_count&,rsrc_length&)
ADD rsrc_pter%,rsrc_addr%                     ! Adresse de d‚part
WHILE rsrc_count&>0                           ! Tant qu'il y a des pointeurs
{rsrc_pter%}={rsrc_pter%}+rsrc_delta%       ! Reloge pointeur courant
ADD rsrc_pter%,rsrc_length&                 ! Adresse pointeur suivant.
DEC rsrc_count&                             ! Au suivant...
WEND
RETURN
