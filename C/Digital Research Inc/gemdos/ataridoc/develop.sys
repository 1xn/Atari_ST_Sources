



			ATARI ST DEVELOPMENT PACKAGE
			----------------------------


	The ST development package consists of seven disks. These disks
will enable a developer to compile and link "C" applications or desk 
accessories for the Atari ST series.

		1. TOS for German keyboard
		2. Language disk
		3. Mince editor
		4. C-Compiler
		5. Linker
		6. Utilities
		7. Resource Construction Set

WARNING: It is recommended that the developer make backup copies of these
	 disks and that he/she use the backups as backups ONLY. It is also 
	 sugested that the ST system disk be backed up as well!

	THE TOS DISK CONTAINS THE FOLLOWING FILES:
	------------------------------------------

TOS.IMG		GEM Desktop, AES, VDI, Gem DOS, and BIOS
DESK1.ACC	VT52 Terminal Emulator desk accessory.
DESK2.ACC	Control panel desk accessory.
SAMPLE.PRG	Example application in a window.

	Do not attempt to only copy files from this disk.  The disk
must be fully backed up in order for the auto-booting to take place.

	THE LANGUAGE DISK CONTAINS THE FOLLOWING FILES:
	-----------------------------------------------

LOGO.PRG	LOGO interpretive language
LOGO.RSC	Resource file for LOGO
ANIMAL.LOG	Sample program demonstrating list processing and AI
KNOWN.LOG	Data for ANIMAL

	THE MINCE EDITOR DISK CONTAINS THE FOLLOWING FILES:
	---------------------------------------------------

PRGINTRO.DOC	Read this file to begin to learn the Mince editor
LESSON4.DOC
LESSON6.DOC
LESSON8.DOC
MINCE.TTP	The editor program
MINCE.SWP	Configuration data and buffers for Mince
CONFIG.TOS	Already done.  Please check manual.

	SPECIAL NOTE--This is a preliminary copy of Mince.  You
will be receiving your own personally serialized copy and full
documentation.  Please destroy this preliminary disk when you
receive your final Mince.

	THE COMPILER DISK CONTAINS THE FOLLOWING FILES:
	-----------------------------------------------

CP68.PRG	Three pass "C" compiler.
C068.PRG
C168.PRG

AS68.PRG	68000 asembler.
AS68INIT
AS68SYMB.DAT

BATCH.TTP	ST batch processing program.
RM.PRG		ST delete file program.
WAIT.PRG	ST WAIT to return to desktop.

C.BAT		Batch input file.

	ST "include" files. These files when included within a "C" program 
enable the use of the AES and VDI predefined messages, object types, GEMDOS 
definitions etc.

DEFINE.H	Typical miscellaneous definitions. Ex. NIL, TRUE, EOS...
GEMBIND.H	Do-it-yourself GEM binding kit.
GEMDEFS.H	Common GEM definitions as defined in the AES programmers
		manual.	
VDIBIND.H	VDI external definitions.
TOSDEFS.H	TOS file attributes and error definitions.
OBDEFS.H	Common GEM OBJECT definitions as defines in the AES programmers
		manual.
OSBIND.H	"C" binding to GEMDOS, extended BIOS, and BIOS.

PORTAB.H	ST "include" files. For use in porting IBM applications to
MACHINE.H	the ST series.
TADDR.H



	THE LINKER DISK CONTAINS THE FOLLOWING FILES:
	---------------------------------------------

LINK68.PRG	ST linker program.
RELMOD.PRG	ST relocation program.
BATCH.TTP	ST batch processing program.
RM.PRG		ST delete file program.
WAIT.PRG	ST WAIT to return to desktop.

LINK.BAT	Batch input files.

ACCSTART.O	GEM accessory start file.
APSTART.O	GEM application start file.
GEMS.O		"C" run time library start file.

AESBIND		AES run time library.
VDIBIND		VDI run time library.
GEMLIB		"C" run time library.
OSBIND.O	GEMDOS trap routine.
LIBF		Floating point library.

ACSKEL1.INP	Link.bat input files example for single drive system.
APSKEL1.INP
ACSKEL2.INP	Link.bat input files example for dual (2) drive system.
APSKEL2.INP

	The utilities disk contains the following files:


COMMAND.PRG	Command line interpreter.
DUMP.PRG	Hexadecimal file print utility.
FIND.PRG	File string locator utility.
HIGH.PRG	ST medium resolution program.
LOW.PRG		ST low resolution program
KERMIT.PRG	File transfer program.
NM68.PRG	Symbol table print utility.
AR68.PRG	Library creation utility.
SID.PRG		Silly idiotic debugger. (Symbolic Instruction Debugger)
SIZE68.PRG	Program segment size utility.
APSTART.S	Source to application start routine.
ACCSTART.S	Source to desk accessory start routine.
ACSKEL.C	Example GEM desk accessory program.
APSKEL.C	Example GEM application program.
README.DOC	ST development package document (the one you are in).


			COMPILING A PROGRAM ON THE ST.
			------------------------------


	The three development disks have been arranged so that compiling and
linking on the ST is a very simple process. The following is an example on
how to compile and run the sample APSKEL.C program supplied on the compiler
disk.  

WARNING -Remove the write protection tab from the compiler and linker
	 disks before compiling and linking.

******* IMPORTANT NOTE
	The following instructions apply to a dual drive system.  Some
developers will have a single drive system.  For a single drive system,
follow the alternative step --if required--in parenthesis.

 1)     Rename ACSKEL2.INP (ACSKEL1.INP) on the linker disk to ACSKEL.INP 
	using the Show Info option.

 2)	After making backups of the three development disks copy APSKEL.C and
	ACSKEL.C to a newly formated disk (to the backup of your
	compiler disk.  You can remove files copied from original to gain disk
	working space ).

 3)	Place the compiler disk in drive A: and the disk containing APSKEL.C
	and ACSKEL.C in drive B:. (No disk required for drive B)

 4)	Select the BATCH.TTP program and open it.

 5)	Type "C B:APSKEL" ( "C APSKEL")   in the open application
	dialog box and select "OK". At this point the screen will
	turn white and the batch program will begin compiling the APSKEL.C 
	program. The compile is finished when WAIT.PRG is displayed. Hit
	space to return	to desktop at this point. (See BATCH PROCESSING FOR 
	THE ST for more	information on BATCH.TTP)

	(Now you must use a single disk copy to move the APSKEL.O
	file from the compiler disk to the linker disk.  Drag the
	icon to drive B and follow the directions on swapping disks.)

 6)	Replace the compiler disk with the linker disk and double click on
	the BATCH.TTP program. Type "LINK APSKEL" in the open application
	dialog box and select "OK". The screen will turn white while the batch 
	program links the proper files together. The link is finished when 
	the prompt of the program, WAIT.PRG, is displayed.
	Hit the space bar to return to the desktop.

 7)	Now just double click on the file APSKEL.PRG on drive B: (drive A:).
	The move, size, close, and full boxes are all active in this program.
	Selecting the close box returns you to the desktop.



	To compile and link the desk accessory ACSKEL.C program do the
following.


 1)	Follow the same procedure to compile and link the ACSKEL.C desk
	accessory that you moved to the new disk.

 2)	Next rename the ACSKEL.PRG program to DESK3.ACC.  DESK1.ACC and 
	DESK2.ACC are the Control Panel and VT52 Emulator included on your 
	system disk.

 3)	The final step is to transfer the DESK3.ACC accessory you have just
	created to your system disk and reboot the system. (Rebooting the
	system installs the accessory under "DESK" on the menu bar of the
	desktop.

 4)	To run, move the mouse to DESK on the menu bar and click on "Sample
	Accessory". If you resize the window you will see the desktop and
	disk icons on the desktop. Selecting the close box will remove the
	desk accessory.


	If you type C.BAT and LINK.BAT you will be able to see the proper
order of instructions necessary to compile or link a program file. For more
information on compiling and linking please consult the ATARI ST developers 
manuals.



INCLUDE / LINK TABLE:
--------------------

	The following table represents the proper "include" files necessary
to link to different portions of the TOS operating system.


TOS OP SYSTEM		INCLUDE IN PROGRAM 		LINK TO...
------------------------------------------------------------------------------

VDI			<define.h>*			VDIBIND library
			<vdibind.h>

AES			<define.h>*			AESBIND library
			<gemdefs.h>
			<obdefs.h>

GEMDOS			<define.f>*			OSBIND.O trap routine
BIOS			<osbind.h>
XBIOS


* Include if necessary.

All of the above libraries can be mixed depending on the needs of the
developer.

-------------------------------------------------------------------------------

ATTENTION:	TO CREATE A GEM APPLICATION  -YOU MUST LINK TO APSTART.O AS
		THE FIRST FILE IN YOUR LINK STATEMENT.

		TO CREATE A GEM DESK ACCESSORY  -YOU MUST LINK TO ACCSTART.O
		AS THE FIRST FILE IN YOUR LINK STATEMENT.
		(See miscellaneous below.)

		
		--------------------------------------------------------
		-     TYPE APSKEL.INP AND ACSKEL.INP FOR EXAMPLES.     -
		--------------------------------------------------------


"C" RUN TIME LIBRARY:
---------------------

		You may link to GEMLIB, a "C" run time library.  You MAY NOT
		link to AESBIND or VDIBIND libraries when linking to the "C"
		run time library.  To link to GEMLIB, you must link to GEMS.O
		as the first file in your link statement and GEMLIB as the
		last file.
	



BATCH PROCESSING ON THE ST:
---------------------------


BATCH.TTP   This is a batch program for the ST.  To use, you must
	    create a file with the extention .BAT.  (example C.BAT)

	    To execute the C.BAT file you must open BATCH.TTP
	    and enter "C PARM1" in the open application
	    dialog box.

	    Where C.BAT is defined as:

			cp68 %1.c %1.i
			c068 %1.i %1.1 %1.2 %1.3 -f
			rm %1.i
			c168 %1.1 %1.2 %1.s
			rm %1.1
			rm %1.2
			as68 -l -u %1.s
			rm %1.s		******** SEE RM.PRG *******
			wait.prg

	   PARM1 is the C file to compile. (B:PARM1 to compile files on drive
	   B:.) PARM1 is substituted for %1 in C.BAT. No file extension is 
	   needed -it is included in C.BAT) 

	   There is also a LINK.BAT file which is defined as:

			link68 [co[%1.INP]]
			relmod %1.68K %1.PRG
			rm %1.68K
			wait.prg


	    Again, to execute just open BATCH.TTP and type "LINK PARM1".

	    PARM1 is defined as:

			[u] file.68k=a,b,c,d,e,f,g

	    ------------------------------------------------------------------
	    TYPE APSKEL.INP OR ACSKEL.INP FOR EXAMPLES OF LINK.BAT INPUT FILE.
	    ------------------------------------------------------------------


	    REMEMBER: The linker disk must contain link68.prg, rm.prg,
			  batch.prg, link.bat, and relmod.prg.



RM.PRG      This is a delete file program necessary for the BATCH.TTP program
	    so that files can be deleted from drive B:.

WAIT.PRG    This program waits for a carriage return before continuing.


MISCELLANEOUS:
--------------

ALLOCATING MORE STACK SPACE:
----------------------------

	Stack space for applications and desk accessories has been
preallocated to 1K.  We realize that for some application this may not be
enough stack room.  For this reason we have included the source files
APSTART.S and ACCSTART.S on the Utilities disk. You now can make appropriate
changes to these files to create the necessary environment for your
application or desk accessory.

	THE RESOURCE CONSTRUCTION SET DISK CONTAINS:
	-------------------------------------------

RCS.PRG		Resource construction set program
RCS.RSC		File for RCS
BASIC.RSC	Example resource #1
BASIC.C
BASIC.DEF
BASIC.H
DOODLE.RSC	Example resource #2
DOODLE.C
DOODLE.DEF
DOODLE.H
DOODLE.PRG	Program to run data from example #2

	Do not attempt to modify the resource files for the example
programs until you have backed this disk up.
