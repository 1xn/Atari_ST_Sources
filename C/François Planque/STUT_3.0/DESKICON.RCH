/*
 * Fichier ressource
 * Bureau + Icones Haute R‚solution
 * >>>Hand Tuned<<<
 */

/* #define T0OBJ 0
	#define FREEBB 2
	#define FREEIMG 16
	#define FREESTR 13
*/

static	BYTE *rs_strings[] = {
"Version 3.0 Alpha",
"",
"",
"Version 3.0 Alpha",
"",
"",
"DISQUE",
"TERMINAL",
"CORBEILLE",
"ARBO",
"DONNEES",
"TEXTES",
"IMAGES",
"PAGES ECRAN"};		/* Chaine 13 -  Nlle ic“ne */

/* DISQUE-MASQUE */
static	WORD DISKHI_MASK[] = {
0x3FFF, 0xFFFE, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x3FFF, 0xFFFF, 0x1FFF, 0xFFFE};

static	WORD DISKHI_DATA[] = {						/* DISQUE-DATA */
0x0, 0x0, 0x1FFF, 0xFFFC, 
0x2400, 0x12, 0x2400, 0x1E, 
0x2400, 0x1E, 0x2400, 0x12, 
0x2400, 0x12, 0x2400, 0x12, 
0x2400, 0x12, 0x2400, 0x12, 
0x2400, 0x12, 0x2400, 0x12, 
0x2400, 0x12, 0x2400, 0x12, 
0x2400, 0x12, 0x23FF, 0xFFE2, 
0x2000, 0x2, 0x2000, 0x2, 
0x203F, 0xFE42, 0x2040, 0x102, 
0x204E, 0x112, 0x204E, 0x102, 
0x204E, 0x112, 0x204E, 0x102, 
0x204E, 0x112, 0x10C0, 0x102, 
0xF7F, 0xFFFC, 0x0, 0x0};

static	WORD TERMHI_MASK[] = {						/* TERMINAL-MASQUE */
0x7FF, 0xFFE0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0xFFF, 0xFFF0, 0xFFF, 0xFFF0, 
0x1FFF, 0xFFF8, 0x1FFF, 0xFFF8, 
0x3FFF, 0xFFFC, 0x3FFF, 0xFFFC, 
0x7FFF, 0xFFFE, 0x7FFF, 0xFFFE, 
0x7FFF, 0xFFFE, 0x7FFF, 0xFFFE, 
0x7FFF, 0xFFFE, 0x3FFF, 0xFFFC};

static	WORD TERMHI_DATA[] = {						/* TERMINAL-DATA */
0x0, 0x0, 0x3FF, 0xFFC0, 
0x400, 0x20, 0x4FF, 0xFF20, 
0x500, 0xA0, 0x500, 0xA0, 
0x500, 0xA0, 0x500, 0xA0, 
0x500, 0xA0, 0x500, 0xA0, 
0x500, 0xA0, 0x500, 0xA0, 
0x500, 0xA0, 0x500, 0xA0, 
0x4FF, 0xFF20, 0x400, 0x20, 
0x3FF, 0xFFC0, 0x400, 0x20, 
0x5B6, 0xCAA0, 0xB6D, 0x8550, 
0xAAA, 0xAAB0, 0x1555, 0x5558, 
0x12AA, 0xA808, 0x24FF, 0xE434, 
0x2000, 0x4, 0x3FFF, 0xFFFC, 
0x1FFF, 0xFFF8, 0x0, 0x0};

/* Corbeille */
static	WORD CORHI_MASK[] = {
0x7, 0xF000, 0xFF, 0xFF80, 
0x3FF, 0xFFE0, 0x7FF, 0xFFF0, 
0x7FF, 0xFFF0, 0x7FF, 0xFFF0, 
0x7FF, 0xFFF0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x3FF, 0xFFE0, 
0x3FF, 0xFFE0, 0x1FF, 0xFFC0, 
0x7F, 0xFF00};

static	WORD CORHI_DATA[] = {
0x0, 0x0, 0x3, 0xE000, 
0x7E, 0x3F00, 0x1C6, 0x31C0, 
0x200, 0x20, 0x3C0, 0x1E0, 
0x17F, 0xFF40, 0x100, 0x40, 
0x144, 0x2240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x8A40, 
0x144, 0xDA40, 0x144, 0x7240, 
0x144, 0x240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x2240, 
0x144, 0x2240, 0x144, 0x2240, 
0x164, 0x2640, 0x186, 0x60C0, 
0xE0, 0x380, 0x3F, 0xFE00, 
0x0, 0x0};

static	WORD ARBHI_MASK[] = {
0xF, 0xF800, 0xF, 0xF800, 
0xF, 0xF800, 0xF, 0xF800, 
0xF, 0xF800, 0x1F, 0xFC00, 
0x1F, 0xFC00, 0x1F, 0xFC00, 
0x1F, 0xFC00, 0x1F, 0xFC00, 
0x3, 0xE000, 0x3, 0xE000, 
0x3FF, 0xFFE0, 0x7FF, 0xFFF0, 
0xFFF, 0xFFF8, 0xFFF, 0xFFF8, 
0xFFF, 0xFFF8, 0xFFF, 0xFFF8, 
0xFFF, 0xFFF8, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FF0, 0x7FF};

static	WORD ARBHI_DATA[] = {
0x0, 0x0, 0x7, 0xF000, 
0x4, 0x1000, 0x5, 0x5000, 
0x5, 0x5000, 0x4, 0x1000, 
0xF, 0xF800, 0x8, 0x800, 
0xF, 0xF800, 0x0, 0x0, 
0x1, 0xC000, 0x1, 0xC000, 
0x1, 0xC000, 0x1EF, 0xFBC0, 
0x3EF, 0xFBE0, 0x7EF, 0xFBF0, 
0x780, 0xF0, 0x700, 0x70, 
0x700, 0x70, 0x0, 0x0, 
0x1FC0, 0x1FC, 0x1040, 0x104, 
0x1740, 0x134, 0x1740, 0x164, 
0x1040, 0x104, 0x3FE0, 0x3FE, 
0x2020, 0x202, 0x3FE0, 0x3FE, 
0x0, 0x0};

static	WORD DATHI_MASK[] = {
0x0, 0x3FE, 0x0, 0x7FF, 
0x0, 0xFFF, 0x7F, 0xFFFF, 
0xFF, 0xFFFF, 0x3FF, 0xFFFF, 
0x7FF, 0xFFFF, 0x1FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 
0xFFFF, 0xFFFC, 0xFFFF, 0xFFF8, 
0xFFFF, 0xFFF0, 0xFFFF, 0xFFE0, 
0xFFFF, 0xFFC0, 0xFFFF, 0xFF80, 
0xFFFF, 0xFF00, 0x7FFF, 0xFE00};

static	WORD DATHI_DATA[] = {
0x0, 0x0, 0x0, 0x1FC, 
0x0, 0x202, 0x0, 0x402, 
0x3F, 0xF802, 0x47, 0xE002, 
0x1E8, 0x17F2, 0x210, 0x80A, 
0xFE0, 0x7CA, 0x3F80, 0x2A, 
0x405F, 0xFF2A, 0x4020, 0xAA, 
0x401F, 0xFCAA, 0x4000, 0x2AA, 
0x4000, 0x2AA, 0x4000, 0x2AA, 
0x4000, 0x2AA, 0x4000, 0x2AA, 
0x4000, 0x2AA, 0x4000, 0x2AA, 
0x4000, 0x2AC, 0x4000, 0x2A8, 
0x4000, 0x2B0, 0x4000, 0x2A0, 
0x4000, 0x2C0, 0x4000, 0x280, 
0x4000, 0x300, 0x4000, 0x200, 
0x3FFF, 0xFC00, 0x0, 0x0};

static	WORD TEXTHI_MASK[] = {
0x3FFF, 0xFFF8, 0x3FFF, 0xFFF8, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0x3FFF, 0xFFFE, 
0x3FFF, 0xFFFE, 0xFFF, 0xFFFE, 
0xFFF, 0xFFFE};

static	WORD TEXTHI_DATA[] = {
0x0, 0x0, 0x1FFF, 0xFFF0, 
0x1000, 0x10, 0x17F7, 0x6F9C, 
0x1000, 0x14, 0x16ED, 0xFF94, 
0x1000, 0x14, 0x17F6, 0xDB94, 
0x1000, 0x14, 0x17DD, 0xFF94, 
0x1000, 0x14, 0x17DB, 0xBF94, 
0x1000, 0x14, 0x17EE, 0xED94, 
0x1000, 0x14, 0x177D, 0xC014, 
0x1000, 0x14, 0x1000, 0x14, 
0x1000, 0x14, 0x1000, 0x14, 
0x1000, 0x14, 0x1000, 0x14, 
0x1000, 0x3F4, 0x1000, 0x224, 
0x1000, 0x244, 0x1000, 0x284, 
0x1000, 0x304, 0x1FFF, 0xFE04, 
0x400, 0x4, 0x7FF, 0xFFFC, 
0x0, 0x0};

static	WORD PICHI_MASK[] = {							/* IMAGES - MASK */
0x3FFF, 0xFFFF, 0x3FFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0x7FFF, 0xFFFF, 
0x7FFF, 0xFFFF, 0x3FFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0x3FFF, 0xFFFF, 0x3FFF, 0xFFFF};

static	WORD PICHI_DATA[] = {						/* IMAGES - DATA */
0x0, 0x0, 0x1FFF, 0xFFFE, 
0x1000, 0x2, 0x5000, 0x2, 
0x7800, 0xC2, 0x4600, 0x122, 
0x2100, 0x292, 0x3380, 0x52A, 
0x1E40, 0xA4A, 0x1120, 0x149A, 
0x10F0, 0x2932, 0x5078, 0x5262, 
0x703C, 0xA4C2, 0x501F, 0x4982, 
0x480E, 0x9302, 0x4405, 0x2602, 
0x420A, 0x4C02, 0x4116, 0x9802, 
0x4091, 0x3002, 0x4851, 0x7802, 
0x4C3C, 0xDC02, 0x4E1C, 0x8E02, 
0x4D1F, 0x302, 0x4C84, 0x182, 
0x4C42, 0xC2, 0x4FE1, 0x62, 
0x4000, 0x8002, 0x4000, 0x4002, 
0x7FFF, 0xE002, 0x1000, 0x2, 
0x1FFF, 0xFFFE, 0x0, 0x0};

/*
 * Ic“nes suppl‚mentaires:
 */

AFFICHAGES_HIMASK[] =
{ 0x7FFF, 0xFFFE, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0x7FFF, 0xFFFE
};

AFFICHAGES_HIDATA[] =
{ 0x0000, 0x0000, 0x3FFF, 0xFFFC, 
  0x4000, 0x0002, 0x4FFF, 0xFFF2, 
  0x5000, 0x000A, 0x538C, 0xF98A, 
  0x5252, 0x224A, 0x5252, 0x224A, 
  0x525E, 0x23CA, 0x5252, 0x224A, 
  0x5392, 0x224A, 0x5000, 0x000A, 
  0x5000, 0x000A, 0x57DE, 0x4BEA, 
  0x5110, 0x488A, 0x511C, 0x308A, 
  0x5110, 0x308A, 0x5110, 0x488A, 
  0x511E, 0x488A, 0x5000, 0x000A, 
  0x4FFF, 0xFFF2, 0x4000, 0x0002, 
  0x3FFF, 0xFFFC, 0x0000, 0x0000
};

SAISIES_HIMASK[] =
{ 0x7FFF, 0xFFFE, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0x7FFF, 0xFFFE
};

SAISIES_HIDATA[] =
{ 0x0000, 0x0000, 0x3FFF, 0xFFFC, 
  0x4000, 0x0002, 0x4FFF, 0xFFF2, 
  0x5000, 0x000A, 0x5000, 0x000A, 
  0x5003, 0x800A, 0x5004, 0x400A, 
  0x5004, 0x400A, 0x5000, 0x800A, 
  0x5001, 0x000A, 0x5001, 0x000A, 
  0x5000, 0x000A, 0x5001, 0x000A, 
  0x5400, 0x000A, 0x5200, 0x000A, 
  0x5100, 0x000A, 0x5200, 0x000A, 
  0x547B, 0xDE0A, 0x5000, 0x000A, 
  0x4FFF, 0xFFF2, 0x4000, 0x0002, 
  0x3FFF, 0xFFFC, 0x0000, 0x0000
};

PARAMS_HIMASK[] =
{ 0x0000, 0x1F00, 0x0000, 0x7FE0, 
  0x0001, 0xFFFC, 0x0007, 0xFFFF, 
  0x001F, 0xFFFF, 0x007F, 0xFFFF, 
  0x01FF, 0xFFFF, 0x07FF, 0xFFFF, 
  0x1FFF, 0xFFFF, 0x7FFF, 0xFFFE, 
  0xFFFF, 0xFFFE, 0xFFFF, 0xFFFE, 
  0xFFFF, 0xFFE0, 0xFFFF, 0xFFE0, 
  0xFFFF, 0xFE00, 0xFFFF, 0xFE00, 
  0x7FFF, 0xE000, 0x7FFF, 0xE000, 
  0x01FE, 0x0000, 0x001E, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000
};

PARAMS_HIDATA[] =
{ 0x0000, 0x0000, 0x0000, 0x0E00, 
  0x0000, 0x31C0, 0x0000, 0xC038, 
  0x0003, 0x0006, 0x000C, 0x001A, 
  0x0030, 0x0066, 0x00C0, 0x018E, 
  0x0300, 0x064C, 0x0C00, 0x18FC, 
  0x3000, 0x64CC, 0x6001, 0x8FC0, 
  0x5C06, 0x4CC0, 0x4398, 0xFC00, 
  0x4064, 0xCC00, 0x382F, 0xC000, 
  0x372C, 0xC000, 0x00FC, 0x0000, 
  0x000C, 0x0000, 0x0000, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000
};

LIENS_HIMASK[] =
{ 0x0000, 0x7800, 0x0000, 0xF800, 
  0x0001, 0xF800, 0x0001, 0xF800, 
  0x0003, 0xF800, 0x0007, 0xF000, 
  0x0007, 0xF000, 0x000F, 0xF000, 
  0x001F, 0xE0F0, 0x001F, 0xE7F0, 
  0x003F, 0xFFF0, 0x007F, 0xFFF0, 
  0x007F, 0xFFE0, 0x00FF, 0xFFE0, 
  0x01FF, 0xFFC0, 0x01FF, 0xFF80, 
  0x03FF, 0xFF80, 0x07FF, 0xFF00, 
  0x07FF, 0xFE00, 0x0FFF, 0xFE00, 
  0x0FFF, 0xFC00, 0x0FE7, 0xF800, 
  0x0F07, 0xF800, 0x000F, 0xF000, 
  0x000F, 0xE000, 0x000F, 0xE000, 
  0x001F, 0xC000, 0x001F, 0x8000, 
  0x001F, 0x8000, 0x001F, 0x0000, 
  0x001E, 0x0000
};

LIENS_HIDATA[] =
{ 0x0000, 0x0000, 0x0000, 0x3000, 
  0x0000, 0x5000, 0x0000, 0x9000, 
  0x0000, 0xA000, 0x0001, 0x2000, 
  0x0002, 0x2000, 0x0002, 0x4000, 
  0x0004, 0x4000, 0x0008, 0x4060, 
  0x0008, 0x83A0, 0x0010, 0x9C40, 
  0x0020, 0xE040, 0x0020, 0x0080, 
  0x0040, 0x0100, 0x0080, 0x0100, 
  0x0080, 0x0200, 0x0100, 0x0400, 
  0x0207, 0x0400, 0x0239, 0x0800, 
  0x05C1, 0x1000, 0x0602, 0x1000, 
  0x0002, 0x2000, 0x0002, 0x4000, 
  0x0004, 0x4000, 0x0004, 0x8000, 
  0x0005, 0x0000, 0x0009, 0x0000, 
  0x000A, 0x0000, 0x000C, 0x0000, 
  0x0000, 0x0000
};

ERREURS_HIMASK[] =
{ 0x0003, 0xC000, 0x0007, 0xE000, 
  0x000F, 0xF000, 0x001F, 0xF800, 
  0x003F, 0xFC00, 0x007F, 0xFE00, 
  0x00FF, 0xFF00, 0x01FF, 0xFF80, 
  0x03FF, 0xFFC0, 0x07FF, 0xFFE0, 
  0x0FFF, 0xFFF0, 0x1FFF, 0xFFF8, 
  0x3FFF, 0xFFFC, 0x7FFF, 0xFFFE, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0x7FFF, 0xFFFE, 0x3FFF, 0xFFFC, 
  0x1FFF, 0xFFF8, 0x0FFF, 0xFFF0, 
  0x07FF, 0xFFE0, 0x03FF, 0xFFC0, 
  0x01FF, 0xFF80, 0x00FF, 0xFF00, 
  0x007F, 0xFE00, 0x003F, 0xFC00, 
  0x001F, 0xF800, 0x000F, 0xF000, 
  0x0007, 0xE000, 0x0003, 0xC000
};

ERREURS_HIDATA[] =
{ 0x0000, 0x0000, 0x0001, 0x8000, 
  0x0002, 0x4000, 0x0004, 0x2000, 
  0x0008, 0x1000, 0x0010, 0x0800, 
  0x0023, 0xC400, 0x0043, 0xC200, 
  0x0083, 0xC100, 0x0103, 0xC080, 
  0x0203, 0xC040, 0x0403, 0xC020, 
  0x0803, 0xC010, 0x1003, 0xC008, 
  0x2003, 0xC004, 0x4003, 0xC002, 
  0x4003, 0xC002, 0x2003, 0xC004, 
  0x1003, 0xC008, 0x0803, 0xC010, 
  0x0400, 0x0020, 0x0200, 0x0040, 
  0x0103, 0xC080, 0x0083, 0xC100, 
  0x0043, 0xC200, 0x0023, 0xC400, 
  0x0010, 0x0800, 0x0008, 0x1000, 
  0x0004, 0x2000, 0x0002, 0x4000, 
  0x0001, 0x8000, 0x0000, 0x0000
};

MOTSCLEF_HIMASK[] =
{ 0x0003, 0xFFFE, 0xFE7F, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 
  0xFFFF, 0xFF00, 0xFFFF, 0xFF00, 
  0xFFFF, 0xFF00, 0xFFFF, 0xFF00, 
  0xFFFF, 0xFF00, 0xFFFF, 0xFE00, 
  0xFFFF, 0xFE00, 0xFE7F, 0xFE00, 
  0x000F, 0xFE00, 0x0001, 0xFC00, 
  0x0000, 0x0000, 0x0000, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000
};

MOTSCLEF_HIDATA[] =
{ 0x0000, 0x0000, 0x0001, 0xFFFC, 
  0x7C3F, 0x0002, 0xC7EA, 0x0006, 
  0xC550, 0x1FFC, 0xC6A0, 0x6800, 
  0xC501, 0xC400, 0xC403, 0xE200, 
  0xC40A, 0x3200, 0xC405, 0x0200, 
  0xD400, 0xDC00, 0xC7C0, 0x2400, 
  0x7C38, 0x0400, 0x0007, 0x0400, 
  0x0000, 0xF800, 0x0000, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000
};



/*
 * BitBlks:
 */
static WORD STUTLOGO[] = {
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0xC00, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x1800, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x783F, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x70FF, 0xC000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0xE3FF, 0xF000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1, 0xE7FF, 0xF800, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1, 0xCFFF, 0xFC00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x7, 0xC000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3, 0xFFF8, 0x7C00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x7F, 0xF800, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7, 0xFFE0, 0x1E00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x1FF, 0xFE00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7, 0xFF80, 0xE00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x7FF, 0xFF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF, 0xFE00, 0xF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x1FFF, 0xFF00, 0x20, 
0x0, 0x0, 0x0, 0x0, 
0xF, 0xFC00, 0xF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x7FF0, 0xF80, 0x78, 
0x0, 0x0, 0x0, 0x0, 
0x1F, 0xF800, 0xF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0xFFC0, 0x780, 0x78, 
0x0, 0x0, 0x0, 0x0, 
0x1F, 0xF800, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1, 0xFF00, 0x380, 0x78, 
0x0, 0x0, 0x0, 0x0, 
0x3F, 0xF000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3, 0xFE00, 0x380, 0x78, 
0x0, 0x0, 0x0, 0x0, 
0x3F, 0xF000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7, 0xF800, 0x380, 0xF8, 
0x0, 0x0, 0x300, 0x0, 
0x7F, 0xE000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF, 0xE000, 0x380, 0xF8, 
0x0, 0x0, 0x3C0, 0x0, 
0x7F, 0xC000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1F, 0xC000, 0x380, 0xF8, 
0x0, 0x0, 0x3C0, 0x0, 
0xFF, 0xC000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1F, 0x8000, 0x300, 0xF8, 
0x3F00, 0x0, 0x3C0, 0x0, 
0xFF, 0x8000, 0x780, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3F, 0x0, 0x300, 0xF8, 
0xFF00, 0x0, 0x3E0, 0x0, 
0x1FF, 0x8000, 0xF80, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7F, 0x0, 0x600, 0x1FF, 
0xFF00, 0x0, 0x3E0, 0x0, 
0x1E7, 0x0, 0xF80, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7E, 0x0, 0x600, 0x1FF, 
0xFE00, 0x0, 0x3E0, 0x0, 
0x3EF, 0x0, 0xF80, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7E, 0x0, 0xC00, 0x1FF, 
0xF800, 0x0, 0x3C0, 0xF000, 
0x3CE, 0x0, 0xF80, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFC, 0x0, 0x800, 0x7FF, 
0xF000, 0x0, 0x7FF, 0xF800, 
0x7CE, 0x0, 0xF80, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFC, 0x0, 0x1, 0xFFFF, 
0xE000, 0x0, 0x7FF, 0xF800, 
0x78E, 0x0, 0xF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF8, 0x0, 0x3F, 0xFFFF, 
0x8000, 0x0, 0xFFF, 0xF800, 
0x78E, 0x0, 0x1F00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF8, 0x0, 0x3F, 0xFFFF, 
0x0, 0x7F, 0xFFFF, 0xF000, 
0xF0C, 0x0, 0x1F00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF8, 0x0, 0x3F, 0xFFF8, 
0x0, 0x1FF, 0xFFFF, 0xE000, 
0xF0C, 0x0, 0x1F00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xF8, 0x0, 0x3F, 0xFFC0, 
0x0, 0x1FF, 0xFFFF, 0x8000, 
0x1E08, 0x0, 0x1F00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFC, 0x0, 0x1F, 0xFFC0, 
0x0, 0xFF, 0xFFFC, 0x0, 
0x1E00, 0x0, 0x3E00, 0x0, 
0x7, 0xC000, 0x0, 0x0, 
0xFC, 0x0, 0xF, 0xFF80, 
0x0, 0x7F, 0xFFE0, 0x0, 
0x3E00, 0x0, 0x3E00, 0x0, 
0x1F, 0xE000, 0x0, 0x0, 
0xFC, 0x0, 0x0, 0xF80, 
0x0, 0x3F, 0xFF00, 0x0, 
0x3C00, 0x0, 0x3E00, 0x0, 
0x3F, 0xF000, 0x0, 0x0, 
0x7E, 0x0, 0x0, 0xF80, 
0x0, 0x1F, 0xFF00, 0x0, 
0x3C00, 0x0, 0x3E00, 0x0, 
0x7F, 0xF000, 0x0, 0x0, 
0x7F, 0x807F, 0x0, 0xF80, 
0x0, 0x0, 0x1F00, 0x0, 
0x7C00, 0x0, 0x7C00, 0x0, 
0x7F, 0xF000, 0x0, 0x0, 
0x7F, 0xFFFF, 0xE000, 0xF80, 
0x0, 0x0, 0x3F00, 0x0, 
0x7C00, 0x0, 0x7C00, 0x0, 
0xFF, 0xF000, 0x0, 0x0, 
0x3F, 0xFFFF, 0xF800, 0x1F80, 
0x0, 0x0, 0x3E00, 0x0, 
0x7800, 0x0, 0x7C07, 0x8000, 
0x1FF, 0xF000, 0x0, 0x0, 
0x1F, 0xFFFF, 0xFC00, 0x1F00, 
0x0, 0x0, 0x3E00, 0x0, 
0xF800, 0x0, 0xFC0F, 0xE000, 
0x1FF, 0xF000, 0x0, 0x0, 
0xF, 0xFFFF, 0xFE00, 0x1F00, 
0x0, 0x0, 0x3E00, 0x0, 
0xF800, 0x0, 0xF81F, 0xF020, 
0x3FF, 0xF000, 0x0, 0x0, 
0x3, 0xFF80, 0xFF00, 0x1E00, 
0x0, 0x0, 0x7C00, 0x0, 
0xF000, 0x1, 0xF81F, 0xF078, 
0x3FF, 0xE000, 0x0, 0x0, 
0x0, 0x7C00, 0x3F00, 0x3E00, 
0x0, 0xC000, 0x7C00, 0x0, 
0xF000, 0x1, 0xF83F, 0xF8FE, 
0x7FF, 0xC000, 0x0, 0x0, 
0x0, 0x0, 0x1F80, 0x3E00, 
0x0, 0xE000, 0x7C00, 0x0, 
0xF000, 0x3, 0xF07F, 0xF9FE, 
0x1FFF, 0x8000, 0x0, 0x0, 
0x0, 0x0, 0xF80, 0x3E00, 
0x1801, 0xF000, 0x7C00, 0x0, 
0xF000, 0x3, 0xF07F, 0xFFFE, 
0x1FFF, 0x0, 0x0, 0x0, 
0x0, 0x0, 0xFC0, 0x3E00, 
0x1E01, 0xF000, 0xFC00, 0x0, 
0xF000, 0x3, 0xF0FF, 0xFFFF, 
0x1FFE, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7C0, 0x7C00, 
0x1F01, 0xF800, 0xF800, 0x1, 
0xF000, 0x7, 0xE0FD, 0xFF9F, 
0xFFC, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7E0, 0x7C00, 
0x3F03, 0xF800, 0xF800, 0x1, 
0xF000, 0xF, 0xE1F1, 0xFF1F, 
0x1FF0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7E0, 0x7800, 
0x3F03, 0xF800, 0xF800, 0x1, 
0xF000, 0xF, 0xC3F1, 0xFE1F, 
0x1FC0, 0x0, 0x0, 0x0, 
0x38, 0x0, 0x3E0, 0x7800, 
0x3F03, 0xF801, 0xF000, 0x1, 
0xF000, 0x1F, 0xC3E1, 0xFC1F, 
0x1F80, 0x0, 0x0, 0x0, 
0xFC, 0x0, 0x3E0, 0x7800, 
0x7F07, 0xF801, 0xF000, 0x1, 
0xF000, 0x3F, 0x87C1, 0xFC1F, 
0x1F80, 0x0, 0x0, 0x0, 
0xFE, 0x0, 0x3E0, 0xF800, 
0x7F07, 0xF001, 0xF000, 0x0, 
0xF000, 0x7F, 0x8FC1, 0xF83F, 
0xF80, 0x0, 0x0, 0x0, 
0x1FE, 0x0, 0x3E0, 0xF800, 
0xFF0F, 0xF001, 0xF000, 0x0, 
0xF000, 0x7F, 0x1F81, 0xF83F, 
0xFE0, 0x7E, 0x0, 0x0, 
0x3FE, 0x0, 0x3E0, 0xF000, 
0xFF1F, 0xF003, 0xE000, 0x0, 
0xF000, 0xFE, 0x1F03, 0xF83F, 
0xFFF, 0xFFFF, 0x0, 0x0, 
0x3FC, 0x0, 0x3E0, 0xF001, 
0xFF1F, 0xF183, 0xE000, 0x0, 
0xF800, 0x1FC, 0x3F03, 0xF83F, 
0x7FF, 0xFFFF, 0x8000, 0x0, 
0x7FC, 0x0, 0x3E0, 0xF003, 
0xFF3F, 0xF3C3, 0xE000, 0x0, 
0xF800, 0x3FC, 0x7F07, 0xF03F, 
0x3FF, 0xFFFF, 0x8000, 0x0, 
0x7F8, 0x0, 0x7E1, 0xF003, 
0xFFFF, 0xFFC3, 0xE000, 0x0, 
0x7800, 0x7F8, 0x7E07, 0xF03E, 
0x1FF, 0xFFFF, 0x8000, 0x0, 
0x7F0, 0x0, 0x7E1, 0xF007, 
0xFFFF, 0xFFC3, 0xE000, 0x0, 
0x7C00, 0xFF0, 0xFC07, 0xF03E, 
0xFF, 0xFFFF, 0x8000, 0x0, 
0x7F0, 0x0, 0x7E1, 0xE01F, 
0xFFFF, 0xFF87, 0xE000, 0x0, 
0x3E00, 0x3FF1, 0xFC03, 0xF03E, 
0x7F, 0xFFFF, 0x0, 0x0, 
0x7F0, 0x0, 0xFC1, 0xE7FF, 
0xFFFC, 0xFF87, 0xC000, 0x0, 
0x1F80, 0xFFE1, 0xF803, 0xF00E, 
0x7, 0xFFC0, 0x0, 0x0, 
0x7F0, 0x0, 0xFC1, 0xE7FF, 
0xE3FC, 0x7F83, 0xC000, 0x0, 
0xFFF, 0xFFE3, 0xF801, 0xE000, 
0x0, 0x0, 0x0, 0x0, 
0x7F0, 0x0, 0x1FC1, 0xE7FF, 
0xC3F8, 0x3F01, 0xC000, 0x0, 
0x7FF, 0xFFC3, 0xF000, 0xE000, 
0x0, 0x0, 0x0, 0x0, 
0x7F0, 0x0, 0x1F81, 0xE7FF, 
0x80F0, 0x1F00, 0xC000, 0x0, 
0x3FF, 0xFF03, 0xF000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7F0, 0x0, 0x3F81, 0xE3FF, 
0x20, 0x0, 0x0, 0x0, 
0x1FF, 0xFC01, 0xE000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7F0, 0x0, 0x7F01, 0xE1FE, 
0x0, 0x0, 0x0, 0x0, 
0x7F, 0xF800, 0x4000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3F0, 0x0, 0xFE01, 0xE07C, 
0x0, 0x0, 0x0, 0x0, 
0xF, 0x8000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3F8, 0x1, 0xFE00, 0xE000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1FC, 0x3, 0xFC00, 0x2000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1FE, 0xF, 0xF800, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1FF, 0xC07F, 0xF000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFF, 0xFFFF, 0xE000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7F, 0xFFFF, 0xC000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3F, 0xFFFF, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7, 0xFFFC, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1, 0xFFF0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0xFFF, 
0xFFFF, 0xFFFF, 0xFF00, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7FFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1FF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xC000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x3FF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xC000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7FFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xE000, 
0x0, 0x0, 0x0, 0x0, 
0x3, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xF000, 
0x0, 0x0, 0x0, 0x7, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xE000, 
0x0, 0x0, 0x0, 0x7FF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xE000, 
0x0, 0x0, 0x7, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFF0, 0x0, 
0x0, 0x0, 0x7FF, 0xC000, 
0x0, 0x0, 0x1FFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xC000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x1F, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xFFFF, 0xFFC0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0xFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xFFFF, 0xE000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3, 0xFFFF, 0xFFFF, 0xFFFF, 
0xFFFF, 0xE000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
0xF000, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFFF, 0xFFFF, 0xFFFF, 0xFE00, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFFF, 0xFFFF, 0xFFFC, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFFF, 0xFFFF, 0xF800, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xFFF, 0xFFFE, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7FF, 0xFF00, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x3FF, 0x8000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1F0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0};

static WORD EMPTYBUTHI[] = {	/* Bouton rond vide */
0x0, 0x3C0, 0xC30, 0x1008, 
0x2004, 0x2004, 0x4002, 0x4002, 
0x4002, 0x4002, 0x2004, 0x2004, 
0x1008, 0xC30, 0x3C0, 0x0};

static WORD FULLBUTHI[] = {	/* Bouton PLein */
0x0, 0x3C0, 0xC30, 0x1008, 
0x23C4, 0x27E4, 0x4FF2, 0x4FF2, 
0x4FF2, 0x4FF2, 0x27E4, 0x23C4, 
0x1008, 0xC30, 0x3C0, 0x0};

static	LONG rs_frstr[] = {
0};

static	BITBLK rs_bitblk[] = {
STUTLOGO, 32, 93, 0, 0, 1,		/* Logo */
STUTLOGO, 32, 93, 0, 0, 0,		/* Logo idem mais en blanc ( Color Mono:0  VGA:2) */
EMPTYBUTHI,2, 16, 0, 0, 1,		/* Bouton rond vide */
FULLBUTHI, 2, 16, 0, 0, 1};	/* Bouton rond plein */

static	LONG rs_frimg[] = {	/* Index des Free-images dans la zone BITBLK */
1L,		/* Bouton rond vide */
2L};		/* Bouton plein */

static	ICONBLK rs_iconblk[] = {
DISKHI_MASK, DISKHI_DATA, 	(char*)6L, 	4096,13,6, 	24,34-28,32,28, 4,36,72,8,
TERMHI_MASK, TERMHI_DATA, 	(char*)7L, 	4096,13,6, 	24,34-28,32,28, 4,36,72,8,
CORHI_MASK,  CORHI_DATA, 	(char*)8L, 	4096,0,0, 	24,34-31,32,31, 4,36,72,8,
ARBHI_MASK,  ARBHI_DATA, 	(char*)9L,	4274,14,19, 24,34-29,32,29, 4,36,72,8,
DATHI_MASK,  DATHI_DATA, 	(char*)10L,	4274,9,17, 	24,34-30,32,30, 4,36,72,8,
TEXTHI_MASK, TEXTHI_DATA, 	(char*)11L,	4274,13,18, 24,34-31,32,31, 4,36,72,8,
PICHI_MASK,  PICHI_DATA, 	(char*)12L,	4274,13,3, 	24,34-32,32,32, 4,36,72,8,
TERMHI_MASK, TERMHI_DATA, 	(char*)13L,	4274,13,6, 	24,34-28,32,28, 4,36,72,8,

AFFICHAGES_HIMASK, AFFICHAGES_HIDATA, (char*)0L, 0x1000|'\0', 13,6, 24,0,32,24, 4,36,72,8,
SAISIES_HIMASK,    SAISIES_HIDATA,    (char*)0L, 0x1000|'\0', 13,6, 24,0,32,24, 4,36,72,8,
PARAMS_HIMASK,     PARAMS_HIDATA,     (char*)0L, 0x1000|'\0', 13,6, 24,0,32,22, 4,36,72,8,
LIENS_HIMASK,      LIENS_HIDATA,      (char*)0L, 0x1000|'\0',11,12, 24,0,32,31, 4,36,72,8,
ERREURS_HIMASK,    ERREURS_HIDATA,    (char*)0L, 0x1000|'\0', 13,6, 24,0,32,32, 4,36,72,8,
MOTSCLEF_HIMASK,   MOTSCLEF_HIDATA,   (char*)0L, 0x1000|'\0',  7,6, 24,0,32,20, 4,32,72,8
};

static	TEDINFO rs_tedinfo[] = {
(char*)0L, (char*)1L, (char*)2L, 3, 6, 0, 0x1100, 0x0, -1, 19,1,
(char*)3L, (char*)4L, (char*)5L, 3, 6, 0, 0x1000, 0x0, -1, 19,1};	/* Color Mono= 0x1000 VGA= 0x1400 */

static	OBJECT rs_object[] = {
/* 00 */	-1, 1, 13, G_BOX, NONE, NORMAL, 0x1141L, 1,1, 75,19,		/* Obspec mono= 0x1141 VGA= 0x1173 */

/* 01 */	6, 2, 5, G_IBOX, NONE, NORMAL, 0x1100L, 3,1, 36,9,
/* 02 */	3, -1, -1, G_IMAGE, NONE, NORMAL, 0x0L, 0x0002, 0x0001, 32,0x0D05,
/* 03 */	4, -1, -1, G_IMAGE, NONE, NORMAL, 0x1L, 0x0501, 0x0E00, 32,0x0D05,
/* 04 */	5, -1, -1, G_TEXT, NONE, NORMAL, 0x0L, 16,2566, 18,1,
/* 05 */	1, -1, -1, G_TEXT, NONE, NORMAL, 0x1L, 1807,2310, 18,1,

/* 06 */	7, -1, -1, 	G_ICON, OUVRABLE|SELECTABLE,								 NORMAL, 0x0L,  2, 6, 10,3,	/* DISK */
/* 07 */	8, -1, -1, 	G_ICON, PARAM|SELECTABLE,									 NORMAL, 0x1L, 12, 6, 10,3,	/* TERM */
/* 08 */	9, -1, -1, 	G_ICON, SELECTABLE,											 NORMAL, 0x2L,  2, 9, 10,3,	/* TRASH */
/* 09 */	10, -1, -1, G_ICON, OUVRABLE|SELECTABLE,			(DTYP_ARBO <<9)|NORMAL,	0x3L,  2,12, 10,3,	/* ARBO */
/* 10 */	11, -1, -1, G_ICON, OUVRABLE|SELECTABLE,			(DTYP_PAGES<<9)|NORMAL,	0x7L, 12,12, 10,3,	/* PAGES */
/* 11 */	12, -1, -1, G_ICON, OUVRABLE|SELECTABLE,			(DTYP_DATAS<<9)|NORMAL,	0x4L, 22,12, 10,3,	/* DATAS */
/* 12 */	13, -1, -1, G_ICON, OUVRABLE|SELECTABLE,			(DTYP_TEXTS<<9)|NORMAL,	0x5L, 32,12, 10,3,	/* TEXTS */
/* 13 */	0, -1, -1, 	G_ICON, OUVRABLE|LASTOB|SELECTABLE, (DTYP_PICS <<9)|NORMAL,	0x6L, 42,12, 10,3};	/* PICS */

static	LONG rs_trindex[] = {
0L};

#define NUM_STRINGS 13
#define NUM_FRSTR 0
#define NUM_BB		4
#define NUM_FRIMG 0
#define NUM_IB 7	+1			/* Cr‚‚ … la main */
#define NUM_TI 2
#define NUM_OBS 14
#define NUM_TREE 1

