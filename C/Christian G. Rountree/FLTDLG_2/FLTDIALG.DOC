This Document is writen by RoadKill (Christian G. Rountree).
	Document, and code, released on 21 April 1993. Version 1
	Update version 2 update 26 April 1993.
	
	A couple of bugs fixed in version 2 thanks to Robert Gallagher
	whose sharp eyes noticed an Unneccesary objc_draw and that I had
	forgotten to check for WM_TOPPED messages. THANKS!

	I also added code to check if our window is on top.
	
This document (and the source code) is freeware. You can do whatever
you want to do with it as long as this set of files is not broken up!!!
AND my name is not removed from these files!

	FLTDIALG.DOC What you're reading.
	FLTDIALG.RSC project RSC file.
	FLTDIALG.C	 Source code for floating dialog
	FLTDIALG.PRG Floating Dialog Demonstration.
	FLTDIALG.PRJ LAttice C5.52 Project file.
	FLTDIALG.H	 Header file for RSC	

	When I embarked on the path of making an animation program, I had no 
Idea how much work it would take. Not being a GEM programmer(I guess I am now!)
I was lost when it came to certain things. Especially the things necessary
for Multi-Tos½ compatable coding. One of the Hardest things to do (At 
least to figure out) was the Floating Toolbox.

	First, a little bit about my self. (Bragging rights).  When I was 9 
my local Grade school started up a computer learing program. It could only 
support 12 students, and I was one of them. 
	The school had 7 super computers (five TSR 80s and two Apples). When I 
discovered the world of text games, I was hooked. Like a junky, I had to 
have more and more and more. I decided then, and there, that I would make 
them myself! 
	Then I discovered LOGO on the apples, and knew I was destined to make 
computer art. 

	In August of 1992 I became an Atari Developer with the purpose of making
computer games for this most venerable of machines, THE FALCON!. Sadly,
I have not been able to procure one as of yet. So, in bordom I produced 
an animation program called Pencil Test. It works. It's done. But, I'm not sure 
what to do with it. Maybe I'll offer it to the Mags, or release it shareware.
who knows.

	As a result of Atari's slow delivery, I've rethought my Falcon purchase.
If you have been watching Atari closely, you'll see that they have recently 
Layed off 22 computer people, and hired 17 people to the games division.
Adding the fact that they have a large surplus of cash, I feel that they
are going push, and push hard, their much rumored Jaguar 64bit RISC Games 
Mega system.  
	Now, since I saved up a sum of cash over a years time, I've 
decided to pursue Great Dream of games on a more professional level.
So when Atari releases their Jag dev pack, I plan to be one of the first 
to purchase it.  
	So, if any of you out there are interested in chasing The Great Dream
with me, you're welcome to contact me. The more people we get together
the better the product we can turn out. 

	Oh, and I have a penchant for violence and gore. The more there is, 
the better the game!!!

	Contact me at: 
		Genie at C.ROUNTREE2.
		Or over the Forum net in the ST programming forum as RoadKill.


Now on to coding! 
/***************************************************************/

First I load in the header files I need, and define my global variables.

void main()
{
	AP_ID=appl_init();		/* start AES */
	HANDLE=graf_handle(&wc, &hc, &JUNK, &JUNK);	/* find AES handle */
	v_opnvwk(WORK_IN, &HANDLE, WORK_OUT);			/* open workstation */

Next I initialize AES and VDI.

	graf_mouse(0,0); /* arrow */
	
When the system passes controll over to your program, the mouse is a 
busy bee and you have to deal with it. 

	if(!rsrc_load("FLTDIALG.RSC")){ /* load resource */
	 		form_alert(1,"[1][||Can't find Pencil.RSC][OK]");
			Quit(); /* bye!! */
			}
If resource load returns a Zero, quit!

	rsrc_gaddr(R_TREE,TOOLFORM,&TOOLADDR);
	form_center(TOOLADDR,&W_X,&W_Y,&W_W,&W_H); /* calc tool window */
	wind_calc(WC_BORDER,NAME|MOVE,W_X,W_Y,W_W,W_H,&W_X,&W_Y,&W_W,&W_H);
	W_HANDLE=wind_create(NAME|MOVE,W_X,W_Y,W_W,W_H);
	
Here is the important part. First I snag the Address of the Toolform.
Next I form_center. This gives me the location of the form and its size,
 which I'll need to calc the window.  Realize these values are the size
 of the Work area of the Window, and not the full size of the window.
Next I call Wind_calc using the values of the work area to get the
 full size of the window. 
And lastly, Create the window!!

	wind_update(BEG_UPDATE); /* pause system AES draws */
	wind_title(W_HANDLE,"Look Ma! Floating Dialog!"); 
Wind title is a utility specific to Lattice 5. It allows
 you to easily title a window.

	wind_open(W_HANDLE,W_X,W_Y,W_W,W_H); /* Open Window */
	wind_calc(WC_WORK,NAME|MOVE,W_X,W_Y,W_W,W_H,&xc,&yc,&wc,&hc); 
Next I take the window location and size then calc the work area.
 This may seem like wasted effort, but it realy is necessary .

	TOOLADDR->ob_x = xc;	/* relocate object */
	TOOLADDR->ob_y = yc;	
Here I am setting the location of the upper left hand corner of 
 the dialog to the location of the window work area.

	objc_draw(TOOLADDR,0,MAX_DEPTH,xc,yc,wc,hc); /* Draw dialog */
	wind_update(END_UPDATE); /* Re-instate AES */
Pretty obvious!

Now we enter the main loop, and set up event multi for Button messages
 and Pipe Messages.
 

	if(button==1)
	if(W_HANDLE==wind_find(x,y)){
	
If the left button was clicked, check if the click was within the window.

			wind_get(HANDLE,WF_TOP,&WTOP,0,0,0); /* get current window */
			temp=objc_find(TOOLADDR,ROOT,MAX_DEPTH,x,y);
			if(temp != -1 && WTOP==W_HANDLE){  /* if nothing clicked */
			
Wind_get makes sure that our window is the currently active one.
 Next, check to see if the user clicked on one of our buttons. If so
 do switch.
 
 
Since the Switch is so long, I'm not going to cover it all, just the important
 bits.
		objc_change(TOOLADDR,old,0,xc,yc,wc,hc,0,1);
		objc_change(TOOLADDR,TLLINE,0,xc,yc,wc,hc,1,1);
		old=TLLINE; 

This de-highlights the old function button, and highlights the new one.
 old is the object that was highlighted before th user clcked.
 
		while(button!=0) evnt_button(1,2,0,&x,&y,&button,&JUNK); 

This is all over the code. What it does is wait for the mouse buttons
 to be released. It is very necessary at the end of the switch. if
 no button was clicked, there is the possibilty that the user is
 moving the window around, so you have to wait for release.
 Also, I could just have used a vq_mouse call, but if you call
 the VDI from an AES loop, anything you grab from the VDI will not
 go through to the AES, and this can cause some very strange problems.
 
switch(MSG[0]){  /* HANDLE MESSAGE EVENTS */
	case WM_MOVED:
		if(MSG[3]==W_HANDLE){
		
If the AES has piped anything through, then react. also, only
 if it is the right window handle.

		wind_update(BEG_UPDATE);

Stop AES graphics untill done.

		W_X=min(MSG[4],WORK_OUT[0]-2); W_Y=min(MSG[5],WORK_OUT[1]-12);

Next, make sure the user hasn't move the window off the screen.
 The -12 is so that the user can't move the work area off the screen.
 If they do, the system dies!
 
		wind_set(W_HANDLE,WF_CXYWH,W_X,W_Y,W_W,W_H);

Set the window to new cooridnates.

The rest of Wind_moved is the same as in the system initialization.

	case WM_REDRAW:
		if(MSG[3]==W_HANDLE){
		/* The Wind Redraw function is specific to Lattice 5!
		 * It's very cool. It takes care of calculating the 
		 * Areas to redraw!
		 */
		wind_update(BEG_UPDATE); /* Stop AES draws */
		wind_redraw(W_HANDLE,(GRECT *)&MSG[4],(void*)Redraw_wind);
		wind_update(END_UPDATE); /* restart AES */
		}
		break;
	}/* end switch */
			
This is pretty self explanitory.

	case WM_TOPPED:
		if(MSG[3]=W_HANDLE){
		/* if window moved to top, then top window! */
			wind_set(W_HANDLE,WF_TOP,W_X,W_Y,W_W,W_H);
			}
		break;

If the user click on a window that is not active, the system will
 tell you to move it to the top. this is what I'm doing here.

And that is the END of this tutorial. Simple, eh??


Enjoy. I hope you get something out of it. 

	If you want to get into games, or are into games, or just draw
well. Contact me. We can chat!

__
|_)   
| \oadKill--