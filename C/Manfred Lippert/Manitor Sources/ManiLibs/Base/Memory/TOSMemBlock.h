/*----------------------------------------------------------------------------------------	TOSMemBlock.h, class for handling memory blocks, using Malloc/Mfree/Mshrink		20.6.2000 by Manfred Lippert, mani@mani.de	last change: 20.6.2000----------------------------------------------------------------------------------------*/#ifndef __ManiLibs_TOSMemBlock_h__#define __ManiLibs_TOSMemBlock_h__#include <MemBlock.h>#if !TARGET_TOS	#error TOSMemBlock.h used in Non-TOS Project#endif#if !MC68K	#error TOSMemBlock.h used in Non-68K Project#endifclass TOSMemBlock : public MemBlock {protected:	void *adr;	size_t size;public:	TOSMemBlock();	virtual ~TOSMemBlock();	virtual void *get_adr();	virtual size_t get_size();	virtual void *set_size(size_t size);	virtual void free();};#define TOSMEM_ST					0x0#define TOSMEM_TT					0x1#define TOSMEM_ST_PREFERRED	0x2#define TOSMEM_TT_PREFERRED	0x3#define TOSMEM_PRIVATE			0x10#define TOSMEM_GLOBAL			0x20#define TOSMEM_SUPER				0x30#define TOSMEM_READABLE			0x40#define TOSMEM_XGLOBAL		(TOSMEM_GLOBAL | TOSMEM_ST_PREFERRED)#define TOSMEM_XREADABLE	(TOSMEM_READABLE | TOSMEM_ST_PREFERRED)class TOSxMemBlock : public TOSMemBlock {	int16 mode;	class SysInfo *sysinfo;public:	TOSxMemBlock(int16 mode, class SysInfo *sysinfo);	virtual ~TOSxMemBlock();	virtual void *set_size(size_t size);};#endif