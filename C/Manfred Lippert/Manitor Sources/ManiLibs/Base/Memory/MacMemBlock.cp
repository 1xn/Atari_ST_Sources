/*----------------------------------------------------------------------------------------	MacMemBlock.cp, class for handling memory blocks, using Mac Handles		20.6.2000 by Manfred Lippert, mani@mani.de	last change: 2.10.2000----------------------------------------------------------------------------------------*/#include <MacMemBlock.h>#include <string.h>// Wichtig: hnd != 0 => *hnd != 0 (=> size > 0)// Wichtig: locked == TRUE => hnd != 0 && *hnd != 0// Wichtig: hnd == 0 => locked = FALSEMacMemBlock::MacMemBlock() {	hnd = 0;	locked = FALSE;}MacMemBlock::~MacMemBlock() {	free();}void *MacMemBlock::get_adr() {	if (hnd) {		return *hnd;	}	return 0;}size_t MacMemBlock::get_size() {	if (hnd) {		return (size_t)GetHandleSize(hnd);	}	return 0;}void *MacMemBlock::set_size(size_t size) {	if (size == 0) {									// Block freigeben		free();		return 0;	}	if (hnd) {											// es existiert bereits ein Block		bool was_locked = locked;		if (was_locked) {			unlock();									// Block unlocken		}		SetHandleSize(hnd, (Size)size);			// Grš§e Šndern		size_t actual_size = get_size();		if (actual_size == size) {					// geklappt?			if (was_locked) {				lock();									// alten Lock-Status			}			return *hnd;								// OK		}		Handle neu = NewHandle((Size)size);		// Nš - Neuen Block		if (neu == 0 || *neu == 0) {				// nicht im App Heap geklappt?			OSErr oserr;			neu = TempNewHandle((Size)size, &oserr);	// mit TempMem versuchen		}		if (neu == 0) {								// kein Speicher oder Master Pointer mehr 			return 0;									// ERROR		}		if (*neu == 0) {								// kein Speicher mehr (aber Master Pointer bekommen)			DisposeHandle(neu);						// Master Pointer freigeben			return 0;									// ERROR		}		memcpy(*neu, *hnd, actual_size < size ? actual_size : size);	// umkopieren		DisposeHandle(hnd);							// alten Block freigeben		hnd = neu;										// neuer Block		if (was_locked) {			lock();		}		return *hnd;									// OK	}	// noch kein Block:	hnd = NewHandle((Size)size);					// Neuer Block	if (hnd == 0 || *hnd == 0) {					// nicht im App Heap geklappt?		OSErr oserr;		hnd = TempNewHandle((Size)size, &oserr);	// mit TempMem versuchen	}	if (hnd == 0) {									// kein Speicher oder Master Pointer mehr 		return 0;										// ERROR	}	if (*hnd == 0) {									// kein Speicher mehr (aber Master Pointer bekommen)		DisposeHandle(hnd);							// Master Pointer freigeben		hnd = 0;		return 0;										// ERROR	}	return *hnd;}void MacMemBlock::free() {	if (hnd) {		Handle the_hnd = hnd;		hnd = 0;		locked = FALSE;		DisposeHandle(the_hnd);	// should be last action - TOSMemBlock can be embedded itself in memory block!	}}void MacMemBlock::lock() {	if (hnd && !locked) {		HLock(hnd);		locked = TRUE;	}}void MacMemBlock::unlock() {	if (locked) {		HUnlock(hnd);		locked = FALSE;	}}