/*----------------------------------------------------------------------------------------	Allocator.h, abstract class for allocating memory		20.7.2001 by Manfred Lippert, mani@mani.de	last change: 18.8.2001----------------------------------------------------------------------------------------*/#ifndef __ManiLibs_Allocator_h__#define __ManiLibs_Allocator_h__#include <Types2B.h>#include <stdlib.h>class Allocator {public:	virtual void *allocate(size_t bytes) = 0;	virtual void deallocate(void *addr) = 0;	virtual void *reallocate(void *addr, size_t bytes) = 0;};// Notes for users/implementors:// - allocate(0) is NOT allowed! (unknown behaviour)// - deallocate(0) is NOT allowed! (unknown behaviour)// - If reallocate returns 0, it may be possible that allocate/memcpy/deallocate will work.//   It is NOT guaranteed that reallocate already tried this//   (because it may not know the original size of the block)#endif