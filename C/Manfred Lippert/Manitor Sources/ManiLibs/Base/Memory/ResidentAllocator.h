/*----------------------------------------------------------------------------------------	ResidentAllocator.h, allocator for resident RAM that is not swapped to disc		20.7.2001 by Manfred Lippert, mani@mani.de	last change: 20.7.2001----------------------------------------------------------------------------------------*/#ifndef __ManiLibs_ResidentAllocator_h__#define __ManiLibs_ResidentAllocator_h__#include <Allocator.h>#include <Err.h>class ResidentAllocator : public Allocator {	boolean mandatory;	// block needs 100% guaranteed not to be swapped out?#if TARGET_MACOS// for Mac OS X:// (To Do !!!!!!!!!!!!!!!!!)#if 0typedef int (*func)(void *, size_t);	func mlock;	func munlock;#endif#endifpublic:	void init(boolean mandatory);	void set_mandatory(boolean mandatory) {this->mandatory = mandatory;};	boolean get_mandatory() const {return mandatory;};	virtual void *allocate(size_t bytes);	virtual void deallocate(void *addr);	virtual void *reallocate(void *addr, size_t bytes);};#endif