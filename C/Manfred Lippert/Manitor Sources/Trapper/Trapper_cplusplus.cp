/* Diese Version von cplusplus.cp benutzt statt malloc/free Malloc/Mfreefür per new angelegte Objekte. */#include <cplusplus.h>#include <gemdos.h>void *operator new(size_t size){	return Malloc((int32)size);}void *operator new(size_t size, void *adr){#pragma unused(size)	return adr;}void operator delete(void *adr){	if (adr) {		Mfree(adr);	}}void *operator new[](size_t size){	return Malloc((int32)size);}void operator delete[](void *adr){	if (adr) {		Mfree(adr);	}}extern "C" void __register_global_object();void __register_global_object(){}