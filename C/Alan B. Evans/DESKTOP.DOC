          DESKTOP.PRG  is a little program that is meant to  reside  in 
the AUTO folder of "booting" RDY ramdisks. For older TOSes it should be 
renamed  FOLDRXXX.PRG  where  XXX stands for the  number  of  directory 
spaces to allow for in addition to the standard 40(see below).

          It  checks  the  TOS Version at boot-up.  If it  is  NEW  Tos 
(version  >= 1.4),  then it will copy any DESKTOP.INF there may in  the 
root  directory of the ramdisk to drive C:\ (if the latter is  present) 
because,  if C:\ is present,  TOS_1.4 and above WILL take their desktop 
from it - despite "booting" from the AUTO folder of the RDY ramdisk.

          If it is old TOS (which is subject to the 40-folder limit) it 
will  try  and execute a file FOLDR???.PRG on drive C:\.  This  is  the 
patch program for the 40-folder bug. If DESKTOP.PRG itself (in the AUTO 
folder) has been renamed FOLDR200.PRG (say), then this will cause space 
for an additional 200 directories to be visited. This is only likely to 
be  needed  if a hard disk is connected.  Thus it  is  reasonable  that 
DESKTOP.PRG  should look to find this program on drive  C:\.  In  turn, 
this  implies  DESKTOP.PRG must come after the  hard-disk  "waking  up" 
program  e.g.  AHDI  (or ICDBOOT or equivalent)  which  normally  comes 
first.

          Finally,  if key "X" is pressed during  boot-up,  DESKTOP.PRG 
allows you to execute any Program (that does not use GEM  calls).  This 
can be a life-saver sometimes - e.g.  when an ACC (or a subsequent AUTO 
folder  program)  has become corrupted and causes a  warmboot  when  an 
attempt is made to load it - this,  in turn,  causes the "booting"  RDY 
ramdisk to start booting again, eventually attempting to load again the 
same corrupted ACC - hence another warm reset - etc. etc. ad infinitum. 
Clearly  emtering  a  shell like msh.tos (in order to  change  the  name 
(deactivate) the culprit program) is invaluable to save having to  cold 
boot - and possibly lose valuable work on the ramdisk.

                                             W. Alan B. Evans,
                                             [wabe@ukc.ac.uk]

P.S. (for C Programmers only)

	Of course, this is the seed if an itelligent booting system. If
you wish to proceed to develop an intelligent booting program utilising
a "booting" RDY/RDE ramdisk, unpack IQ_BOOT.ZOO and there you will find
a proto source code file, IQ_BOOT.C, for such a program. Of course, you
need a C compiler ( Mark Williams C is ideal) to compile it - or rather
your own "tailored" version of it. However to give you an idea  how  it
works there  is  also  LD_P.PRG, which  will load  a  tiny (50  kbytes)
"booting" RDY\RDE  Disk  P:\ containing in its AUTO-folder  the program
compiled from the proto source.
