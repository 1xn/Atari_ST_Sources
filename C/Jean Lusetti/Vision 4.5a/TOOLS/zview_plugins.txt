This document is subjet to errors as I don't always comment my code that well. ;o)
It's based on my work writing codecs for zView and study of the plugin sources
provided by zorro.

Miro Kropáček is the current maintainer of zView and the zcodelib. It really is
the maintainers job to document the inner workings. Since this is based on my
own trial and errors I ask that you keep it to yourself.

Typical calling procedure:

call to plugin_init()
call to reader_init() -> returns TRUE if ok
  here is where all the magic happens in the codec
  the codec opens the file and tries to determine if it's a valid image file
  if codec rejects the image file it returns 0, call reader_quit() ... bail
  if codec decides it's valid, it sets members of the _img_info structure
  analyze the _img_info structure to determine the buffer layout
call reader_read() once for each scan line
  image is sent top to bottom, left to right
call reader_text() if you want to get any meta data found in the file
call reader_quit() to close file and free any ram the codec may have allocated

_img_info info structure members and what to expect (see zview.h)

width				in pixels
height				in pixels
components			1 or 3
planes				1,2,4,8,16,24 (see notes below about 15 and 32)
colors				calculated colors, informational use only
orientation			set if codec requests image to be flipped top to bottom
page				frame count, can be ignored, unless you support loading animations
delay				frame delay, can be ignored, unless you support loading animations
num_comments		0 if no comments, informational use only
max_comments_length	only valid if num_comments > 0
indexed_color		set if codec sent a palette (indexed color)
COLOR_MAP			palette itself (always full 24-bit RGB)
background_color	color seen in window when image is smaller than the window work area
thumbnail			never seen a codec that uses this
page_wanted			frame to load, always 0, unless you support loading animations (passed in)
info				describes image format, informational use only
compression			describes compression method, informational use only
real_width			always same as width, never see thumbnails used
real_height			always same as height, never see thumbnails used

The ones marked "informational use only" can be ignored or you can fetch the data
for an "about image" dialog.

If the codec sets the orientation flag it requests the image be flipped.
It's up to the caller to do this.

For animations, if you don't support animation, its's possible to request the
first frame.

Now we go into more detail as what to expect when a codec fills the output buffer:

For 1 plane (mono)
  components = 1
  indexed_color = false
  no palette is sent, the index itself is set 0 or 1 to signal white or black

For 2 to 8 planes it always sends a palette and uses indexes, 1 byte = 1 index
  they are indexes into the sent palette
  components = 3
  indexed_color = true

For 15-bit
  I think you should never see this plane level
  this i am not sure about, never bothered to study the zcodelib
  all my codecs convert 15-bit to Falcon 16-bit

For 16-bit high color
  RGB data is arranged 'rrrrrggggggbbbbb' (Falcon format)
  components = 3
  indexed_color = false

For 24-bit true color
  RGB data is arranged 'rrrrrrrrggggggggbbbbbbbb' (RGB order)
  components = 3
  indexed_color = false

For 32-bit
  you should not see this plane level
  codecs convert 32-bit to 24-bit by dropping the alpha channel


*
