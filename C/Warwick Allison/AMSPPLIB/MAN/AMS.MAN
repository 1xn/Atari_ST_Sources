                        ATARI MACHINE SPECIFIC LIBRARY



NAME
     AMS - Atari Machine Specific library

DESCRIPTION
     The AMS library is a collection of C++ classes and functions that
     gives access to many features of the Atari computers sytems that
     are not normally found in general-purpose C++ libraries.

MODULES

  DISPLAY
     DoubleBuffer   - encapsulated double buffering support
     Resolution     - support for the currently defined Atari resolutions
     Screen         - support for Atari standard resolution screens

  DRAWING
     BlockMap       - display of block-based graphics
     FastCounter    - high speed incremental number display
     SmallGraphics  - simply graphics functions
     Sprite         - small, high-speed graphic objects
       MobileSprite - a derived Sprite that moves by itself
       EasySprite   - simplified sprite creation routines

  CONTROL
     Joystick       - access to standard Atari joysticks
     MousePosition  - access to the Atari mouse
     ScanCode       - access to the Atari keyboard keys

  AUXILIARY
     Oscillator     - cyclic value objects
     Shape          - some shape classes
     Termination    - taking control of hardware termination
     fnameext       - filename manipulations

USAGE
     To use AMS with the GNU C++ compiler (G++), add the path of the
     AMS #include files to the GXXINC path.  Since the standard include
     files have a "screen.h" (but a very pointless one), you should put
     the AMS path BEFORE the standard ones, since "Screen.h" is normally
     equivalent to "screen.h" on the Atari.

     Before the library can be used, it needs to be built (but it may
     have already been built when you received it).  To build the library,
     edit the makefile in the source directory to indicate you set-up
     (it should be just a matter of setting $LIBRARY and $INC), then
     type "make" in the source directory (this assumes you have a
     default.mak consistent with the one that comes with AMS).  If you
     do not use make (and you really should!), you can type:

         gcc -O2 *.cc
         gnu-ar r ams.olb *.o
         gnu-ar s ams.olb

EXAMPLES
     See the "examples" directory for some simple programs that use AMS.

FILES
     include/*.h      - Header files for AMS
     src/*.cc         - C++ sources
     man/*.man        - ASCII documentation
     example/*        - Example programs
     etc/default.mak  - make rules. (may need to set $MAKEFILES to this file)

     Degas picture formats - see Screen
     CrackArt picture formats - see Screen
     AMS Sprite format - see Sprite

SEE ALSO
     FastCounter, MousePosition, Screen, BlockMap, fnameext, Oscillator,
     Shape, Terminator, DoubleBuffer, Joystick, Resolution, SmallGraphics,
     Timer, EasySprite, MobileSprite, ScanCode, Sprite.

DIAGNOSTICS
     Since most of the functions in the AMS library are optimised for
     speed, little parameter range checking is done.

BUGS
     Bugs in AMS should be reported to warwick@cs.uq.oz.au

AUTHOR
     Warwick Allison, 1992.
     warwick@cs.uq.oz.au

COPYING
     This functionality is part of the Atari Machine Specific Library,
     and is Copyright 1992 by Warwick W. Allison.

     The Atari Machine Specific Library is free and protected under the
     GNU Library General Public License.

     You are free to copy and modify these sources, provided you acknowledge
     the origin by retaining this notice, and adhere to the conditions
     described in the GNU LGPL.
