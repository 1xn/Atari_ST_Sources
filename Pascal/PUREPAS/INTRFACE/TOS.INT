unit	tos;

interface

(* -------------------------------------------------------------------- *)
(*		constants, types & variables									*)
(* -------------------------------------------------------------------- *)

const
	FO_READ		= 0;
	FO_WRITE	= 1;
	FO_RW		= 2;

	FA_RDONLY	= $1;
	FA_HIDDEN	= $2;
	FA_SYSTEM	= $4;
	FA_LABEL	= $8;
	FA_DIREC	= $10;
	FA_ARCH		= $20;
	FA_ATTRIB	= $17;

	VERTFLAG	= $0100;
	STMODES		= $0080;
	OVERSCAN    = $0040;
	PAL			= $0020;
	VGA			= $0010;
	TV			= $0000;

	COL80		= $08;
	COL40		= $00;

	BPS16		= 4;
	BPS8		= 3;
	BPS4		= 2;
	BPS2		= 1;
	BPS1		= 0;

	NUMCOLS		= 7;


type
			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					BIOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	MDPtr = ^MD;
	MD = record
		m_link :		MDPtr;
		m_start :		Pointer;
		m_length :		LongInt;
		m_own :			PDPtr;
	end;

	MPBPtr = ^MPB;
	MPB = record
		mp_mfl :		MDPtr;
		mp_mal :		MDPtr;
		mp_rover :		MDPtr;
	end;

	BPBPtr = ^BPB;
	BPB = record
		recsiz :		Integer;
		clsiz :			Integer;
		clsizb :		Integer;
		rdlen :			Integer;
		fsiz :			Integer;
		fatrec :		Integer;
		datrec :		Integer;
		numcl :			Integer;
		bflags :		Integer;
	end;


			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					GEMDOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	DTAPtr = ^DTA;
	DTA = record
		d_reserved :		Array[1..21] of Byte;
		d_attrib :			Byte;
		d_time :			Integer;
		d_date :			Integer;
		d_length :			LongInt;
		d_fname :			String[12];
	end;

	DISKINFOPtr = ^DISKINFO;
	DISKINFO = record
		b_free :			LongInt;
		b_total :			LongInt;
		b_secsiz :			LongInt;
		b_clsiz :			LongInt;
	end;

	DOSTIMEPtr = ^DOSTIME;
	DOSTIME = record
		time :				Word;
		date :				Word;
	end;

	LINEPTR = ^LINE;
	LINE = record
		maxlen :			Byte;
		buffer :			String;
	end;

	MSGTYPEPTR = ^MSGTYPE;
	MSGTYPE = record
		msg1 :				LongInt;
		msg2 :				LongInt;
		pid :				Integer;
	end;

	XATTRPTR = ^XATTR;
	XATTR = record
        mode :				Word;
        index :				LongInt;
        dev :				Word;
        reserved1 :			Word;
        nlink :				Word;
        uid :				Word;
        gid :				Word;
        size :				LongInt;
        blksize :			LongInt;
        nblocks :			LongInt;
        mtime :				Integer;
        mdate :				Integer;
        atime :				Integer;
        adate :				Integer;
        ctime :				Integer;
        cdate :				Integer;
        attr :				Integer;
        reserved2 :			Integer;
        reserved3 :			Array[0..1] of LongInt;
	end;

	SIGACTIONPtr = ^SIGACTION;
	SIGACTION = record
		sa_handler :		Pointer;
		sa_mask :			LongInt;
		sa_flags :			Integer;
	end;


			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					XBIOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	MOUSEPtr = ^MOUSE;
	MOUSE = record
		topmode :		Byte;
		buttons :		Byte;
		x_scale :		Byte;
		y_scale :		Byte;
		x_max :			Integer;
		y_max :			Integer;
		x_start :		Integer;
		y_start :		Integer;
	end;

	IORECORDPtr = ^IORECORD;
	IORECORD = record
		ibuf :			Pointer;
		ibufsiz :		Integer;
		ibufhd :		Integer;
		ibuftl :		Integer;
		ibuflow :		Integer;
		ibufhi :		Integer;
	end;

	KEYTABPtr = ^KEYTAB;
	KEYTAB = record
		unshift :		Pointer;
		shift :			Pointer;
		capslock :		Pointer;
	end;

	KBDVECSPtr = ^KBDVECS;
	KBDVECS = record
		midivec :		Pointer;
		vkbderr :		Pointer;
		vmiderr :		Pointer;
		statvec :		Pointer;
		mousevec :		Pointer;
		clockvec :		Pointer;
		joyvec :		Pointer;
		midisys :		Pointer;
		ikdbsys :		Pointer;
		drvstat :		Integer;
	end;

	PBDEFPtr = ^PBDEF;
	PBDEF = record
		pb_scrptr :		Pointer;
		pb_offset :		Integer;
		pb_width :		Integer;
		pb_height :		Integer;
		pb_left :		Integer;
		pb_right :		Integer;
		pb_screz :		Integer;
		pb_prrez :		Integer;
		pb_colptr : 	Pointer;
		pb_prtype :		Integer;
		pb_prport :		Integer;
		pb_mask :		Pointer;
	end;

	METAINFOPtr = ^METAINFO;
	METAINFO = record
		drivemap :		LongInt;
		version :		Pointer;
		reserved :		Array[1..2] of LongInt;
	end;

	IARRAY_2	= ARRAY[0..1] of Integer;
	IARRAY_16	= ARRAY[0..15] of Integer;

	LARRAY_2	= ARRAY[0..1] of LongInt;
	LARRAY_8	= ARRAY[0..7] of Integer;

	LongIntFunc = Function : LongInt;


(* -------------------------------------------------------------------- *)
(*		functions & procedures											*)
(* -------------------------------------------------------------------- *)

			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					BIOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	procedure	Getmpb( var p_mpb : MPB );

	function	Bconstat( dev : Integer ) : Integer;

	function	Bconin( dev : Integer ) : LongInt;

	procedure	Bconout( dev, c : Integer );

	function	Rwabs( rwflag : Integer; buf : Pointer;
						count, recno, dev : Integer;
						lrecno : LongInt ) : LongInt;

	function	Setexc( vecnum : Integer; vec : Pointer ) : Pointer;

	function	Tickcal : LongInt;

	function	Getbpb( dev : Integer ) : BPBPtr;

	function	Bcostat( dev : Integer ) : LongInt;

	function	Mediach( dev : Integer ) : LongInt;

	function	Drvmap : LongInt;

	function	Kbshift( mode : Integer ) : LongInt;

			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					GEMDOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	procedure	Pterm0;

	function	Cconin : LongInt;

	procedure	Cconout( c : Integer );

	function	Cauxin : Integer;

	procedure	Cauxout( c : Integer );

	function	Cprnout( c : Integer ) : Integer;

	function	Crawio( w : Integer ) : LongInt;

	function	Crawcin : LongInt;

	function	Cnecin : LongInt;

	procedure	Cconws( str : String );

	procedure	Cconrs( var buf : LINE );

	function	Cconis : Integer;

	function	Dsetdrv( drv : Integer ) : LongInt;

	function	Cconos : Integer;

	function	Cprnos : Integer;

	function	Cauxis : Integer;

	function	Cauxos : Integer;

	function	Maddalt( start : Pointer; size : LongInt ) : LongInt;

	function	Dgetdrv : Integer;

	procedure	Fsetdta( newDta : DTAPtr );

	function	Super( stack : Pointer ) : LongInt;

	function	Tgetdate : Word;

	function	Tsetdate( date : Word ) : Word;

	function	Tgettime : Word;

	function	Tsettime( time : Word ) : Word;

	function	Fgetdta : DTAPtr;

	function	Sversion : Integer;

	procedure	Ptermres( keep : LongInt; ret : Integer );

	function	Dfree( var buf : DISKINFO; drv : Integer ) : LongInt;

	function	Dcreate( pathname : String ) : Integer;

	function	Ddelete( pathname : String ) : Integer;

	function	Dsetpath( path : String ) : Integer;

	function	Fcreate( fname : String; attribs : Integer ) : LongInt;

	function	Fopen( fname : String; mode : Integer ) : LongInt;

	function	Fclose( handle : Integer ) : Integer;

	function	Fread( handle : Integer; count : LongInt;
						buffer : Pointer ) : LongInt;

	function	Fwrite( handle : Integer; count : LongInt;
						buffer : Pointer ) : LongInt;

	function	Fdelete( fname : String ) : Integer;

	function	Fseek( offset : LongInt;
						handle, seekmode : Integer ) : LongInt;

	function	Fattrib( fname : String;
							wflag, attribs : Integer ) : Integer;

	function	Mxalloc( amount : LongInt; mode : Integer ) : Pointer;

	function	Fdup( handle : Integer ) : LongInt;

	function	Fforce( stdh, nonstdh : Integer ) : Integer;

	function	Dgetpath( var buf : String; driveno : Integer ) : Integer;

	function	Malloc( amount : LongInt ) : Pointer;

	function	Mfree( saddr : Pointer ) : Integer;

	function	Mshrink( zero : Integer; block : Pointer;
							newsize : LongInt ) : Integer;

	function	Pexec( mode : Integer;
						prgfile, cmdline : String;
						envptr : Pointer ) : LongInt;

	procedure	Pterm( retcode : Integer );

	function	Fsfirst( fspec : String; attribs : Integer ) : Integer;

	function	Fsnext : Integer;

	function	Frename( oldname, newname : String ) : Integer;

	procedure	Fdatime( var timeptr : DOSTIME; handle, wflag : Integer );

	function	Flock( handle, mode : Integer;
						start, length : LongInt ) : LongInt;

	function	Syield : Integer;

	function	Fpipe( var usrh : IARRAY_2 ) : Integer;

	function	Fcntl( f : Integer; arg : LongInt; cmd : Integer ) : Integer;

	function	Finstat( f : Integer ) : LongInt;

	function	Foutstat( f : Integer ) : LongInt;

	function	Fgetchar( f, mode : Integer ) : LongInt;

	function	Fputchar( f : Integer; c : LongInt; mode : Integer ) : LongInt;

	function	Pwait : LongInt;

	function	Pnice( delta : Integer ) : Integer;

	function	Pgetpid : Integer;

	function	Pgetppid : Integer;

	function	Pgetpgrp : Integer;

	function	Psetpgrp( pid, newgrp : Integer ) : Integer;

	function	Pgetuid : Integer;

	function	Psetuid( id : Integer ) : Integer;

	function	Pkill( pid, sig : Integer ) : Integer;

	function	Psignal( sig : Integer; handler : Pointer ) : Pointer;

	function	Pvfork : Integer;

	function	Pgetgid : Integer;

	function	Psetgid( id : Integer ) : Integer;

	function	Psigblock( mask : LongInt ) : LongInt;

	function	Psigsetmask( mask : LongInt ) : LongInt;

	function	Pusrval( arg : LongInt ) : LongInt;

	function	Pdomain( newdom : Integer ) : Integer;

	procedure	Psigreturn;

	function	Pfork : Integer;

	function	Pwait3( flag : Integer; var rusage : LARRAY_2 ) : LongInt;

	function	Fselect( timeout : Word; var rfds, wfds,
										xfds : LongInt ) : Integer;

	procedure	Prusage( var r : LARRAY_8 );

	function	Psetlimit( lim : Integer; value : LongInt ): LongInt;

	function	Talarm( secs : LongInt ): LongInt;

	procedure	Pause;

	function	Sysconf( n : Integer ): LongInt;

	function	Psigpending : LongInt;

	function	Dpathconf( name : String ; n : Integer ) : LongInt;

	function	Pmsg( mode : Integer; mbox : LongInt; var msg : MSGTYPE ) : LongInt;

	function	Fmidipipe( pid, inp, outp : Integer ) : LongInt;

	function	Prenice( pid, delta : Integer ) : Integer;

	function	Dopendir( name : String ; flag : Integer ) : LongInt;

	function	Dreaddir( buflen : Integer; dir : LongInt; var buf : String ) : LongInt;

	function	Drewinddir( dir : LongInt ) : LongInt;

	function	Dclosedir( dir : LongInt ) : LongInt;

	function	Fxattr( flag : Integer; name : String; var buf : XATTR ) : LongInt;

	function	Flink( oldname, newname : String ) : LongInt;

	function	Fsymlink( oldname, newname : String ) : LongInt;

	function	Freadlink( size : Integer; var buf : String; name : String ) : LongInt;

	function	Dcntl( cmd : Integer; name : String; arg : LongInt ) : LongInt;

	function	Fchown( name : String; uid, gid : Integer ) : LongInt;

	function	Fchmod( name : String; mode : Integer ) : LongInt;

	function	Pumask( mode : Word ) : LongInt;

	function	Psemaphore( mode : Integer; id, timeout : LongInt ) : LongInt;

	function	Dlock( mode, drive : Integer ) : LongInt;

	procedure	Psigpause( mask : LongInt );

	function	Psigaction( sig : Integer; act, oact : SIGACTIONPtr ) : LongInt;

	function	Pgeteuid : Integer;

	function	Pgetegid : Integer;


			(* ++++++++++++++++++++++++++++++++++++++++ *)
			(*					XBIOS					*)
			(* ++++++++++++++++++++++++++++++++++++++++ *)

	procedure	Initmous( typ : Integer;
							var param : MOUSE; vec : Pointer );

	function	Ssbrk( amount : Integer ) : Pointer;

	function	Physbase : Pointer;

	function	Logbase : Pointer;

	function	Getrez : Integer;

	procedure	Setscreen( logLoc, physLoc : Pointer; res : Integer );

	procedure	Setpalette( var palettePtr : IARRAY_16 );

	function	Setcolor( colorNum, color : Integer ) : Integer;

	function	Floprate( drive, seekrate : Integer ) : Integer;

	function	Floprd( buf, filler : Pointer;
						devno, sectno, trackno,
						sideno, count : Integer ) : Integer;

	function	Flopwr( buf, filler : Pointer;
						devno, sectno, trackno,
						sideno, count : Integer ) : Integer;

	function	Flopfmt( buf, filler : Pointer;
							devno, spt, trackno,
							sideno, interlv : Integer;
							magic : LongInt;
							virgin : Word ) : Integer;

	procedure	Midiws( cnt : Integer; ptr : Pointer );

	procedure	Mfpint( interno : Integer; vec : Pointer );

	function	Iorec( devno : Integer ) : IORECORDPtr;

	function	Rsconf( speed, flowctl, ucr,
						rsr, tsr, scr : Integer ) : LongInt;

	function	Keytbl( unshift, shift, capslock : Pointer ) : KEYTABPtr;

	function	Random : LongInt;

	procedure	Protobt( buf : Pointer; serialno : LongInt;
							disktype, execflag : Integer );

	function	Flopver( buf, filler : Pointer;
						devno, sectno, trackno,
						sideno, count : Integer ) : Integer;

	procedure	Scrdmp;

	function	Cursconf( mode, operand : Integer ) : Integer;

	procedure	Settime( datetime : LongInt );

	function	Gettime : LongInt;

	procedure	Bioskeys;

	procedure	Ikbdws( cnt : Integer; ptr : Pointer );

	procedure	Jdisint( intno : Integer );

	procedure	Jenabint( intno : Integer );

	function	Giaccess( data : Byte; regno : Integer ) : Byte;

	procedure	Offgibit( bitno : Integer );

	procedure	Ongibit( bitno : Integer );

	procedure	Xbtimer( timer, control, data : Integer; vec : Pointer );

	procedure	Dosound( ptr : Pointer );

	function	Setprt( config : Integer ) : Integer;

	function	Kbdvbase : KBDVECSPtr;

	function	Kbrate( initial, speed : Integer ) : Integer;

	procedure	Prtblk( var defptr : PBDEF );

	procedure	Vsync;

	function	Supexec( codeptr : LongIntFunc ) : LongInt;

	procedure	Puntaes;

	function	DMAread( sector : LongInt; count : Integer;
							buffer : Pointer;
							devno : Integer ) : LongInt;

	function	DMAwrite( sector : LongInt; count : Integer;
							buffer : Pointer;
							devno : Integer ) : LongInt;

	function	Bconmap( devno : Integer ) : LongInt;

	function	Blitmode( mode : Integer ) : Integer;

	function	EsetShift( shftmode : Integer ) : Integer;

	function	EgetShift : Integer;

	function	EsetBank( bankNum : Integer ) : Integer;

	function	EsetColor( colorNum, color : Integer ) : Integer;

	procedure	EsetPalette( colorNum, count : Integer;
								palettePtr : Pointer );

	procedure	EgetPalette( colorNum, count : Integer;
								palettePtr : Pointer );

	function	EsetGray( switch : Integer ) : Integer;

	function	EsetSmear( switch : Integer ) : Integer;

	procedure	Metainit( var buffer : METAINFO );

	function	Dsp_LoadProg( filename : String; ability : Integer;
										buffer : Pointer ) : Integer;

	function	Dsp_LodToBinary( filename : String;
									codeptr : Pointer ) : LongInt;

	procedure	Dsp_DoBlock( data_in : Pointer; size_in : LongInt;
							data_out : Pointer; size_out : LongInt );

	procedure	Dsp_BlkHandShake( data_in : Pointer; size_in : LongInt;
							data_out : Pointer; size_out : LongInt );

	procedure	Dsp_BlkUnpacked( data_in : Pointer; size_in : LongInt;
							data_out : Pointer; size_out : LongInt );

	procedure	Dsp_InStream( data_in : Pointer;
								block_size, num_blocks : LongInt;
									var blocks_done : LongInt );

	procedure	Dsp_OutStream( data_out : Pointer;
								block_size, num_blocks : LongInt;
									var blocks_done : LongInt );

	procedure	Dsp_IOStream( data_in, data_out : Pointer;
								block_insize, block_outsize,
									num_blocks : LongInt;
										var blocks_done : LongInt );

	procedure	Dsp_RemoveInterrupts( mask : Integer );

	function	Dsp_GetWordSize : Integer;

	function	Dsp_Lock : Integer;

	procedure	Dsp_Unlock;

	procedure	Dsp_Available( var xavailable, yavailable : LongInt );

	function	Dsp_Reserve( xreserve, yreserve : LongInt ) : Integer;

	procedure	Dsp_ExecProg( codeptr : Pointer;
								codesize : LongInt; ability : Integer );

	procedure	Dsp_ExecBoot( codeptr : Pointer;
								codesize : LongInt; ability : Integer );

	procedure	Dsp_TriggerHC( vector : Integer );

	function	Dsp_RequestUniqueAbility : Integer;

	function	Dsp_GetProgAbility : Integer;

	procedure	Dsp_FlushSubroutines;

	function	Dsp_LoadSubroutine( codeptr : Pointer; codesize : LongInt;
										ability : Integer ) : Integer;

	function	Dsp_InqSubrAbility( ability : Integer ) : Integer;

	function	Dsp_RunSubroutine( handle : Integer ) : Integer;

	function	Dsp_Hf0( flag : Integer ) : Integer;

	function	Dsp_Hf1( flag : Integer ) : Integer;

	function	Dsp_Hf2 : Integer;

	function	Dsp_Hf3 : Integer;

	procedure	Dsp_BlkWords( data_in : Pointer; size_in : LongInt;
							data_out : Pointer; size_out : LongInt );

	procedure	Dsp_BlkBytes( data_in : Pointer; size_in : LongInt;
							data_out : Pointer; size_out : LongInt );

	function	Dsp_HStat : Byte;

	procedure	Dsp_SetVectors( receiver, transmitter : Pointer );

	function	setmode( modecode : Integer ) : Integer;

	function	mon_type : Integer;

	procedure	ext_sync( flag : Integer );

	function	locksnd : LongInt;

	function	unlocksnd : LongInt;

	function	soundcmd( mode, data : Integer ) : LongInt;

	function	setbuffer( reg : Integer; begaddr, endaddr : Pointer ) : LongInt;

	function	setsndmode( mode : Integer ) : LongInt;

	function	settrack( playtracks, rectracks : Integer ) : LongInt;

	function	setmontrack( montrack : Integer ) : LongInt;

	function	setinterrupt( src_inter, cause : Integer ) : LongInt;

	function	buffoper( mode : Integer ) : LongInt;

	function	dsptristate( dspxmit, dsprec : Integer ) : LongInt;

	function	gpio( mode, data : Integer ) : LongInt;

	function	devconnect( src, dst, srcclk, prescale, protocol : Integer ) : LongInt;

	function	sndstatus( res : Integer ) : LongInt;

	function	buffptr( bptr : Pointer ) : LongInt;


(* =================================================================== *)
