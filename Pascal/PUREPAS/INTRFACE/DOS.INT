unit	dos;

interface

uses	tos;

(* -------------------------------------------------------------------- *)
(*		constants, types & variables									*)
(* -------------------------------------------------------------------- *)

const

	fmClosed = $D7B0;
	fmInput  = $D7B1;
	fmOutput = $D7B2;
	fmInOut  = $D7B3;

	ReadOnly	= $01;
	Hidden		= $02;
	SysFile		= $04;
	VolumeID	= $08;
	Directory	= $10;
	Archive		= $20;
	AnyFile		= $3F;


type

	FileRec = record
				Handle :	Word;
				Mode :		Word;
				RecSize :	LongInt;
				Private :	array[1..28] of Byte;
				UserData :	array[1..16] of Byte;
				Name :		array[0..119] of Char;
				Reserved :	Word;
			end;

	TextBuf = array[0..127] of Char;

	TextRec = record
				Handle :	Word;
				Mode :		Word;
				BufSize :	LongInt;
				BufPos :	LongInt;
				BufEnd :	LongInt;
				BufPtr :	^TextBuf;
				OpenFunc :	Pointer;
				InOutFunc :	Pointer;
				FlushFunc :	Pointer;
				CloseFunc :	Pointer;
				UserData :	array[1..16] of Byte;
				Name :		array[0..119] of Char;
				Reserved :	Word;
				Buffer :	TextBuf;
			end;

	DateTime = record
				Year, Month, Day, Hour, Min, Sec : Word;
			end;

	SearchRec = record
				Fill	: array[1..21] of Byte;
				Attr	: Byte;
				Time	: LongInt;
				Size	: LongInt;
				Name	: string[12];
			end;

	ComStr	= string[127];
	PathStr	= string[119];
	DirStr	= string[105];
	NameStr	= string[8];
	ExtStr	= string[4];


var

	DosError : Integer;


(* -------------------------------------------------------------------- *)
(*		functions & procedures											*)
(*																		*)
(*																		*)
(*		not implemented:												*)
(*																		*)
(*		procedure	Intr( IntNo : Byte; var Regs : Register );			*)
(*		procedure	MsDos( var Regs : Register );						*)
(* -------------------------------------------------------------------- *)

	function	DosExitCode : Word;

	function	DosVersion : Word;

	function	DiskFree( Drive : Byte ) : LongInt;

	function	DiskSize( Drive : Byte ) : LongInt;

	function	EnvCount : Integer;

	function	EnvStr( Index : Integer ) : string;

	procedure	Exec( Path, CmdLine : string );

	function	FExpand( Path : PathStr ) : PathStr;

	procedure	FindFirst( Path : string; Attr : Byte; var S : SearchRec );

	procedure	FindNext( var S : SearchRec );

	function	FSearch( Path : PathStr; DirList : string ) : string;

	procedure	FSplit( Path : PathStr; var Dir : DirStr;
						var Name : NameStr; var Ext : ExtStr );

	procedure	GetCBreak( var break : boolean );

	procedure	GetDate( var Year, Month, Day, DayofWeek: Word );

	function	GetEnv( EnvVar : string ) : string;

	procedure	GetFAttr( var f; var Attr : Word );

	procedure	GetFTime( var f; var Time : LongInt );

	procedure	GetIntVec( IntNo : Byte; var Vector : Pointer );

	procedure	GetTime( var Hour, Min, Second, Sec100 : Word );

	procedure	GetVerify( var verify : Boolean );

	procedure	Keep( ExitCode : Word );

	procedure	PackTime( var DT : DateTime; var Time : LongInt );

	procedure	SetCBreak( break : Boolean );

	procedure	SetDate( Year, Month, Day : Word );

	procedure	SetFAttr( var f; Attr : Word );

	procedure	SetFTime( var f; Time : LongInt );

	procedure	SetIntVec( IntNo : Byte; Vector : Pointer );

	procedure	SetTime( Hour, Minute, Second, Sec100 : Word );

	procedure	SetVerify( verify : Boolean );

	procedure	SwapVectors;

	procedure	UnpackTime( Time : LongInt; var DT : DateTime );


(* =================================================================== *)

