KompatibilitÑt zu Borland Pascal 7.0                 Pure Software
COMPATIB.DOC                                               15.3.93



Welche Unterschiede gibt es zwischen Pure Pascal 1.1 und
========================================================

Borland Pascal 7.0?
===================


Bei aller KompatibilitÑt gibt es zwischen Pure Pascal und Borland Pascal
doch einige Unterschiede. Zum allergrîûten Teil sind sie entweder durch
Rechnerarchitektur und Betriebssystem bedingt, oder sie beziehen sich
auf Sprachkonstrukte, die ohnehin nicht portabel sein kînnen.


 1. Immer wenn Bibliotheksfunktionen die Grîûe von Objekten als Para-
    meter erwarten oder als Resultat zurÅckliefern, verwendet Borland
    Pascal 7.0 den Datentyp Word, Pure Pascal dagegen den Datentyp
    Longint. Dies bezieht sich auf die Funktionen:

    System.BlockRead, System.BlockWrite
    System.GetMem, System.FreeMem
    System.SizeOf
    Graph.ImageSize

    In allen FÑllen ist es mîglich, stattdessen Parameter vom Datentyp
    Word zu verwenden, bzw. die Ergebnisse an Variable des Typs Word
    zuzuweisen. Die Grîûe von Objekten muû dann naturgemÑû kleiner als
    64 kB sein.


 2. Wenn absolute Speicheradressen angegeben werden, erwartet Borland
    Pascal die Angabe der Adresse als Paar Segment:Offset. Pure Pascal
    unterstÅtzt diese Syntax nicht und erwartet stattdessen nur eine
    Zahl, nÑmlich die absolute Adresse. Dies bezieht sich auf folgende
    Konstrukte:

    - Deklaration von absoluten Variablen
    - Die Funktion System.Ptr


 3. In Pure Pascal ist eine Teilmenge der Funktionen aus der Unit CRT
    auch in der Unit SYSTEM implementiert. Dies dient der KompatibilitÑt
    mit Maxon-Pascal auf dem Atari. Folgende Funktionen sind betroffen:

	ClrEol, ClrEos, ClrScr, Delay, DelLine, GotoXY, InsLine,
	KeyPressed, ReadKey

    Programme, die unter Borland Pascal entwickelt wurden und CRT benut-
    zen, kînnen trotzdem ohne Schwierigkeiten unter Pure Pascal Åber-
    setzt werden - die Unit CRT ist vollstÑndig vorhanden.

    In Programme, die unter Pure Pascal entwickelt wurden, ist ggf. die
    Anweisung "Uses Crt" einzufÅgen, damit sie auch unter Borland
    Pascal Åbersetzt werden kînnen.


 4. Pure Pascal ÅberprÅft die Kontrollvariablen von FOR-Schleifen
    strenger als Borland Pascal. In Borland Pascal ist es mîglich,
    globale Variable und sogar Felder von Records als Kontrollvariable
    zu verwenden. Solche Konstrukte fÅhren unter Pure Pascal zu Warnun-
    gen bzw. Fehlern.


 5. In Borland Pascal ist es mîglich, die Kontrollvariable einer FOR-
    Schleife zu Ñndern, indem man ihr im Rumpf der Schleife einen Wert
    zuweist oder sie als VAR-Parameter Åbergibt. Manche Borland Pascal
    Programme verwenden dies, um FOR-Schleifen vorzeitig zu verlassen.
    In Pure Pascal fÅhrt dies zu einer Fehlermeldung des Compilers.


 6. Der Aufbau der virtuellen Methodentabelle unterscheidet sich
    zwischen Pure Pascal und Borland Pascal.


 7. Pure Pascal unterstÅtzt keine dynamischen Methoden. In Borland
    Pascal dient dieses Konstrukt zur komfortablen Programmierung unter
    Microsoft Windows.


 8. Die Pseudo-Arrays Mem, MemW, MemL, Port und PortW von Borland Pascal,
    die direkten Speicherzugriff ermîglichen, sind in Pure Pascal nicht
    implementiert.


 9. Pure Pascal unterstÅtzt weder Inline-Assembler noch Inline-
    Direktiven. Programme, die diese Konstrukte verwenden, wÑren
    natÅrlich ohnehin nicht portabel.


10. Borland Pascal merkt nicht, wenn in einem CASE-Statement dieselbe
    Konstante mehrmals als CASE-Label verwendet wird. Pure Pascal
    detektiert diesen Fehler.


11. In Pure Pascal werden Variable und Recordfelder automatisch auf
    Wortgrenzen ausgerichtet, wenn sie eine Grîûe von zwei Byte oder
    mehr aufweisen. Diese Ausrichtung ist fÅr den Prozessor 68000
    zwingend erforderlich, auf 68020, 68030 und spÑteren Prozessoren
    erhîht sie die Effizienz des generierten Maschinencodes.

    In Borland Pascal werden Variable nur dann auf Wortgrenzen aus-
    gerichtet, wenn der Schalter $A+ gesetzt ist, Recordfelder
    dagegen nie.

    Zu Schwierigkeiten kann diese UnvertrÑglichkeit etwa dann fÅhren,
    wenn Dateien mit BinÑrdaten zwischen beiden Systemen ausgetauscht
    werden sollen. Dies ist jedoch ohnehin sehr schwierig - siehe
    den nÑchsten Punkt.


12. Bedingt durch den Prozessor 68000 speichert Pure Pascal Daten-
    objekte von zwei Byte oder mehr intern anders ab als Borland
    Pascal. In Pure Pascal wird steht das hîchstwertige Byte an
    der niedrigsten Adresse, in Borland Pascal dagegen das nieder-
    wertigste Byte.

    Zu Schwierigkeiten kann diese UnvertrÑglichkeit etwa dann fÅhren,
    wenn Dateien mit BinÑrdaten zwischen beiden Systemen ausgetauscht
    werden sollen.


13. Die Datentypen ByteBool, WordBool und LongBool werden in Pure Pascal
    nicht unterstÅtzt. Sie dienen in Borland Pascal lediglich der kom-
    fortablen Programmierung von Programmen fÅr Microsoft Windows.

    Solche Programme sind ohnehin nicht auf den Atari portierbar, da
    Microsoft Windows dort nicht verfÅgbar ist.


14. Pure Pascal weist im Unterschied zu Borland Pascal keine Unter-
    stÅtzung fÅr dynamic link libraries (DLLs) auf, da diese auf dem
    Atari nicht verfÅgbar sind.


15. Der Datentyp Comp (64-Bit Integer) ist auf dem Atari nicht verfÅgbar,
    da der Coprozessor 68881/2 diesen Datentyp nicht unterstÅtzt.
